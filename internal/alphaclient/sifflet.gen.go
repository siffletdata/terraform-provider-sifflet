// Package alphaclient provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package alphaclient

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"net/url"
	"strings"

	"github.com/oapi-codegen/runtime"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	JWTScopes = "JWT.Scopes"
)

// Defines values for AccessTokenProviderDtoType.
const (
	AccessTokenProviderDtoTypeACCESSTOKEN AccessTokenProviderDtoType = "ACCESS_TOKEN"
	AccessTokenProviderDtoTypeDATASOURCE  AccessTokenProviderDtoType = "DATASOURCE"
	AccessTokenProviderDtoTypeGENERIC     AccessTokenProviderDtoType = "GENERIC"
	AccessTokenProviderDtoTypeUSER        AccessTokenProviderDtoType = "USER"
)

// Defines values for AlertingHookDtoType.
const (
	AlertingHookDtoTypeMAIL    AlertingHookDtoType = "MAIL"
	AlertingHookDtoTypeMSTEAMS AlertingHookDtoType = "MS_TEAMS"
	AlertingHookDtoTypeSLACK   AlertingHookDtoType = "SLACK"
)

// Defines values for AsCodeWorkspaceDtoKind.
const (
	Asset     AsCodeWorkspaceDtoKind = "Asset"
	Lineage   AsCodeWorkspaceDtoKind = "Lineage"
	Monitor   AsCodeWorkspaceDtoKind = "Monitor"
	Source    AsCodeWorkspaceDtoKind = "Source"
	Workspace AsCodeWorkspaceDtoKind = "Workspace"
)

// Defines values for AssetDataQualityDtoQualityStatus.
const (
	AssetDataQualityDtoQualityStatusATRISK       AssetDataQualityDtoQualityStatus = "AT_RISK"
	AssetDataQualityDtoQualityStatusCRITICAL     AssetDataQualityDtoQualityStatus = "CRITICAL"
	AssetDataQualityDtoQualityStatusHEALTHY      AssetDataQualityDtoQualityStatus = "HEALTHY"
	AssetDataQualityDtoQualityStatusNOTSUPPORTED AssetDataQualityDtoQualityStatus = "NOT_SUPPORTED"
	AssetDataQualityDtoQualityStatusUNMONITORED  AssetDataQualityDtoQualityStatus = "UNMONITORED"
)

// Defines values for AssetDetailsDtoLineagePlatform.
const (
	AssetDetailsDtoLineagePlatformACCELDATA                 AssetDetailsDtoLineagePlatform = "ACCELDATA"
	AssetDetailsDtoLineagePlatformACRYLDATA                 AssetDetailsDtoLineagePlatform = "ACRYL_DATA"
	AssetDetailsDtoLineagePlatformACTIANVECTOR              AssetDetailsDtoLineagePlatform = "ACTIAN_VECTOR"
	AssetDetailsDtoLineagePlatformACTIVECAMPAIGN            AssetDetailsDtoLineagePlatform = "ACTIVE_CAMPAIGN"
	AssetDetailsDtoLineagePlatformADA                       AssetDetailsDtoLineagePlatform = "ADA"
	AssetDetailsDtoLineagePlatformADJUST                    AssetDetailsDtoLineagePlatform = "ADJUST"
	AssetDetailsDtoLineagePlatformADOBE                     AssetDetailsDtoLineagePlatform = "ADOBE"
	AssetDetailsDtoLineagePlatformADPWFN                    AssetDetailsDtoLineagePlatform = "ADP_WFN"
	AssetDetailsDtoLineagePlatformADROLL                    AssetDetailsDtoLineagePlatform = "ADROLL"
	AssetDetailsDtoLineagePlatformAFFINITY                  AssetDetailsDtoLineagePlatform = "AFFINITY"
	AssetDetailsDtoLineagePlatformAIRBYTE                   AssetDetailsDtoLineagePlatform = "AIRBYTE"
	AssetDetailsDtoLineagePlatformAIRCALL                   AssetDetailsDtoLineagePlatform = "AIRCALL"
	AssetDetailsDtoLineagePlatformAIRFLOW                   AssetDetailsDtoLineagePlatform = "AIRFLOW"
	AssetDetailsDtoLineagePlatformAIRTABLE                  AssetDetailsDtoLineagePlatform = "AIRTABLE"
	AssetDetailsDtoLineagePlatformALATION                   AssetDetailsDtoLineagePlatform = "ALATION"
	AssetDetailsDtoLineagePlatformALCHEMER                  AssetDetailsDtoLineagePlatform = "ALCHEMER"
	AssetDetailsDtoLineagePlatformALVINAI                   AssetDetailsDtoLineagePlatform = "ALVIN_AI"
	AssetDetailsDtoLineagePlatformAMAZON                    AssetDetailsDtoLineagePlatform = "AMAZON"
	AssetDetailsDtoLineagePlatformAMAZONCLOUDFRONT          AssetDetailsDtoLineagePlatform = "AMAZON_CLOUDFRONT"
	AssetDetailsDtoLineagePlatformAMAZONDOCUMENTDB          AssetDetailsDtoLineagePlatform = "AMAZON_DOCUMENTDB"
	AssetDetailsDtoLineagePlatformAMAZONDYNAMODB            AssetDetailsDtoLineagePlatform = "AMAZON_DYNAMODB"
	AssetDetailsDtoLineagePlatformAMAZONFIREHOSE            AssetDetailsDtoLineagePlatform = "AMAZON_FIREHOSE"
	AssetDetailsDtoLineagePlatformAMAZONSAGEMAKER           AssetDetailsDtoLineagePlatform = "AMAZON_SAGEMAKER"
	AssetDetailsDtoLineagePlatformAMAZONSELLINGPARTNER      AssetDetailsDtoLineagePlatform = "AMAZON_SELLING_PARTNER"
	AssetDetailsDtoLineagePlatformAMPLITUDE                 AssetDetailsDtoLineagePlatform = "AMPLITUDE"
	AssetDetailsDtoLineagePlatformANAPLAN                   AssetDetailsDtoLineagePlatform = "ANAPLAN"
	AssetDetailsDtoLineagePlatformANOMALO                   AssetDetailsDtoLineagePlatform = "ANOMALO"
	AssetDetailsDtoLineagePlatformAPACHEKAFKA               AssetDetailsDtoLineagePlatform = "APACHE_KAFKA"
	AssetDetailsDtoLineagePlatformAPACHESPARK               AssetDetailsDtoLineagePlatform = "APACHE_SPARK"
	AssetDetailsDtoLineagePlatformAPPCUES                   AssetDetailsDtoLineagePlatform = "APPCUES"
	AssetDetailsDtoLineagePlatformAPPFIGURES                AssetDetailsDtoLineagePlatform = "APPFIGURES"
	AssetDetailsDtoLineagePlatformAPPLE                     AssetDetailsDtoLineagePlatform = "APPLE"
	AssetDetailsDtoLineagePlatformAPPLEAPPSTORE             AssetDetailsDtoLineagePlatform = "APPLE_APP_STORE"
	AssetDetailsDtoLineagePlatformAPPSFLYER                 AssetDetailsDtoLineagePlatform = "APPSFLYER"
	AssetDetailsDtoLineagePlatformASANA                     AssetDetailsDtoLineagePlatform = "ASANA"
	AssetDetailsDtoLineagePlatformASSEMBLED                 AssetDetailsDtoLineagePlatform = "ASSEMBLED"
	AssetDetailsDtoLineagePlatformATHENA                    AssetDetailsDtoLineagePlatform = "ATHENA"
	AssetDetailsDtoLineagePlatformATLAN                     AssetDetailsDtoLineagePlatform = "ATLAN"
	AssetDetailsDtoLineagePlatformATLASSIANCONFLUENCE       AssetDetailsDtoLineagePlatform = "ATLASSIAN_CONFLUENCE"
	AssetDetailsDtoLineagePlatformATLASSIANJIRA             AssetDetailsDtoLineagePlatform = "ATLASSIAN_JIRA"
	AssetDetailsDtoLineagePlatformATLASSIANOPSGENIE         AssetDetailsDtoLineagePlatform = "ATLASSIAN_OPSGENIE"
	AssetDetailsDtoLineagePlatformAUTH0                     AssetDetailsDtoLineagePlatform = "AUTH0"
	AssetDetailsDtoLineagePlatformAUTODESKBIM360            AssetDetailsDtoLineagePlatform = "AUTODESK_BIM_360"
	AssetDetailsDtoLineagePlatformAWIN                      AssetDetailsDtoLineagePlatform = "AWIN"
	AssetDetailsDtoLineagePlatformAWSCLOUDTRAIL             AssetDetailsDtoLineagePlatform = "AWS_CLOUDTRAIL"
	AssetDetailsDtoLineagePlatformAWSCOSTEXPLORER           AssetDetailsDtoLineagePlatform = "AWS_COST_EXPLORER"
	AssetDetailsDtoLineagePlatformAWSINVENTORY              AssetDetailsDtoLineagePlatform = "AWS_INVENTORY"
	AssetDetailsDtoLineagePlatformAWSLAMBDA                 AssetDetailsDtoLineagePlatform = "AWS_LAMBDA"
	AssetDetailsDtoLineagePlatformAZURE                     AssetDetailsDtoLineagePlatform = "AZURE"
	AssetDetailsDtoLineagePlatformBALLOTREADY               AssetDetailsDtoLineagePlatform = "BALLOT_READY"
	AssetDetailsDtoLineagePlatformBAMBOOHR                  AssetDetailsDtoLineagePlatform = "BAMBOOHR"
	AssetDetailsDtoLineagePlatformBIGCOMMERCE               AssetDetailsDtoLineagePlatform = "BIGCOMMERCE"
	AssetDetailsDtoLineagePlatformBIGEYE                    AssetDetailsDtoLineagePlatform = "BIGEYE"
	AssetDetailsDtoLineagePlatformBIGQUERY                  AssetDetailsDtoLineagePlatform = "BIGQUERY"
	AssetDetailsDtoLineagePlatformBILLINGPLATFORM           AssetDetailsDtoLineagePlatform = "BILLINGPLATFORM"
	AssetDetailsDtoLineagePlatformBIRDEYE                   AssetDetailsDtoLineagePlatform = "BIRDEYE"
	AssetDetailsDtoLineagePlatformBLACKBOARD                AssetDetailsDtoLineagePlatform = "BLACKBOARD"
	AssetDetailsDtoLineagePlatformBOX                       AssetDetailsDtoLineagePlatform = "BOX"
	AssetDetailsDtoLineagePlatformBRAINTREE                 AssetDetailsDtoLineagePlatform = "BRAINTREE"
	AssetDetailsDtoLineagePlatformBRAZE                     AssetDetailsDtoLineagePlatform = "BRAZE"
	AssetDetailsDtoLineagePlatformBREVO                     AssetDetailsDtoLineagePlatform = "BREVO"
	AssetDetailsDtoLineagePlatformBREX                      AssetDetailsDtoLineagePlatform = "BREX"
	AssetDetailsDtoLineagePlatformBUILDKITE                 AssetDetailsDtoLineagePlatform = "BUILDKITE"
	AssetDetailsDtoLineagePlatformBUZZSPROUT                AssetDetailsDtoLineagePlatform = "BUZZSPROUT"
	AssetDetailsDtoLineagePlatformCALENDLY                  AssetDetailsDtoLineagePlatform = "CALENDLY"
	AssetDetailsDtoLineagePlatformCAMPAIGNMONITOR           AssetDetailsDtoLineagePlatform = "CAMPAIGN_MONITOR"
	AssetDetailsDtoLineagePlatformCANNY                     AssetDetailsDtoLineagePlatform = "CANNY"
	AssetDetailsDtoLineagePlatformCANVAS                    AssetDetailsDtoLineagePlatform = "CANVAS"
	AssetDetailsDtoLineagePlatformCAPTERRA                  AssetDetailsDtoLineagePlatform = "CAPTERRA"
	AssetDetailsDtoLineagePlatformCASTORDOC                 AssetDetailsDtoLineagePlatform = "CASTOR_DOC"
	AssetDetailsDtoLineagePlatformCENSUS                    AssetDetailsDtoLineagePlatform = "CENSUS"
	AssetDetailsDtoLineagePlatformCERTINIA                  AssetDetailsDtoLineagePlatform = "CERTINIA"
	AssetDetailsDtoLineagePlatformCHAMELEON                 AssetDetailsDtoLineagePlatform = "CHAMELEON"
	AssetDetailsDtoLineagePlatformCHANNELADVISOR            AssetDetailsDtoLineagePlatform = "CHANNEL_ADVISOR"
	AssetDetailsDtoLineagePlatformCHARGEBEE                 AssetDetailsDtoLineagePlatform = "CHARGEBEE"
	AssetDetailsDtoLineagePlatformCHARGEDESK                AssetDetailsDtoLineagePlatform = "CHARGEDESK"
	AssetDetailsDtoLineagePlatformCHARTMOGUL                AssetDetailsDtoLineagePlatform = "CHARTMOGUL"
	AssetDetailsDtoLineagePlatformCHORUSAI                  AssetDetailsDtoLineagePlatform = "CHORUS_AI"
	AssetDetailsDtoLineagePlatformCHURNKEY                  AssetDetailsDtoLineagePlatform = "CHURNKEY"
	AssetDetailsDtoLineagePlatformCHURNZERO                 AssetDetailsDtoLineagePlatform = "CHURNZERO"
	AssetDetailsDtoLineagePlatformCIMIS                     AssetDetailsDtoLineagePlatform = "CIMIS"
	AssetDetailsDtoLineagePlatformCIN7                      AssetDetailsDtoLineagePlatform = "CIN7"
	AssetDetailsDtoLineagePlatformCIRCLECI                  AssetDetailsDtoLineagePlatform = "CIRCLE_CI"
	AssetDetailsDtoLineagePlatformCLARI                     AssetDetailsDtoLineagePlatform = "CLARI"
	AssetDetailsDtoLineagePlatformCLICKUP                   AssetDetailsDtoLineagePlatform = "CLICKUP"
	AssetDetailsDtoLineagePlatformCLIFFAI                   AssetDetailsDtoLineagePlatform = "CLIFF_AI"
	AssetDetailsDtoLineagePlatformCLOSE                     AssetDetailsDtoLineagePlatform = "CLOSE"
	AssetDetailsDtoLineagePlatformCOLLIBRA                  AssetDetailsDtoLineagePlatform = "COLLIBRA"
	AssetDetailsDtoLineagePlatformCOMMERCETOOLS             AssetDetailsDtoLineagePlatform = "COMMERCETOOLS"
	AssetDetailsDtoLineagePlatformCOMPOSER                  AssetDetailsDtoLineagePlatform = "COMPOSER"
	AssetDetailsDtoLineagePlatformCONFLUENTCLOUD            AssetDetailsDtoLineagePlatform = "CONFLUENT_CLOUD"
	AssetDetailsDtoLineagePlatformCONTRASTSECURITY          AssetDetailsDtoLineagePlatform = "CONTRAST_SECURITY"
	AssetDetailsDtoLineagePlatformCOUPA                     AssetDetailsDtoLineagePlatform = "COUPA"
	AssetDetailsDtoLineagePlatformCRITEO                    AssetDetailsDtoLineagePlatform = "CRITEO"
	AssetDetailsDtoLineagePlatformCROSSBEAM                 AssetDetailsDtoLineagePlatform = "CROSSBEAM"
	AssetDetailsDtoLineagePlatformCRUNCHBASE                AssetDetailsDtoLineagePlatform = "CRUNCHBASE"
	AssetDetailsDtoLineagePlatformCUSTOMERIO                AssetDetailsDtoLineagePlatform = "CUSTOMER_IO"
	AssetDetailsDtoLineagePlatformD2LBRIGHTSPACE            AssetDetailsDtoLineagePlatform = "D2L_BRIGHTSPACE"
	AssetDetailsDtoLineagePlatformDAGSTER                   AssetDetailsDtoLineagePlatform = "DAGSTER"
	AssetDetailsDtoLineagePlatformDATABAND                  AssetDetailsDtoLineagePlatform = "DATABAND"
	AssetDetailsDtoLineagePlatformDATABRICKS                AssetDetailsDtoLineagePlatform = "DATABRICKS"
	AssetDetailsDtoLineagePlatformDATADOG                   AssetDetailsDtoLineagePlatform = "DATADOG"
	AssetDetailsDtoLineagePlatformDATAEDO                   AssetDetailsDtoLineagePlatform = "DATAEDO"
	AssetDetailsDtoLineagePlatformDATAFOLD                  AssetDetailsDtoLineagePlatform = "DATAFOLD"
	AssetDetailsDtoLineagePlatformDATAGALAXY                AssetDetailsDtoLineagePlatform = "DATAGALAXY"
	AssetDetailsDtoLineagePlatformDATAHUB                   AssetDetailsDtoLineagePlatform = "DATAHUB"
	AssetDetailsDtoLineagePlatformDATAIKU                   AssetDetailsDtoLineagePlatform = "DATAIKU"
	AssetDetailsDtoLineagePlatformDATAWORLD                 AssetDetailsDtoLineagePlatform = "DATA_WORLD"
	AssetDetailsDtoLineagePlatformDB2                       AssetDetailsDtoLineagePlatform = "DB2"
	AssetDetailsDtoLineagePlatformDBT                       AssetDetailsDtoLineagePlatform = "DBT"
	AssetDetailsDtoLineagePlatformDBTCLOUD                  AssetDetailsDtoLineagePlatform = "DBTCLOUD"
	AssetDetailsDtoLineagePlatformDCLLOGISTICS              AssetDetailsDtoLineagePlatform = "DCL_LOGISTICS"
	AssetDetailsDtoLineagePlatformDEAR                      AssetDetailsDtoLineagePlatform = "DEAR"
	AssetDetailsDtoLineagePlatformDECUBE                    AssetDetailsDtoLineagePlatform = "DECUBE"
	AssetDetailsDtoLineagePlatformDELIGHTED                 AssetDetailsDtoLineagePlatform = "DELIGHTED"
	AssetDetailsDtoLineagePlatformDEPUTY                    AssetDetailsDtoLineagePlatform = "DEPUTY"
	AssetDetailsDtoLineagePlatformDESTINI                   AssetDetailsDtoLineagePlatform = "DESTINI"
	AssetDetailsDtoLineagePlatformDIXA                      AssetDetailsDtoLineagePlatform = "DIXA"
	AssetDetailsDtoLineagePlatformDOCEBO                    AssetDetailsDtoLineagePlatform = "DOCEBO"
	AssetDetailsDtoLineagePlatformDRATA                     AssetDetailsDtoLineagePlatform = "DRATA"
	AssetDetailsDtoLineagePlatformDRIFT                     AssetDetailsDtoLineagePlatform = "DRIFT"
	AssetDetailsDtoLineagePlatformDRIP                      AssetDetailsDtoLineagePlatform = "DRIP"
	AssetDetailsDtoLineagePlatformDROPBOX                   AssetDetailsDtoLineagePlatform = "DROPBOX"
	AssetDetailsDtoLineagePlatformDUOPLANE                  AssetDetailsDtoLineagePlatform = "DUOPLANE"
	AssetDetailsDtoLineagePlatformEASYPOST                  AssetDetailsDtoLineagePlatform = "EASY_POST"
	AssetDetailsDtoLineagePlatformECONOMIC                  AssetDetailsDtoLineagePlatform = "E_CONOMIC"
	AssetDetailsDtoLineagePlatformELASTICSEARCH             AssetDetailsDtoLineagePlatform = "ELASTICSEARCH"
	AssetDetailsDtoLineagePlatformELEMENTARY                AssetDetailsDtoLineagePlatform = "ELEMENTARY"
	AssetDetailsDtoLineagePlatformELLUCIAN                  AssetDetailsDtoLineagePlatform = "ELLUCIAN"
	AssetDetailsDtoLineagePlatformELOQUA                    AssetDetailsDtoLineagePlatform = "ELOQUA"
	AssetDetailsDtoLineagePlatformEMAIL                     AssetDetailsDtoLineagePlatform = "EMAIL"
	AssetDetailsDtoLineagePlatformEMPLOYMENTHERO            AssetDetailsDtoLineagePlatform = "EMPLOYMENT_HERO"
	AssetDetailsDtoLineagePlatformEPICORPROPHET21           AssetDetailsDtoLineagePlatform = "EPICOR_PROPHET_21"
	AssetDetailsDtoLineagePlatformEVENTBRITE                AssetDetailsDtoLineagePlatform = "EVENTBRITE"
	AssetDetailsDtoLineagePlatformEVERHOUR                  AssetDetailsDtoLineagePlatform = "EVERHOUR"
	AssetDetailsDtoLineagePlatformEXCEL                     AssetDetailsDtoLineagePlatform = "EXCEL"
	AssetDetailsDtoLineagePlatformEXPENSIFY                 AssetDetailsDtoLineagePlatform = "EXPENSIFY"
	AssetDetailsDtoLineagePlatformFACEBOOK                  AssetDetailsDtoLineagePlatform = "FACEBOOK"
	AssetDetailsDtoLineagePlatformFIFTEENFIVE               AssetDetailsDtoLineagePlatform = "FIFTEENFIVE"
	AssetDetailsDtoLineagePlatformFIGMA                     AssetDetailsDtoLineagePlatform = "FIGMA"
	AssetDetailsDtoLineagePlatformFIREBASE                  AssetDetailsDtoLineagePlatform = "FIREBASE"
	AssetDetailsDtoLineagePlatformFIREBOLT                  AssetDetailsDtoLineagePlatform = "FIREBOLT"
	AssetDetailsDtoLineagePlatformFIVETRAN                  AssetDetailsDtoLineagePlatform = "FIVETRAN"
	AssetDetailsDtoLineagePlatformFLEXPORT                  AssetDetailsDtoLineagePlatform = "FLEXPORT"
	AssetDetailsDtoLineagePlatformFORJ                      AssetDetailsDtoLineagePlatform = "FORJ"
	AssetDetailsDtoLineagePlatformFOUNTAIN                  AssetDetailsDtoLineagePlatform = "FOUNTAIN"
	AssetDetailsDtoLineagePlatformFREIGHTVIEW               AssetDetailsDtoLineagePlatform = "FREIGHTVIEW"
	AssetDetailsDtoLineagePlatformFRESHBOOKS                AssetDetailsDtoLineagePlatform = "FRESHBOOKS"
	AssetDetailsDtoLineagePlatformFRESHCHAT                 AssetDetailsDtoLineagePlatform = "FRESHCHAT"
	AssetDetailsDtoLineagePlatformFRESHDESK                 AssetDetailsDtoLineagePlatform = "FRESHDESK"
	AssetDetailsDtoLineagePlatformFRESHDESKCONTACTCENTER    AssetDetailsDtoLineagePlatform = "FRESHDESK_CONTACT_CENTER"
	AssetDetailsDtoLineagePlatformFRESHSERVICE              AssetDetailsDtoLineagePlatform = "FRESHSERVICE"
	AssetDetailsDtoLineagePlatformFRESHSUCCESS              AssetDetailsDtoLineagePlatform = "FRESHSUCCESS"
	AssetDetailsDtoLineagePlatformFRESHTEAM                 AssetDetailsDtoLineagePlatform = "FRESHTEAM"
	AssetDetailsDtoLineagePlatformFRIENDBUY                 AssetDetailsDtoLineagePlatform = "FRIENDBUY"
	AssetDetailsDtoLineagePlatformFRONT                     AssetDetailsDtoLineagePlatform = "FRONT"
	AssetDetailsDtoLineagePlatformFTP                       AssetDetailsDtoLineagePlatform = "FTP"
	AssetDetailsDtoLineagePlatformFULLSTORY                 AssetDetailsDtoLineagePlatform = "FULLSTORY"
	AssetDetailsDtoLineagePlatformG2                        AssetDetailsDtoLineagePlatform = "G2"
	AssetDetailsDtoLineagePlatformGAINSIGHT                 AssetDetailsDtoLineagePlatform = "GAINSIGHT"
	AssetDetailsDtoLineagePlatformGEM                       AssetDetailsDtoLineagePlatform = "GEM"
	AssetDetailsDtoLineagePlatformGIT                       AssetDetailsDtoLineagePlatform = "GIT"
	AssetDetailsDtoLineagePlatformGITHUB                    AssetDetailsDtoLineagePlatform = "GITHUB"
	AssetDetailsDtoLineagePlatformGITLAB                    AssetDetailsDtoLineagePlatform = "GITLAB"
	AssetDetailsDtoLineagePlatformGLADLY                    AssetDetailsDtoLineagePlatform = "GLADLY"
	AssetDetailsDtoLineagePlatformGOCARDLESS                AssetDetailsDtoLineagePlatform = "GOCARDLESS"
	AssetDetailsDtoLineagePlatformGONG                      AssetDetailsDtoLineagePlatform = "GONG"
	AssetDetailsDtoLineagePlatformGOOGLE                    AssetDetailsDtoLineagePlatform = "GOOGLE"
	AssetDetailsDtoLineagePlatformGOOGLEADMANAGER           AssetDetailsDtoLineagePlatform = "GOOGLE_AD_MANAGER"
	AssetDetailsDtoLineagePlatformGOOGLEADS                 AssetDetailsDtoLineagePlatform = "GOOGLE_ADS"
	AssetDetailsDtoLineagePlatformGOOGLEANALYTICS           AssetDetailsDtoLineagePlatform = "GOOGLE_ANALYTICS"
	AssetDetailsDtoLineagePlatformGOOGLECALENDAR            AssetDetailsDtoLineagePlatform = "GOOGLE_CALENDAR"
	AssetDetailsDtoLineagePlatformGOOGLECAMPAIGNMANAGER     AssetDetailsDtoLineagePlatform = "GOOGLE_CAMPAIGN_MANAGER"
	AssetDetailsDtoLineagePlatformGOOGLECHROME              AssetDetailsDtoLineagePlatform = "GOOGLE_CHROME"
	AssetDetailsDtoLineagePlatformGOOGLECLOUD               AssetDetailsDtoLineagePlatform = "GOOGLE_CLOUD"
	AssetDetailsDtoLineagePlatformGOOGLECLOUDSTORAGE        AssetDetailsDtoLineagePlatform = "GOOGLE_CLOUD_STORAGE"
	AssetDetailsDtoLineagePlatformGOOGLEDISPLAY             AssetDetailsDtoLineagePlatform = "GOOGLE_DISPLAY"
	AssetDetailsDtoLineagePlatformGOOGLEDRIVE               AssetDetailsDtoLineagePlatform = "GOOGLE_DRIVE"
	AssetDetailsDtoLineagePlatformGOOGLEPLAY                AssetDetailsDtoLineagePlatform = "GOOGLE_PLAY"
	AssetDetailsDtoLineagePlatformGOOGLESEARCHADS360        AssetDetailsDtoLineagePlatform = "GOOGLE_SEARCH_ADS_360"
	AssetDetailsDtoLineagePlatformGOOGLESEARCHCONSOLE       AssetDetailsDtoLineagePlatform = "GOOGLE_SEARCH_CONSOLE"
	AssetDetailsDtoLineagePlatformGOOGLESHEETS              AssetDetailsDtoLineagePlatform = "GOOGLE_SHEETS"
	AssetDetailsDtoLineagePlatformGOOGLETASKS               AssetDetailsDtoLineagePlatform = "GOOGLE_TASKS"
	AssetDetailsDtoLineagePlatformGORGIAS                   AssetDetailsDtoLineagePlatform = "GORGIAS"
	AssetDetailsDtoLineagePlatformGREENHOUSE                AssetDetailsDtoLineagePlatform = "GREENHOUSE"
	AssetDetailsDtoLineagePlatformGREENPLUM                 AssetDetailsDtoLineagePlatform = "GREENPLUM"
	AssetDetailsDtoLineagePlatformGREENPOWERMONITOR         AssetDetailsDtoLineagePlatform = "GREEN_POWER_MONITOR"
	AssetDetailsDtoLineagePlatformGREPSR                    AssetDetailsDtoLineagePlatform = "GREPSR"
	AssetDetailsDtoLineagePlatformGRIN                      AssetDetailsDtoLineagePlatform = "GRIN"
	AssetDetailsDtoLineagePlatformGURU                      AssetDetailsDtoLineagePlatform = "GURU"
	AssetDetailsDtoLineagePlatformH2                        AssetDetailsDtoLineagePlatform = "H2"
	AssetDetailsDtoLineagePlatformHARVEST                   AssetDetailsDtoLineagePlatform = "HARVEST"
	AssetDetailsDtoLineagePlatformHDFS                      AssetDetailsDtoLineagePlatform = "HDFS"
	AssetDetailsDtoLineagePlatformHDFSSTORAGE               AssetDetailsDtoLineagePlatform = "HDFS_STORAGE"
	AssetDetailsDtoLineagePlatformHEAP                      AssetDetailsDtoLineagePlatform = "HEAP"
	AssetDetailsDtoLineagePlatformHEIGHT                    AssetDetailsDtoLineagePlatform = "HEIGHT"
	AssetDetailsDtoLineagePlatformHELPSCOUT                 AssetDetailsDtoLineagePlatform = "HELP_SCOUT"
	AssetDetailsDtoLineagePlatformHELPSHIFT                 AssetDetailsDtoLineagePlatform = "HELPSHIFT"
	AssetDetailsDtoLineagePlatformHEROKUKAFKA               AssetDetailsDtoLineagePlatform = "HEROKU_KAFKA"
	AssetDetailsDtoLineagePlatformHIBOB                     AssetDetailsDtoLineagePlatform = "HIBOB"
	AssetDetailsDtoLineagePlatformHIGHTOUCH                 AssetDetailsDtoLineagePlatform = "HIGH_TOUCH"
	AssetDetailsDtoLineagePlatformHIVE                      AssetDetailsDtoLineagePlatform = "HIVE"
	AssetDetailsDtoLineagePlatformHIVEPROCESS               AssetDetailsDtoLineagePlatform = "HIVE_PROCESS"
	AssetDetailsDtoLineagePlatformHOPIN                     AssetDetailsDtoLineagePlatform = "HOPIN"
	AssetDetailsDtoLineagePlatformHUBSPOT                   AssetDetailsDtoLineagePlatform = "HUBSPOT"
	AssetDetailsDtoLineagePlatformIMPACT                    AssetDetailsDtoLineagePlatform = "IMPACT"
	AssetDetailsDtoLineagePlatformINCIDENTIO                AssetDetailsDtoLineagePlatform = "INCIDENT_IO"
	AssetDetailsDtoLineagePlatformINFOBIP                   AssetDetailsDtoLineagePlatform = "INFOBIP"
	AssetDetailsDtoLineagePlatformINFORMATICA               AssetDetailsDtoLineagePlatform = "INFORMATICA"
	AssetDetailsDtoLineagePlatformINSIGHTLY                 AssetDetailsDtoLineagePlatform = "INSIGHTLY"
	AssetDetailsDtoLineagePlatformINSTAGRAM                 AssetDetailsDtoLineagePlatform = "INSTAGRAM"
	AssetDetailsDtoLineagePlatformINTERCOM                  AssetDetailsDtoLineagePlatform = "INTERCOM"
	AssetDetailsDtoLineagePlatformINVESTOPEDIA              AssetDetailsDtoLineagePlatform = "INVESTOPEDIA"
	AssetDetailsDtoLineagePlatformIRONCLAD                  AssetDetailsDtoLineagePlatform = "IRONCLAD"
	AssetDetailsDtoLineagePlatformIRONSOURCE                AssetDetailsDtoLineagePlatform = "IRONSOURCE"
	AssetDetailsDtoLineagePlatformITERABLE                  AssetDetailsDtoLineagePlatform = "ITERABLE"
	AssetDetailsDtoLineagePlatformJAVA                      AssetDetailsDtoLineagePlatform = "JAVA"
	AssetDetailsDtoLineagePlatformJENKINS                   AssetDetailsDtoLineagePlatform = "JENKINS"
	AssetDetailsDtoLineagePlatformJUSTCALL                  AssetDetailsDtoLineagePlatform = "JUSTCALL"
	AssetDetailsDtoLineagePlatformKANDJI                    AssetDetailsDtoLineagePlatform = "KANDJI"
	AssetDetailsDtoLineagePlatformKENSU                     AssetDetailsDtoLineagePlatform = "KENSU"
	AssetDetailsDtoLineagePlatformKHOROSCARE                AssetDetailsDtoLineagePlatform = "KHOROS_CARE"
	AssetDetailsDtoLineagePlatformKISSMETRICS               AssetDetailsDtoLineagePlatform = "KISSMETRICS"
	AssetDetailsDtoLineagePlatformKLAVIYO                   AssetDetailsDtoLineagePlatform = "KLAVIYO"
	AssetDetailsDtoLineagePlatformKNOWBE4                   AssetDetailsDtoLineagePlatform = "KNOWBE4"
	AssetDetailsDtoLineagePlatformKONNECTINSIGHTS           AssetDetailsDtoLineagePlatform = "KONNECT_INSIGHTS"
	AssetDetailsDtoLineagePlatformKUSTOMER                  AssetDetailsDtoLineagePlatform = "KUSTOMER"
	AssetDetailsDtoLineagePlatformLARIATDATA                AssetDetailsDtoLineagePlatform = "LARIAT_DATA"
	AssetDetailsDtoLineagePlatformLATTICE                   AssetDetailsDtoLineagePlatform = "LATTICE"
	AssetDetailsDtoLineagePlatformLAUNCHDARKLY              AssetDetailsDtoLineagePlatform = "LAUNCH_DARKLY"
	AssetDetailsDtoLineagePlatformLEARNUPON                 AssetDetailsDtoLineagePlatform = "LEARN_UPON"
	AssetDetailsDtoLineagePlatformLESSONLY                  AssetDetailsDtoLineagePlatform = "LESSONLY"
	AssetDetailsDtoLineagePlatformLEVER                     AssetDetailsDtoLineagePlatform = "LEVER"
	AssetDetailsDtoLineagePlatformLIFTOFF                   AssetDetailsDtoLineagePlatform = "LIFTOFF"
	AssetDetailsDtoLineagePlatformLIGHTDASH                 AssetDetailsDtoLineagePlatform = "LIGHTDASH"
	AssetDetailsDtoLineagePlatformLIGHTSPEED                AssetDetailsDtoLineagePlatform = "LIGHTSPEED"
	AssetDetailsDtoLineagePlatformLIGHTSUP                  AssetDetailsDtoLineagePlatform = "LIGHTSUP"
	AssetDetailsDtoLineagePlatformLINEAR                    AssetDetailsDtoLineagePlatform = "LINEAR"
	AssetDetailsDtoLineagePlatformLINKEDIN                  AssetDetailsDtoLineagePlatform = "LINKEDIN"
	AssetDetailsDtoLineagePlatformLIVECHAT                  AssetDetailsDtoLineagePlatform = "LIVECHAT"
	AssetDetailsDtoLineagePlatformLOADEDCOMMERCE            AssetDetailsDtoLineagePlatform = "LOADED_COMMERCE"
	AssetDetailsDtoLineagePlatformLOB                       AssetDetailsDtoLineagePlatform = "LOB"
	AssetDetailsDtoLineagePlatformLOOKER                    AssetDetailsDtoLineagePlatform = "LOOKER"
	AssetDetailsDtoLineagePlatformLOOP                      AssetDetailsDtoLineagePlatform = "LOOP"
	AssetDetailsDtoLineagePlatformLOOPIO                    AssetDetailsDtoLineagePlatform = "LOOPIO"
	AssetDetailsDtoLineagePlatformLUMA                      AssetDetailsDtoLineagePlatform = "LUMA"
	AssetDetailsDtoLineagePlatformMAGENTO                   AssetDetailsDtoLineagePlatform = "MAGENTO"
	AssetDetailsDtoLineagePlatformMAILCHIMP                 AssetDetailsDtoLineagePlatform = "MAILCHIMP"
	AssetDetailsDtoLineagePlatformMAILGUN                   AssetDetailsDtoLineagePlatform = "MAILGUN"
	AssetDetailsDtoLineagePlatformMANDRILL                  AssetDetailsDtoLineagePlatform = "MANDRILL"
	AssetDetailsDtoLineagePlatformMANTA                     AssetDetailsDtoLineagePlatform = "MANTA"
	AssetDetailsDtoLineagePlatformMARIADB                   AssetDetailsDtoLineagePlatform = "MARIADB"
	AssetDetailsDtoLineagePlatformMARINSOFTWARE             AssetDetailsDtoLineagePlatform = "MARIN_SOFTWARE"
	AssetDetailsDtoLineagePlatformMARKETO                   AssetDetailsDtoLineagePlatform = "MARKETO"
	AssetDetailsDtoLineagePlatformMATTERMOST                AssetDetailsDtoLineagePlatform = "MATTERMOST"
	AssetDetailsDtoLineagePlatformMAVENLINK                 AssetDetailsDtoLineagePlatform = "MAVENLINK"
	AssetDetailsDtoLineagePlatformMAXIO                     AssetDetailsDtoLineagePlatform = "MAXIO"
	AssetDetailsDtoLineagePlatformMEDALLIA                  AssetDetailsDtoLineagePlatform = "MEDALLIA"
	AssetDetailsDtoLineagePlatformMETA                      AssetDetailsDtoLineagePlatform = "META"
	AssetDetailsDtoLineagePlatformMETABASE                  AssetDetailsDtoLineagePlatform = "METABASE"
	AssetDetailsDtoLineagePlatformMETAPHOR                  AssetDetailsDtoLineagePlatform = "METAPHOR"
	AssetDetailsDtoLineagePlatformMETAPLANE                 AssetDetailsDtoLineagePlatform = "METAPLANE"
	AssetDetailsDtoLineagePlatformMICROSOFT                 AssetDetailsDtoLineagePlatform = "MICROSOFT"
	AssetDetailsDtoLineagePlatformMICROSOFTAZUREBLOBSTORAGE AssetDetailsDtoLineagePlatform = "MICROSOFT_AZURE_BLOB_STORAGE"
	AssetDetailsDtoLineagePlatformMICROSOFTAZUREML          AssetDetailsDtoLineagePlatform = "MICROSOFT_AZURE_ML"
	AssetDetailsDtoLineagePlatformMICROSOFTDYNAMICS         AssetDetailsDtoLineagePlatform = "MICROSOFT_DYNAMICS"
	AssetDetailsDtoLineagePlatformMICROSOFTONEDRIVE         AssetDetailsDtoLineagePlatform = "MICROSOFT_ONEDRIVE"
	AssetDetailsDtoLineagePlatformMICROSOFTPURVIEW          AssetDetailsDtoLineagePlatform = "MICROSOFT_PURVIEW"
	AssetDetailsDtoLineagePlatformMICROSOFTTEAMS            AssetDetailsDtoLineagePlatform = "MICROSOFT_TEAMS"
	AssetDetailsDtoLineagePlatformMICROSTRATEGY             AssetDetailsDtoLineagePlatform = "MICROSTRATEGY"
	AssetDetailsDtoLineagePlatformMIXMAX                    AssetDetailsDtoLineagePlatform = "MIXMAX"
	AssetDetailsDtoLineagePlatformMIXPANEL                  AssetDetailsDtoLineagePlatform = "MIXPANEL"
	AssetDetailsDtoLineagePlatformMONDAYCOM                 AssetDetailsDtoLineagePlatform = "MONDAY_COM"
	AssetDetailsDtoLineagePlatformMONGODB                   AssetDetailsDtoLineagePlatform = "MONGODB"
	AssetDetailsDtoLineagePlatformMONTECARLO                AssetDetailsDtoLineagePlatform = "MONTE_CARLO"
	AssetDetailsDtoLineagePlatformMOUNTAIN                  AssetDetailsDtoLineagePlatform = "MOUNTAIN"
	AssetDetailsDtoLineagePlatformMSSQL                     AssetDetailsDtoLineagePlatform = "MSSQL"
	AssetDetailsDtoLineagePlatformMULESOFT                  AssetDetailsDtoLineagePlatform = "MULESOFT"
	AssetDetailsDtoLineagePlatformMUX                       AssetDetailsDtoLineagePlatform = "MUX"
	AssetDetailsDtoLineagePlatformMWAA                      AssetDetailsDtoLineagePlatform = "MWAA"
	AssetDetailsDtoLineagePlatformMYSQL                     AssetDetailsDtoLineagePlatform = "MYSQL"
	AssetDetailsDtoLineagePlatformNAMELY                    AssetDetailsDtoLineagePlatform = "NAMELY"
	AssetDetailsDtoLineagePlatformNCINO                     AssetDetailsDtoLineagePlatform = "NCINO"
	AssetDetailsDtoLineagePlatformNETSUITEANALYTICS         AssetDetailsDtoLineagePlatform = "NETSUITE_ANALYTICS"
	AssetDetailsDtoLineagePlatformNEWRELIC                  AssetDetailsDtoLineagePlatform = "NEW_RELIC"
	AssetDetailsDtoLineagePlatformNOTION                    AssetDetailsDtoLineagePlatform = "NOTION"
	AssetDetailsDtoLineagePlatformNYLAS                     AssetDetailsDtoLineagePlatform = "NYLAS"
	AssetDetailsDtoLineagePlatformOBSERVE                   AssetDetailsDtoLineagePlatform = "OBSERVE"
	AssetDetailsDtoLineagePlatformOCTOPAI                   AssetDetailsDtoLineagePlatform = "OCTOPAI"
	AssetDetailsDtoLineagePlatformOKTA                      AssetDetailsDtoLineagePlatform = "OKTA"
	AssetDetailsDtoLineagePlatformOPENAI                    AssetDetailsDtoLineagePlatform = "OPEN_AI"
	AssetDetailsDtoLineagePlatformOPENDATADC                AssetDetailsDtoLineagePlatform = "OPEN_DATA_DC"
	AssetDetailsDtoLineagePlatformOPENEXCHANGESRATES        AssetDetailsDtoLineagePlatform = "OPEN_EXCHANGES_RATES"
	AssetDetailsDtoLineagePlatformOPENSEARCH                AssetDetailsDtoLineagePlatform = "OPEN_SEARCH"
	AssetDetailsDtoLineagePlatformOPTIMIZELY                AssetDetailsDtoLineagePlatform = "OPTIMIZELY"
	AssetDetailsDtoLineagePlatformORACLE                    AssetDetailsDtoLineagePlatform = "ORACLE"
	AssetDetailsDtoLineagePlatformORBITCOMMUNITYPLATFORM    AssetDetailsDtoLineagePlatform = "ORBIT_COMMUNITY_PLATFORM"
	AssetDetailsDtoLineagePlatformORDWAY                    AssetDetailsDtoLineagePlatform = "ORDWAY"
	AssetDetailsDtoLineagePlatformORTTO                     AssetDetailsDtoLineagePlatform = "ORTTO"
	AssetDetailsDtoLineagePlatformOSCOMMERCE                AssetDetailsDtoLineagePlatform = "OS_COMMERCE"
	AssetDetailsDtoLineagePlatformOUTBRAIN                  AssetDetailsDtoLineagePlatform = "OUTBRAIN"
	AssetDetailsDtoLineagePlatformOUTREACH                  AssetDetailsDtoLineagePlatform = "OUTREACH"
	AssetDetailsDtoLineagePlatformOVALEDGE                  AssetDetailsDtoLineagePlatform = "OVALEDGE"
	AssetDetailsDtoLineagePlatformPAGERDUTY                 AssetDetailsDtoLineagePlatform = "PAGERDUTY"
	AssetDetailsDtoLineagePlatformPAGERSHIFT                AssetDetailsDtoLineagePlatform = "PAGERSHIFT"
	AssetDetailsDtoLineagePlatformPAYPAL                    AssetDetailsDtoLineagePlatform = "PAYPAL"
	AssetDetailsDtoLineagePlatformPENDO                     AssetDetailsDtoLineagePlatform = "PENDO"
	AssetDetailsDtoLineagePlatformPINGDOM                   AssetDetailsDtoLineagePlatform = "PINGDOM"
	AssetDetailsDtoLineagePlatformPINTEREST                 AssetDetailsDtoLineagePlatform = "PINTEREST"
	AssetDetailsDtoLineagePlatformPIPE17                    AssetDetailsDtoLineagePlatform = "PIPE17"
	AssetDetailsDtoLineagePlatformPIPEDRIVE                 AssetDetailsDtoLineagePlatform = "PIPEDRIVE"
	AssetDetailsDtoLineagePlatformPIVOTALTRACKER            AssetDetailsDtoLineagePlatform = "PIVOTAL_TRACKER"
	AssetDetailsDtoLineagePlatformPLAYVOX                   AssetDetailsDtoLineagePlatform = "PLAYVOX"
	AssetDetailsDtoLineagePlatformPOSTGRES                  AssetDetailsDtoLineagePlatform = "POSTGRES"
	AssetDetailsDtoLineagePlatformPOSTHOG                   AssetDetailsDtoLineagePlatform = "POSTHOG"
	AssetDetailsDtoLineagePlatformPOWERBI                   AssetDetailsDtoLineagePlatform = "POWER_BI"
	AssetDetailsDtoLineagePlatformPOWERSCHOOL               AssetDetailsDtoLineagePlatform = "POWERSCHOOL"
	AssetDetailsDtoLineagePlatformPREFECT                   AssetDetailsDtoLineagePlatform = "PREFECT"
	AssetDetailsDtoLineagePlatformPRESTASHOP                AssetDetailsDtoLineagePlatform = "PRESTASHOP"
	AssetDetailsDtoLineagePlatformPRESTO                    AssetDetailsDtoLineagePlatform = "PRESTO"
	AssetDetailsDtoLineagePlatformPRODUCTBOARD              AssetDetailsDtoLineagePlatform = "PRODUCTBOARD"
	AssetDetailsDtoLineagePlatformPYTHON                    AssetDetailsDtoLineagePlatform = "PYTHON"
	AssetDetailsDtoLineagePlatformQLIK                      AssetDetailsDtoLineagePlatform = "QLIK"
	AssetDetailsDtoLineagePlatformQUALAROO                  AssetDetailsDtoLineagePlatform = "QUALAROO"
	AssetDetailsDtoLineagePlatformQUALTRICS                 AssetDetailsDtoLineagePlatform = "QUALTRICS"
	AssetDetailsDtoLineagePlatformQUICKBOOKS                AssetDetailsDtoLineagePlatform = "QUICKBOOKS"
	AssetDetailsDtoLineagePlatformQUICKSIGHT                AssetDetailsDtoLineagePlatform = "QUICKSIGHT"
	AssetDetailsDtoLineagePlatformRAMP                      AssetDetailsDtoLineagePlatform = "RAMP"
	AssetDetailsDtoLineagePlatformRARIBLE                   AssetDetailsDtoLineagePlatform = "RARIBLE"
	AssetDetailsDtoLineagePlatformRECHARGE                  AssetDetailsDtoLineagePlatform = "RECHARGE"
	AssetDetailsDtoLineagePlatformRECURLY                   AssetDetailsDtoLineagePlatform = "RECURLY"
	AssetDetailsDtoLineagePlatformREDDIT                    AssetDetailsDtoLineagePlatform = "REDDIT"
	AssetDetailsDtoLineagePlatformREDSHIFT                  AssetDetailsDtoLineagePlatform = "REDSHIFT"
	AssetDetailsDtoLineagePlatformRELTIO                    AssetDetailsDtoLineagePlatform = "RELTIO"
	AssetDetailsDtoLineagePlatformREPLYIO                   AssetDetailsDtoLineagePlatform = "REPLY_IO"
	AssetDetailsDtoLineagePlatformRETAILNEXT                AssetDetailsDtoLineagePlatform = "RETAILNEXT"
	AssetDetailsDtoLineagePlatformRETENTLY                  AssetDetailsDtoLineagePlatform = "RETENTLY"
	AssetDetailsDtoLineagePlatformREVELSYSTEMS              AssetDetailsDtoLineagePlatform = "REVEL_SYSTEMS"
	AssetDetailsDtoLineagePlatformRINGCENTRAL               AssetDetailsDtoLineagePlatform = "RINGCENTRAL"
	AssetDetailsDtoLineagePlatformRIPPLING                  AssetDetailsDtoLineagePlatform = "RIPPLING"
	AssetDetailsDtoLineagePlatformROLLBAR                   AssetDetailsDtoLineagePlatform = "ROLLBAR"
	AssetDetailsDtoLineagePlatformROOTLY                    AssetDetailsDtoLineagePlatform = "ROOTLY"
	AssetDetailsDtoLineagePlatformS3                        AssetDetailsDtoLineagePlatform = "S3"
	AssetDetailsDtoLineagePlatformSAGEHR                    AssetDetailsDtoLineagePlatform = "SAGE_HR"
	AssetDetailsDtoLineagePlatformSAGEINTACCT               AssetDetailsDtoLineagePlatform = "SAGE_INTACCT"
	AssetDetailsDtoLineagePlatformSAILTHRU                  AssetDetailsDtoLineagePlatform = "SAILTHRU"
	AssetDetailsDtoLineagePlatformSALESFORCE                AssetDetailsDtoLineagePlatform = "SALESFORCE"
	AssetDetailsDtoLineagePlatformSALESLOFT                 AssetDetailsDtoLineagePlatform = "SALESLOFT"
	AssetDetailsDtoLineagePlatformSALSIFY                   AssetDetailsDtoLineagePlatform = "SALSIFY"
	AssetDetailsDtoLineagePlatformSAMSARA                   AssetDetailsDtoLineagePlatform = "SAMSARA"
	AssetDetailsDtoLineagePlatformSAP                       AssetDetailsDtoLineagePlatform = "SAP"
	AssetDetailsDtoLineagePlatformSAPCONCUR                 AssetDetailsDtoLineagePlatform = "SAP_CONCUR"
	AssetDetailsDtoLineagePlatformSCORM                     AssetDetailsDtoLineagePlatform = "SCORM"
	AssetDetailsDtoLineagePlatformSECODA                    AssetDetailsDtoLineagePlatform = "SECODA"
	AssetDetailsDtoLineagePlatformSECURITYJOURNEY           AssetDetailsDtoLineagePlatform = "SECURITY_JOURNEY"
	AssetDetailsDtoLineagePlatformSEGMENT                   AssetDetailsDtoLineagePlatform = "SEGMENT"
	AssetDetailsDtoLineagePlatformSELECTSTAR                AssetDetailsDtoLineagePlatform = "SELECT_STAR"
	AssetDetailsDtoLineagePlatformSENDGRID                  AssetDetailsDtoLineagePlatform = "SENDGRID"
	AssetDetailsDtoLineagePlatformSERVICENOW                AssetDetailsDtoLineagePlatform = "SERVICE_NOW"
	AssetDetailsDtoLineagePlatformSFTP                      AssetDetailsDtoLineagePlatform = "SFTP"
	AssetDetailsDtoLineagePlatformSHAREPOINT                AssetDetailsDtoLineagePlatform = "SHAREPOINT"
	AssetDetailsDtoLineagePlatformSHARETRIBE                AssetDetailsDtoLineagePlatform = "SHARETRIBE"
	AssetDetailsDtoLineagePlatformSHIPHERO                  AssetDetailsDtoLineagePlatform = "SHIPHERO"
	AssetDetailsDtoLineagePlatformSHIPSTATION               AssetDetailsDtoLineagePlatform = "SHIPSTATION"
	AssetDetailsDtoLineagePlatformSHOPIFY                   AssetDetailsDtoLineagePlatform = "SHOPIFY"
	AssetDetailsDtoLineagePlatformSHOPWARE                  AssetDetailsDtoLineagePlatform = "SHOPWARE"
	AssetDetailsDtoLineagePlatformSHORTIO                   AssetDetailsDtoLineagePlatform = "SHORT_IO"
	AssetDetailsDtoLineagePlatformSIFFLET                   AssetDetailsDtoLineagePlatform = "SIFFLET"
	AssetDetailsDtoLineagePlatformSIGMA                     AssetDetailsDtoLineagePlatform = "SIGMA"
	AssetDetailsDtoLineagePlatformSIMPLECAST                AssetDetailsDtoLineagePlatform = "SIMPLECAST"
	AssetDetailsDtoLineagePlatformSIMPLESAT                 AssetDetailsDtoLineagePlatform = "SIMPLESAT"
	AssetDetailsDtoLineagePlatformSINGLESTORE               AssetDetailsDtoLineagePlatform = "SINGLESTORE"
	AssetDetailsDtoLineagePlatformSISENSE                   AssetDetailsDtoLineagePlatform = "SISENSE"
	AssetDetailsDtoLineagePlatformSIXSENSE                  AssetDetailsDtoLineagePlatform = "SIXSENSE"
	AssetDetailsDtoLineagePlatformSKILLJAR                  AssetDetailsDtoLineagePlatform = "SKILLJAR"
	AssetDetailsDtoLineagePlatformSKUVAULT                  AssetDetailsDtoLineagePlatform = "SKUVAULT"
	AssetDetailsDtoLineagePlatformSLAB                      AssetDetailsDtoLineagePlatform = "SLAB"
	AssetDetailsDtoLineagePlatformSLACK                     AssetDetailsDtoLineagePlatform = "SLACK"
	AssetDetailsDtoLineagePlatformSMADEX                    AssetDetailsDtoLineagePlatform = "SMADEX"
	AssetDetailsDtoLineagePlatformSNAPCHAT                  AssetDetailsDtoLineagePlatform = "SNAPCHAT"
	AssetDetailsDtoLineagePlatformSNOWFLAKE                 AssetDetailsDtoLineagePlatform = "SNOWFLAKE"
	AssetDetailsDtoLineagePlatformSNOWPLOW                  AssetDetailsDtoLineagePlatform = "SNOWPLOW"
	AssetDetailsDtoLineagePlatformSODA                      AssetDetailsDtoLineagePlatform = "SODA"
	AssetDetailsDtoLineagePlatformSONARQUBE                 AssetDetailsDtoLineagePlatform = "SONARQUBE"
	AssetDetailsDtoLineagePlatformSPARKPROCESS              AssetDetailsDtoLineagePlatform = "SPARK_PROCESS"
	AssetDetailsDtoLineagePlatformSPLITIO                   AssetDetailsDtoLineagePlatform = "SPLIT_IO"
	AssetDetailsDtoLineagePlatformSPLUNK                    AssetDetailsDtoLineagePlatform = "SPLUNK"
	AssetDetailsDtoLineagePlatformSPOTIFY                   AssetDetailsDtoLineagePlatform = "SPOTIFY"
	AssetDetailsDtoLineagePlatformSPREECOMMERCE             AssetDetailsDtoLineagePlatform = "SPREE_COMMERCE"
	AssetDetailsDtoLineagePlatformSPROUTSOCIAL              AssetDetailsDtoLineagePlatform = "SPROUT_SOCIAL"
	AssetDetailsDtoLineagePlatformSQUARE                    AssetDetailsDtoLineagePlatform = "SQUARE"
	AssetDetailsDtoLineagePlatformSQUARESPACE               AssetDetailsDtoLineagePlatform = "SQUARESPACE"
	AssetDetailsDtoLineagePlatformSTACKADAPT                AssetDetailsDtoLineagePlatform = "STACK_ADAPT"
	AssetDetailsDtoLineagePlatformSTATSIG                   AssetDetailsDtoLineagePlatform = "STATSIG"
	AssetDetailsDtoLineagePlatformSTITCH                    AssetDetailsDtoLineagePlatform = "STITCH"
	AssetDetailsDtoLineagePlatformSTRIPE                    AssetDetailsDtoLineagePlatform = "STRIPE"
	AssetDetailsDtoLineagePlatformSTYLIGHT                  AssetDetailsDtoLineagePlatform = "STYLIGHT"
	AssetDetailsDtoLineagePlatformSUBSCRIPT                 AssetDetailsDtoLineagePlatform = "SUBSCRIPT"
	AssetDetailsDtoLineagePlatformSYNAPSE                   AssetDetailsDtoLineagePlatform = "SYNAPSE"
	AssetDetailsDtoLineagePlatformTABLEAU                   AssetDetailsDtoLineagePlatform = "TABLEAU"
	AssetDetailsDtoLineagePlatformTABOOLA                   AssetDetailsDtoLineagePlatform = "TABOOLA"
	AssetDetailsDtoLineagePlatformTALEND                    AssetDetailsDtoLineagePlatform = "TALEND"
	AssetDetailsDtoLineagePlatformTALKDESK                  AssetDetailsDtoLineagePlatform = "TALKDESK"
	AssetDetailsDtoLineagePlatformTALKWALKER                AssetDetailsDtoLineagePlatform = "TALKWALKER"
	AssetDetailsDtoLineagePlatformTEAMWORKCOM               AssetDetailsDtoLineagePlatform = "TEAMWORK_COM"
	AssetDetailsDtoLineagePlatformTEMPOIO                   AssetDetailsDtoLineagePlatform = "TEMPO_IO"
	AssetDetailsDtoLineagePlatformTERADATA                  AssetDetailsDtoLineagePlatform = "TERADATA"
	AssetDetailsDtoLineagePlatformTERRAFORM                 AssetDetailsDtoLineagePlatform = "TERRAFORM"
	AssetDetailsDtoLineagePlatformTHETRADEDESK              AssetDetailsDtoLineagePlatform = "THE_TRADE_DESK"
	AssetDetailsDtoLineagePlatformTHOUGHTSPOT               AssetDetailsDtoLineagePlatform = "THOUGHT_SPOT"
	AssetDetailsDtoLineagePlatformTHREESIXTYLEARNING        AssetDetailsDtoLineagePlatform = "THREESIXTYLEARNING"
	AssetDetailsDtoLineagePlatformTIKTOK                    AssetDetailsDtoLineagePlatform = "TIKTOK"
	AssetDetailsDtoLineagePlatformTOGGL                     AssetDetailsDtoLineagePlatform = "TOGGL"
	AssetDetailsDtoLineagePlatformTRANSCEND                 AssetDetailsDtoLineagePlatform = "TRANSCEND"
	AssetDetailsDtoLineagePlatformTRELLO                    AssetDetailsDtoLineagePlatform = "TRELLO"
	AssetDetailsDtoLineagePlatformTRINET                    AssetDetailsDtoLineagePlatform = "TRINET"
	AssetDetailsDtoLineagePlatformTRISOLUTE                 AssetDetailsDtoLineagePlatform = "TRISOLUTE"
	AssetDetailsDtoLineagePlatformTWILIO                    AssetDetailsDtoLineagePlatform = "TWILIO"
	AssetDetailsDtoLineagePlatformTYPEFORM                  AssetDetailsDtoLineagePlatform = "TYPEFORM"
	AssetDetailsDtoLineagePlatformUNKNOWN                   AssetDetailsDtoLineagePlatform = "UNKNOWN"
	AssetDetailsDtoLineagePlatformUPLAND                    AssetDetailsDtoLineagePlatform = "UPLAND"
	AssetDetailsDtoLineagePlatformUSERVOICE                 AssetDetailsDtoLineagePlatform = "USERVOICE"
	AssetDetailsDtoLineagePlatformVALIDIO                   AssetDetailsDtoLineagePlatform = "VALIDIO"
	AssetDetailsDtoLineagePlatformVEEVA                     AssetDetailsDtoLineagePlatform = "VEEVA"
	AssetDetailsDtoLineagePlatformVERIZONMEDIA              AssetDetailsDtoLineagePlatform = "VERIZON_MEDIA"
	AssetDetailsDtoLineagePlatformVITALLY                   AssetDetailsDtoLineagePlatform = "VITALLY"
	AssetDetailsDtoLineagePlatformVONAGE                    AssetDetailsDtoLineagePlatform = "VONAGE"
	AssetDetailsDtoLineagePlatformVUETIFY                   AssetDetailsDtoLineagePlatform = "VUETIFY"
	AssetDetailsDtoLineagePlatformWEBHOOKS                  AssetDetailsDtoLineagePlatform = "WEBHOOKS"
	AssetDetailsDtoLineagePlatformWEBSCRAPER                AssetDetailsDtoLineagePlatform = "WEB_SCRAPER"
	AssetDetailsDtoLineagePlatformWHENIWORK                 AssetDetailsDtoLineagePlatform = "WHEN_I_WORK"
	AssetDetailsDtoLineagePlatformWHEREFOUR                 AssetDetailsDtoLineagePlatform = "WHEREFOUR"
	AssetDetailsDtoLineagePlatformWIKIPEDIA                 AssetDetailsDtoLineagePlatform = "WIKIPEDIA"
	AssetDetailsDtoLineagePlatformWOOCOMMERCE               AssetDetailsDtoLineagePlatform = "WOOCOMMERCE"
	AssetDetailsDtoLineagePlatformWORDPRESS                 AssetDetailsDtoLineagePlatform = "WORDPRESS"
	AssetDetailsDtoLineagePlatformWORKABLE                  AssetDetailsDtoLineagePlatform = "WORKABLE"
	AssetDetailsDtoLineagePlatformWORKDAY                   AssetDetailsDtoLineagePlatform = "WORKDAY"
	AssetDetailsDtoLineagePlatformWORKFLOWMAX               AssetDetailsDtoLineagePlatform = "WORKFLOW_MAX"
	AssetDetailsDtoLineagePlatformWRIKE                     AssetDetailsDtoLineagePlatform = "WRIKE"
	AssetDetailsDtoLineagePlatformX                         AssetDetailsDtoLineagePlatform = "X"
	AssetDetailsDtoLineagePlatformXERO                      AssetDetailsDtoLineagePlatform = "XERO"
	AssetDetailsDtoLineagePlatformXRAY                      AssetDetailsDtoLineagePlatform = "XRAY"
	AssetDetailsDtoLineagePlatformYAHOO                     AssetDetailsDtoLineagePlatform = "YAHOO"
	AssetDetailsDtoLineagePlatformYOTPO                     AssetDetailsDtoLineagePlatform = "YOTPO"
	AssetDetailsDtoLineagePlatformYOUTUBE                   AssetDetailsDtoLineagePlatform = "YOUTUBE"
	AssetDetailsDtoLineagePlatformZEENEA                    AssetDetailsDtoLineagePlatform = "ZEENEA"
	AssetDetailsDtoLineagePlatformZENCART                   AssetDetailsDtoLineagePlatform = "ZEN_CART"
	AssetDetailsDtoLineagePlatformZENDESKCHAT               AssetDetailsDtoLineagePlatform = "ZENDESK_CHAT"
	AssetDetailsDtoLineagePlatformZENDESKSELL               AssetDetailsDtoLineagePlatform = "ZENDESK_SELL"
	AssetDetailsDtoLineagePlatformZENDESKSUNSHINE           AssetDetailsDtoLineagePlatform = "ZENDESK_SUNSHINE"
	AssetDetailsDtoLineagePlatformZENDESKSUPPORT            AssetDetailsDtoLineagePlatform = "ZENDESK_SUPPORT"
	AssetDetailsDtoLineagePlatformZINGTREE                  AssetDetailsDtoLineagePlatform = "ZINGTREE"
	AssetDetailsDtoLineagePlatformZOHOBOOKS                 AssetDetailsDtoLineagePlatform = "ZOHO_BOOKS"
	AssetDetailsDtoLineagePlatformZOHOCAMPAIGNS             AssetDetailsDtoLineagePlatform = "ZOHO_CAMPAIGNS"
	AssetDetailsDtoLineagePlatformZOHOCRM                   AssetDetailsDtoLineagePlatform = "ZOHO_CRM"
	AssetDetailsDtoLineagePlatformZOOM                      AssetDetailsDtoLineagePlatform = "ZOOM"
	AssetDetailsDtoLineagePlatformZUORA                     AssetDetailsDtoLineagePlatform = "ZUORA"
)

// Defines values for AssetDetailsDtoSourceCreationType.
const (
	AssetDetailsDtoSourceCreationTypeCONNECTED AssetDetailsDtoSourceCreationType = "CONNECTED"
	AssetDetailsDtoSourceCreationTypeDECLARED  AssetDetailsDtoSourceCreationType = "DECLARED"
)

// Defines values for AssetDtoDisplayedTypeEnum.
const (
	AssetDtoDisplayedTypeEnumCONNECTOR        AssetDtoDisplayedTypeEnum = "CONNECTOR"
	AssetDtoDisplayedTypeEnumDAG              AssetDtoDisplayedTypeEnum = "DAG"
	AssetDtoDisplayedTypeEnumDASHBOARD        AssetDtoDisplayedTypeEnum = "DASHBOARD"
	AssetDtoDisplayedTypeEnumDATABASE         AssetDtoDisplayedTypeEnum = "DATABASE"
	AssetDtoDisplayedTypeEnumDECLAREDASSET    AssetDtoDisplayedTypeEnum = "DECLARED_ASSET"
	AssetDtoDisplayedTypeEnumEXTERNALTABLE    AssetDtoDisplayedTypeEnum = "EXTERNAL_TABLE"
	AssetDtoDisplayedTypeEnumFIELD            AssetDtoDisplayedTypeEnum = "FIELD"
	AssetDtoDisplayedTypeEnumMATERIALIZEDVIEW AssetDtoDisplayedTypeEnum = "MATERIALIZED_VIEW"
	AssetDtoDisplayedTypeEnumMLMODEL          AssetDtoDisplayedTypeEnum = "ML_MODEL"
	AssetDtoDisplayedTypeEnumMODEL            AssetDtoDisplayedTypeEnum = "MODEL"
	AssetDtoDisplayedTypeEnumMONITOR          AssetDtoDisplayedTypeEnum = "MONITOR"
	AssetDtoDisplayedTypeEnumNONE             AssetDtoDisplayedTypeEnum = "NONE"
	AssetDtoDisplayedTypeEnumORCHESTRATOR     AssetDtoDisplayedTypeEnum = "ORCHESTRATOR"
	AssetDtoDisplayedTypeEnumPIPELINE         AssetDtoDisplayedTypeEnum = "PIPELINE"
	AssetDtoDisplayedTypeEnumREPORT           AssetDtoDisplayedTypeEnum = "REPORT"
	AssetDtoDisplayedTypeEnumSCHEMA           AssetDtoDisplayedTypeEnum = "SCHEMA"
	AssetDtoDisplayedTypeEnumSNOWFLAKESTREAM  AssetDtoDisplayedTypeEnum = "SNOWFLAKE_STREAM"
	AssetDtoDisplayedTypeEnumTABLE            AssetDtoDisplayedTypeEnum = "TABLE"
	AssetDtoDisplayedTypeEnumTRANSFORMATION   AssetDtoDisplayedTypeEnum = "TRANSFORMATION"
	AssetDtoDisplayedTypeEnumVIEW             AssetDtoDisplayedTypeEnum = "VIEW"
)

// Defines values for AssetDtoLineagePlatform.
const (
	AssetDtoLineagePlatformACCELDATA                 AssetDtoLineagePlatform = "ACCELDATA"
	AssetDtoLineagePlatformACRYLDATA                 AssetDtoLineagePlatform = "ACRYL_DATA"
	AssetDtoLineagePlatformACTIANVECTOR              AssetDtoLineagePlatform = "ACTIAN_VECTOR"
	AssetDtoLineagePlatformACTIVECAMPAIGN            AssetDtoLineagePlatform = "ACTIVE_CAMPAIGN"
	AssetDtoLineagePlatformADA                       AssetDtoLineagePlatform = "ADA"
	AssetDtoLineagePlatformADJUST                    AssetDtoLineagePlatform = "ADJUST"
	AssetDtoLineagePlatformADOBE                     AssetDtoLineagePlatform = "ADOBE"
	AssetDtoLineagePlatformADPWFN                    AssetDtoLineagePlatform = "ADP_WFN"
	AssetDtoLineagePlatformADROLL                    AssetDtoLineagePlatform = "ADROLL"
	AssetDtoLineagePlatformAFFINITY                  AssetDtoLineagePlatform = "AFFINITY"
	AssetDtoLineagePlatformAIRBYTE                   AssetDtoLineagePlatform = "AIRBYTE"
	AssetDtoLineagePlatformAIRCALL                   AssetDtoLineagePlatform = "AIRCALL"
	AssetDtoLineagePlatformAIRFLOW                   AssetDtoLineagePlatform = "AIRFLOW"
	AssetDtoLineagePlatformAIRTABLE                  AssetDtoLineagePlatform = "AIRTABLE"
	AssetDtoLineagePlatformALATION                   AssetDtoLineagePlatform = "ALATION"
	AssetDtoLineagePlatformALCHEMER                  AssetDtoLineagePlatform = "ALCHEMER"
	AssetDtoLineagePlatformALVINAI                   AssetDtoLineagePlatform = "ALVIN_AI"
	AssetDtoLineagePlatformAMAZON                    AssetDtoLineagePlatform = "AMAZON"
	AssetDtoLineagePlatformAMAZONCLOUDFRONT          AssetDtoLineagePlatform = "AMAZON_CLOUDFRONT"
	AssetDtoLineagePlatformAMAZONDOCUMENTDB          AssetDtoLineagePlatform = "AMAZON_DOCUMENTDB"
	AssetDtoLineagePlatformAMAZONDYNAMODB            AssetDtoLineagePlatform = "AMAZON_DYNAMODB"
	AssetDtoLineagePlatformAMAZONFIREHOSE            AssetDtoLineagePlatform = "AMAZON_FIREHOSE"
	AssetDtoLineagePlatformAMAZONSAGEMAKER           AssetDtoLineagePlatform = "AMAZON_SAGEMAKER"
	AssetDtoLineagePlatformAMAZONSELLINGPARTNER      AssetDtoLineagePlatform = "AMAZON_SELLING_PARTNER"
	AssetDtoLineagePlatformAMPLITUDE                 AssetDtoLineagePlatform = "AMPLITUDE"
	AssetDtoLineagePlatformANAPLAN                   AssetDtoLineagePlatform = "ANAPLAN"
	AssetDtoLineagePlatformANOMALO                   AssetDtoLineagePlatform = "ANOMALO"
	AssetDtoLineagePlatformAPACHEKAFKA               AssetDtoLineagePlatform = "APACHE_KAFKA"
	AssetDtoLineagePlatformAPACHESPARK               AssetDtoLineagePlatform = "APACHE_SPARK"
	AssetDtoLineagePlatformAPPCUES                   AssetDtoLineagePlatform = "APPCUES"
	AssetDtoLineagePlatformAPPFIGURES                AssetDtoLineagePlatform = "APPFIGURES"
	AssetDtoLineagePlatformAPPLE                     AssetDtoLineagePlatform = "APPLE"
	AssetDtoLineagePlatformAPPLEAPPSTORE             AssetDtoLineagePlatform = "APPLE_APP_STORE"
	AssetDtoLineagePlatformAPPSFLYER                 AssetDtoLineagePlatform = "APPSFLYER"
	AssetDtoLineagePlatformASANA                     AssetDtoLineagePlatform = "ASANA"
	AssetDtoLineagePlatformASSEMBLED                 AssetDtoLineagePlatform = "ASSEMBLED"
	AssetDtoLineagePlatformATHENA                    AssetDtoLineagePlatform = "ATHENA"
	AssetDtoLineagePlatformATLAN                     AssetDtoLineagePlatform = "ATLAN"
	AssetDtoLineagePlatformATLASSIANCONFLUENCE       AssetDtoLineagePlatform = "ATLASSIAN_CONFLUENCE"
	AssetDtoLineagePlatformATLASSIANJIRA             AssetDtoLineagePlatform = "ATLASSIAN_JIRA"
	AssetDtoLineagePlatformATLASSIANOPSGENIE         AssetDtoLineagePlatform = "ATLASSIAN_OPSGENIE"
	AssetDtoLineagePlatformAUTH0                     AssetDtoLineagePlatform = "AUTH0"
	AssetDtoLineagePlatformAUTODESKBIM360            AssetDtoLineagePlatform = "AUTODESK_BIM_360"
	AssetDtoLineagePlatformAWIN                      AssetDtoLineagePlatform = "AWIN"
	AssetDtoLineagePlatformAWSCLOUDTRAIL             AssetDtoLineagePlatform = "AWS_CLOUDTRAIL"
	AssetDtoLineagePlatformAWSCOSTEXPLORER           AssetDtoLineagePlatform = "AWS_COST_EXPLORER"
	AssetDtoLineagePlatformAWSINVENTORY              AssetDtoLineagePlatform = "AWS_INVENTORY"
	AssetDtoLineagePlatformAWSLAMBDA                 AssetDtoLineagePlatform = "AWS_LAMBDA"
	AssetDtoLineagePlatformAZURE                     AssetDtoLineagePlatform = "AZURE"
	AssetDtoLineagePlatformBALLOTREADY               AssetDtoLineagePlatform = "BALLOT_READY"
	AssetDtoLineagePlatformBAMBOOHR                  AssetDtoLineagePlatform = "BAMBOOHR"
	AssetDtoLineagePlatformBIGCOMMERCE               AssetDtoLineagePlatform = "BIGCOMMERCE"
	AssetDtoLineagePlatformBIGEYE                    AssetDtoLineagePlatform = "BIGEYE"
	AssetDtoLineagePlatformBIGQUERY                  AssetDtoLineagePlatform = "BIGQUERY"
	AssetDtoLineagePlatformBILLINGPLATFORM           AssetDtoLineagePlatform = "BILLINGPLATFORM"
	AssetDtoLineagePlatformBIRDEYE                   AssetDtoLineagePlatform = "BIRDEYE"
	AssetDtoLineagePlatformBLACKBOARD                AssetDtoLineagePlatform = "BLACKBOARD"
	AssetDtoLineagePlatformBOX                       AssetDtoLineagePlatform = "BOX"
	AssetDtoLineagePlatformBRAINTREE                 AssetDtoLineagePlatform = "BRAINTREE"
	AssetDtoLineagePlatformBRAZE                     AssetDtoLineagePlatform = "BRAZE"
	AssetDtoLineagePlatformBREVO                     AssetDtoLineagePlatform = "BREVO"
	AssetDtoLineagePlatformBREX                      AssetDtoLineagePlatform = "BREX"
	AssetDtoLineagePlatformBUILDKITE                 AssetDtoLineagePlatform = "BUILDKITE"
	AssetDtoLineagePlatformBUZZSPROUT                AssetDtoLineagePlatform = "BUZZSPROUT"
	AssetDtoLineagePlatformCALENDLY                  AssetDtoLineagePlatform = "CALENDLY"
	AssetDtoLineagePlatformCAMPAIGNMONITOR           AssetDtoLineagePlatform = "CAMPAIGN_MONITOR"
	AssetDtoLineagePlatformCANNY                     AssetDtoLineagePlatform = "CANNY"
	AssetDtoLineagePlatformCANVAS                    AssetDtoLineagePlatform = "CANVAS"
	AssetDtoLineagePlatformCAPTERRA                  AssetDtoLineagePlatform = "CAPTERRA"
	AssetDtoLineagePlatformCASTORDOC                 AssetDtoLineagePlatform = "CASTOR_DOC"
	AssetDtoLineagePlatformCENSUS                    AssetDtoLineagePlatform = "CENSUS"
	AssetDtoLineagePlatformCERTINIA                  AssetDtoLineagePlatform = "CERTINIA"
	AssetDtoLineagePlatformCHAMELEON                 AssetDtoLineagePlatform = "CHAMELEON"
	AssetDtoLineagePlatformCHANNELADVISOR            AssetDtoLineagePlatform = "CHANNEL_ADVISOR"
	AssetDtoLineagePlatformCHARGEBEE                 AssetDtoLineagePlatform = "CHARGEBEE"
	AssetDtoLineagePlatformCHARGEDESK                AssetDtoLineagePlatform = "CHARGEDESK"
	AssetDtoLineagePlatformCHARTMOGUL                AssetDtoLineagePlatform = "CHARTMOGUL"
	AssetDtoLineagePlatformCHORUSAI                  AssetDtoLineagePlatform = "CHORUS_AI"
	AssetDtoLineagePlatformCHURNKEY                  AssetDtoLineagePlatform = "CHURNKEY"
	AssetDtoLineagePlatformCHURNZERO                 AssetDtoLineagePlatform = "CHURNZERO"
	AssetDtoLineagePlatformCIMIS                     AssetDtoLineagePlatform = "CIMIS"
	AssetDtoLineagePlatformCIN7                      AssetDtoLineagePlatform = "CIN7"
	AssetDtoLineagePlatformCIRCLECI                  AssetDtoLineagePlatform = "CIRCLE_CI"
	AssetDtoLineagePlatformCLARI                     AssetDtoLineagePlatform = "CLARI"
	AssetDtoLineagePlatformCLICKUP                   AssetDtoLineagePlatform = "CLICKUP"
	AssetDtoLineagePlatformCLIFFAI                   AssetDtoLineagePlatform = "CLIFF_AI"
	AssetDtoLineagePlatformCLOSE                     AssetDtoLineagePlatform = "CLOSE"
	AssetDtoLineagePlatformCOLLIBRA                  AssetDtoLineagePlatform = "COLLIBRA"
	AssetDtoLineagePlatformCOMMERCETOOLS             AssetDtoLineagePlatform = "COMMERCETOOLS"
	AssetDtoLineagePlatformCOMPOSER                  AssetDtoLineagePlatform = "COMPOSER"
	AssetDtoLineagePlatformCONFLUENTCLOUD            AssetDtoLineagePlatform = "CONFLUENT_CLOUD"
	AssetDtoLineagePlatformCONTRASTSECURITY          AssetDtoLineagePlatform = "CONTRAST_SECURITY"
	AssetDtoLineagePlatformCOUPA                     AssetDtoLineagePlatform = "COUPA"
	AssetDtoLineagePlatformCRITEO                    AssetDtoLineagePlatform = "CRITEO"
	AssetDtoLineagePlatformCROSSBEAM                 AssetDtoLineagePlatform = "CROSSBEAM"
	AssetDtoLineagePlatformCRUNCHBASE                AssetDtoLineagePlatform = "CRUNCHBASE"
	AssetDtoLineagePlatformCUSTOMERIO                AssetDtoLineagePlatform = "CUSTOMER_IO"
	AssetDtoLineagePlatformD2LBRIGHTSPACE            AssetDtoLineagePlatform = "D2L_BRIGHTSPACE"
	AssetDtoLineagePlatformDAGSTER                   AssetDtoLineagePlatform = "DAGSTER"
	AssetDtoLineagePlatformDATABAND                  AssetDtoLineagePlatform = "DATABAND"
	AssetDtoLineagePlatformDATABRICKS                AssetDtoLineagePlatform = "DATABRICKS"
	AssetDtoLineagePlatformDATADOG                   AssetDtoLineagePlatform = "DATADOG"
	AssetDtoLineagePlatformDATAEDO                   AssetDtoLineagePlatform = "DATAEDO"
	AssetDtoLineagePlatformDATAFOLD                  AssetDtoLineagePlatform = "DATAFOLD"
	AssetDtoLineagePlatformDATAGALAXY                AssetDtoLineagePlatform = "DATAGALAXY"
	AssetDtoLineagePlatformDATAHUB                   AssetDtoLineagePlatform = "DATAHUB"
	AssetDtoLineagePlatformDATAIKU                   AssetDtoLineagePlatform = "DATAIKU"
	AssetDtoLineagePlatformDATAWORLD                 AssetDtoLineagePlatform = "DATA_WORLD"
	AssetDtoLineagePlatformDB2                       AssetDtoLineagePlatform = "DB2"
	AssetDtoLineagePlatformDBT                       AssetDtoLineagePlatform = "DBT"
	AssetDtoLineagePlatformDBTCLOUD                  AssetDtoLineagePlatform = "DBTCLOUD"
	AssetDtoLineagePlatformDCLLOGISTICS              AssetDtoLineagePlatform = "DCL_LOGISTICS"
	AssetDtoLineagePlatformDEAR                      AssetDtoLineagePlatform = "DEAR"
	AssetDtoLineagePlatformDECUBE                    AssetDtoLineagePlatform = "DECUBE"
	AssetDtoLineagePlatformDELIGHTED                 AssetDtoLineagePlatform = "DELIGHTED"
	AssetDtoLineagePlatformDEPUTY                    AssetDtoLineagePlatform = "DEPUTY"
	AssetDtoLineagePlatformDESTINI                   AssetDtoLineagePlatform = "DESTINI"
	AssetDtoLineagePlatformDIXA                      AssetDtoLineagePlatform = "DIXA"
	AssetDtoLineagePlatformDOCEBO                    AssetDtoLineagePlatform = "DOCEBO"
	AssetDtoLineagePlatformDRATA                     AssetDtoLineagePlatform = "DRATA"
	AssetDtoLineagePlatformDRIFT                     AssetDtoLineagePlatform = "DRIFT"
	AssetDtoLineagePlatformDRIP                      AssetDtoLineagePlatform = "DRIP"
	AssetDtoLineagePlatformDROPBOX                   AssetDtoLineagePlatform = "DROPBOX"
	AssetDtoLineagePlatformDUOPLANE                  AssetDtoLineagePlatform = "DUOPLANE"
	AssetDtoLineagePlatformEASYPOST                  AssetDtoLineagePlatform = "EASY_POST"
	AssetDtoLineagePlatformECONOMIC                  AssetDtoLineagePlatform = "E_CONOMIC"
	AssetDtoLineagePlatformELASTICSEARCH             AssetDtoLineagePlatform = "ELASTICSEARCH"
	AssetDtoLineagePlatformELEMENTARY                AssetDtoLineagePlatform = "ELEMENTARY"
	AssetDtoLineagePlatformELLUCIAN                  AssetDtoLineagePlatform = "ELLUCIAN"
	AssetDtoLineagePlatformELOQUA                    AssetDtoLineagePlatform = "ELOQUA"
	AssetDtoLineagePlatformEMAIL                     AssetDtoLineagePlatform = "EMAIL"
	AssetDtoLineagePlatformEMPLOYMENTHERO            AssetDtoLineagePlatform = "EMPLOYMENT_HERO"
	AssetDtoLineagePlatformEPICORPROPHET21           AssetDtoLineagePlatform = "EPICOR_PROPHET_21"
	AssetDtoLineagePlatformEVENTBRITE                AssetDtoLineagePlatform = "EVENTBRITE"
	AssetDtoLineagePlatformEVERHOUR                  AssetDtoLineagePlatform = "EVERHOUR"
	AssetDtoLineagePlatformEXCEL                     AssetDtoLineagePlatform = "EXCEL"
	AssetDtoLineagePlatformEXPENSIFY                 AssetDtoLineagePlatform = "EXPENSIFY"
	AssetDtoLineagePlatformFACEBOOK                  AssetDtoLineagePlatform = "FACEBOOK"
	AssetDtoLineagePlatformFIFTEENFIVE               AssetDtoLineagePlatform = "FIFTEENFIVE"
	AssetDtoLineagePlatformFIGMA                     AssetDtoLineagePlatform = "FIGMA"
	AssetDtoLineagePlatformFIREBASE                  AssetDtoLineagePlatform = "FIREBASE"
	AssetDtoLineagePlatformFIREBOLT                  AssetDtoLineagePlatform = "FIREBOLT"
	AssetDtoLineagePlatformFIVETRAN                  AssetDtoLineagePlatform = "FIVETRAN"
	AssetDtoLineagePlatformFLEXPORT                  AssetDtoLineagePlatform = "FLEXPORT"
	AssetDtoLineagePlatformFORJ                      AssetDtoLineagePlatform = "FORJ"
	AssetDtoLineagePlatformFOUNTAIN                  AssetDtoLineagePlatform = "FOUNTAIN"
	AssetDtoLineagePlatformFREIGHTVIEW               AssetDtoLineagePlatform = "FREIGHTVIEW"
	AssetDtoLineagePlatformFRESHBOOKS                AssetDtoLineagePlatform = "FRESHBOOKS"
	AssetDtoLineagePlatformFRESHCHAT                 AssetDtoLineagePlatform = "FRESHCHAT"
	AssetDtoLineagePlatformFRESHDESK                 AssetDtoLineagePlatform = "FRESHDESK"
	AssetDtoLineagePlatformFRESHDESKCONTACTCENTER    AssetDtoLineagePlatform = "FRESHDESK_CONTACT_CENTER"
	AssetDtoLineagePlatformFRESHSERVICE              AssetDtoLineagePlatform = "FRESHSERVICE"
	AssetDtoLineagePlatformFRESHSUCCESS              AssetDtoLineagePlatform = "FRESHSUCCESS"
	AssetDtoLineagePlatformFRESHTEAM                 AssetDtoLineagePlatform = "FRESHTEAM"
	AssetDtoLineagePlatformFRIENDBUY                 AssetDtoLineagePlatform = "FRIENDBUY"
	AssetDtoLineagePlatformFRONT                     AssetDtoLineagePlatform = "FRONT"
	AssetDtoLineagePlatformFTP                       AssetDtoLineagePlatform = "FTP"
	AssetDtoLineagePlatformFULLSTORY                 AssetDtoLineagePlatform = "FULLSTORY"
	AssetDtoLineagePlatformG2                        AssetDtoLineagePlatform = "G2"
	AssetDtoLineagePlatformGAINSIGHT                 AssetDtoLineagePlatform = "GAINSIGHT"
	AssetDtoLineagePlatformGEM                       AssetDtoLineagePlatform = "GEM"
	AssetDtoLineagePlatformGIT                       AssetDtoLineagePlatform = "GIT"
	AssetDtoLineagePlatformGITHUB                    AssetDtoLineagePlatform = "GITHUB"
	AssetDtoLineagePlatformGITLAB                    AssetDtoLineagePlatform = "GITLAB"
	AssetDtoLineagePlatformGLADLY                    AssetDtoLineagePlatform = "GLADLY"
	AssetDtoLineagePlatformGOCARDLESS                AssetDtoLineagePlatform = "GOCARDLESS"
	AssetDtoLineagePlatformGONG                      AssetDtoLineagePlatform = "GONG"
	AssetDtoLineagePlatformGOOGLE                    AssetDtoLineagePlatform = "GOOGLE"
	AssetDtoLineagePlatformGOOGLEADMANAGER           AssetDtoLineagePlatform = "GOOGLE_AD_MANAGER"
	AssetDtoLineagePlatformGOOGLEADS                 AssetDtoLineagePlatform = "GOOGLE_ADS"
	AssetDtoLineagePlatformGOOGLEANALYTICS           AssetDtoLineagePlatform = "GOOGLE_ANALYTICS"
	AssetDtoLineagePlatformGOOGLECALENDAR            AssetDtoLineagePlatform = "GOOGLE_CALENDAR"
	AssetDtoLineagePlatformGOOGLECAMPAIGNMANAGER     AssetDtoLineagePlatform = "GOOGLE_CAMPAIGN_MANAGER"
	AssetDtoLineagePlatformGOOGLECHROME              AssetDtoLineagePlatform = "GOOGLE_CHROME"
	AssetDtoLineagePlatformGOOGLECLOUD               AssetDtoLineagePlatform = "GOOGLE_CLOUD"
	AssetDtoLineagePlatformGOOGLECLOUDSTORAGE        AssetDtoLineagePlatform = "GOOGLE_CLOUD_STORAGE"
	AssetDtoLineagePlatformGOOGLEDISPLAY             AssetDtoLineagePlatform = "GOOGLE_DISPLAY"
	AssetDtoLineagePlatformGOOGLEDRIVE               AssetDtoLineagePlatform = "GOOGLE_DRIVE"
	AssetDtoLineagePlatformGOOGLEPLAY                AssetDtoLineagePlatform = "GOOGLE_PLAY"
	AssetDtoLineagePlatformGOOGLESEARCHADS360        AssetDtoLineagePlatform = "GOOGLE_SEARCH_ADS_360"
	AssetDtoLineagePlatformGOOGLESEARCHCONSOLE       AssetDtoLineagePlatform = "GOOGLE_SEARCH_CONSOLE"
	AssetDtoLineagePlatformGOOGLESHEETS              AssetDtoLineagePlatform = "GOOGLE_SHEETS"
	AssetDtoLineagePlatformGOOGLETASKS               AssetDtoLineagePlatform = "GOOGLE_TASKS"
	AssetDtoLineagePlatformGORGIAS                   AssetDtoLineagePlatform = "GORGIAS"
	AssetDtoLineagePlatformGREENHOUSE                AssetDtoLineagePlatform = "GREENHOUSE"
	AssetDtoLineagePlatformGREENPLUM                 AssetDtoLineagePlatform = "GREENPLUM"
	AssetDtoLineagePlatformGREENPOWERMONITOR         AssetDtoLineagePlatform = "GREEN_POWER_MONITOR"
	AssetDtoLineagePlatformGREPSR                    AssetDtoLineagePlatform = "GREPSR"
	AssetDtoLineagePlatformGRIN                      AssetDtoLineagePlatform = "GRIN"
	AssetDtoLineagePlatformGURU                      AssetDtoLineagePlatform = "GURU"
	AssetDtoLineagePlatformH2                        AssetDtoLineagePlatform = "H2"
	AssetDtoLineagePlatformHARVEST                   AssetDtoLineagePlatform = "HARVEST"
	AssetDtoLineagePlatformHDFS                      AssetDtoLineagePlatform = "HDFS"
	AssetDtoLineagePlatformHDFSSTORAGE               AssetDtoLineagePlatform = "HDFS_STORAGE"
	AssetDtoLineagePlatformHEAP                      AssetDtoLineagePlatform = "HEAP"
	AssetDtoLineagePlatformHEIGHT                    AssetDtoLineagePlatform = "HEIGHT"
	AssetDtoLineagePlatformHELPSCOUT                 AssetDtoLineagePlatform = "HELP_SCOUT"
	AssetDtoLineagePlatformHELPSHIFT                 AssetDtoLineagePlatform = "HELPSHIFT"
	AssetDtoLineagePlatformHEROKUKAFKA               AssetDtoLineagePlatform = "HEROKU_KAFKA"
	AssetDtoLineagePlatformHIBOB                     AssetDtoLineagePlatform = "HIBOB"
	AssetDtoLineagePlatformHIGHTOUCH                 AssetDtoLineagePlatform = "HIGH_TOUCH"
	AssetDtoLineagePlatformHIVE                      AssetDtoLineagePlatform = "HIVE"
	AssetDtoLineagePlatformHIVEPROCESS               AssetDtoLineagePlatform = "HIVE_PROCESS"
	AssetDtoLineagePlatformHOPIN                     AssetDtoLineagePlatform = "HOPIN"
	AssetDtoLineagePlatformHUBSPOT                   AssetDtoLineagePlatform = "HUBSPOT"
	AssetDtoLineagePlatformIMPACT                    AssetDtoLineagePlatform = "IMPACT"
	AssetDtoLineagePlatformINCIDENTIO                AssetDtoLineagePlatform = "INCIDENT_IO"
	AssetDtoLineagePlatformINFOBIP                   AssetDtoLineagePlatform = "INFOBIP"
	AssetDtoLineagePlatformINFORMATICA               AssetDtoLineagePlatform = "INFORMATICA"
	AssetDtoLineagePlatformINSIGHTLY                 AssetDtoLineagePlatform = "INSIGHTLY"
	AssetDtoLineagePlatformINSTAGRAM                 AssetDtoLineagePlatform = "INSTAGRAM"
	AssetDtoLineagePlatformINTERCOM                  AssetDtoLineagePlatform = "INTERCOM"
	AssetDtoLineagePlatformINVESTOPEDIA              AssetDtoLineagePlatform = "INVESTOPEDIA"
	AssetDtoLineagePlatformIRONCLAD                  AssetDtoLineagePlatform = "IRONCLAD"
	AssetDtoLineagePlatformIRONSOURCE                AssetDtoLineagePlatform = "IRONSOURCE"
	AssetDtoLineagePlatformITERABLE                  AssetDtoLineagePlatform = "ITERABLE"
	AssetDtoLineagePlatformJAVA                      AssetDtoLineagePlatform = "JAVA"
	AssetDtoLineagePlatformJENKINS                   AssetDtoLineagePlatform = "JENKINS"
	AssetDtoLineagePlatformJUSTCALL                  AssetDtoLineagePlatform = "JUSTCALL"
	AssetDtoLineagePlatformKANDJI                    AssetDtoLineagePlatform = "KANDJI"
	AssetDtoLineagePlatformKENSU                     AssetDtoLineagePlatform = "KENSU"
	AssetDtoLineagePlatformKHOROSCARE                AssetDtoLineagePlatform = "KHOROS_CARE"
	AssetDtoLineagePlatformKISSMETRICS               AssetDtoLineagePlatform = "KISSMETRICS"
	AssetDtoLineagePlatformKLAVIYO                   AssetDtoLineagePlatform = "KLAVIYO"
	AssetDtoLineagePlatformKNOWBE4                   AssetDtoLineagePlatform = "KNOWBE4"
	AssetDtoLineagePlatformKONNECTINSIGHTS           AssetDtoLineagePlatform = "KONNECT_INSIGHTS"
	AssetDtoLineagePlatformKUSTOMER                  AssetDtoLineagePlatform = "KUSTOMER"
	AssetDtoLineagePlatformLARIATDATA                AssetDtoLineagePlatform = "LARIAT_DATA"
	AssetDtoLineagePlatformLATTICE                   AssetDtoLineagePlatform = "LATTICE"
	AssetDtoLineagePlatformLAUNCHDARKLY              AssetDtoLineagePlatform = "LAUNCH_DARKLY"
	AssetDtoLineagePlatformLEARNUPON                 AssetDtoLineagePlatform = "LEARN_UPON"
	AssetDtoLineagePlatformLESSONLY                  AssetDtoLineagePlatform = "LESSONLY"
	AssetDtoLineagePlatformLEVER                     AssetDtoLineagePlatform = "LEVER"
	AssetDtoLineagePlatformLIFTOFF                   AssetDtoLineagePlatform = "LIFTOFF"
	AssetDtoLineagePlatformLIGHTDASH                 AssetDtoLineagePlatform = "LIGHTDASH"
	AssetDtoLineagePlatformLIGHTSPEED                AssetDtoLineagePlatform = "LIGHTSPEED"
	AssetDtoLineagePlatformLIGHTSUP                  AssetDtoLineagePlatform = "LIGHTSUP"
	AssetDtoLineagePlatformLINEAR                    AssetDtoLineagePlatform = "LINEAR"
	AssetDtoLineagePlatformLINKEDIN                  AssetDtoLineagePlatform = "LINKEDIN"
	AssetDtoLineagePlatformLIVECHAT                  AssetDtoLineagePlatform = "LIVECHAT"
	AssetDtoLineagePlatformLOADEDCOMMERCE            AssetDtoLineagePlatform = "LOADED_COMMERCE"
	AssetDtoLineagePlatformLOB                       AssetDtoLineagePlatform = "LOB"
	AssetDtoLineagePlatformLOOKER                    AssetDtoLineagePlatform = "LOOKER"
	AssetDtoLineagePlatformLOOP                      AssetDtoLineagePlatform = "LOOP"
	AssetDtoLineagePlatformLOOPIO                    AssetDtoLineagePlatform = "LOOPIO"
	AssetDtoLineagePlatformLUMA                      AssetDtoLineagePlatform = "LUMA"
	AssetDtoLineagePlatformMAGENTO                   AssetDtoLineagePlatform = "MAGENTO"
	AssetDtoLineagePlatformMAILCHIMP                 AssetDtoLineagePlatform = "MAILCHIMP"
	AssetDtoLineagePlatformMAILGUN                   AssetDtoLineagePlatform = "MAILGUN"
	AssetDtoLineagePlatformMANDRILL                  AssetDtoLineagePlatform = "MANDRILL"
	AssetDtoLineagePlatformMANTA                     AssetDtoLineagePlatform = "MANTA"
	AssetDtoLineagePlatformMARIADB                   AssetDtoLineagePlatform = "MARIADB"
	AssetDtoLineagePlatformMARINSOFTWARE             AssetDtoLineagePlatform = "MARIN_SOFTWARE"
	AssetDtoLineagePlatformMARKETO                   AssetDtoLineagePlatform = "MARKETO"
	AssetDtoLineagePlatformMATTERMOST                AssetDtoLineagePlatform = "MATTERMOST"
	AssetDtoLineagePlatformMAVENLINK                 AssetDtoLineagePlatform = "MAVENLINK"
	AssetDtoLineagePlatformMAXIO                     AssetDtoLineagePlatform = "MAXIO"
	AssetDtoLineagePlatformMEDALLIA                  AssetDtoLineagePlatform = "MEDALLIA"
	AssetDtoLineagePlatformMETA                      AssetDtoLineagePlatform = "META"
	AssetDtoLineagePlatformMETABASE                  AssetDtoLineagePlatform = "METABASE"
	AssetDtoLineagePlatformMETAPHOR                  AssetDtoLineagePlatform = "METAPHOR"
	AssetDtoLineagePlatformMETAPLANE                 AssetDtoLineagePlatform = "METAPLANE"
	AssetDtoLineagePlatformMICROSOFT                 AssetDtoLineagePlatform = "MICROSOFT"
	AssetDtoLineagePlatformMICROSOFTAZUREBLOBSTORAGE AssetDtoLineagePlatform = "MICROSOFT_AZURE_BLOB_STORAGE"
	AssetDtoLineagePlatformMICROSOFTAZUREML          AssetDtoLineagePlatform = "MICROSOFT_AZURE_ML"
	AssetDtoLineagePlatformMICROSOFTDYNAMICS         AssetDtoLineagePlatform = "MICROSOFT_DYNAMICS"
	AssetDtoLineagePlatformMICROSOFTONEDRIVE         AssetDtoLineagePlatform = "MICROSOFT_ONEDRIVE"
	AssetDtoLineagePlatformMICROSOFTPURVIEW          AssetDtoLineagePlatform = "MICROSOFT_PURVIEW"
	AssetDtoLineagePlatformMICROSOFTTEAMS            AssetDtoLineagePlatform = "MICROSOFT_TEAMS"
	AssetDtoLineagePlatformMICROSTRATEGY             AssetDtoLineagePlatform = "MICROSTRATEGY"
	AssetDtoLineagePlatformMIXMAX                    AssetDtoLineagePlatform = "MIXMAX"
	AssetDtoLineagePlatformMIXPANEL                  AssetDtoLineagePlatform = "MIXPANEL"
	AssetDtoLineagePlatformMONDAYCOM                 AssetDtoLineagePlatform = "MONDAY_COM"
	AssetDtoLineagePlatformMONGODB                   AssetDtoLineagePlatform = "MONGODB"
	AssetDtoLineagePlatformMONTECARLO                AssetDtoLineagePlatform = "MONTE_CARLO"
	AssetDtoLineagePlatformMOUNTAIN                  AssetDtoLineagePlatform = "MOUNTAIN"
	AssetDtoLineagePlatformMSSQL                     AssetDtoLineagePlatform = "MSSQL"
	AssetDtoLineagePlatformMULESOFT                  AssetDtoLineagePlatform = "MULESOFT"
	AssetDtoLineagePlatformMUX                       AssetDtoLineagePlatform = "MUX"
	AssetDtoLineagePlatformMWAA                      AssetDtoLineagePlatform = "MWAA"
	AssetDtoLineagePlatformMYSQL                     AssetDtoLineagePlatform = "MYSQL"
	AssetDtoLineagePlatformNAMELY                    AssetDtoLineagePlatform = "NAMELY"
	AssetDtoLineagePlatformNCINO                     AssetDtoLineagePlatform = "NCINO"
	AssetDtoLineagePlatformNETSUITEANALYTICS         AssetDtoLineagePlatform = "NETSUITE_ANALYTICS"
	AssetDtoLineagePlatformNEWRELIC                  AssetDtoLineagePlatform = "NEW_RELIC"
	AssetDtoLineagePlatformNOTION                    AssetDtoLineagePlatform = "NOTION"
	AssetDtoLineagePlatformNYLAS                     AssetDtoLineagePlatform = "NYLAS"
	AssetDtoLineagePlatformOBSERVE                   AssetDtoLineagePlatform = "OBSERVE"
	AssetDtoLineagePlatformOCTOPAI                   AssetDtoLineagePlatform = "OCTOPAI"
	AssetDtoLineagePlatformOKTA                      AssetDtoLineagePlatform = "OKTA"
	AssetDtoLineagePlatformOPENAI                    AssetDtoLineagePlatform = "OPEN_AI"
	AssetDtoLineagePlatformOPENDATADC                AssetDtoLineagePlatform = "OPEN_DATA_DC"
	AssetDtoLineagePlatformOPENEXCHANGESRATES        AssetDtoLineagePlatform = "OPEN_EXCHANGES_RATES"
	AssetDtoLineagePlatformOPENSEARCH                AssetDtoLineagePlatform = "OPEN_SEARCH"
	AssetDtoLineagePlatformOPTIMIZELY                AssetDtoLineagePlatform = "OPTIMIZELY"
	AssetDtoLineagePlatformORACLE                    AssetDtoLineagePlatform = "ORACLE"
	AssetDtoLineagePlatformORBITCOMMUNITYPLATFORM    AssetDtoLineagePlatform = "ORBIT_COMMUNITY_PLATFORM"
	AssetDtoLineagePlatformORDWAY                    AssetDtoLineagePlatform = "ORDWAY"
	AssetDtoLineagePlatformORTTO                     AssetDtoLineagePlatform = "ORTTO"
	AssetDtoLineagePlatformOSCOMMERCE                AssetDtoLineagePlatform = "OS_COMMERCE"
	AssetDtoLineagePlatformOUTBRAIN                  AssetDtoLineagePlatform = "OUTBRAIN"
	AssetDtoLineagePlatformOUTREACH                  AssetDtoLineagePlatform = "OUTREACH"
	AssetDtoLineagePlatformOVALEDGE                  AssetDtoLineagePlatform = "OVALEDGE"
	AssetDtoLineagePlatformPAGERDUTY                 AssetDtoLineagePlatform = "PAGERDUTY"
	AssetDtoLineagePlatformPAGERSHIFT                AssetDtoLineagePlatform = "PAGERSHIFT"
	AssetDtoLineagePlatformPAYPAL                    AssetDtoLineagePlatform = "PAYPAL"
	AssetDtoLineagePlatformPENDO                     AssetDtoLineagePlatform = "PENDO"
	AssetDtoLineagePlatformPINGDOM                   AssetDtoLineagePlatform = "PINGDOM"
	AssetDtoLineagePlatformPINTEREST                 AssetDtoLineagePlatform = "PINTEREST"
	AssetDtoLineagePlatformPIPE17                    AssetDtoLineagePlatform = "PIPE17"
	AssetDtoLineagePlatformPIPEDRIVE                 AssetDtoLineagePlatform = "PIPEDRIVE"
	AssetDtoLineagePlatformPIVOTALTRACKER            AssetDtoLineagePlatform = "PIVOTAL_TRACKER"
	AssetDtoLineagePlatformPLAYVOX                   AssetDtoLineagePlatform = "PLAYVOX"
	AssetDtoLineagePlatformPOSTGRES                  AssetDtoLineagePlatform = "POSTGRES"
	AssetDtoLineagePlatformPOSTHOG                   AssetDtoLineagePlatform = "POSTHOG"
	AssetDtoLineagePlatformPOWERBI                   AssetDtoLineagePlatform = "POWER_BI"
	AssetDtoLineagePlatformPOWERSCHOOL               AssetDtoLineagePlatform = "POWERSCHOOL"
	AssetDtoLineagePlatformPREFECT                   AssetDtoLineagePlatform = "PREFECT"
	AssetDtoLineagePlatformPRESTASHOP                AssetDtoLineagePlatform = "PRESTASHOP"
	AssetDtoLineagePlatformPRESTO                    AssetDtoLineagePlatform = "PRESTO"
	AssetDtoLineagePlatformPRODUCTBOARD              AssetDtoLineagePlatform = "PRODUCTBOARD"
	AssetDtoLineagePlatformPYTHON                    AssetDtoLineagePlatform = "PYTHON"
	AssetDtoLineagePlatformQLIK                      AssetDtoLineagePlatform = "QLIK"
	AssetDtoLineagePlatformQUALAROO                  AssetDtoLineagePlatform = "QUALAROO"
	AssetDtoLineagePlatformQUALTRICS                 AssetDtoLineagePlatform = "QUALTRICS"
	AssetDtoLineagePlatformQUICKBOOKS                AssetDtoLineagePlatform = "QUICKBOOKS"
	AssetDtoLineagePlatformQUICKSIGHT                AssetDtoLineagePlatform = "QUICKSIGHT"
	AssetDtoLineagePlatformRAMP                      AssetDtoLineagePlatform = "RAMP"
	AssetDtoLineagePlatformRARIBLE                   AssetDtoLineagePlatform = "RARIBLE"
	AssetDtoLineagePlatformRECHARGE                  AssetDtoLineagePlatform = "RECHARGE"
	AssetDtoLineagePlatformRECURLY                   AssetDtoLineagePlatform = "RECURLY"
	AssetDtoLineagePlatformREDDIT                    AssetDtoLineagePlatform = "REDDIT"
	AssetDtoLineagePlatformREDSHIFT                  AssetDtoLineagePlatform = "REDSHIFT"
	AssetDtoLineagePlatformRELTIO                    AssetDtoLineagePlatform = "RELTIO"
	AssetDtoLineagePlatformREPLYIO                   AssetDtoLineagePlatform = "REPLY_IO"
	AssetDtoLineagePlatformRETAILNEXT                AssetDtoLineagePlatform = "RETAILNEXT"
	AssetDtoLineagePlatformRETENTLY                  AssetDtoLineagePlatform = "RETENTLY"
	AssetDtoLineagePlatformREVELSYSTEMS              AssetDtoLineagePlatform = "REVEL_SYSTEMS"
	AssetDtoLineagePlatformRINGCENTRAL               AssetDtoLineagePlatform = "RINGCENTRAL"
	AssetDtoLineagePlatformRIPPLING                  AssetDtoLineagePlatform = "RIPPLING"
	AssetDtoLineagePlatformROLLBAR                   AssetDtoLineagePlatform = "ROLLBAR"
	AssetDtoLineagePlatformROOTLY                    AssetDtoLineagePlatform = "ROOTLY"
	AssetDtoLineagePlatformS3                        AssetDtoLineagePlatform = "S3"
	AssetDtoLineagePlatformSAGEHR                    AssetDtoLineagePlatform = "SAGE_HR"
	AssetDtoLineagePlatformSAGEINTACCT               AssetDtoLineagePlatform = "SAGE_INTACCT"
	AssetDtoLineagePlatformSAILTHRU                  AssetDtoLineagePlatform = "SAILTHRU"
	AssetDtoLineagePlatformSALESFORCE                AssetDtoLineagePlatform = "SALESFORCE"
	AssetDtoLineagePlatformSALESLOFT                 AssetDtoLineagePlatform = "SALESLOFT"
	AssetDtoLineagePlatformSALSIFY                   AssetDtoLineagePlatform = "SALSIFY"
	AssetDtoLineagePlatformSAMSARA                   AssetDtoLineagePlatform = "SAMSARA"
	AssetDtoLineagePlatformSAP                       AssetDtoLineagePlatform = "SAP"
	AssetDtoLineagePlatformSAPCONCUR                 AssetDtoLineagePlatform = "SAP_CONCUR"
	AssetDtoLineagePlatformSCORM                     AssetDtoLineagePlatform = "SCORM"
	AssetDtoLineagePlatformSECODA                    AssetDtoLineagePlatform = "SECODA"
	AssetDtoLineagePlatformSECURITYJOURNEY           AssetDtoLineagePlatform = "SECURITY_JOURNEY"
	AssetDtoLineagePlatformSEGMENT                   AssetDtoLineagePlatform = "SEGMENT"
	AssetDtoLineagePlatformSELECTSTAR                AssetDtoLineagePlatform = "SELECT_STAR"
	AssetDtoLineagePlatformSENDGRID                  AssetDtoLineagePlatform = "SENDGRID"
	AssetDtoLineagePlatformSERVICENOW                AssetDtoLineagePlatform = "SERVICE_NOW"
	AssetDtoLineagePlatformSFTP                      AssetDtoLineagePlatform = "SFTP"
	AssetDtoLineagePlatformSHAREPOINT                AssetDtoLineagePlatform = "SHAREPOINT"
	AssetDtoLineagePlatformSHARETRIBE                AssetDtoLineagePlatform = "SHARETRIBE"
	AssetDtoLineagePlatformSHIPHERO                  AssetDtoLineagePlatform = "SHIPHERO"
	AssetDtoLineagePlatformSHIPSTATION               AssetDtoLineagePlatform = "SHIPSTATION"
	AssetDtoLineagePlatformSHOPIFY                   AssetDtoLineagePlatform = "SHOPIFY"
	AssetDtoLineagePlatformSHOPWARE                  AssetDtoLineagePlatform = "SHOPWARE"
	AssetDtoLineagePlatformSHORTIO                   AssetDtoLineagePlatform = "SHORT_IO"
	AssetDtoLineagePlatformSIFFLET                   AssetDtoLineagePlatform = "SIFFLET"
	AssetDtoLineagePlatformSIGMA                     AssetDtoLineagePlatform = "SIGMA"
	AssetDtoLineagePlatformSIMPLECAST                AssetDtoLineagePlatform = "SIMPLECAST"
	AssetDtoLineagePlatformSIMPLESAT                 AssetDtoLineagePlatform = "SIMPLESAT"
	AssetDtoLineagePlatformSINGLESTORE               AssetDtoLineagePlatform = "SINGLESTORE"
	AssetDtoLineagePlatformSISENSE                   AssetDtoLineagePlatform = "SISENSE"
	AssetDtoLineagePlatformSIXSENSE                  AssetDtoLineagePlatform = "SIXSENSE"
	AssetDtoLineagePlatformSKILLJAR                  AssetDtoLineagePlatform = "SKILLJAR"
	AssetDtoLineagePlatformSKUVAULT                  AssetDtoLineagePlatform = "SKUVAULT"
	AssetDtoLineagePlatformSLAB                      AssetDtoLineagePlatform = "SLAB"
	AssetDtoLineagePlatformSLACK                     AssetDtoLineagePlatform = "SLACK"
	AssetDtoLineagePlatformSMADEX                    AssetDtoLineagePlatform = "SMADEX"
	AssetDtoLineagePlatformSNAPCHAT                  AssetDtoLineagePlatform = "SNAPCHAT"
	AssetDtoLineagePlatformSNOWFLAKE                 AssetDtoLineagePlatform = "SNOWFLAKE"
	AssetDtoLineagePlatformSNOWPLOW                  AssetDtoLineagePlatform = "SNOWPLOW"
	AssetDtoLineagePlatformSODA                      AssetDtoLineagePlatform = "SODA"
	AssetDtoLineagePlatformSONARQUBE                 AssetDtoLineagePlatform = "SONARQUBE"
	AssetDtoLineagePlatformSPARKPROCESS              AssetDtoLineagePlatform = "SPARK_PROCESS"
	AssetDtoLineagePlatformSPLITIO                   AssetDtoLineagePlatform = "SPLIT_IO"
	AssetDtoLineagePlatformSPLUNK                    AssetDtoLineagePlatform = "SPLUNK"
	AssetDtoLineagePlatformSPOTIFY                   AssetDtoLineagePlatform = "SPOTIFY"
	AssetDtoLineagePlatformSPREECOMMERCE             AssetDtoLineagePlatform = "SPREE_COMMERCE"
	AssetDtoLineagePlatformSPROUTSOCIAL              AssetDtoLineagePlatform = "SPROUT_SOCIAL"
	AssetDtoLineagePlatformSQUARE                    AssetDtoLineagePlatform = "SQUARE"
	AssetDtoLineagePlatformSQUARESPACE               AssetDtoLineagePlatform = "SQUARESPACE"
	AssetDtoLineagePlatformSTACKADAPT                AssetDtoLineagePlatform = "STACK_ADAPT"
	AssetDtoLineagePlatformSTATSIG                   AssetDtoLineagePlatform = "STATSIG"
	AssetDtoLineagePlatformSTITCH                    AssetDtoLineagePlatform = "STITCH"
	AssetDtoLineagePlatformSTRIPE                    AssetDtoLineagePlatform = "STRIPE"
	AssetDtoLineagePlatformSTYLIGHT                  AssetDtoLineagePlatform = "STYLIGHT"
	AssetDtoLineagePlatformSUBSCRIPT                 AssetDtoLineagePlatform = "SUBSCRIPT"
	AssetDtoLineagePlatformSYNAPSE                   AssetDtoLineagePlatform = "SYNAPSE"
	AssetDtoLineagePlatformTABLEAU                   AssetDtoLineagePlatform = "TABLEAU"
	AssetDtoLineagePlatformTABOOLA                   AssetDtoLineagePlatform = "TABOOLA"
	AssetDtoLineagePlatformTALEND                    AssetDtoLineagePlatform = "TALEND"
	AssetDtoLineagePlatformTALKDESK                  AssetDtoLineagePlatform = "TALKDESK"
	AssetDtoLineagePlatformTALKWALKER                AssetDtoLineagePlatform = "TALKWALKER"
	AssetDtoLineagePlatformTEAMWORKCOM               AssetDtoLineagePlatform = "TEAMWORK_COM"
	AssetDtoLineagePlatformTEMPOIO                   AssetDtoLineagePlatform = "TEMPO_IO"
	AssetDtoLineagePlatformTERADATA                  AssetDtoLineagePlatform = "TERADATA"
	AssetDtoLineagePlatformTERRAFORM                 AssetDtoLineagePlatform = "TERRAFORM"
	AssetDtoLineagePlatformTHETRADEDESK              AssetDtoLineagePlatform = "THE_TRADE_DESK"
	AssetDtoLineagePlatformTHOUGHTSPOT               AssetDtoLineagePlatform = "THOUGHT_SPOT"
	AssetDtoLineagePlatformTHREESIXTYLEARNING        AssetDtoLineagePlatform = "THREESIXTYLEARNING"
	AssetDtoLineagePlatformTIKTOK                    AssetDtoLineagePlatform = "TIKTOK"
	AssetDtoLineagePlatformTOGGL                     AssetDtoLineagePlatform = "TOGGL"
	AssetDtoLineagePlatformTRANSCEND                 AssetDtoLineagePlatform = "TRANSCEND"
	AssetDtoLineagePlatformTRELLO                    AssetDtoLineagePlatform = "TRELLO"
	AssetDtoLineagePlatformTRINET                    AssetDtoLineagePlatform = "TRINET"
	AssetDtoLineagePlatformTRISOLUTE                 AssetDtoLineagePlatform = "TRISOLUTE"
	AssetDtoLineagePlatformTWILIO                    AssetDtoLineagePlatform = "TWILIO"
	AssetDtoLineagePlatformTYPEFORM                  AssetDtoLineagePlatform = "TYPEFORM"
	AssetDtoLineagePlatformUNKNOWN                   AssetDtoLineagePlatform = "UNKNOWN"
	AssetDtoLineagePlatformUPLAND                    AssetDtoLineagePlatform = "UPLAND"
	AssetDtoLineagePlatformUSERVOICE                 AssetDtoLineagePlatform = "USERVOICE"
	AssetDtoLineagePlatformVALIDIO                   AssetDtoLineagePlatform = "VALIDIO"
	AssetDtoLineagePlatformVEEVA                     AssetDtoLineagePlatform = "VEEVA"
	AssetDtoLineagePlatformVERIZONMEDIA              AssetDtoLineagePlatform = "VERIZON_MEDIA"
	AssetDtoLineagePlatformVITALLY                   AssetDtoLineagePlatform = "VITALLY"
	AssetDtoLineagePlatformVONAGE                    AssetDtoLineagePlatform = "VONAGE"
	AssetDtoLineagePlatformVUETIFY                   AssetDtoLineagePlatform = "VUETIFY"
	AssetDtoLineagePlatformWEBHOOKS                  AssetDtoLineagePlatform = "WEBHOOKS"
	AssetDtoLineagePlatformWEBSCRAPER                AssetDtoLineagePlatform = "WEB_SCRAPER"
	AssetDtoLineagePlatformWHENIWORK                 AssetDtoLineagePlatform = "WHEN_I_WORK"
	AssetDtoLineagePlatformWHEREFOUR                 AssetDtoLineagePlatform = "WHEREFOUR"
	AssetDtoLineagePlatformWIKIPEDIA                 AssetDtoLineagePlatform = "WIKIPEDIA"
	AssetDtoLineagePlatformWOOCOMMERCE               AssetDtoLineagePlatform = "WOOCOMMERCE"
	AssetDtoLineagePlatformWORDPRESS                 AssetDtoLineagePlatform = "WORDPRESS"
	AssetDtoLineagePlatformWORKABLE                  AssetDtoLineagePlatform = "WORKABLE"
	AssetDtoLineagePlatformWORKDAY                   AssetDtoLineagePlatform = "WORKDAY"
	AssetDtoLineagePlatformWORKFLOWMAX               AssetDtoLineagePlatform = "WORKFLOW_MAX"
	AssetDtoLineagePlatformWRIKE                     AssetDtoLineagePlatform = "WRIKE"
	AssetDtoLineagePlatformX                         AssetDtoLineagePlatform = "X"
	AssetDtoLineagePlatformXERO                      AssetDtoLineagePlatform = "XERO"
	AssetDtoLineagePlatformXRAY                      AssetDtoLineagePlatform = "XRAY"
	AssetDtoLineagePlatformYAHOO                     AssetDtoLineagePlatform = "YAHOO"
	AssetDtoLineagePlatformYOTPO                     AssetDtoLineagePlatform = "YOTPO"
	AssetDtoLineagePlatformYOUTUBE                   AssetDtoLineagePlatform = "YOUTUBE"
	AssetDtoLineagePlatformZEENEA                    AssetDtoLineagePlatform = "ZEENEA"
	AssetDtoLineagePlatformZENCART                   AssetDtoLineagePlatform = "ZEN_CART"
	AssetDtoLineagePlatformZENDESKCHAT               AssetDtoLineagePlatform = "ZENDESK_CHAT"
	AssetDtoLineagePlatformZENDESKSELL               AssetDtoLineagePlatform = "ZENDESK_SELL"
	AssetDtoLineagePlatformZENDESKSUNSHINE           AssetDtoLineagePlatform = "ZENDESK_SUNSHINE"
	AssetDtoLineagePlatformZENDESKSUPPORT            AssetDtoLineagePlatform = "ZENDESK_SUPPORT"
	AssetDtoLineagePlatformZINGTREE                  AssetDtoLineagePlatform = "ZINGTREE"
	AssetDtoLineagePlatformZOHOBOOKS                 AssetDtoLineagePlatform = "ZOHO_BOOKS"
	AssetDtoLineagePlatformZOHOCAMPAIGNS             AssetDtoLineagePlatform = "ZOHO_CAMPAIGNS"
	AssetDtoLineagePlatformZOHOCRM                   AssetDtoLineagePlatform = "ZOHO_CRM"
	AssetDtoLineagePlatformZOOM                      AssetDtoLineagePlatform = "ZOOM"
	AssetDtoLineagePlatformZUORA                     AssetDtoLineagePlatform = "ZUORA"
)

// Defines values for AssetIngestionSearchFilterElementDtoId.
const (
	AssetIngestionSearchFilterElementDtoIdDECLARATIVE    AssetIngestionSearchFilterElementDtoId = "DECLARATIVE"
	AssetIngestionSearchFilterElementDtoIdSIFFLETSOURCED AssetIngestionSearchFilterElementDtoId = "SIFFLET_SOURCED"
)

// Defines values for AssetOrchestratorDtoDatasourceType.
const (
	AssetOrchestratorDtoDatasourceTypeAIRFLOW           AssetOrchestratorDtoDatasourceType = "AIRFLOW"
	AssetOrchestratorDtoDatasourceTypeATHENA            AssetOrchestratorDtoDatasourceType = "ATHENA"
	AssetOrchestratorDtoDatasourceTypeBIGQUERY          AssetOrchestratorDtoDatasourceType = "BIGQUERY"
	AssetOrchestratorDtoDatasourceTypeCOMPOSER          AssetOrchestratorDtoDatasourceType = "COMPOSER"
	AssetOrchestratorDtoDatasourceTypeDATABRICKS        AssetOrchestratorDtoDatasourceType = "DATABRICKS"
	AssetOrchestratorDtoDatasourceTypeDBT               AssetOrchestratorDtoDatasourceType = "DBT"
	AssetOrchestratorDtoDatasourceTypeDBTCLOUD          AssetOrchestratorDtoDatasourceType = "DBTCLOUD"
	AssetOrchestratorDtoDatasourceTypeDECLARATIVE       AssetOrchestratorDtoDatasourceType = "DECLARATIVE"
	AssetOrchestratorDtoDatasourceTypeFIVETRAN          AssetOrchestratorDtoDatasourceType = "FIVETRAN"
	AssetOrchestratorDtoDatasourceTypeHIVE              AssetOrchestratorDtoDatasourceType = "HIVE"
	AssetOrchestratorDtoDatasourceTypeLOOKER            AssetOrchestratorDtoDatasourceType = "LOOKER"
	AssetOrchestratorDtoDatasourceTypeMICROSTRATEGY     AssetOrchestratorDtoDatasourceType = "MICROSTRATEGY"
	AssetOrchestratorDtoDatasourceTypeMSSQL             AssetOrchestratorDtoDatasourceType = "MSSQL"
	AssetOrchestratorDtoDatasourceTypeMWAA              AssetOrchestratorDtoDatasourceType = "MWAA"
	AssetOrchestratorDtoDatasourceTypeMYSQL             AssetOrchestratorDtoDatasourceType = "MYSQL"
	AssetOrchestratorDtoDatasourceTypeORACLE            AssetOrchestratorDtoDatasourceType = "ORACLE"
	AssetOrchestratorDtoDatasourceTypePOSTGRES          AssetOrchestratorDtoDatasourceType = "POSTGRES"
	AssetOrchestratorDtoDatasourceTypePOWERBI           AssetOrchestratorDtoDatasourceType = "POWER_BI"
	AssetOrchestratorDtoDatasourceTypeQUICKSIGHT        AssetOrchestratorDtoDatasourceType = "QUICKSIGHT"
	AssetOrchestratorDtoDatasourceTypeREDSHIFT          AssetOrchestratorDtoDatasourceType = "REDSHIFT"
	AssetOrchestratorDtoDatasourceTypeSNOWFLAKE         AssetOrchestratorDtoDatasourceType = "SNOWFLAKE"
	AssetOrchestratorDtoDatasourceTypeSYNAPSE           AssetOrchestratorDtoDatasourceType = "SYNAPSE"
	AssetOrchestratorDtoDatasourceTypeTABLEAU           AssetOrchestratorDtoDatasourceType = "TABLEAU"
	AssetOrchestratorDtoDatasourceTypeUnderscoreUNKNOWN AssetOrchestratorDtoDatasourceType = "_UNKNOWN_"
)

// Defines values for AssetSearchCriteriaHealthStatus.
const (
	AssetSearchCriteriaHealthStatusATRISK       AssetSearchCriteriaHealthStatus = "AT_RISK"
	AssetSearchCriteriaHealthStatusCRITICAL     AssetSearchCriteriaHealthStatus = "CRITICAL"
	AssetSearchCriteriaHealthStatusHEALTHY      AssetSearchCriteriaHealthStatus = "HEALTHY"
	AssetSearchCriteriaHealthStatusNOTSUPPORTED AssetSearchCriteriaHealthStatus = "NOT_SUPPORTED"
	AssetSearchCriteriaHealthStatusUNMONITORED  AssetSearchCriteriaHealthStatus = "UNMONITORED"
)

// Defines values for AssetSearchCriteriaIngestion.
const (
	AssetSearchCriteriaIngestionDECLARATIVE    AssetSearchCriteriaIngestion = "DECLARATIVE"
	AssetSearchCriteriaIngestionSIFFLETSOURCED AssetSearchCriteriaIngestion = "SIFFLET_SOURCED"
)

// Defines values for AssetSearchCriteriaUsage.
const (
	AssetSearchCriteriaUsageHIGH        AssetSearchCriteriaUsage = "HIGH"
	AssetSearchCriteriaUsageLOW         AssetSearchCriteriaUsage = "LOW"
	AssetSearchCriteriaUsageMEDIUM      AssetSearchCriteriaUsage = "MEDIUM"
	AssetSearchCriteriaUsageUNSUPPORTED AssetSearchCriteriaUsage = "UNSUPPORTED"
)

// Defines values for AssetSearchCriteriaUsageQualification.
const (
	AssetSearchCriteriaUsageQualificationHIGH        AssetSearchCriteriaUsageQualification = "HIGH"
	AssetSearchCriteriaUsageQualificationLOW         AssetSearchCriteriaUsageQualification = "LOW"
	AssetSearchCriteriaUsageQualificationMEDIUM      AssetSearchCriteriaUsageQualification = "MEDIUM"
	AssetSearchCriteriaUsageQualificationUNSUPPORTED AssetSearchCriteriaUsageQualification = "UNSUPPORTED"
)

// Defines values for AssetSearchFilterElementDtoIcon.
const (
	AssetSearchFilterElementDtoIconDASHBOARD    AssetSearchFilterElementDtoIcon = "DASHBOARD"
	AssetSearchFilterElementDtoIconGENERIC      AssetSearchFilterElementDtoIcon = "GENERIC"
	AssetSearchFilterElementDtoIconMLMODEL      AssetSearchFilterElementDtoIcon = "ML_MODEL"
	AssetSearchFilterElementDtoIconMONITOR      AssetSearchFilterElementDtoIcon = "MONITOR"
	AssetSearchFilterElementDtoIconPIPELINE     AssetSearchFilterElementDtoIcon = "PIPELINE"
	AssetSearchFilterElementDtoIconTABLEANDVIEW AssetSearchFilterElementDtoIcon = "TABLE_AND_VIEW"
)

// Defines values for AssetUsageDtoQualification.
const (
	AssetUsageDtoQualificationHIGH        AssetUsageDtoQualification = "HIGH"
	AssetUsageDtoQualificationLOW         AssetUsageDtoQualification = "LOW"
	AssetUsageDtoQualificationMEDIUM      AssetUsageDtoQualification = "MEDIUM"
	AssetUsageDtoQualificationUNSUPPORTED AssetUsageDtoQualification = "UNSUPPORTED"
)

// Defines values for AssetUsageDtoReadType.
const (
	QUERIES AssetUsageDtoReadType = "QUERIES"
	VIEWS   AssetUsageDtoReadType = "VIEWS"
)

// Defines values for AssigneesChangeIncidentEventDtoType.
const (
	AssigneesChangeIncidentEventDtoTypeASSIGNEESCHANGE               AssigneesChangeIncidentEventDtoType = "ASSIGNEES_CHANGE"
	AssigneesChangeIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED AssigneesChangeIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	AssigneesChangeIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   AssigneesChangeIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	AssigneesChangeIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED AssigneesChangeIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	AssigneesChangeIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE AssigneesChangeIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	AssigneesChangeIncidentEventDtoTypeCOMMENT                       AssigneesChangeIncidentEventDtoType = "COMMENT"
	AssigneesChangeIncidentEventDtoTypeCREATIONBYRULERUN             AssigneesChangeIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	AssigneesChangeIncidentEventDtoTypeCREATIONBYUSER                AssigneesChangeIncidentEventDtoType = "CREATION_BY_USER"
	AssigneesChangeIncidentEventDtoTypeNAMECHANGE                    AssigneesChangeIncidentEventDtoType = "NAME_CHANGE"
	AssigneesChangeIncidentEventDtoTypeNEWFAILURES                   AssigneesChangeIncidentEventDtoType = "NEW_FAILURES"
	AssigneesChangeIncidentEventDtoTypeRULESADDED                    AssigneesChangeIncidentEventDtoType = "RULES_ADDED"
	AssigneesChangeIncidentEventDtoTypeRULESMOVEDFROM                AssigneesChangeIncidentEventDtoType = "RULES_MOVED_FROM"
	AssigneesChangeIncidentEventDtoTypeRULESMOVEDTO                  AssigneesChangeIncidentEventDtoType = "RULES_MOVED_TO"
	AssigneesChangeIncidentEventDtoTypeSEVERITYCHANGE                AssigneesChangeIncidentEventDtoType = "SEVERITY_CHANGE"
	AssigneesChangeIncidentEventDtoTypeSTATUSCHANGE                  AssigneesChangeIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for BaseSearchFilterDtoType.
const (
	BaseSearchFilterDtoTypeASSETINGESTION   BaseSearchFilterDtoType = "ASSET_INGESTION"
	BaseSearchFilterDtoTypeASSETTYPE        BaseSearchFilterDtoType = "ASSET_TYPE"
	BaseSearchFilterDtoTypeCREATEDBY        BaseSearchFilterDtoType = "CREATED_BY"
	BaseSearchFilterDtoTypeCRITICALITY      BaseSearchFilterDtoType = "CRITICALITY"
	BaseSearchFilterDtoTypeDATASET          BaseSearchFilterDtoType = "DATASET"
	BaseSearchFilterDtoTypeHEALTHSTATUS     BaseSearchFilterDtoType = "HEALTH_STATUS"
	BaseSearchFilterDtoTypeOWNER            BaseSearchFilterDtoType = "OWNER"
	BaseSearchFilterDtoTypePLATFORM         BaseSearchFilterDtoType = "PLATFORM"
	BaseSearchFilterDtoTypeRULETEMPLATENAME BaseSearchFilterDtoType = "RULE_TEMPLATE_NAME"
	BaseSearchFilterDtoTypeTAG              BaseSearchFilterDtoType = "TAG"
	BaseSearchFilterDtoTypeTECHNOLOGY       BaseSearchFilterDtoType = "TECHNOLOGY"
	BaseSearchFilterDtoTypeTERM             BaseSearchFilterDtoType = "TERM"
	BaseSearchFilterDtoTypeUSAGE            BaseSearchFilterDtoType = "USAGE"
)

// Defines values for BigQueryIngestionTimePartitioningPropertiesPartitioningType.
const (
	BigQueryIngestionTimePartitioningPropertiesPartitioningTypeINGESTIONTIME  BigQueryIngestionTimePartitioningPropertiesPartitioningType = "INGESTION_TIME"
	BigQueryIngestionTimePartitioningPropertiesPartitioningTypeINTEGERRANGE   BigQueryIngestionTimePartitioningPropertiesPartitioningType = "INTEGER_RANGE"
	BigQueryIngestionTimePartitioningPropertiesPartitioningTypeNOPARTITIONING BigQueryIngestionTimePartitioningPropertiesPartitioningType = "NO_PARTITIONING"
	BigQueryIngestionTimePartitioningPropertiesPartitioningTypeTIMEUNITCOLUMN BigQueryIngestionTimePartitioningPropertiesPartitioningType = "TIME_UNIT_COLUMN"
)

// Defines values for BigQueryIngestionTimePartitioningPropertiesTimeInterval.
const (
	BigQueryIngestionTimePartitioningPropertiesTimeIntervalDAY   BigQueryIngestionTimePartitioningPropertiesTimeInterval = "DAY"
	BigQueryIngestionTimePartitioningPropertiesTimeIntervalHOUR  BigQueryIngestionTimePartitioningPropertiesTimeInterval = "HOUR"
	BigQueryIngestionTimePartitioningPropertiesTimeIntervalMONTH BigQueryIngestionTimePartitioningPropertiesTimeInterval = "MONTH"
	BigQueryIngestionTimePartitioningPropertiesTimeIntervalYEAR  BigQueryIngestionTimePartitioningPropertiesTimeInterval = "YEAR"
)

// Defines values for BigQueryIntegerRangePartitioningPropertiesPartitioningType.
const (
	BigQueryIntegerRangePartitioningPropertiesPartitioningTypeINGESTIONTIME  BigQueryIntegerRangePartitioningPropertiesPartitioningType = "INGESTION_TIME"
	BigQueryIntegerRangePartitioningPropertiesPartitioningTypeINTEGERRANGE   BigQueryIntegerRangePartitioningPropertiesPartitioningType = "INTEGER_RANGE"
	BigQueryIntegerRangePartitioningPropertiesPartitioningTypeNOPARTITIONING BigQueryIntegerRangePartitioningPropertiesPartitioningType = "NO_PARTITIONING"
	BigQueryIntegerRangePartitioningPropertiesPartitioningTypeTIMEUNITCOLUMN BigQueryIntegerRangePartitioningPropertiesPartitioningType = "TIME_UNIT_COLUMN"
)

// Defines values for BigQueryPartitioningPropertiesPartitioningType.
const (
	BigQueryPartitioningPropertiesPartitioningTypeINGESTIONTIME  BigQueryPartitioningPropertiesPartitioningType = "INGESTION_TIME"
	BigQueryPartitioningPropertiesPartitioningTypeINTEGERRANGE   BigQueryPartitioningPropertiesPartitioningType = "INTEGER_RANGE"
	BigQueryPartitioningPropertiesPartitioningTypeNOPARTITIONING BigQueryPartitioningPropertiesPartitioningType = "NO_PARTITIONING"
	BigQueryPartitioningPropertiesPartitioningTypeTIMEUNITCOLUMN BigQueryPartitioningPropertiesPartitioningType = "TIME_UNIT_COLUMN"
)

// Defines values for BigQueryTimeUnitColumnPartitioningPropertiesPartitioningType.
const (
	BigQueryTimeUnitColumnPartitioningPropertiesPartitioningTypeINGESTIONTIME  BigQueryTimeUnitColumnPartitioningPropertiesPartitioningType = "INGESTION_TIME"
	BigQueryTimeUnitColumnPartitioningPropertiesPartitioningTypeINTEGERRANGE   BigQueryTimeUnitColumnPartitioningPropertiesPartitioningType = "INTEGER_RANGE"
	BigQueryTimeUnitColumnPartitioningPropertiesPartitioningTypeNOPARTITIONING BigQueryTimeUnitColumnPartitioningPropertiesPartitioningType = "NO_PARTITIONING"
	BigQueryTimeUnitColumnPartitioningPropertiesPartitioningTypeTIMEUNITCOLUMN BigQueryTimeUnitColumnPartitioningPropertiesPartitioningType = "TIME_UNIT_COLUMN"
)

// Defines values for BigQueryTimeUnitColumnPartitioningPropertiesTimeInterval.
const (
	BigQueryTimeUnitColumnPartitioningPropertiesTimeIntervalDAY   BigQueryTimeUnitColumnPartitioningPropertiesTimeInterval = "DAY"
	BigQueryTimeUnitColumnPartitioningPropertiesTimeIntervalHOUR  BigQueryTimeUnitColumnPartitioningPropertiesTimeInterval = "HOUR"
	BigQueryTimeUnitColumnPartitioningPropertiesTimeIntervalMONTH BigQueryTimeUnitColumnPartitioningPropertiesTimeInterval = "MONTH"
	BigQueryTimeUnitColumnPartitioningPropertiesTimeIntervalYEAR  BigQueryTimeUnitColumnPartitioningPropertiesTimeInterval = "YEAR"
)

// Defines values for CollaborationToolDisconnectedIncidentEventDtoItemType.
const (
	CollaborationToolDisconnectedIncidentEventDtoItemTypeJIRA CollaborationToolDisconnectedIncidentEventDtoItemType = "JIRA"
)

// Defines values for CollaborationToolDisconnectedIncidentEventDtoType.
const (
	CollaborationToolDisconnectedIncidentEventDtoTypeASSIGNEESCHANGE               CollaborationToolDisconnectedIncidentEventDtoType = "ASSIGNEES_CHANGE"
	CollaborationToolDisconnectedIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED CollaborationToolDisconnectedIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	CollaborationToolDisconnectedIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   CollaborationToolDisconnectedIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	CollaborationToolDisconnectedIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED CollaborationToolDisconnectedIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	CollaborationToolDisconnectedIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE CollaborationToolDisconnectedIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	CollaborationToolDisconnectedIncidentEventDtoTypeCOMMENT                       CollaborationToolDisconnectedIncidentEventDtoType = "COMMENT"
	CollaborationToolDisconnectedIncidentEventDtoTypeCREATIONBYRULERUN             CollaborationToolDisconnectedIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	CollaborationToolDisconnectedIncidentEventDtoTypeCREATIONBYUSER                CollaborationToolDisconnectedIncidentEventDtoType = "CREATION_BY_USER"
	CollaborationToolDisconnectedIncidentEventDtoTypeNAMECHANGE                    CollaborationToolDisconnectedIncidentEventDtoType = "NAME_CHANGE"
	CollaborationToolDisconnectedIncidentEventDtoTypeNEWFAILURES                   CollaborationToolDisconnectedIncidentEventDtoType = "NEW_FAILURES"
	CollaborationToolDisconnectedIncidentEventDtoTypeRULESADDED                    CollaborationToolDisconnectedIncidentEventDtoType = "RULES_ADDED"
	CollaborationToolDisconnectedIncidentEventDtoTypeRULESMOVEDFROM                CollaborationToolDisconnectedIncidentEventDtoType = "RULES_MOVED_FROM"
	CollaborationToolDisconnectedIncidentEventDtoTypeRULESMOVEDTO                  CollaborationToolDisconnectedIncidentEventDtoType = "RULES_MOVED_TO"
	CollaborationToolDisconnectedIncidentEventDtoTypeSEVERITYCHANGE                CollaborationToolDisconnectedIncidentEventDtoType = "SEVERITY_CHANGE"
	CollaborationToolDisconnectedIncidentEventDtoTypeSTATUSCHANGE                  CollaborationToolDisconnectedIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for CollaborationToolItemLinkedIncidentEventDtoItemType.
const (
	CollaborationToolItemLinkedIncidentEventDtoItemTypeJIRA CollaborationToolItemLinkedIncidentEventDtoItemType = "JIRA"
)

// Defines values for CollaborationToolItemLinkedIncidentEventDtoType.
const (
	CollaborationToolItemLinkedIncidentEventDtoTypeASSIGNEESCHANGE               CollaborationToolItemLinkedIncidentEventDtoType = "ASSIGNEES_CHANGE"
	CollaborationToolItemLinkedIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED CollaborationToolItemLinkedIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	CollaborationToolItemLinkedIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   CollaborationToolItemLinkedIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	CollaborationToolItemLinkedIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED CollaborationToolItemLinkedIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	CollaborationToolItemLinkedIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE CollaborationToolItemLinkedIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	CollaborationToolItemLinkedIncidentEventDtoTypeCOMMENT                       CollaborationToolItemLinkedIncidentEventDtoType = "COMMENT"
	CollaborationToolItemLinkedIncidentEventDtoTypeCREATIONBYRULERUN             CollaborationToolItemLinkedIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	CollaborationToolItemLinkedIncidentEventDtoTypeCREATIONBYUSER                CollaborationToolItemLinkedIncidentEventDtoType = "CREATION_BY_USER"
	CollaborationToolItemLinkedIncidentEventDtoTypeNAMECHANGE                    CollaborationToolItemLinkedIncidentEventDtoType = "NAME_CHANGE"
	CollaborationToolItemLinkedIncidentEventDtoTypeNEWFAILURES                   CollaborationToolItemLinkedIncidentEventDtoType = "NEW_FAILURES"
	CollaborationToolItemLinkedIncidentEventDtoTypeRULESADDED                    CollaborationToolItemLinkedIncidentEventDtoType = "RULES_ADDED"
	CollaborationToolItemLinkedIncidentEventDtoTypeRULESMOVEDFROM                CollaborationToolItemLinkedIncidentEventDtoType = "RULES_MOVED_FROM"
	CollaborationToolItemLinkedIncidentEventDtoTypeRULESMOVEDTO                  CollaborationToolItemLinkedIncidentEventDtoType = "RULES_MOVED_TO"
	CollaborationToolItemLinkedIncidentEventDtoTypeSEVERITYCHANGE                CollaborationToolItemLinkedIncidentEventDtoType = "SEVERITY_CHANGE"
	CollaborationToolItemLinkedIncidentEventDtoTypeSTATUSCHANGE                  CollaborationToolItemLinkedIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for CollaborationToolItemUnlinkedIncidentEventDtoItemType.
const (
	CollaborationToolItemUnlinkedIncidentEventDtoItemTypeJIRA CollaborationToolItemUnlinkedIncidentEventDtoItemType = "JIRA"
)

// Defines values for CollaborationToolItemUnlinkedIncidentEventDtoType.
const (
	CollaborationToolItemUnlinkedIncidentEventDtoTypeASSIGNEESCHANGE               CollaborationToolItemUnlinkedIncidentEventDtoType = "ASSIGNEES_CHANGE"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED CollaborationToolItemUnlinkedIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   CollaborationToolItemUnlinkedIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED CollaborationToolItemUnlinkedIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE CollaborationToolItemUnlinkedIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeCOMMENT                       CollaborationToolItemUnlinkedIncidentEventDtoType = "COMMENT"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeCREATIONBYRULERUN             CollaborationToolItemUnlinkedIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeCREATIONBYUSER                CollaborationToolItemUnlinkedIncidentEventDtoType = "CREATION_BY_USER"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeNAMECHANGE                    CollaborationToolItemUnlinkedIncidentEventDtoType = "NAME_CHANGE"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeNEWFAILURES                   CollaborationToolItemUnlinkedIncidentEventDtoType = "NEW_FAILURES"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeRULESADDED                    CollaborationToolItemUnlinkedIncidentEventDtoType = "RULES_ADDED"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeRULESMOVEDFROM                CollaborationToolItemUnlinkedIncidentEventDtoType = "RULES_MOVED_FROM"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeRULESMOVEDTO                  CollaborationToolItemUnlinkedIncidentEventDtoType = "RULES_MOVED_TO"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeSEVERITYCHANGE                CollaborationToolItemUnlinkedIncidentEventDtoType = "SEVERITY_CHANGE"
	CollaborationToolItemUnlinkedIncidentEventDtoTypeSTATUSCHANGE                  CollaborationToolItemUnlinkedIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for CollaborationToolStatusChangeEventDtoIncidentQualification.
const (
	CollaborationToolStatusChangeEventDtoIncidentQualificationDUPLICATE     CollaborationToolStatusChangeEventDtoIncidentQualification = "DUPLICATE"
	CollaborationToolStatusChangeEventDtoIncidentQualificationEXPECTED      CollaborationToolStatusChangeEventDtoIncidentQualification = "EXPECTED"
	CollaborationToolStatusChangeEventDtoIncidentQualificationFALSEPOSITIVE CollaborationToolStatusChangeEventDtoIncidentQualification = "FALSE_POSITIVE"
	CollaborationToolStatusChangeEventDtoIncidentQualificationFIXED         CollaborationToolStatusChangeEventDtoIncidentQualification = "FIXED"
	CollaborationToolStatusChangeEventDtoIncidentQualificationKNOWNERROR    CollaborationToolStatusChangeEventDtoIncidentQualification = "KNOWN_ERROR"
)

// Defines values for CollaborationToolStatusChangeEventDtoIncidentStatus.
const (
	CollaborationToolStatusChangeEventDtoIncidentStatusCLOSED     CollaborationToolStatusChangeEventDtoIncidentStatus = "CLOSED"
	CollaborationToolStatusChangeEventDtoIncidentStatusINPROGRESS CollaborationToolStatusChangeEventDtoIncidentStatus = "IN_PROGRESS"
	CollaborationToolStatusChangeEventDtoIncidentStatusOPEN       CollaborationToolStatusChangeEventDtoIncidentStatus = "OPEN"
)

// Defines values for CollaborationToolStatusChangeEventDtoItemType.
const (
	CollaborationToolStatusChangeEventDtoItemTypeJIRA CollaborationToolStatusChangeEventDtoItemType = "JIRA"
)

// Defines values for CollaborationToolStatusChangeEventDtoType.
const (
	CollaborationToolStatusChangeEventDtoTypeASSIGNEESCHANGE               CollaborationToolStatusChangeEventDtoType = "ASSIGNEES_CHANGE"
	CollaborationToolStatusChangeEventDtoTypeCOLLABORATIONTOOLDISCONNECTED CollaborationToolStatusChangeEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	CollaborationToolStatusChangeEventDtoTypeCOLLABORATIONTOOLITEMLINKED   CollaborationToolStatusChangeEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	CollaborationToolStatusChangeEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED CollaborationToolStatusChangeEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	CollaborationToolStatusChangeEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE CollaborationToolStatusChangeEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	CollaborationToolStatusChangeEventDtoTypeCOMMENT                       CollaborationToolStatusChangeEventDtoType = "COMMENT"
	CollaborationToolStatusChangeEventDtoTypeCREATIONBYRULERUN             CollaborationToolStatusChangeEventDtoType = "CREATION_BY_RULE_RUN"
	CollaborationToolStatusChangeEventDtoTypeCREATIONBYUSER                CollaborationToolStatusChangeEventDtoType = "CREATION_BY_USER"
	CollaborationToolStatusChangeEventDtoTypeNAMECHANGE                    CollaborationToolStatusChangeEventDtoType = "NAME_CHANGE"
	CollaborationToolStatusChangeEventDtoTypeNEWFAILURES                   CollaborationToolStatusChangeEventDtoType = "NEW_FAILURES"
	CollaborationToolStatusChangeEventDtoTypeRULESADDED                    CollaborationToolStatusChangeEventDtoType = "RULES_ADDED"
	CollaborationToolStatusChangeEventDtoTypeRULESMOVEDFROM                CollaborationToolStatusChangeEventDtoType = "RULES_MOVED_FROM"
	CollaborationToolStatusChangeEventDtoTypeRULESMOVEDTO                  CollaborationToolStatusChangeEventDtoType = "RULES_MOVED_TO"
	CollaborationToolStatusChangeEventDtoTypeSEVERITYCHANGE                CollaborationToolStatusChangeEventDtoType = "SEVERITY_CHANGE"
	CollaborationToolStatusChangeEventDtoTypeSTATUSCHANGE                  CollaborationToolStatusChangeEventDtoType = "STATUS_CHANGE"
)

// Defines values for CommentIncidentEventDtoType.
const (
	CommentIncidentEventDtoTypeASSIGNEESCHANGE               CommentIncidentEventDtoType = "ASSIGNEES_CHANGE"
	CommentIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED CommentIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	CommentIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   CommentIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	CommentIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED CommentIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	CommentIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE CommentIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	CommentIncidentEventDtoTypeCOMMENT                       CommentIncidentEventDtoType = "COMMENT"
	CommentIncidentEventDtoTypeCREATIONBYRULERUN             CommentIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	CommentIncidentEventDtoTypeCREATIONBYUSER                CommentIncidentEventDtoType = "CREATION_BY_USER"
	CommentIncidentEventDtoTypeNAMECHANGE                    CommentIncidentEventDtoType = "NAME_CHANGE"
	CommentIncidentEventDtoTypeNEWFAILURES                   CommentIncidentEventDtoType = "NEW_FAILURES"
	CommentIncidentEventDtoTypeRULESADDED                    CommentIncidentEventDtoType = "RULES_ADDED"
	CommentIncidentEventDtoTypeRULESMOVEDFROM                CommentIncidentEventDtoType = "RULES_MOVED_FROM"
	CommentIncidentEventDtoTypeRULESMOVEDTO                  CommentIncidentEventDtoType = "RULES_MOVED_TO"
	CommentIncidentEventDtoTypeSEVERITYCHANGE                CommentIncidentEventDtoType = "SEVERITY_CHANGE"
	CommentIncidentEventDtoTypeSTATUSCHANGE                  CommentIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for ConnectorDtoDestinationPlatform.
const (
	ConnectorDtoDestinationPlatformACCELDATA                 ConnectorDtoDestinationPlatform = "ACCELDATA"
	ConnectorDtoDestinationPlatformACRYLDATA                 ConnectorDtoDestinationPlatform = "ACRYL_DATA"
	ConnectorDtoDestinationPlatformACTIANVECTOR              ConnectorDtoDestinationPlatform = "ACTIAN_VECTOR"
	ConnectorDtoDestinationPlatformACTIVECAMPAIGN            ConnectorDtoDestinationPlatform = "ACTIVE_CAMPAIGN"
	ConnectorDtoDestinationPlatformADA                       ConnectorDtoDestinationPlatform = "ADA"
	ConnectorDtoDestinationPlatformADJUST                    ConnectorDtoDestinationPlatform = "ADJUST"
	ConnectorDtoDestinationPlatformADOBE                     ConnectorDtoDestinationPlatform = "ADOBE"
	ConnectorDtoDestinationPlatformADPWFN                    ConnectorDtoDestinationPlatform = "ADP_WFN"
	ConnectorDtoDestinationPlatformADROLL                    ConnectorDtoDestinationPlatform = "ADROLL"
	ConnectorDtoDestinationPlatformAFFINITY                  ConnectorDtoDestinationPlatform = "AFFINITY"
	ConnectorDtoDestinationPlatformAIRBYTE                   ConnectorDtoDestinationPlatform = "AIRBYTE"
	ConnectorDtoDestinationPlatformAIRCALL                   ConnectorDtoDestinationPlatform = "AIRCALL"
	ConnectorDtoDestinationPlatformAIRFLOW                   ConnectorDtoDestinationPlatform = "AIRFLOW"
	ConnectorDtoDestinationPlatformAIRTABLE                  ConnectorDtoDestinationPlatform = "AIRTABLE"
	ConnectorDtoDestinationPlatformALATION                   ConnectorDtoDestinationPlatform = "ALATION"
	ConnectorDtoDestinationPlatformALCHEMER                  ConnectorDtoDestinationPlatform = "ALCHEMER"
	ConnectorDtoDestinationPlatformALVINAI                   ConnectorDtoDestinationPlatform = "ALVIN_AI"
	ConnectorDtoDestinationPlatformAMAZON                    ConnectorDtoDestinationPlatform = "AMAZON"
	ConnectorDtoDestinationPlatformAMAZONCLOUDFRONT          ConnectorDtoDestinationPlatform = "AMAZON_CLOUDFRONT"
	ConnectorDtoDestinationPlatformAMAZONDOCUMENTDB          ConnectorDtoDestinationPlatform = "AMAZON_DOCUMENTDB"
	ConnectorDtoDestinationPlatformAMAZONDYNAMODB            ConnectorDtoDestinationPlatform = "AMAZON_DYNAMODB"
	ConnectorDtoDestinationPlatformAMAZONFIREHOSE            ConnectorDtoDestinationPlatform = "AMAZON_FIREHOSE"
	ConnectorDtoDestinationPlatformAMAZONSAGEMAKER           ConnectorDtoDestinationPlatform = "AMAZON_SAGEMAKER"
	ConnectorDtoDestinationPlatformAMAZONSELLINGPARTNER      ConnectorDtoDestinationPlatform = "AMAZON_SELLING_PARTNER"
	ConnectorDtoDestinationPlatformAMPLITUDE                 ConnectorDtoDestinationPlatform = "AMPLITUDE"
	ConnectorDtoDestinationPlatformANAPLAN                   ConnectorDtoDestinationPlatform = "ANAPLAN"
	ConnectorDtoDestinationPlatformANOMALO                   ConnectorDtoDestinationPlatform = "ANOMALO"
	ConnectorDtoDestinationPlatformAPACHEKAFKA               ConnectorDtoDestinationPlatform = "APACHE_KAFKA"
	ConnectorDtoDestinationPlatformAPACHESPARK               ConnectorDtoDestinationPlatform = "APACHE_SPARK"
	ConnectorDtoDestinationPlatformAPPCUES                   ConnectorDtoDestinationPlatform = "APPCUES"
	ConnectorDtoDestinationPlatformAPPFIGURES                ConnectorDtoDestinationPlatform = "APPFIGURES"
	ConnectorDtoDestinationPlatformAPPLE                     ConnectorDtoDestinationPlatform = "APPLE"
	ConnectorDtoDestinationPlatformAPPLEAPPSTORE             ConnectorDtoDestinationPlatform = "APPLE_APP_STORE"
	ConnectorDtoDestinationPlatformAPPSFLYER                 ConnectorDtoDestinationPlatform = "APPSFLYER"
	ConnectorDtoDestinationPlatformASANA                     ConnectorDtoDestinationPlatform = "ASANA"
	ConnectorDtoDestinationPlatformASSEMBLED                 ConnectorDtoDestinationPlatform = "ASSEMBLED"
	ConnectorDtoDestinationPlatformATHENA                    ConnectorDtoDestinationPlatform = "ATHENA"
	ConnectorDtoDestinationPlatformATLAN                     ConnectorDtoDestinationPlatform = "ATLAN"
	ConnectorDtoDestinationPlatformATLASSIANCONFLUENCE       ConnectorDtoDestinationPlatform = "ATLASSIAN_CONFLUENCE"
	ConnectorDtoDestinationPlatformATLASSIANJIRA             ConnectorDtoDestinationPlatform = "ATLASSIAN_JIRA"
	ConnectorDtoDestinationPlatformATLASSIANOPSGENIE         ConnectorDtoDestinationPlatform = "ATLASSIAN_OPSGENIE"
	ConnectorDtoDestinationPlatformAUTH0                     ConnectorDtoDestinationPlatform = "AUTH0"
	ConnectorDtoDestinationPlatformAUTODESKBIM360            ConnectorDtoDestinationPlatform = "AUTODESK_BIM_360"
	ConnectorDtoDestinationPlatformAWIN                      ConnectorDtoDestinationPlatform = "AWIN"
	ConnectorDtoDestinationPlatformAWSCLOUDTRAIL             ConnectorDtoDestinationPlatform = "AWS_CLOUDTRAIL"
	ConnectorDtoDestinationPlatformAWSCOSTEXPLORER           ConnectorDtoDestinationPlatform = "AWS_COST_EXPLORER"
	ConnectorDtoDestinationPlatformAWSINVENTORY              ConnectorDtoDestinationPlatform = "AWS_INVENTORY"
	ConnectorDtoDestinationPlatformAWSLAMBDA                 ConnectorDtoDestinationPlatform = "AWS_LAMBDA"
	ConnectorDtoDestinationPlatformAZURE                     ConnectorDtoDestinationPlatform = "AZURE"
	ConnectorDtoDestinationPlatformBALLOTREADY               ConnectorDtoDestinationPlatform = "BALLOT_READY"
	ConnectorDtoDestinationPlatformBAMBOOHR                  ConnectorDtoDestinationPlatform = "BAMBOOHR"
	ConnectorDtoDestinationPlatformBIGCOMMERCE               ConnectorDtoDestinationPlatform = "BIGCOMMERCE"
	ConnectorDtoDestinationPlatformBIGEYE                    ConnectorDtoDestinationPlatform = "BIGEYE"
	ConnectorDtoDestinationPlatformBIGQUERY                  ConnectorDtoDestinationPlatform = "BIGQUERY"
	ConnectorDtoDestinationPlatformBILLINGPLATFORM           ConnectorDtoDestinationPlatform = "BILLINGPLATFORM"
	ConnectorDtoDestinationPlatformBIRDEYE                   ConnectorDtoDestinationPlatform = "BIRDEYE"
	ConnectorDtoDestinationPlatformBLACKBOARD                ConnectorDtoDestinationPlatform = "BLACKBOARD"
	ConnectorDtoDestinationPlatformBOX                       ConnectorDtoDestinationPlatform = "BOX"
	ConnectorDtoDestinationPlatformBRAINTREE                 ConnectorDtoDestinationPlatform = "BRAINTREE"
	ConnectorDtoDestinationPlatformBRAZE                     ConnectorDtoDestinationPlatform = "BRAZE"
	ConnectorDtoDestinationPlatformBREVO                     ConnectorDtoDestinationPlatform = "BREVO"
	ConnectorDtoDestinationPlatformBREX                      ConnectorDtoDestinationPlatform = "BREX"
	ConnectorDtoDestinationPlatformBUILDKITE                 ConnectorDtoDestinationPlatform = "BUILDKITE"
	ConnectorDtoDestinationPlatformBUZZSPROUT                ConnectorDtoDestinationPlatform = "BUZZSPROUT"
	ConnectorDtoDestinationPlatformCALENDLY                  ConnectorDtoDestinationPlatform = "CALENDLY"
	ConnectorDtoDestinationPlatformCAMPAIGNMONITOR           ConnectorDtoDestinationPlatform = "CAMPAIGN_MONITOR"
	ConnectorDtoDestinationPlatformCANNY                     ConnectorDtoDestinationPlatform = "CANNY"
	ConnectorDtoDestinationPlatformCANVAS                    ConnectorDtoDestinationPlatform = "CANVAS"
	ConnectorDtoDestinationPlatformCAPTERRA                  ConnectorDtoDestinationPlatform = "CAPTERRA"
	ConnectorDtoDestinationPlatformCASTORDOC                 ConnectorDtoDestinationPlatform = "CASTOR_DOC"
	ConnectorDtoDestinationPlatformCENSUS                    ConnectorDtoDestinationPlatform = "CENSUS"
	ConnectorDtoDestinationPlatformCERTINIA                  ConnectorDtoDestinationPlatform = "CERTINIA"
	ConnectorDtoDestinationPlatformCHAMELEON                 ConnectorDtoDestinationPlatform = "CHAMELEON"
	ConnectorDtoDestinationPlatformCHANNELADVISOR            ConnectorDtoDestinationPlatform = "CHANNEL_ADVISOR"
	ConnectorDtoDestinationPlatformCHARGEBEE                 ConnectorDtoDestinationPlatform = "CHARGEBEE"
	ConnectorDtoDestinationPlatformCHARGEDESK                ConnectorDtoDestinationPlatform = "CHARGEDESK"
	ConnectorDtoDestinationPlatformCHARTMOGUL                ConnectorDtoDestinationPlatform = "CHARTMOGUL"
	ConnectorDtoDestinationPlatformCHORUSAI                  ConnectorDtoDestinationPlatform = "CHORUS_AI"
	ConnectorDtoDestinationPlatformCHURNKEY                  ConnectorDtoDestinationPlatform = "CHURNKEY"
	ConnectorDtoDestinationPlatformCHURNZERO                 ConnectorDtoDestinationPlatform = "CHURNZERO"
	ConnectorDtoDestinationPlatformCIMIS                     ConnectorDtoDestinationPlatform = "CIMIS"
	ConnectorDtoDestinationPlatformCIN7                      ConnectorDtoDestinationPlatform = "CIN7"
	ConnectorDtoDestinationPlatformCIRCLECI                  ConnectorDtoDestinationPlatform = "CIRCLE_CI"
	ConnectorDtoDestinationPlatformCLARI                     ConnectorDtoDestinationPlatform = "CLARI"
	ConnectorDtoDestinationPlatformCLICKUP                   ConnectorDtoDestinationPlatform = "CLICKUP"
	ConnectorDtoDestinationPlatformCLIFFAI                   ConnectorDtoDestinationPlatform = "CLIFF_AI"
	ConnectorDtoDestinationPlatformCLOSE                     ConnectorDtoDestinationPlatform = "CLOSE"
	ConnectorDtoDestinationPlatformCOLLIBRA                  ConnectorDtoDestinationPlatform = "COLLIBRA"
	ConnectorDtoDestinationPlatformCOMMERCETOOLS             ConnectorDtoDestinationPlatform = "COMMERCETOOLS"
	ConnectorDtoDestinationPlatformCOMPOSER                  ConnectorDtoDestinationPlatform = "COMPOSER"
	ConnectorDtoDestinationPlatformCONFLUENTCLOUD            ConnectorDtoDestinationPlatform = "CONFLUENT_CLOUD"
	ConnectorDtoDestinationPlatformCONTRASTSECURITY          ConnectorDtoDestinationPlatform = "CONTRAST_SECURITY"
	ConnectorDtoDestinationPlatformCOUPA                     ConnectorDtoDestinationPlatform = "COUPA"
	ConnectorDtoDestinationPlatformCRITEO                    ConnectorDtoDestinationPlatform = "CRITEO"
	ConnectorDtoDestinationPlatformCROSSBEAM                 ConnectorDtoDestinationPlatform = "CROSSBEAM"
	ConnectorDtoDestinationPlatformCRUNCHBASE                ConnectorDtoDestinationPlatform = "CRUNCHBASE"
	ConnectorDtoDestinationPlatformCUSTOMERIO                ConnectorDtoDestinationPlatform = "CUSTOMER_IO"
	ConnectorDtoDestinationPlatformD2LBRIGHTSPACE            ConnectorDtoDestinationPlatform = "D2L_BRIGHTSPACE"
	ConnectorDtoDestinationPlatformDAGSTER                   ConnectorDtoDestinationPlatform = "DAGSTER"
	ConnectorDtoDestinationPlatformDATABAND                  ConnectorDtoDestinationPlatform = "DATABAND"
	ConnectorDtoDestinationPlatformDATABRICKS                ConnectorDtoDestinationPlatform = "DATABRICKS"
	ConnectorDtoDestinationPlatformDATADOG                   ConnectorDtoDestinationPlatform = "DATADOG"
	ConnectorDtoDestinationPlatformDATAEDO                   ConnectorDtoDestinationPlatform = "DATAEDO"
	ConnectorDtoDestinationPlatformDATAFOLD                  ConnectorDtoDestinationPlatform = "DATAFOLD"
	ConnectorDtoDestinationPlatformDATAGALAXY                ConnectorDtoDestinationPlatform = "DATAGALAXY"
	ConnectorDtoDestinationPlatformDATAHUB                   ConnectorDtoDestinationPlatform = "DATAHUB"
	ConnectorDtoDestinationPlatformDATAIKU                   ConnectorDtoDestinationPlatform = "DATAIKU"
	ConnectorDtoDestinationPlatformDATAWORLD                 ConnectorDtoDestinationPlatform = "DATA_WORLD"
	ConnectorDtoDestinationPlatformDB2                       ConnectorDtoDestinationPlatform = "DB2"
	ConnectorDtoDestinationPlatformDBT                       ConnectorDtoDestinationPlatform = "DBT"
	ConnectorDtoDestinationPlatformDBTCLOUD                  ConnectorDtoDestinationPlatform = "DBTCLOUD"
	ConnectorDtoDestinationPlatformDCLLOGISTICS              ConnectorDtoDestinationPlatform = "DCL_LOGISTICS"
	ConnectorDtoDestinationPlatformDEAR                      ConnectorDtoDestinationPlatform = "DEAR"
	ConnectorDtoDestinationPlatformDECUBE                    ConnectorDtoDestinationPlatform = "DECUBE"
	ConnectorDtoDestinationPlatformDELIGHTED                 ConnectorDtoDestinationPlatform = "DELIGHTED"
	ConnectorDtoDestinationPlatformDEPUTY                    ConnectorDtoDestinationPlatform = "DEPUTY"
	ConnectorDtoDestinationPlatformDESTINI                   ConnectorDtoDestinationPlatform = "DESTINI"
	ConnectorDtoDestinationPlatformDIXA                      ConnectorDtoDestinationPlatform = "DIXA"
	ConnectorDtoDestinationPlatformDOCEBO                    ConnectorDtoDestinationPlatform = "DOCEBO"
	ConnectorDtoDestinationPlatformDRATA                     ConnectorDtoDestinationPlatform = "DRATA"
	ConnectorDtoDestinationPlatformDRIFT                     ConnectorDtoDestinationPlatform = "DRIFT"
	ConnectorDtoDestinationPlatformDRIP                      ConnectorDtoDestinationPlatform = "DRIP"
	ConnectorDtoDestinationPlatformDROPBOX                   ConnectorDtoDestinationPlatform = "DROPBOX"
	ConnectorDtoDestinationPlatformDUOPLANE                  ConnectorDtoDestinationPlatform = "DUOPLANE"
	ConnectorDtoDestinationPlatformEASYPOST                  ConnectorDtoDestinationPlatform = "EASY_POST"
	ConnectorDtoDestinationPlatformECONOMIC                  ConnectorDtoDestinationPlatform = "E_CONOMIC"
	ConnectorDtoDestinationPlatformELASTICSEARCH             ConnectorDtoDestinationPlatform = "ELASTICSEARCH"
	ConnectorDtoDestinationPlatformELEMENTARY                ConnectorDtoDestinationPlatform = "ELEMENTARY"
	ConnectorDtoDestinationPlatformELLUCIAN                  ConnectorDtoDestinationPlatform = "ELLUCIAN"
	ConnectorDtoDestinationPlatformELOQUA                    ConnectorDtoDestinationPlatform = "ELOQUA"
	ConnectorDtoDestinationPlatformEMAIL                     ConnectorDtoDestinationPlatform = "EMAIL"
	ConnectorDtoDestinationPlatformEMPLOYMENTHERO            ConnectorDtoDestinationPlatform = "EMPLOYMENT_HERO"
	ConnectorDtoDestinationPlatformEPICORPROPHET21           ConnectorDtoDestinationPlatform = "EPICOR_PROPHET_21"
	ConnectorDtoDestinationPlatformEVENTBRITE                ConnectorDtoDestinationPlatform = "EVENTBRITE"
	ConnectorDtoDestinationPlatformEVERHOUR                  ConnectorDtoDestinationPlatform = "EVERHOUR"
	ConnectorDtoDestinationPlatformEXCEL                     ConnectorDtoDestinationPlatform = "EXCEL"
	ConnectorDtoDestinationPlatformEXPENSIFY                 ConnectorDtoDestinationPlatform = "EXPENSIFY"
	ConnectorDtoDestinationPlatformFACEBOOK                  ConnectorDtoDestinationPlatform = "FACEBOOK"
	ConnectorDtoDestinationPlatformFIFTEENFIVE               ConnectorDtoDestinationPlatform = "FIFTEENFIVE"
	ConnectorDtoDestinationPlatformFIGMA                     ConnectorDtoDestinationPlatform = "FIGMA"
	ConnectorDtoDestinationPlatformFIREBASE                  ConnectorDtoDestinationPlatform = "FIREBASE"
	ConnectorDtoDestinationPlatformFIREBOLT                  ConnectorDtoDestinationPlatform = "FIREBOLT"
	ConnectorDtoDestinationPlatformFIVETRAN                  ConnectorDtoDestinationPlatform = "FIVETRAN"
	ConnectorDtoDestinationPlatformFLEXPORT                  ConnectorDtoDestinationPlatform = "FLEXPORT"
	ConnectorDtoDestinationPlatformFORJ                      ConnectorDtoDestinationPlatform = "FORJ"
	ConnectorDtoDestinationPlatformFOUNTAIN                  ConnectorDtoDestinationPlatform = "FOUNTAIN"
	ConnectorDtoDestinationPlatformFREIGHTVIEW               ConnectorDtoDestinationPlatform = "FREIGHTVIEW"
	ConnectorDtoDestinationPlatformFRESHBOOKS                ConnectorDtoDestinationPlatform = "FRESHBOOKS"
	ConnectorDtoDestinationPlatformFRESHCHAT                 ConnectorDtoDestinationPlatform = "FRESHCHAT"
	ConnectorDtoDestinationPlatformFRESHDESK                 ConnectorDtoDestinationPlatform = "FRESHDESK"
	ConnectorDtoDestinationPlatformFRESHDESKCONTACTCENTER    ConnectorDtoDestinationPlatform = "FRESHDESK_CONTACT_CENTER"
	ConnectorDtoDestinationPlatformFRESHSERVICE              ConnectorDtoDestinationPlatform = "FRESHSERVICE"
	ConnectorDtoDestinationPlatformFRESHSUCCESS              ConnectorDtoDestinationPlatform = "FRESHSUCCESS"
	ConnectorDtoDestinationPlatformFRESHTEAM                 ConnectorDtoDestinationPlatform = "FRESHTEAM"
	ConnectorDtoDestinationPlatformFRIENDBUY                 ConnectorDtoDestinationPlatform = "FRIENDBUY"
	ConnectorDtoDestinationPlatformFRONT                     ConnectorDtoDestinationPlatform = "FRONT"
	ConnectorDtoDestinationPlatformFTP                       ConnectorDtoDestinationPlatform = "FTP"
	ConnectorDtoDestinationPlatformFULLSTORY                 ConnectorDtoDestinationPlatform = "FULLSTORY"
	ConnectorDtoDestinationPlatformG2                        ConnectorDtoDestinationPlatform = "G2"
	ConnectorDtoDestinationPlatformGAINSIGHT                 ConnectorDtoDestinationPlatform = "GAINSIGHT"
	ConnectorDtoDestinationPlatformGEM                       ConnectorDtoDestinationPlatform = "GEM"
	ConnectorDtoDestinationPlatformGIT                       ConnectorDtoDestinationPlatform = "GIT"
	ConnectorDtoDestinationPlatformGITHUB                    ConnectorDtoDestinationPlatform = "GITHUB"
	ConnectorDtoDestinationPlatformGITLAB                    ConnectorDtoDestinationPlatform = "GITLAB"
	ConnectorDtoDestinationPlatformGLADLY                    ConnectorDtoDestinationPlatform = "GLADLY"
	ConnectorDtoDestinationPlatformGOCARDLESS                ConnectorDtoDestinationPlatform = "GOCARDLESS"
	ConnectorDtoDestinationPlatformGONG                      ConnectorDtoDestinationPlatform = "GONG"
	ConnectorDtoDestinationPlatformGOOGLE                    ConnectorDtoDestinationPlatform = "GOOGLE"
	ConnectorDtoDestinationPlatformGOOGLEADMANAGER           ConnectorDtoDestinationPlatform = "GOOGLE_AD_MANAGER"
	ConnectorDtoDestinationPlatformGOOGLEADS                 ConnectorDtoDestinationPlatform = "GOOGLE_ADS"
	ConnectorDtoDestinationPlatformGOOGLEANALYTICS           ConnectorDtoDestinationPlatform = "GOOGLE_ANALYTICS"
	ConnectorDtoDestinationPlatformGOOGLECALENDAR            ConnectorDtoDestinationPlatform = "GOOGLE_CALENDAR"
	ConnectorDtoDestinationPlatformGOOGLECAMPAIGNMANAGER     ConnectorDtoDestinationPlatform = "GOOGLE_CAMPAIGN_MANAGER"
	ConnectorDtoDestinationPlatformGOOGLECHROME              ConnectorDtoDestinationPlatform = "GOOGLE_CHROME"
	ConnectorDtoDestinationPlatformGOOGLECLOUD               ConnectorDtoDestinationPlatform = "GOOGLE_CLOUD"
	ConnectorDtoDestinationPlatformGOOGLECLOUDSTORAGE        ConnectorDtoDestinationPlatform = "GOOGLE_CLOUD_STORAGE"
	ConnectorDtoDestinationPlatformGOOGLEDISPLAY             ConnectorDtoDestinationPlatform = "GOOGLE_DISPLAY"
	ConnectorDtoDestinationPlatformGOOGLEDRIVE               ConnectorDtoDestinationPlatform = "GOOGLE_DRIVE"
	ConnectorDtoDestinationPlatformGOOGLEPLAY                ConnectorDtoDestinationPlatform = "GOOGLE_PLAY"
	ConnectorDtoDestinationPlatformGOOGLESEARCHADS360        ConnectorDtoDestinationPlatform = "GOOGLE_SEARCH_ADS_360"
	ConnectorDtoDestinationPlatformGOOGLESEARCHCONSOLE       ConnectorDtoDestinationPlatform = "GOOGLE_SEARCH_CONSOLE"
	ConnectorDtoDestinationPlatformGOOGLESHEETS              ConnectorDtoDestinationPlatform = "GOOGLE_SHEETS"
	ConnectorDtoDestinationPlatformGOOGLETASKS               ConnectorDtoDestinationPlatform = "GOOGLE_TASKS"
	ConnectorDtoDestinationPlatformGORGIAS                   ConnectorDtoDestinationPlatform = "GORGIAS"
	ConnectorDtoDestinationPlatformGREENHOUSE                ConnectorDtoDestinationPlatform = "GREENHOUSE"
	ConnectorDtoDestinationPlatformGREENPLUM                 ConnectorDtoDestinationPlatform = "GREENPLUM"
	ConnectorDtoDestinationPlatformGREENPOWERMONITOR         ConnectorDtoDestinationPlatform = "GREEN_POWER_MONITOR"
	ConnectorDtoDestinationPlatformGREPSR                    ConnectorDtoDestinationPlatform = "GREPSR"
	ConnectorDtoDestinationPlatformGRIN                      ConnectorDtoDestinationPlatform = "GRIN"
	ConnectorDtoDestinationPlatformGURU                      ConnectorDtoDestinationPlatform = "GURU"
	ConnectorDtoDestinationPlatformH2                        ConnectorDtoDestinationPlatform = "H2"
	ConnectorDtoDestinationPlatformHARVEST                   ConnectorDtoDestinationPlatform = "HARVEST"
	ConnectorDtoDestinationPlatformHDFS                      ConnectorDtoDestinationPlatform = "HDFS"
	ConnectorDtoDestinationPlatformHDFSSTORAGE               ConnectorDtoDestinationPlatform = "HDFS_STORAGE"
	ConnectorDtoDestinationPlatformHEAP                      ConnectorDtoDestinationPlatform = "HEAP"
	ConnectorDtoDestinationPlatformHEIGHT                    ConnectorDtoDestinationPlatform = "HEIGHT"
	ConnectorDtoDestinationPlatformHELPSCOUT                 ConnectorDtoDestinationPlatform = "HELP_SCOUT"
	ConnectorDtoDestinationPlatformHELPSHIFT                 ConnectorDtoDestinationPlatform = "HELPSHIFT"
	ConnectorDtoDestinationPlatformHEROKUKAFKA               ConnectorDtoDestinationPlatform = "HEROKU_KAFKA"
	ConnectorDtoDestinationPlatformHIBOB                     ConnectorDtoDestinationPlatform = "HIBOB"
	ConnectorDtoDestinationPlatformHIGHTOUCH                 ConnectorDtoDestinationPlatform = "HIGH_TOUCH"
	ConnectorDtoDestinationPlatformHIVE                      ConnectorDtoDestinationPlatform = "HIVE"
	ConnectorDtoDestinationPlatformHIVEPROCESS               ConnectorDtoDestinationPlatform = "HIVE_PROCESS"
	ConnectorDtoDestinationPlatformHOPIN                     ConnectorDtoDestinationPlatform = "HOPIN"
	ConnectorDtoDestinationPlatformHUBSPOT                   ConnectorDtoDestinationPlatform = "HUBSPOT"
	ConnectorDtoDestinationPlatformIMPACT                    ConnectorDtoDestinationPlatform = "IMPACT"
	ConnectorDtoDestinationPlatformINCIDENTIO                ConnectorDtoDestinationPlatform = "INCIDENT_IO"
	ConnectorDtoDestinationPlatformINFOBIP                   ConnectorDtoDestinationPlatform = "INFOBIP"
	ConnectorDtoDestinationPlatformINFORMATICA               ConnectorDtoDestinationPlatform = "INFORMATICA"
	ConnectorDtoDestinationPlatformINSIGHTLY                 ConnectorDtoDestinationPlatform = "INSIGHTLY"
	ConnectorDtoDestinationPlatformINSTAGRAM                 ConnectorDtoDestinationPlatform = "INSTAGRAM"
	ConnectorDtoDestinationPlatformINTERCOM                  ConnectorDtoDestinationPlatform = "INTERCOM"
	ConnectorDtoDestinationPlatformINVESTOPEDIA              ConnectorDtoDestinationPlatform = "INVESTOPEDIA"
	ConnectorDtoDestinationPlatformIRONCLAD                  ConnectorDtoDestinationPlatform = "IRONCLAD"
	ConnectorDtoDestinationPlatformIRONSOURCE                ConnectorDtoDestinationPlatform = "IRONSOURCE"
	ConnectorDtoDestinationPlatformITERABLE                  ConnectorDtoDestinationPlatform = "ITERABLE"
	ConnectorDtoDestinationPlatformJAVA                      ConnectorDtoDestinationPlatform = "JAVA"
	ConnectorDtoDestinationPlatformJENKINS                   ConnectorDtoDestinationPlatform = "JENKINS"
	ConnectorDtoDestinationPlatformJUSTCALL                  ConnectorDtoDestinationPlatform = "JUSTCALL"
	ConnectorDtoDestinationPlatformKANDJI                    ConnectorDtoDestinationPlatform = "KANDJI"
	ConnectorDtoDestinationPlatformKENSU                     ConnectorDtoDestinationPlatform = "KENSU"
	ConnectorDtoDestinationPlatformKHOROSCARE                ConnectorDtoDestinationPlatform = "KHOROS_CARE"
	ConnectorDtoDestinationPlatformKISSMETRICS               ConnectorDtoDestinationPlatform = "KISSMETRICS"
	ConnectorDtoDestinationPlatformKLAVIYO                   ConnectorDtoDestinationPlatform = "KLAVIYO"
	ConnectorDtoDestinationPlatformKNOWBE4                   ConnectorDtoDestinationPlatform = "KNOWBE4"
	ConnectorDtoDestinationPlatformKONNECTINSIGHTS           ConnectorDtoDestinationPlatform = "KONNECT_INSIGHTS"
	ConnectorDtoDestinationPlatformKUSTOMER                  ConnectorDtoDestinationPlatform = "KUSTOMER"
	ConnectorDtoDestinationPlatformLARIATDATA                ConnectorDtoDestinationPlatform = "LARIAT_DATA"
	ConnectorDtoDestinationPlatformLATTICE                   ConnectorDtoDestinationPlatform = "LATTICE"
	ConnectorDtoDestinationPlatformLAUNCHDARKLY              ConnectorDtoDestinationPlatform = "LAUNCH_DARKLY"
	ConnectorDtoDestinationPlatformLEARNUPON                 ConnectorDtoDestinationPlatform = "LEARN_UPON"
	ConnectorDtoDestinationPlatformLESSONLY                  ConnectorDtoDestinationPlatform = "LESSONLY"
	ConnectorDtoDestinationPlatformLEVER                     ConnectorDtoDestinationPlatform = "LEVER"
	ConnectorDtoDestinationPlatformLIFTOFF                   ConnectorDtoDestinationPlatform = "LIFTOFF"
	ConnectorDtoDestinationPlatformLIGHTDASH                 ConnectorDtoDestinationPlatform = "LIGHTDASH"
	ConnectorDtoDestinationPlatformLIGHTSPEED                ConnectorDtoDestinationPlatform = "LIGHTSPEED"
	ConnectorDtoDestinationPlatformLIGHTSUP                  ConnectorDtoDestinationPlatform = "LIGHTSUP"
	ConnectorDtoDestinationPlatformLINEAR                    ConnectorDtoDestinationPlatform = "LINEAR"
	ConnectorDtoDestinationPlatformLINKEDIN                  ConnectorDtoDestinationPlatform = "LINKEDIN"
	ConnectorDtoDestinationPlatformLIVECHAT                  ConnectorDtoDestinationPlatform = "LIVECHAT"
	ConnectorDtoDestinationPlatformLOADEDCOMMERCE            ConnectorDtoDestinationPlatform = "LOADED_COMMERCE"
	ConnectorDtoDestinationPlatformLOB                       ConnectorDtoDestinationPlatform = "LOB"
	ConnectorDtoDestinationPlatformLOOKER                    ConnectorDtoDestinationPlatform = "LOOKER"
	ConnectorDtoDestinationPlatformLOOP                      ConnectorDtoDestinationPlatform = "LOOP"
	ConnectorDtoDestinationPlatformLOOPIO                    ConnectorDtoDestinationPlatform = "LOOPIO"
	ConnectorDtoDestinationPlatformLUMA                      ConnectorDtoDestinationPlatform = "LUMA"
	ConnectorDtoDestinationPlatformMAGENTO                   ConnectorDtoDestinationPlatform = "MAGENTO"
	ConnectorDtoDestinationPlatformMAILCHIMP                 ConnectorDtoDestinationPlatform = "MAILCHIMP"
	ConnectorDtoDestinationPlatformMAILGUN                   ConnectorDtoDestinationPlatform = "MAILGUN"
	ConnectorDtoDestinationPlatformMANDRILL                  ConnectorDtoDestinationPlatform = "MANDRILL"
	ConnectorDtoDestinationPlatformMANTA                     ConnectorDtoDestinationPlatform = "MANTA"
	ConnectorDtoDestinationPlatformMARIADB                   ConnectorDtoDestinationPlatform = "MARIADB"
	ConnectorDtoDestinationPlatformMARINSOFTWARE             ConnectorDtoDestinationPlatform = "MARIN_SOFTWARE"
	ConnectorDtoDestinationPlatformMARKETO                   ConnectorDtoDestinationPlatform = "MARKETO"
	ConnectorDtoDestinationPlatformMATTERMOST                ConnectorDtoDestinationPlatform = "MATTERMOST"
	ConnectorDtoDestinationPlatformMAVENLINK                 ConnectorDtoDestinationPlatform = "MAVENLINK"
	ConnectorDtoDestinationPlatformMAXIO                     ConnectorDtoDestinationPlatform = "MAXIO"
	ConnectorDtoDestinationPlatformMEDALLIA                  ConnectorDtoDestinationPlatform = "MEDALLIA"
	ConnectorDtoDestinationPlatformMETA                      ConnectorDtoDestinationPlatform = "META"
	ConnectorDtoDestinationPlatformMETABASE                  ConnectorDtoDestinationPlatform = "METABASE"
	ConnectorDtoDestinationPlatformMETAPHOR                  ConnectorDtoDestinationPlatform = "METAPHOR"
	ConnectorDtoDestinationPlatformMETAPLANE                 ConnectorDtoDestinationPlatform = "METAPLANE"
	ConnectorDtoDestinationPlatformMICROSOFT                 ConnectorDtoDestinationPlatform = "MICROSOFT"
	ConnectorDtoDestinationPlatformMICROSOFTAZUREBLOBSTORAGE ConnectorDtoDestinationPlatform = "MICROSOFT_AZURE_BLOB_STORAGE"
	ConnectorDtoDestinationPlatformMICROSOFTAZUREML          ConnectorDtoDestinationPlatform = "MICROSOFT_AZURE_ML"
	ConnectorDtoDestinationPlatformMICROSOFTDYNAMICS         ConnectorDtoDestinationPlatform = "MICROSOFT_DYNAMICS"
	ConnectorDtoDestinationPlatformMICROSOFTONEDRIVE         ConnectorDtoDestinationPlatform = "MICROSOFT_ONEDRIVE"
	ConnectorDtoDestinationPlatformMICROSOFTPURVIEW          ConnectorDtoDestinationPlatform = "MICROSOFT_PURVIEW"
	ConnectorDtoDestinationPlatformMICROSOFTTEAMS            ConnectorDtoDestinationPlatform = "MICROSOFT_TEAMS"
	ConnectorDtoDestinationPlatformMICROSTRATEGY             ConnectorDtoDestinationPlatform = "MICROSTRATEGY"
	ConnectorDtoDestinationPlatformMIXMAX                    ConnectorDtoDestinationPlatform = "MIXMAX"
	ConnectorDtoDestinationPlatformMIXPANEL                  ConnectorDtoDestinationPlatform = "MIXPANEL"
	ConnectorDtoDestinationPlatformMONDAYCOM                 ConnectorDtoDestinationPlatform = "MONDAY_COM"
	ConnectorDtoDestinationPlatformMONGODB                   ConnectorDtoDestinationPlatform = "MONGODB"
	ConnectorDtoDestinationPlatformMONTECARLO                ConnectorDtoDestinationPlatform = "MONTE_CARLO"
	ConnectorDtoDestinationPlatformMOUNTAIN                  ConnectorDtoDestinationPlatform = "MOUNTAIN"
	ConnectorDtoDestinationPlatformMSSQL                     ConnectorDtoDestinationPlatform = "MSSQL"
	ConnectorDtoDestinationPlatformMULESOFT                  ConnectorDtoDestinationPlatform = "MULESOFT"
	ConnectorDtoDestinationPlatformMUX                       ConnectorDtoDestinationPlatform = "MUX"
	ConnectorDtoDestinationPlatformMWAA                      ConnectorDtoDestinationPlatform = "MWAA"
	ConnectorDtoDestinationPlatformMYSQL                     ConnectorDtoDestinationPlatform = "MYSQL"
	ConnectorDtoDestinationPlatformNAMELY                    ConnectorDtoDestinationPlatform = "NAMELY"
	ConnectorDtoDestinationPlatformNCINO                     ConnectorDtoDestinationPlatform = "NCINO"
	ConnectorDtoDestinationPlatformNETSUITEANALYTICS         ConnectorDtoDestinationPlatform = "NETSUITE_ANALYTICS"
	ConnectorDtoDestinationPlatformNEWRELIC                  ConnectorDtoDestinationPlatform = "NEW_RELIC"
	ConnectorDtoDestinationPlatformNOTION                    ConnectorDtoDestinationPlatform = "NOTION"
	ConnectorDtoDestinationPlatformNYLAS                     ConnectorDtoDestinationPlatform = "NYLAS"
	ConnectorDtoDestinationPlatformOBSERVE                   ConnectorDtoDestinationPlatform = "OBSERVE"
	ConnectorDtoDestinationPlatformOCTOPAI                   ConnectorDtoDestinationPlatform = "OCTOPAI"
	ConnectorDtoDestinationPlatformOKTA                      ConnectorDtoDestinationPlatform = "OKTA"
	ConnectorDtoDestinationPlatformOPENAI                    ConnectorDtoDestinationPlatform = "OPEN_AI"
	ConnectorDtoDestinationPlatformOPENDATADC                ConnectorDtoDestinationPlatform = "OPEN_DATA_DC"
	ConnectorDtoDestinationPlatformOPENEXCHANGESRATES        ConnectorDtoDestinationPlatform = "OPEN_EXCHANGES_RATES"
	ConnectorDtoDestinationPlatformOPENSEARCH                ConnectorDtoDestinationPlatform = "OPEN_SEARCH"
	ConnectorDtoDestinationPlatformOPTIMIZELY                ConnectorDtoDestinationPlatform = "OPTIMIZELY"
	ConnectorDtoDestinationPlatformORACLE                    ConnectorDtoDestinationPlatform = "ORACLE"
	ConnectorDtoDestinationPlatformORBITCOMMUNITYPLATFORM    ConnectorDtoDestinationPlatform = "ORBIT_COMMUNITY_PLATFORM"
	ConnectorDtoDestinationPlatformORDWAY                    ConnectorDtoDestinationPlatform = "ORDWAY"
	ConnectorDtoDestinationPlatformORTTO                     ConnectorDtoDestinationPlatform = "ORTTO"
	ConnectorDtoDestinationPlatformOSCOMMERCE                ConnectorDtoDestinationPlatform = "OS_COMMERCE"
	ConnectorDtoDestinationPlatformOUTBRAIN                  ConnectorDtoDestinationPlatform = "OUTBRAIN"
	ConnectorDtoDestinationPlatformOUTREACH                  ConnectorDtoDestinationPlatform = "OUTREACH"
	ConnectorDtoDestinationPlatformOVALEDGE                  ConnectorDtoDestinationPlatform = "OVALEDGE"
	ConnectorDtoDestinationPlatformPAGERDUTY                 ConnectorDtoDestinationPlatform = "PAGERDUTY"
	ConnectorDtoDestinationPlatformPAGERSHIFT                ConnectorDtoDestinationPlatform = "PAGERSHIFT"
	ConnectorDtoDestinationPlatformPAYPAL                    ConnectorDtoDestinationPlatform = "PAYPAL"
	ConnectorDtoDestinationPlatformPENDO                     ConnectorDtoDestinationPlatform = "PENDO"
	ConnectorDtoDestinationPlatformPINGDOM                   ConnectorDtoDestinationPlatform = "PINGDOM"
	ConnectorDtoDestinationPlatformPINTEREST                 ConnectorDtoDestinationPlatform = "PINTEREST"
	ConnectorDtoDestinationPlatformPIPE17                    ConnectorDtoDestinationPlatform = "PIPE17"
	ConnectorDtoDestinationPlatformPIPEDRIVE                 ConnectorDtoDestinationPlatform = "PIPEDRIVE"
	ConnectorDtoDestinationPlatformPIVOTALTRACKER            ConnectorDtoDestinationPlatform = "PIVOTAL_TRACKER"
	ConnectorDtoDestinationPlatformPLAYVOX                   ConnectorDtoDestinationPlatform = "PLAYVOX"
	ConnectorDtoDestinationPlatformPOSTGRES                  ConnectorDtoDestinationPlatform = "POSTGRES"
	ConnectorDtoDestinationPlatformPOSTHOG                   ConnectorDtoDestinationPlatform = "POSTHOG"
	ConnectorDtoDestinationPlatformPOWERBI                   ConnectorDtoDestinationPlatform = "POWER_BI"
	ConnectorDtoDestinationPlatformPOWERSCHOOL               ConnectorDtoDestinationPlatform = "POWERSCHOOL"
	ConnectorDtoDestinationPlatformPREFECT                   ConnectorDtoDestinationPlatform = "PREFECT"
	ConnectorDtoDestinationPlatformPRESTASHOP                ConnectorDtoDestinationPlatform = "PRESTASHOP"
	ConnectorDtoDestinationPlatformPRESTO                    ConnectorDtoDestinationPlatform = "PRESTO"
	ConnectorDtoDestinationPlatformPRODUCTBOARD              ConnectorDtoDestinationPlatform = "PRODUCTBOARD"
	ConnectorDtoDestinationPlatformPYTHON                    ConnectorDtoDestinationPlatform = "PYTHON"
	ConnectorDtoDestinationPlatformQLIK                      ConnectorDtoDestinationPlatform = "QLIK"
	ConnectorDtoDestinationPlatformQUALAROO                  ConnectorDtoDestinationPlatform = "QUALAROO"
	ConnectorDtoDestinationPlatformQUALTRICS                 ConnectorDtoDestinationPlatform = "QUALTRICS"
	ConnectorDtoDestinationPlatformQUICKBOOKS                ConnectorDtoDestinationPlatform = "QUICKBOOKS"
	ConnectorDtoDestinationPlatformQUICKSIGHT                ConnectorDtoDestinationPlatform = "QUICKSIGHT"
	ConnectorDtoDestinationPlatformRAMP                      ConnectorDtoDestinationPlatform = "RAMP"
	ConnectorDtoDestinationPlatformRARIBLE                   ConnectorDtoDestinationPlatform = "RARIBLE"
	ConnectorDtoDestinationPlatformRECHARGE                  ConnectorDtoDestinationPlatform = "RECHARGE"
	ConnectorDtoDestinationPlatformRECURLY                   ConnectorDtoDestinationPlatform = "RECURLY"
	ConnectorDtoDestinationPlatformREDDIT                    ConnectorDtoDestinationPlatform = "REDDIT"
	ConnectorDtoDestinationPlatformREDSHIFT                  ConnectorDtoDestinationPlatform = "REDSHIFT"
	ConnectorDtoDestinationPlatformRELTIO                    ConnectorDtoDestinationPlatform = "RELTIO"
	ConnectorDtoDestinationPlatformREPLYIO                   ConnectorDtoDestinationPlatform = "REPLY_IO"
	ConnectorDtoDestinationPlatformRETAILNEXT                ConnectorDtoDestinationPlatform = "RETAILNEXT"
	ConnectorDtoDestinationPlatformRETENTLY                  ConnectorDtoDestinationPlatform = "RETENTLY"
	ConnectorDtoDestinationPlatformREVELSYSTEMS              ConnectorDtoDestinationPlatform = "REVEL_SYSTEMS"
	ConnectorDtoDestinationPlatformRINGCENTRAL               ConnectorDtoDestinationPlatform = "RINGCENTRAL"
	ConnectorDtoDestinationPlatformRIPPLING                  ConnectorDtoDestinationPlatform = "RIPPLING"
	ConnectorDtoDestinationPlatformROLLBAR                   ConnectorDtoDestinationPlatform = "ROLLBAR"
	ConnectorDtoDestinationPlatformROOTLY                    ConnectorDtoDestinationPlatform = "ROOTLY"
	ConnectorDtoDestinationPlatformS3                        ConnectorDtoDestinationPlatform = "S3"
	ConnectorDtoDestinationPlatformSAGEHR                    ConnectorDtoDestinationPlatform = "SAGE_HR"
	ConnectorDtoDestinationPlatformSAGEINTACCT               ConnectorDtoDestinationPlatform = "SAGE_INTACCT"
	ConnectorDtoDestinationPlatformSAILTHRU                  ConnectorDtoDestinationPlatform = "SAILTHRU"
	ConnectorDtoDestinationPlatformSALESFORCE                ConnectorDtoDestinationPlatform = "SALESFORCE"
	ConnectorDtoDestinationPlatformSALESLOFT                 ConnectorDtoDestinationPlatform = "SALESLOFT"
	ConnectorDtoDestinationPlatformSALSIFY                   ConnectorDtoDestinationPlatform = "SALSIFY"
	ConnectorDtoDestinationPlatformSAMSARA                   ConnectorDtoDestinationPlatform = "SAMSARA"
	ConnectorDtoDestinationPlatformSAP                       ConnectorDtoDestinationPlatform = "SAP"
	ConnectorDtoDestinationPlatformSAPCONCUR                 ConnectorDtoDestinationPlatform = "SAP_CONCUR"
	ConnectorDtoDestinationPlatformSCORM                     ConnectorDtoDestinationPlatform = "SCORM"
	ConnectorDtoDestinationPlatformSECODA                    ConnectorDtoDestinationPlatform = "SECODA"
	ConnectorDtoDestinationPlatformSECURITYJOURNEY           ConnectorDtoDestinationPlatform = "SECURITY_JOURNEY"
	ConnectorDtoDestinationPlatformSEGMENT                   ConnectorDtoDestinationPlatform = "SEGMENT"
	ConnectorDtoDestinationPlatformSELECTSTAR                ConnectorDtoDestinationPlatform = "SELECT_STAR"
	ConnectorDtoDestinationPlatformSENDGRID                  ConnectorDtoDestinationPlatform = "SENDGRID"
	ConnectorDtoDestinationPlatformSERVICENOW                ConnectorDtoDestinationPlatform = "SERVICE_NOW"
	ConnectorDtoDestinationPlatformSFTP                      ConnectorDtoDestinationPlatform = "SFTP"
	ConnectorDtoDestinationPlatformSHAREPOINT                ConnectorDtoDestinationPlatform = "SHAREPOINT"
	ConnectorDtoDestinationPlatformSHARETRIBE                ConnectorDtoDestinationPlatform = "SHARETRIBE"
	ConnectorDtoDestinationPlatformSHIPHERO                  ConnectorDtoDestinationPlatform = "SHIPHERO"
	ConnectorDtoDestinationPlatformSHIPSTATION               ConnectorDtoDestinationPlatform = "SHIPSTATION"
	ConnectorDtoDestinationPlatformSHOPIFY                   ConnectorDtoDestinationPlatform = "SHOPIFY"
	ConnectorDtoDestinationPlatformSHOPWARE                  ConnectorDtoDestinationPlatform = "SHOPWARE"
	ConnectorDtoDestinationPlatformSHORTIO                   ConnectorDtoDestinationPlatform = "SHORT_IO"
	ConnectorDtoDestinationPlatformSIFFLET                   ConnectorDtoDestinationPlatform = "SIFFLET"
	ConnectorDtoDestinationPlatformSIGMA                     ConnectorDtoDestinationPlatform = "SIGMA"
	ConnectorDtoDestinationPlatformSIMPLECAST                ConnectorDtoDestinationPlatform = "SIMPLECAST"
	ConnectorDtoDestinationPlatformSIMPLESAT                 ConnectorDtoDestinationPlatform = "SIMPLESAT"
	ConnectorDtoDestinationPlatformSINGLESTORE               ConnectorDtoDestinationPlatform = "SINGLESTORE"
	ConnectorDtoDestinationPlatformSISENSE                   ConnectorDtoDestinationPlatform = "SISENSE"
	ConnectorDtoDestinationPlatformSIXSENSE                  ConnectorDtoDestinationPlatform = "SIXSENSE"
	ConnectorDtoDestinationPlatformSKILLJAR                  ConnectorDtoDestinationPlatform = "SKILLJAR"
	ConnectorDtoDestinationPlatformSKUVAULT                  ConnectorDtoDestinationPlatform = "SKUVAULT"
	ConnectorDtoDestinationPlatformSLAB                      ConnectorDtoDestinationPlatform = "SLAB"
	ConnectorDtoDestinationPlatformSLACK                     ConnectorDtoDestinationPlatform = "SLACK"
	ConnectorDtoDestinationPlatformSMADEX                    ConnectorDtoDestinationPlatform = "SMADEX"
	ConnectorDtoDestinationPlatformSNAPCHAT                  ConnectorDtoDestinationPlatform = "SNAPCHAT"
	ConnectorDtoDestinationPlatformSNOWFLAKE                 ConnectorDtoDestinationPlatform = "SNOWFLAKE"
	ConnectorDtoDestinationPlatformSNOWPLOW                  ConnectorDtoDestinationPlatform = "SNOWPLOW"
	ConnectorDtoDestinationPlatformSODA                      ConnectorDtoDestinationPlatform = "SODA"
	ConnectorDtoDestinationPlatformSONARQUBE                 ConnectorDtoDestinationPlatform = "SONARQUBE"
	ConnectorDtoDestinationPlatformSPARKPROCESS              ConnectorDtoDestinationPlatform = "SPARK_PROCESS"
	ConnectorDtoDestinationPlatformSPLITIO                   ConnectorDtoDestinationPlatform = "SPLIT_IO"
	ConnectorDtoDestinationPlatformSPLUNK                    ConnectorDtoDestinationPlatform = "SPLUNK"
	ConnectorDtoDestinationPlatformSPOTIFY                   ConnectorDtoDestinationPlatform = "SPOTIFY"
	ConnectorDtoDestinationPlatformSPREECOMMERCE             ConnectorDtoDestinationPlatform = "SPREE_COMMERCE"
	ConnectorDtoDestinationPlatformSPROUTSOCIAL              ConnectorDtoDestinationPlatform = "SPROUT_SOCIAL"
	ConnectorDtoDestinationPlatformSQUARE                    ConnectorDtoDestinationPlatform = "SQUARE"
	ConnectorDtoDestinationPlatformSQUARESPACE               ConnectorDtoDestinationPlatform = "SQUARESPACE"
	ConnectorDtoDestinationPlatformSTACKADAPT                ConnectorDtoDestinationPlatform = "STACK_ADAPT"
	ConnectorDtoDestinationPlatformSTATSIG                   ConnectorDtoDestinationPlatform = "STATSIG"
	ConnectorDtoDestinationPlatformSTITCH                    ConnectorDtoDestinationPlatform = "STITCH"
	ConnectorDtoDestinationPlatformSTRIPE                    ConnectorDtoDestinationPlatform = "STRIPE"
	ConnectorDtoDestinationPlatformSTYLIGHT                  ConnectorDtoDestinationPlatform = "STYLIGHT"
	ConnectorDtoDestinationPlatformSUBSCRIPT                 ConnectorDtoDestinationPlatform = "SUBSCRIPT"
	ConnectorDtoDestinationPlatformSYNAPSE                   ConnectorDtoDestinationPlatform = "SYNAPSE"
	ConnectorDtoDestinationPlatformTABLEAU                   ConnectorDtoDestinationPlatform = "TABLEAU"
	ConnectorDtoDestinationPlatformTABOOLA                   ConnectorDtoDestinationPlatform = "TABOOLA"
	ConnectorDtoDestinationPlatformTALEND                    ConnectorDtoDestinationPlatform = "TALEND"
	ConnectorDtoDestinationPlatformTALKDESK                  ConnectorDtoDestinationPlatform = "TALKDESK"
	ConnectorDtoDestinationPlatformTALKWALKER                ConnectorDtoDestinationPlatform = "TALKWALKER"
	ConnectorDtoDestinationPlatformTEAMWORKCOM               ConnectorDtoDestinationPlatform = "TEAMWORK_COM"
	ConnectorDtoDestinationPlatformTEMPOIO                   ConnectorDtoDestinationPlatform = "TEMPO_IO"
	ConnectorDtoDestinationPlatformTERADATA                  ConnectorDtoDestinationPlatform = "TERADATA"
	ConnectorDtoDestinationPlatformTERRAFORM                 ConnectorDtoDestinationPlatform = "TERRAFORM"
	ConnectorDtoDestinationPlatformTHETRADEDESK              ConnectorDtoDestinationPlatform = "THE_TRADE_DESK"
	ConnectorDtoDestinationPlatformTHOUGHTSPOT               ConnectorDtoDestinationPlatform = "THOUGHT_SPOT"
	ConnectorDtoDestinationPlatformTHREESIXTYLEARNING        ConnectorDtoDestinationPlatform = "THREESIXTYLEARNING"
	ConnectorDtoDestinationPlatformTIKTOK                    ConnectorDtoDestinationPlatform = "TIKTOK"
	ConnectorDtoDestinationPlatformTOGGL                     ConnectorDtoDestinationPlatform = "TOGGL"
	ConnectorDtoDestinationPlatformTRANSCEND                 ConnectorDtoDestinationPlatform = "TRANSCEND"
	ConnectorDtoDestinationPlatformTRELLO                    ConnectorDtoDestinationPlatform = "TRELLO"
	ConnectorDtoDestinationPlatformTRINET                    ConnectorDtoDestinationPlatform = "TRINET"
	ConnectorDtoDestinationPlatformTRISOLUTE                 ConnectorDtoDestinationPlatform = "TRISOLUTE"
	ConnectorDtoDestinationPlatformTWILIO                    ConnectorDtoDestinationPlatform = "TWILIO"
	ConnectorDtoDestinationPlatformTYPEFORM                  ConnectorDtoDestinationPlatform = "TYPEFORM"
	ConnectorDtoDestinationPlatformUNKNOWN                   ConnectorDtoDestinationPlatform = "UNKNOWN"
	ConnectorDtoDestinationPlatformUPLAND                    ConnectorDtoDestinationPlatform = "UPLAND"
	ConnectorDtoDestinationPlatformUSERVOICE                 ConnectorDtoDestinationPlatform = "USERVOICE"
	ConnectorDtoDestinationPlatformVALIDIO                   ConnectorDtoDestinationPlatform = "VALIDIO"
	ConnectorDtoDestinationPlatformVEEVA                     ConnectorDtoDestinationPlatform = "VEEVA"
	ConnectorDtoDestinationPlatformVERIZONMEDIA              ConnectorDtoDestinationPlatform = "VERIZON_MEDIA"
	ConnectorDtoDestinationPlatformVITALLY                   ConnectorDtoDestinationPlatform = "VITALLY"
	ConnectorDtoDestinationPlatformVONAGE                    ConnectorDtoDestinationPlatform = "VONAGE"
	ConnectorDtoDestinationPlatformVUETIFY                   ConnectorDtoDestinationPlatform = "VUETIFY"
	ConnectorDtoDestinationPlatformWEBHOOKS                  ConnectorDtoDestinationPlatform = "WEBHOOKS"
	ConnectorDtoDestinationPlatformWEBSCRAPER                ConnectorDtoDestinationPlatform = "WEB_SCRAPER"
	ConnectorDtoDestinationPlatformWHENIWORK                 ConnectorDtoDestinationPlatform = "WHEN_I_WORK"
	ConnectorDtoDestinationPlatformWHEREFOUR                 ConnectorDtoDestinationPlatform = "WHEREFOUR"
	ConnectorDtoDestinationPlatformWIKIPEDIA                 ConnectorDtoDestinationPlatform = "WIKIPEDIA"
	ConnectorDtoDestinationPlatformWOOCOMMERCE               ConnectorDtoDestinationPlatform = "WOOCOMMERCE"
	ConnectorDtoDestinationPlatformWORDPRESS                 ConnectorDtoDestinationPlatform = "WORDPRESS"
	ConnectorDtoDestinationPlatformWORKABLE                  ConnectorDtoDestinationPlatform = "WORKABLE"
	ConnectorDtoDestinationPlatformWORKDAY                   ConnectorDtoDestinationPlatform = "WORKDAY"
	ConnectorDtoDestinationPlatformWORKFLOWMAX               ConnectorDtoDestinationPlatform = "WORKFLOW_MAX"
	ConnectorDtoDestinationPlatformWRIKE                     ConnectorDtoDestinationPlatform = "WRIKE"
	ConnectorDtoDestinationPlatformX                         ConnectorDtoDestinationPlatform = "X"
	ConnectorDtoDestinationPlatformXERO                      ConnectorDtoDestinationPlatform = "XERO"
	ConnectorDtoDestinationPlatformXRAY                      ConnectorDtoDestinationPlatform = "XRAY"
	ConnectorDtoDestinationPlatformYAHOO                     ConnectorDtoDestinationPlatform = "YAHOO"
	ConnectorDtoDestinationPlatformYOTPO                     ConnectorDtoDestinationPlatform = "YOTPO"
	ConnectorDtoDestinationPlatformYOUTUBE                   ConnectorDtoDestinationPlatform = "YOUTUBE"
	ConnectorDtoDestinationPlatformZEENEA                    ConnectorDtoDestinationPlatform = "ZEENEA"
	ConnectorDtoDestinationPlatformZENCART                   ConnectorDtoDestinationPlatform = "ZEN_CART"
	ConnectorDtoDestinationPlatformZENDESKCHAT               ConnectorDtoDestinationPlatform = "ZENDESK_CHAT"
	ConnectorDtoDestinationPlatformZENDESKSELL               ConnectorDtoDestinationPlatform = "ZENDESK_SELL"
	ConnectorDtoDestinationPlatformZENDESKSUNSHINE           ConnectorDtoDestinationPlatform = "ZENDESK_SUNSHINE"
	ConnectorDtoDestinationPlatformZENDESKSUPPORT            ConnectorDtoDestinationPlatform = "ZENDESK_SUPPORT"
	ConnectorDtoDestinationPlatformZINGTREE                  ConnectorDtoDestinationPlatform = "ZINGTREE"
	ConnectorDtoDestinationPlatformZOHOBOOKS                 ConnectorDtoDestinationPlatform = "ZOHO_BOOKS"
	ConnectorDtoDestinationPlatformZOHOCAMPAIGNS             ConnectorDtoDestinationPlatform = "ZOHO_CAMPAIGNS"
	ConnectorDtoDestinationPlatformZOHOCRM                   ConnectorDtoDestinationPlatform = "ZOHO_CRM"
	ConnectorDtoDestinationPlatformZOOM                      ConnectorDtoDestinationPlatform = "ZOOM"
	ConnectorDtoDestinationPlatformZUORA                     ConnectorDtoDestinationPlatform = "ZUORA"
)

// Defines values for ConnectorDtoSourcePlatform.
const (
	ConnectorDtoSourcePlatformACCELDATA                 ConnectorDtoSourcePlatform = "ACCELDATA"
	ConnectorDtoSourcePlatformACRYLDATA                 ConnectorDtoSourcePlatform = "ACRYL_DATA"
	ConnectorDtoSourcePlatformACTIANVECTOR              ConnectorDtoSourcePlatform = "ACTIAN_VECTOR"
	ConnectorDtoSourcePlatformACTIVECAMPAIGN            ConnectorDtoSourcePlatform = "ACTIVE_CAMPAIGN"
	ConnectorDtoSourcePlatformADA                       ConnectorDtoSourcePlatform = "ADA"
	ConnectorDtoSourcePlatformADJUST                    ConnectorDtoSourcePlatform = "ADJUST"
	ConnectorDtoSourcePlatformADOBE                     ConnectorDtoSourcePlatform = "ADOBE"
	ConnectorDtoSourcePlatformADPWFN                    ConnectorDtoSourcePlatform = "ADP_WFN"
	ConnectorDtoSourcePlatformADROLL                    ConnectorDtoSourcePlatform = "ADROLL"
	ConnectorDtoSourcePlatformAFFINITY                  ConnectorDtoSourcePlatform = "AFFINITY"
	ConnectorDtoSourcePlatformAIRBYTE                   ConnectorDtoSourcePlatform = "AIRBYTE"
	ConnectorDtoSourcePlatformAIRCALL                   ConnectorDtoSourcePlatform = "AIRCALL"
	ConnectorDtoSourcePlatformAIRFLOW                   ConnectorDtoSourcePlatform = "AIRFLOW"
	ConnectorDtoSourcePlatformAIRTABLE                  ConnectorDtoSourcePlatform = "AIRTABLE"
	ConnectorDtoSourcePlatformALATION                   ConnectorDtoSourcePlatform = "ALATION"
	ConnectorDtoSourcePlatformALCHEMER                  ConnectorDtoSourcePlatform = "ALCHEMER"
	ConnectorDtoSourcePlatformALVINAI                   ConnectorDtoSourcePlatform = "ALVIN_AI"
	ConnectorDtoSourcePlatformAMAZON                    ConnectorDtoSourcePlatform = "AMAZON"
	ConnectorDtoSourcePlatformAMAZONCLOUDFRONT          ConnectorDtoSourcePlatform = "AMAZON_CLOUDFRONT"
	ConnectorDtoSourcePlatformAMAZONDOCUMENTDB          ConnectorDtoSourcePlatform = "AMAZON_DOCUMENTDB"
	ConnectorDtoSourcePlatformAMAZONDYNAMODB            ConnectorDtoSourcePlatform = "AMAZON_DYNAMODB"
	ConnectorDtoSourcePlatformAMAZONFIREHOSE            ConnectorDtoSourcePlatform = "AMAZON_FIREHOSE"
	ConnectorDtoSourcePlatformAMAZONSAGEMAKER           ConnectorDtoSourcePlatform = "AMAZON_SAGEMAKER"
	ConnectorDtoSourcePlatformAMAZONSELLINGPARTNER      ConnectorDtoSourcePlatform = "AMAZON_SELLING_PARTNER"
	ConnectorDtoSourcePlatformAMPLITUDE                 ConnectorDtoSourcePlatform = "AMPLITUDE"
	ConnectorDtoSourcePlatformANAPLAN                   ConnectorDtoSourcePlatform = "ANAPLAN"
	ConnectorDtoSourcePlatformANOMALO                   ConnectorDtoSourcePlatform = "ANOMALO"
	ConnectorDtoSourcePlatformAPACHEKAFKA               ConnectorDtoSourcePlatform = "APACHE_KAFKA"
	ConnectorDtoSourcePlatformAPACHESPARK               ConnectorDtoSourcePlatform = "APACHE_SPARK"
	ConnectorDtoSourcePlatformAPPCUES                   ConnectorDtoSourcePlatform = "APPCUES"
	ConnectorDtoSourcePlatformAPPFIGURES                ConnectorDtoSourcePlatform = "APPFIGURES"
	ConnectorDtoSourcePlatformAPPLE                     ConnectorDtoSourcePlatform = "APPLE"
	ConnectorDtoSourcePlatformAPPLEAPPSTORE             ConnectorDtoSourcePlatform = "APPLE_APP_STORE"
	ConnectorDtoSourcePlatformAPPSFLYER                 ConnectorDtoSourcePlatform = "APPSFLYER"
	ConnectorDtoSourcePlatformASANA                     ConnectorDtoSourcePlatform = "ASANA"
	ConnectorDtoSourcePlatformASSEMBLED                 ConnectorDtoSourcePlatform = "ASSEMBLED"
	ConnectorDtoSourcePlatformATHENA                    ConnectorDtoSourcePlatform = "ATHENA"
	ConnectorDtoSourcePlatformATLAN                     ConnectorDtoSourcePlatform = "ATLAN"
	ConnectorDtoSourcePlatformATLASSIANCONFLUENCE       ConnectorDtoSourcePlatform = "ATLASSIAN_CONFLUENCE"
	ConnectorDtoSourcePlatformATLASSIANJIRA             ConnectorDtoSourcePlatform = "ATLASSIAN_JIRA"
	ConnectorDtoSourcePlatformATLASSIANOPSGENIE         ConnectorDtoSourcePlatform = "ATLASSIAN_OPSGENIE"
	ConnectorDtoSourcePlatformAUTH0                     ConnectorDtoSourcePlatform = "AUTH0"
	ConnectorDtoSourcePlatformAUTODESKBIM360            ConnectorDtoSourcePlatform = "AUTODESK_BIM_360"
	ConnectorDtoSourcePlatformAWIN                      ConnectorDtoSourcePlatform = "AWIN"
	ConnectorDtoSourcePlatformAWSCLOUDTRAIL             ConnectorDtoSourcePlatform = "AWS_CLOUDTRAIL"
	ConnectorDtoSourcePlatformAWSCOSTEXPLORER           ConnectorDtoSourcePlatform = "AWS_COST_EXPLORER"
	ConnectorDtoSourcePlatformAWSINVENTORY              ConnectorDtoSourcePlatform = "AWS_INVENTORY"
	ConnectorDtoSourcePlatformAWSLAMBDA                 ConnectorDtoSourcePlatform = "AWS_LAMBDA"
	ConnectorDtoSourcePlatformAZURE                     ConnectorDtoSourcePlatform = "AZURE"
	ConnectorDtoSourcePlatformBALLOTREADY               ConnectorDtoSourcePlatform = "BALLOT_READY"
	ConnectorDtoSourcePlatformBAMBOOHR                  ConnectorDtoSourcePlatform = "BAMBOOHR"
	ConnectorDtoSourcePlatformBIGCOMMERCE               ConnectorDtoSourcePlatform = "BIGCOMMERCE"
	ConnectorDtoSourcePlatformBIGEYE                    ConnectorDtoSourcePlatform = "BIGEYE"
	ConnectorDtoSourcePlatformBIGQUERY                  ConnectorDtoSourcePlatform = "BIGQUERY"
	ConnectorDtoSourcePlatformBILLINGPLATFORM           ConnectorDtoSourcePlatform = "BILLINGPLATFORM"
	ConnectorDtoSourcePlatformBIRDEYE                   ConnectorDtoSourcePlatform = "BIRDEYE"
	ConnectorDtoSourcePlatformBLACKBOARD                ConnectorDtoSourcePlatform = "BLACKBOARD"
	ConnectorDtoSourcePlatformBOX                       ConnectorDtoSourcePlatform = "BOX"
	ConnectorDtoSourcePlatformBRAINTREE                 ConnectorDtoSourcePlatform = "BRAINTREE"
	ConnectorDtoSourcePlatformBRAZE                     ConnectorDtoSourcePlatform = "BRAZE"
	ConnectorDtoSourcePlatformBREVO                     ConnectorDtoSourcePlatform = "BREVO"
	ConnectorDtoSourcePlatformBREX                      ConnectorDtoSourcePlatform = "BREX"
	ConnectorDtoSourcePlatformBUILDKITE                 ConnectorDtoSourcePlatform = "BUILDKITE"
	ConnectorDtoSourcePlatformBUZZSPROUT                ConnectorDtoSourcePlatform = "BUZZSPROUT"
	ConnectorDtoSourcePlatformCALENDLY                  ConnectorDtoSourcePlatform = "CALENDLY"
	ConnectorDtoSourcePlatformCAMPAIGNMONITOR           ConnectorDtoSourcePlatform = "CAMPAIGN_MONITOR"
	ConnectorDtoSourcePlatformCANNY                     ConnectorDtoSourcePlatform = "CANNY"
	ConnectorDtoSourcePlatformCANVAS                    ConnectorDtoSourcePlatform = "CANVAS"
	ConnectorDtoSourcePlatformCAPTERRA                  ConnectorDtoSourcePlatform = "CAPTERRA"
	ConnectorDtoSourcePlatformCASTORDOC                 ConnectorDtoSourcePlatform = "CASTOR_DOC"
	ConnectorDtoSourcePlatformCENSUS                    ConnectorDtoSourcePlatform = "CENSUS"
	ConnectorDtoSourcePlatformCERTINIA                  ConnectorDtoSourcePlatform = "CERTINIA"
	ConnectorDtoSourcePlatformCHAMELEON                 ConnectorDtoSourcePlatform = "CHAMELEON"
	ConnectorDtoSourcePlatformCHANNELADVISOR            ConnectorDtoSourcePlatform = "CHANNEL_ADVISOR"
	ConnectorDtoSourcePlatformCHARGEBEE                 ConnectorDtoSourcePlatform = "CHARGEBEE"
	ConnectorDtoSourcePlatformCHARGEDESK                ConnectorDtoSourcePlatform = "CHARGEDESK"
	ConnectorDtoSourcePlatformCHARTMOGUL                ConnectorDtoSourcePlatform = "CHARTMOGUL"
	ConnectorDtoSourcePlatformCHORUSAI                  ConnectorDtoSourcePlatform = "CHORUS_AI"
	ConnectorDtoSourcePlatformCHURNKEY                  ConnectorDtoSourcePlatform = "CHURNKEY"
	ConnectorDtoSourcePlatformCHURNZERO                 ConnectorDtoSourcePlatform = "CHURNZERO"
	ConnectorDtoSourcePlatformCIMIS                     ConnectorDtoSourcePlatform = "CIMIS"
	ConnectorDtoSourcePlatformCIN7                      ConnectorDtoSourcePlatform = "CIN7"
	ConnectorDtoSourcePlatformCIRCLECI                  ConnectorDtoSourcePlatform = "CIRCLE_CI"
	ConnectorDtoSourcePlatformCLARI                     ConnectorDtoSourcePlatform = "CLARI"
	ConnectorDtoSourcePlatformCLICKUP                   ConnectorDtoSourcePlatform = "CLICKUP"
	ConnectorDtoSourcePlatformCLIFFAI                   ConnectorDtoSourcePlatform = "CLIFF_AI"
	ConnectorDtoSourcePlatformCLOSE                     ConnectorDtoSourcePlatform = "CLOSE"
	ConnectorDtoSourcePlatformCOLLIBRA                  ConnectorDtoSourcePlatform = "COLLIBRA"
	ConnectorDtoSourcePlatformCOMMERCETOOLS             ConnectorDtoSourcePlatform = "COMMERCETOOLS"
	ConnectorDtoSourcePlatformCOMPOSER                  ConnectorDtoSourcePlatform = "COMPOSER"
	ConnectorDtoSourcePlatformCONFLUENTCLOUD            ConnectorDtoSourcePlatform = "CONFLUENT_CLOUD"
	ConnectorDtoSourcePlatformCONTRASTSECURITY          ConnectorDtoSourcePlatform = "CONTRAST_SECURITY"
	ConnectorDtoSourcePlatformCOUPA                     ConnectorDtoSourcePlatform = "COUPA"
	ConnectorDtoSourcePlatformCRITEO                    ConnectorDtoSourcePlatform = "CRITEO"
	ConnectorDtoSourcePlatformCROSSBEAM                 ConnectorDtoSourcePlatform = "CROSSBEAM"
	ConnectorDtoSourcePlatformCRUNCHBASE                ConnectorDtoSourcePlatform = "CRUNCHBASE"
	ConnectorDtoSourcePlatformCUSTOMERIO                ConnectorDtoSourcePlatform = "CUSTOMER_IO"
	ConnectorDtoSourcePlatformD2LBRIGHTSPACE            ConnectorDtoSourcePlatform = "D2L_BRIGHTSPACE"
	ConnectorDtoSourcePlatformDAGSTER                   ConnectorDtoSourcePlatform = "DAGSTER"
	ConnectorDtoSourcePlatformDATABAND                  ConnectorDtoSourcePlatform = "DATABAND"
	ConnectorDtoSourcePlatformDATABRICKS                ConnectorDtoSourcePlatform = "DATABRICKS"
	ConnectorDtoSourcePlatformDATADOG                   ConnectorDtoSourcePlatform = "DATADOG"
	ConnectorDtoSourcePlatformDATAEDO                   ConnectorDtoSourcePlatform = "DATAEDO"
	ConnectorDtoSourcePlatformDATAFOLD                  ConnectorDtoSourcePlatform = "DATAFOLD"
	ConnectorDtoSourcePlatformDATAGALAXY                ConnectorDtoSourcePlatform = "DATAGALAXY"
	ConnectorDtoSourcePlatformDATAHUB                   ConnectorDtoSourcePlatform = "DATAHUB"
	ConnectorDtoSourcePlatformDATAIKU                   ConnectorDtoSourcePlatform = "DATAIKU"
	ConnectorDtoSourcePlatformDATAWORLD                 ConnectorDtoSourcePlatform = "DATA_WORLD"
	ConnectorDtoSourcePlatformDB2                       ConnectorDtoSourcePlatform = "DB2"
	ConnectorDtoSourcePlatformDBT                       ConnectorDtoSourcePlatform = "DBT"
	ConnectorDtoSourcePlatformDBTCLOUD                  ConnectorDtoSourcePlatform = "DBTCLOUD"
	ConnectorDtoSourcePlatformDCLLOGISTICS              ConnectorDtoSourcePlatform = "DCL_LOGISTICS"
	ConnectorDtoSourcePlatformDEAR                      ConnectorDtoSourcePlatform = "DEAR"
	ConnectorDtoSourcePlatformDECUBE                    ConnectorDtoSourcePlatform = "DECUBE"
	ConnectorDtoSourcePlatformDELIGHTED                 ConnectorDtoSourcePlatform = "DELIGHTED"
	ConnectorDtoSourcePlatformDEPUTY                    ConnectorDtoSourcePlatform = "DEPUTY"
	ConnectorDtoSourcePlatformDESTINI                   ConnectorDtoSourcePlatform = "DESTINI"
	ConnectorDtoSourcePlatformDIXA                      ConnectorDtoSourcePlatform = "DIXA"
	ConnectorDtoSourcePlatformDOCEBO                    ConnectorDtoSourcePlatform = "DOCEBO"
	ConnectorDtoSourcePlatformDRATA                     ConnectorDtoSourcePlatform = "DRATA"
	ConnectorDtoSourcePlatformDRIFT                     ConnectorDtoSourcePlatform = "DRIFT"
	ConnectorDtoSourcePlatformDRIP                      ConnectorDtoSourcePlatform = "DRIP"
	ConnectorDtoSourcePlatformDROPBOX                   ConnectorDtoSourcePlatform = "DROPBOX"
	ConnectorDtoSourcePlatformDUOPLANE                  ConnectorDtoSourcePlatform = "DUOPLANE"
	ConnectorDtoSourcePlatformEASYPOST                  ConnectorDtoSourcePlatform = "EASY_POST"
	ConnectorDtoSourcePlatformECONOMIC                  ConnectorDtoSourcePlatform = "E_CONOMIC"
	ConnectorDtoSourcePlatformELASTICSEARCH             ConnectorDtoSourcePlatform = "ELASTICSEARCH"
	ConnectorDtoSourcePlatformELEMENTARY                ConnectorDtoSourcePlatform = "ELEMENTARY"
	ConnectorDtoSourcePlatformELLUCIAN                  ConnectorDtoSourcePlatform = "ELLUCIAN"
	ConnectorDtoSourcePlatformELOQUA                    ConnectorDtoSourcePlatform = "ELOQUA"
	ConnectorDtoSourcePlatformEMAIL                     ConnectorDtoSourcePlatform = "EMAIL"
	ConnectorDtoSourcePlatformEMPLOYMENTHERO            ConnectorDtoSourcePlatform = "EMPLOYMENT_HERO"
	ConnectorDtoSourcePlatformEPICORPROPHET21           ConnectorDtoSourcePlatform = "EPICOR_PROPHET_21"
	ConnectorDtoSourcePlatformEVENTBRITE                ConnectorDtoSourcePlatform = "EVENTBRITE"
	ConnectorDtoSourcePlatformEVERHOUR                  ConnectorDtoSourcePlatform = "EVERHOUR"
	ConnectorDtoSourcePlatformEXCEL                     ConnectorDtoSourcePlatform = "EXCEL"
	ConnectorDtoSourcePlatformEXPENSIFY                 ConnectorDtoSourcePlatform = "EXPENSIFY"
	ConnectorDtoSourcePlatformFACEBOOK                  ConnectorDtoSourcePlatform = "FACEBOOK"
	ConnectorDtoSourcePlatformFIFTEENFIVE               ConnectorDtoSourcePlatform = "FIFTEENFIVE"
	ConnectorDtoSourcePlatformFIGMA                     ConnectorDtoSourcePlatform = "FIGMA"
	ConnectorDtoSourcePlatformFIREBASE                  ConnectorDtoSourcePlatform = "FIREBASE"
	ConnectorDtoSourcePlatformFIREBOLT                  ConnectorDtoSourcePlatform = "FIREBOLT"
	ConnectorDtoSourcePlatformFIVETRAN                  ConnectorDtoSourcePlatform = "FIVETRAN"
	ConnectorDtoSourcePlatformFLEXPORT                  ConnectorDtoSourcePlatform = "FLEXPORT"
	ConnectorDtoSourcePlatformFORJ                      ConnectorDtoSourcePlatform = "FORJ"
	ConnectorDtoSourcePlatformFOUNTAIN                  ConnectorDtoSourcePlatform = "FOUNTAIN"
	ConnectorDtoSourcePlatformFREIGHTVIEW               ConnectorDtoSourcePlatform = "FREIGHTVIEW"
	ConnectorDtoSourcePlatformFRESHBOOKS                ConnectorDtoSourcePlatform = "FRESHBOOKS"
	ConnectorDtoSourcePlatformFRESHCHAT                 ConnectorDtoSourcePlatform = "FRESHCHAT"
	ConnectorDtoSourcePlatformFRESHDESK                 ConnectorDtoSourcePlatform = "FRESHDESK"
	ConnectorDtoSourcePlatformFRESHDESKCONTACTCENTER    ConnectorDtoSourcePlatform = "FRESHDESK_CONTACT_CENTER"
	ConnectorDtoSourcePlatformFRESHSERVICE              ConnectorDtoSourcePlatform = "FRESHSERVICE"
	ConnectorDtoSourcePlatformFRESHSUCCESS              ConnectorDtoSourcePlatform = "FRESHSUCCESS"
	ConnectorDtoSourcePlatformFRESHTEAM                 ConnectorDtoSourcePlatform = "FRESHTEAM"
	ConnectorDtoSourcePlatformFRIENDBUY                 ConnectorDtoSourcePlatform = "FRIENDBUY"
	ConnectorDtoSourcePlatformFRONT                     ConnectorDtoSourcePlatform = "FRONT"
	ConnectorDtoSourcePlatformFTP                       ConnectorDtoSourcePlatform = "FTP"
	ConnectorDtoSourcePlatformFULLSTORY                 ConnectorDtoSourcePlatform = "FULLSTORY"
	ConnectorDtoSourcePlatformG2                        ConnectorDtoSourcePlatform = "G2"
	ConnectorDtoSourcePlatformGAINSIGHT                 ConnectorDtoSourcePlatform = "GAINSIGHT"
	ConnectorDtoSourcePlatformGEM                       ConnectorDtoSourcePlatform = "GEM"
	ConnectorDtoSourcePlatformGIT                       ConnectorDtoSourcePlatform = "GIT"
	ConnectorDtoSourcePlatformGITHUB                    ConnectorDtoSourcePlatform = "GITHUB"
	ConnectorDtoSourcePlatformGITLAB                    ConnectorDtoSourcePlatform = "GITLAB"
	ConnectorDtoSourcePlatformGLADLY                    ConnectorDtoSourcePlatform = "GLADLY"
	ConnectorDtoSourcePlatformGOCARDLESS                ConnectorDtoSourcePlatform = "GOCARDLESS"
	ConnectorDtoSourcePlatformGONG                      ConnectorDtoSourcePlatform = "GONG"
	ConnectorDtoSourcePlatformGOOGLE                    ConnectorDtoSourcePlatform = "GOOGLE"
	ConnectorDtoSourcePlatformGOOGLEADMANAGER           ConnectorDtoSourcePlatform = "GOOGLE_AD_MANAGER"
	ConnectorDtoSourcePlatformGOOGLEADS                 ConnectorDtoSourcePlatform = "GOOGLE_ADS"
	ConnectorDtoSourcePlatformGOOGLEANALYTICS           ConnectorDtoSourcePlatform = "GOOGLE_ANALYTICS"
	ConnectorDtoSourcePlatformGOOGLECALENDAR            ConnectorDtoSourcePlatform = "GOOGLE_CALENDAR"
	ConnectorDtoSourcePlatformGOOGLECAMPAIGNMANAGER     ConnectorDtoSourcePlatform = "GOOGLE_CAMPAIGN_MANAGER"
	ConnectorDtoSourcePlatformGOOGLECHROME              ConnectorDtoSourcePlatform = "GOOGLE_CHROME"
	ConnectorDtoSourcePlatformGOOGLECLOUD               ConnectorDtoSourcePlatform = "GOOGLE_CLOUD"
	ConnectorDtoSourcePlatformGOOGLECLOUDSTORAGE        ConnectorDtoSourcePlatform = "GOOGLE_CLOUD_STORAGE"
	ConnectorDtoSourcePlatformGOOGLEDISPLAY             ConnectorDtoSourcePlatform = "GOOGLE_DISPLAY"
	ConnectorDtoSourcePlatformGOOGLEDRIVE               ConnectorDtoSourcePlatform = "GOOGLE_DRIVE"
	ConnectorDtoSourcePlatformGOOGLEPLAY                ConnectorDtoSourcePlatform = "GOOGLE_PLAY"
	ConnectorDtoSourcePlatformGOOGLESEARCHADS360        ConnectorDtoSourcePlatform = "GOOGLE_SEARCH_ADS_360"
	ConnectorDtoSourcePlatformGOOGLESEARCHCONSOLE       ConnectorDtoSourcePlatform = "GOOGLE_SEARCH_CONSOLE"
	ConnectorDtoSourcePlatformGOOGLESHEETS              ConnectorDtoSourcePlatform = "GOOGLE_SHEETS"
	ConnectorDtoSourcePlatformGOOGLETASKS               ConnectorDtoSourcePlatform = "GOOGLE_TASKS"
	ConnectorDtoSourcePlatformGORGIAS                   ConnectorDtoSourcePlatform = "GORGIAS"
	ConnectorDtoSourcePlatformGREENHOUSE                ConnectorDtoSourcePlatform = "GREENHOUSE"
	ConnectorDtoSourcePlatformGREENPLUM                 ConnectorDtoSourcePlatform = "GREENPLUM"
	ConnectorDtoSourcePlatformGREENPOWERMONITOR         ConnectorDtoSourcePlatform = "GREEN_POWER_MONITOR"
	ConnectorDtoSourcePlatformGREPSR                    ConnectorDtoSourcePlatform = "GREPSR"
	ConnectorDtoSourcePlatformGRIN                      ConnectorDtoSourcePlatform = "GRIN"
	ConnectorDtoSourcePlatformGURU                      ConnectorDtoSourcePlatform = "GURU"
	ConnectorDtoSourcePlatformH2                        ConnectorDtoSourcePlatform = "H2"
	ConnectorDtoSourcePlatformHARVEST                   ConnectorDtoSourcePlatform = "HARVEST"
	ConnectorDtoSourcePlatformHDFS                      ConnectorDtoSourcePlatform = "HDFS"
	ConnectorDtoSourcePlatformHDFSSTORAGE               ConnectorDtoSourcePlatform = "HDFS_STORAGE"
	ConnectorDtoSourcePlatformHEAP                      ConnectorDtoSourcePlatform = "HEAP"
	ConnectorDtoSourcePlatformHEIGHT                    ConnectorDtoSourcePlatform = "HEIGHT"
	ConnectorDtoSourcePlatformHELPSCOUT                 ConnectorDtoSourcePlatform = "HELP_SCOUT"
	ConnectorDtoSourcePlatformHELPSHIFT                 ConnectorDtoSourcePlatform = "HELPSHIFT"
	ConnectorDtoSourcePlatformHEROKUKAFKA               ConnectorDtoSourcePlatform = "HEROKU_KAFKA"
	ConnectorDtoSourcePlatformHIBOB                     ConnectorDtoSourcePlatform = "HIBOB"
	ConnectorDtoSourcePlatformHIGHTOUCH                 ConnectorDtoSourcePlatform = "HIGH_TOUCH"
	ConnectorDtoSourcePlatformHIVE                      ConnectorDtoSourcePlatform = "HIVE"
	ConnectorDtoSourcePlatformHIVEPROCESS               ConnectorDtoSourcePlatform = "HIVE_PROCESS"
	ConnectorDtoSourcePlatformHOPIN                     ConnectorDtoSourcePlatform = "HOPIN"
	ConnectorDtoSourcePlatformHUBSPOT                   ConnectorDtoSourcePlatform = "HUBSPOT"
	ConnectorDtoSourcePlatformIMPACT                    ConnectorDtoSourcePlatform = "IMPACT"
	ConnectorDtoSourcePlatformINCIDENTIO                ConnectorDtoSourcePlatform = "INCIDENT_IO"
	ConnectorDtoSourcePlatformINFOBIP                   ConnectorDtoSourcePlatform = "INFOBIP"
	ConnectorDtoSourcePlatformINFORMATICA               ConnectorDtoSourcePlatform = "INFORMATICA"
	ConnectorDtoSourcePlatformINSIGHTLY                 ConnectorDtoSourcePlatform = "INSIGHTLY"
	ConnectorDtoSourcePlatformINSTAGRAM                 ConnectorDtoSourcePlatform = "INSTAGRAM"
	ConnectorDtoSourcePlatformINTERCOM                  ConnectorDtoSourcePlatform = "INTERCOM"
	ConnectorDtoSourcePlatformINVESTOPEDIA              ConnectorDtoSourcePlatform = "INVESTOPEDIA"
	ConnectorDtoSourcePlatformIRONCLAD                  ConnectorDtoSourcePlatform = "IRONCLAD"
	ConnectorDtoSourcePlatformIRONSOURCE                ConnectorDtoSourcePlatform = "IRONSOURCE"
	ConnectorDtoSourcePlatformITERABLE                  ConnectorDtoSourcePlatform = "ITERABLE"
	ConnectorDtoSourcePlatformJAVA                      ConnectorDtoSourcePlatform = "JAVA"
	ConnectorDtoSourcePlatformJENKINS                   ConnectorDtoSourcePlatform = "JENKINS"
	ConnectorDtoSourcePlatformJUSTCALL                  ConnectorDtoSourcePlatform = "JUSTCALL"
	ConnectorDtoSourcePlatformKANDJI                    ConnectorDtoSourcePlatform = "KANDJI"
	ConnectorDtoSourcePlatformKENSU                     ConnectorDtoSourcePlatform = "KENSU"
	ConnectorDtoSourcePlatformKHOROSCARE                ConnectorDtoSourcePlatform = "KHOROS_CARE"
	ConnectorDtoSourcePlatformKISSMETRICS               ConnectorDtoSourcePlatform = "KISSMETRICS"
	ConnectorDtoSourcePlatformKLAVIYO                   ConnectorDtoSourcePlatform = "KLAVIYO"
	ConnectorDtoSourcePlatformKNOWBE4                   ConnectorDtoSourcePlatform = "KNOWBE4"
	ConnectorDtoSourcePlatformKONNECTINSIGHTS           ConnectorDtoSourcePlatform = "KONNECT_INSIGHTS"
	ConnectorDtoSourcePlatformKUSTOMER                  ConnectorDtoSourcePlatform = "KUSTOMER"
	ConnectorDtoSourcePlatformLARIATDATA                ConnectorDtoSourcePlatform = "LARIAT_DATA"
	ConnectorDtoSourcePlatformLATTICE                   ConnectorDtoSourcePlatform = "LATTICE"
	ConnectorDtoSourcePlatformLAUNCHDARKLY              ConnectorDtoSourcePlatform = "LAUNCH_DARKLY"
	ConnectorDtoSourcePlatformLEARNUPON                 ConnectorDtoSourcePlatform = "LEARN_UPON"
	ConnectorDtoSourcePlatformLESSONLY                  ConnectorDtoSourcePlatform = "LESSONLY"
	ConnectorDtoSourcePlatformLEVER                     ConnectorDtoSourcePlatform = "LEVER"
	ConnectorDtoSourcePlatformLIFTOFF                   ConnectorDtoSourcePlatform = "LIFTOFF"
	ConnectorDtoSourcePlatformLIGHTDASH                 ConnectorDtoSourcePlatform = "LIGHTDASH"
	ConnectorDtoSourcePlatformLIGHTSPEED                ConnectorDtoSourcePlatform = "LIGHTSPEED"
	ConnectorDtoSourcePlatformLIGHTSUP                  ConnectorDtoSourcePlatform = "LIGHTSUP"
	ConnectorDtoSourcePlatformLINEAR                    ConnectorDtoSourcePlatform = "LINEAR"
	ConnectorDtoSourcePlatformLINKEDIN                  ConnectorDtoSourcePlatform = "LINKEDIN"
	ConnectorDtoSourcePlatformLIVECHAT                  ConnectorDtoSourcePlatform = "LIVECHAT"
	ConnectorDtoSourcePlatformLOADEDCOMMERCE            ConnectorDtoSourcePlatform = "LOADED_COMMERCE"
	ConnectorDtoSourcePlatformLOB                       ConnectorDtoSourcePlatform = "LOB"
	ConnectorDtoSourcePlatformLOOKER                    ConnectorDtoSourcePlatform = "LOOKER"
	ConnectorDtoSourcePlatformLOOP                      ConnectorDtoSourcePlatform = "LOOP"
	ConnectorDtoSourcePlatformLOOPIO                    ConnectorDtoSourcePlatform = "LOOPIO"
	ConnectorDtoSourcePlatformLUMA                      ConnectorDtoSourcePlatform = "LUMA"
	ConnectorDtoSourcePlatformMAGENTO                   ConnectorDtoSourcePlatform = "MAGENTO"
	ConnectorDtoSourcePlatformMAILCHIMP                 ConnectorDtoSourcePlatform = "MAILCHIMP"
	ConnectorDtoSourcePlatformMAILGUN                   ConnectorDtoSourcePlatform = "MAILGUN"
	ConnectorDtoSourcePlatformMANDRILL                  ConnectorDtoSourcePlatform = "MANDRILL"
	ConnectorDtoSourcePlatformMANTA                     ConnectorDtoSourcePlatform = "MANTA"
	ConnectorDtoSourcePlatformMARIADB                   ConnectorDtoSourcePlatform = "MARIADB"
	ConnectorDtoSourcePlatformMARINSOFTWARE             ConnectorDtoSourcePlatform = "MARIN_SOFTWARE"
	ConnectorDtoSourcePlatformMARKETO                   ConnectorDtoSourcePlatform = "MARKETO"
	ConnectorDtoSourcePlatformMATTERMOST                ConnectorDtoSourcePlatform = "MATTERMOST"
	ConnectorDtoSourcePlatformMAVENLINK                 ConnectorDtoSourcePlatform = "MAVENLINK"
	ConnectorDtoSourcePlatformMAXIO                     ConnectorDtoSourcePlatform = "MAXIO"
	ConnectorDtoSourcePlatformMEDALLIA                  ConnectorDtoSourcePlatform = "MEDALLIA"
	ConnectorDtoSourcePlatformMETA                      ConnectorDtoSourcePlatform = "META"
	ConnectorDtoSourcePlatformMETABASE                  ConnectorDtoSourcePlatform = "METABASE"
	ConnectorDtoSourcePlatformMETAPHOR                  ConnectorDtoSourcePlatform = "METAPHOR"
	ConnectorDtoSourcePlatformMETAPLANE                 ConnectorDtoSourcePlatform = "METAPLANE"
	ConnectorDtoSourcePlatformMICROSOFT                 ConnectorDtoSourcePlatform = "MICROSOFT"
	ConnectorDtoSourcePlatformMICROSOFTAZUREBLOBSTORAGE ConnectorDtoSourcePlatform = "MICROSOFT_AZURE_BLOB_STORAGE"
	ConnectorDtoSourcePlatformMICROSOFTAZUREML          ConnectorDtoSourcePlatform = "MICROSOFT_AZURE_ML"
	ConnectorDtoSourcePlatformMICROSOFTDYNAMICS         ConnectorDtoSourcePlatform = "MICROSOFT_DYNAMICS"
	ConnectorDtoSourcePlatformMICROSOFTONEDRIVE         ConnectorDtoSourcePlatform = "MICROSOFT_ONEDRIVE"
	ConnectorDtoSourcePlatformMICROSOFTPURVIEW          ConnectorDtoSourcePlatform = "MICROSOFT_PURVIEW"
	ConnectorDtoSourcePlatformMICROSOFTTEAMS            ConnectorDtoSourcePlatform = "MICROSOFT_TEAMS"
	ConnectorDtoSourcePlatformMICROSTRATEGY             ConnectorDtoSourcePlatform = "MICROSTRATEGY"
	ConnectorDtoSourcePlatformMIXMAX                    ConnectorDtoSourcePlatform = "MIXMAX"
	ConnectorDtoSourcePlatformMIXPANEL                  ConnectorDtoSourcePlatform = "MIXPANEL"
	ConnectorDtoSourcePlatformMONDAYCOM                 ConnectorDtoSourcePlatform = "MONDAY_COM"
	ConnectorDtoSourcePlatformMONGODB                   ConnectorDtoSourcePlatform = "MONGODB"
	ConnectorDtoSourcePlatformMONTECARLO                ConnectorDtoSourcePlatform = "MONTE_CARLO"
	ConnectorDtoSourcePlatformMOUNTAIN                  ConnectorDtoSourcePlatform = "MOUNTAIN"
	ConnectorDtoSourcePlatformMSSQL                     ConnectorDtoSourcePlatform = "MSSQL"
	ConnectorDtoSourcePlatformMULESOFT                  ConnectorDtoSourcePlatform = "MULESOFT"
	ConnectorDtoSourcePlatformMUX                       ConnectorDtoSourcePlatform = "MUX"
	ConnectorDtoSourcePlatformMWAA                      ConnectorDtoSourcePlatform = "MWAA"
	ConnectorDtoSourcePlatformMYSQL                     ConnectorDtoSourcePlatform = "MYSQL"
	ConnectorDtoSourcePlatformNAMELY                    ConnectorDtoSourcePlatform = "NAMELY"
	ConnectorDtoSourcePlatformNCINO                     ConnectorDtoSourcePlatform = "NCINO"
	ConnectorDtoSourcePlatformNETSUITEANALYTICS         ConnectorDtoSourcePlatform = "NETSUITE_ANALYTICS"
	ConnectorDtoSourcePlatformNEWRELIC                  ConnectorDtoSourcePlatform = "NEW_RELIC"
	ConnectorDtoSourcePlatformNOTION                    ConnectorDtoSourcePlatform = "NOTION"
	ConnectorDtoSourcePlatformNYLAS                     ConnectorDtoSourcePlatform = "NYLAS"
	ConnectorDtoSourcePlatformOBSERVE                   ConnectorDtoSourcePlatform = "OBSERVE"
	ConnectorDtoSourcePlatformOCTOPAI                   ConnectorDtoSourcePlatform = "OCTOPAI"
	ConnectorDtoSourcePlatformOKTA                      ConnectorDtoSourcePlatform = "OKTA"
	ConnectorDtoSourcePlatformOPENAI                    ConnectorDtoSourcePlatform = "OPEN_AI"
	ConnectorDtoSourcePlatformOPENDATADC                ConnectorDtoSourcePlatform = "OPEN_DATA_DC"
	ConnectorDtoSourcePlatformOPENEXCHANGESRATES        ConnectorDtoSourcePlatform = "OPEN_EXCHANGES_RATES"
	ConnectorDtoSourcePlatformOPENSEARCH                ConnectorDtoSourcePlatform = "OPEN_SEARCH"
	ConnectorDtoSourcePlatformOPTIMIZELY                ConnectorDtoSourcePlatform = "OPTIMIZELY"
	ConnectorDtoSourcePlatformORACLE                    ConnectorDtoSourcePlatform = "ORACLE"
	ConnectorDtoSourcePlatformORBITCOMMUNITYPLATFORM    ConnectorDtoSourcePlatform = "ORBIT_COMMUNITY_PLATFORM"
	ConnectorDtoSourcePlatformORDWAY                    ConnectorDtoSourcePlatform = "ORDWAY"
	ConnectorDtoSourcePlatformORTTO                     ConnectorDtoSourcePlatform = "ORTTO"
	ConnectorDtoSourcePlatformOSCOMMERCE                ConnectorDtoSourcePlatform = "OS_COMMERCE"
	ConnectorDtoSourcePlatformOUTBRAIN                  ConnectorDtoSourcePlatform = "OUTBRAIN"
	ConnectorDtoSourcePlatformOUTREACH                  ConnectorDtoSourcePlatform = "OUTREACH"
	ConnectorDtoSourcePlatformOVALEDGE                  ConnectorDtoSourcePlatform = "OVALEDGE"
	ConnectorDtoSourcePlatformPAGERDUTY                 ConnectorDtoSourcePlatform = "PAGERDUTY"
	ConnectorDtoSourcePlatformPAGERSHIFT                ConnectorDtoSourcePlatform = "PAGERSHIFT"
	ConnectorDtoSourcePlatformPAYPAL                    ConnectorDtoSourcePlatform = "PAYPAL"
	ConnectorDtoSourcePlatformPENDO                     ConnectorDtoSourcePlatform = "PENDO"
	ConnectorDtoSourcePlatformPINGDOM                   ConnectorDtoSourcePlatform = "PINGDOM"
	ConnectorDtoSourcePlatformPINTEREST                 ConnectorDtoSourcePlatform = "PINTEREST"
	ConnectorDtoSourcePlatformPIPE17                    ConnectorDtoSourcePlatform = "PIPE17"
	ConnectorDtoSourcePlatformPIPEDRIVE                 ConnectorDtoSourcePlatform = "PIPEDRIVE"
	ConnectorDtoSourcePlatformPIVOTALTRACKER            ConnectorDtoSourcePlatform = "PIVOTAL_TRACKER"
	ConnectorDtoSourcePlatformPLAYVOX                   ConnectorDtoSourcePlatform = "PLAYVOX"
	ConnectorDtoSourcePlatformPOSTGRES                  ConnectorDtoSourcePlatform = "POSTGRES"
	ConnectorDtoSourcePlatformPOSTHOG                   ConnectorDtoSourcePlatform = "POSTHOG"
	ConnectorDtoSourcePlatformPOWERBI                   ConnectorDtoSourcePlatform = "POWER_BI"
	ConnectorDtoSourcePlatformPOWERSCHOOL               ConnectorDtoSourcePlatform = "POWERSCHOOL"
	ConnectorDtoSourcePlatformPREFECT                   ConnectorDtoSourcePlatform = "PREFECT"
	ConnectorDtoSourcePlatformPRESTASHOP                ConnectorDtoSourcePlatform = "PRESTASHOP"
	ConnectorDtoSourcePlatformPRESTO                    ConnectorDtoSourcePlatform = "PRESTO"
	ConnectorDtoSourcePlatformPRODUCTBOARD              ConnectorDtoSourcePlatform = "PRODUCTBOARD"
	ConnectorDtoSourcePlatformPYTHON                    ConnectorDtoSourcePlatform = "PYTHON"
	ConnectorDtoSourcePlatformQLIK                      ConnectorDtoSourcePlatform = "QLIK"
	ConnectorDtoSourcePlatformQUALAROO                  ConnectorDtoSourcePlatform = "QUALAROO"
	ConnectorDtoSourcePlatformQUALTRICS                 ConnectorDtoSourcePlatform = "QUALTRICS"
	ConnectorDtoSourcePlatformQUICKBOOKS                ConnectorDtoSourcePlatform = "QUICKBOOKS"
	ConnectorDtoSourcePlatformQUICKSIGHT                ConnectorDtoSourcePlatform = "QUICKSIGHT"
	ConnectorDtoSourcePlatformRAMP                      ConnectorDtoSourcePlatform = "RAMP"
	ConnectorDtoSourcePlatformRARIBLE                   ConnectorDtoSourcePlatform = "RARIBLE"
	ConnectorDtoSourcePlatformRECHARGE                  ConnectorDtoSourcePlatform = "RECHARGE"
	ConnectorDtoSourcePlatformRECURLY                   ConnectorDtoSourcePlatform = "RECURLY"
	ConnectorDtoSourcePlatformREDDIT                    ConnectorDtoSourcePlatform = "REDDIT"
	ConnectorDtoSourcePlatformREDSHIFT                  ConnectorDtoSourcePlatform = "REDSHIFT"
	ConnectorDtoSourcePlatformRELTIO                    ConnectorDtoSourcePlatform = "RELTIO"
	ConnectorDtoSourcePlatformREPLYIO                   ConnectorDtoSourcePlatform = "REPLY_IO"
	ConnectorDtoSourcePlatformRETAILNEXT                ConnectorDtoSourcePlatform = "RETAILNEXT"
	ConnectorDtoSourcePlatformRETENTLY                  ConnectorDtoSourcePlatform = "RETENTLY"
	ConnectorDtoSourcePlatformREVELSYSTEMS              ConnectorDtoSourcePlatform = "REVEL_SYSTEMS"
	ConnectorDtoSourcePlatformRINGCENTRAL               ConnectorDtoSourcePlatform = "RINGCENTRAL"
	ConnectorDtoSourcePlatformRIPPLING                  ConnectorDtoSourcePlatform = "RIPPLING"
	ConnectorDtoSourcePlatformROLLBAR                   ConnectorDtoSourcePlatform = "ROLLBAR"
	ConnectorDtoSourcePlatformROOTLY                    ConnectorDtoSourcePlatform = "ROOTLY"
	ConnectorDtoSourcePlatformS3                        ConnectorDtoSourcePlatform = "S3"
	ConnectorDtoSourcePlatformSAGEHR                    ConnectorDtoSourcePlatform = "SAGE_HR"
	ConnectorDtoSourcePlatformSAGEINTACCT               ConnectorDtoSourcePlatform = "SAGE_INTACCT"
	ConnectorDtoSourcePlatformSAILTHRU                  ConnectorDtoSourcePlatform = "SAILTHRU"
	ConnectorDtoSourcePlatformSALESFORCE                ConnectorDtoSourcePlatform = "SALESFORCE"
	ConnectorDtoSourcePlatformSALESLOFT                 ConnectorDtoSourcePlatform = "SALESLOFT"
	ConnectorDtoSourcePlatformSALSIFY                   ConnectorDtoSourcePlatform = "SALSIFY"
	ConnectorDtoSourcePlatformSAMSARA                   ConnectorDtoSourcePlatform = "SAMSARA"
	ConnectorDtoSourcePlatformSAP                       ConnectorDtoSourcePlatform = "SAP"
	ConnectorDtoSourcePlatformSAPCONCUR                 ConnectorDtoSourcePlatform = "SAP_CONCUR"
	ConnectorDtoSourcePlatformSCORM                     ConnectorDtoSourcePlatform = "SCORM"
	ConnectorDtoSourcePlatformSECODA                    ConnectorDtoSourcePlatform = "SECODA"
	ConnectorDtoSourcePlatformSECURITYJOURNEY           ConnectorDtoSourcePlatform = "SECURITY_JOURNEY"
	ConnectorDtoSourcePlatformSEGMENT                   ConnectorDtoSourcePlatform = "SEGMENT"
	ConnectorDtoSourcePlatformSELECTSTAR                ConnectorDtoSourcePlatform = "SELECT_STAR"
	ConnectorDtoSourcePlatformSENDGRID                  ConnectorDtoSourcePlatform = "SENDGRID"
	ConnectorDtoSourcePlatformSERVICENOW                ConnectorDtoSourcePlatform = "SERVICE_NOW"
	ConnectorDtoSourcePlatformSFTP                      ConnectorDtoSourcePlatform = "SFTP"
	ConnectorDtoSourcePlatformSHAREPOINT                ConnectorDtoSourcePlatform = "SHAREPOINT"
	ConnectorDtoSourcePlatformSHARETRIBE                ConnectorDtoSourcePlatform = "SHARETRIBE"
	ConnectorDtoSourcePlatformSHIPHERO                  ConnectorDtoSourcePlatform = "SHIPHERO"
	ConnectorDtoSourcePlatformSHIPSTATION               ConnectorDtoSourcePlatform = "SHIPSTATION"
	ConnectorDtoSourcePlatformSHOPIFY                   ConnectorDtoSourcePlatform = "SHOPIFY"
	ConnectorDtoSourcePlatformSHOPWARE                  ConnectorDtoSourcePlatform = "SHOPWARE"
	ConnectorDtoSourcePlatformSHORTIO                   ConnectorDtoSourcePlatform = "SHORT_IO"
	ConnectorDtoSourcePlatformSIFFLET                   ConnectorDtoSourcePlatform = "SIFFLET"
	ConnectorDtoSourcePlatformSIGMA                     ConnectorDtoSourcePlatform = "SIGMA"
	ConnectorDtoSourcePlatformSIMPLECAST                ConnectorDtoSourcePlatform = "SIMPLECAST"
	ConnectorDtoSourcePlatformSIMPLESAT                 ConnectorDtoSourcePlatform = "SIMPLESAT"
	ConnectorDtoSourcePlatformSINGLESTORE               ConnectorDtoSourcePlatform = "SINGLESTORE"
	ConnectorDtoSourcePlatformSISENSE                   ConnectorDtoSourcePlatform = "SISENSE"
	ConnectorDtoSourcePlatformSIXSENSE                  ConnectorDtoSourcePlatform = "SIXSENSE"
	ConnectorDtoSourcePlatformSKILLJAR                  ConnectorDtoSourcePlatform = "SKILLJAR"
	ConnectorDtoSourcePlatformSKUVAULT                  ConnectorDtoSourcePlatform = "SKUVAULT"
	ConnectorDtoSourcePlatformSLAB                      ConnectorDtoSourcePlatform = "SLAB"
	ConnectorDtoSourcePlatformSLACK                     ConnectorDtoSourcePlatform = "SLACK"
	ConnectorDtoSourcePlatformSMADEX                    ConnectorDtoSourcePlatform = "SMADEX"
	ConnectorDtoSourcePlatformSNAPCHAT                  ConnectorDtoSourcePlatform = "SNAPCHAT"
	ConnectorDtoSourcePlatformSNOWFLAKE                 ConnectorDtoSourcePlatform = "SNOWFLAKE"
	ConnectorDtoSourcePlatformSNOWPLOW                  ConnectorDtoSourcePlatform = "SNOWPLOW"
	ConnectorDtoSourcePlatformSODA                      ConnectorDtoSourcePlatform = "SODA"
	ConnectorDtoSourcePlatformSONARQUBE                 ConnectorDtoSourcePlatform = "SONARQUBE"
	ConnectorDtoSourcePlatformSPARKPROCESS              ConnectorDtoSourcePlatform = "SPARK_PROCESS"
	ConnectorDtoSourcePlatformSPLITIO                   ConnectorDtoSourcePlatform = "SPLIT_IO"
	ConnectorDtoSourcePlatformSPLUNK                    ConnectorDtoSourcePlatform = "SPLUNK"
	ConnectorDtoSourcePlatformSPOTIFY                   ConnectorDtoSourcePlatform = "SPOTIFY"
	ConnectorDtoSourcePlatformSPREECOMMERCE             ConnectorDtoSourcePlatform = "SPREE_COMMERCE"
	ConnectorDtoSourcePlatformSPROUTSOCIAL              ConnectorDtoSourcePlatform = "SPROUT_SOCIAL"
	ConnectorDtoSourcePlatformSQUARE                    ConnectorDtoSourcePlatform = "SQUARE"
	ConnectorDtoSourcePlatformSQUARESPACE               ConnectorDtoSourcePlatform = "SQUARESPACE"
	ConnectorDtoSourcePlatformSTACKADAPT                ConnectorDtoSourcePlatform = "STACK_ADAPT"
	ConnectorDtoSourcePlatformSTATSIG                   ConnectorDtoSourcePlatform = "STATSIG"
	ConnectorDtoSourcePlatformSTITCH                    ConnectorDtoSourcePlatform = "STITCH"
	ConnectorDtoSourcePlatformSTRIPE                    ConnectorDtoSourcePlatform = "STRIPE"
	ConnectorDtoSourcePlatformSTYLIGHT                  ConnectorDtoSourcePlatform = "STYLIGHT"
	ConnectorDtoSourcePlatformSUBSCRIPT                 ConnectorDtoSourcePlatform = "SUBSCRIPT"
	ConnectorDtoSourcePlatformSYNAPSE                   ConnectorDtoSourcePlatform = "SYNAPSE"
	ConnectorDtoSourcePlatformTABLEAU                   ConnectorDtoSourcePlatform = "TABLEAU"
	ConnectorDtoSourcePlatformTABOOLA                   ConnectorDtoSourcePlatform = "TABOOLA"
	ConnectorDtoSourcePlatformTALEND                    ConnectorDtoSourcePlatform = "TALEND"
	ConnectorDtoSourcePlatformTALKDESK                  ConnectorDtoSourcePlatform = "TALKDESK"
	ConnectorDtoSourcePlatformTALKWALKER                ConnectorDtoSourcePlatform = "TALKWALKER"
	ConnectorDtoSourcePlatformTEAMWORKCOM               ConnectorDtoSourcePlatform = "TEAMWORK_COM"
	ConnectorDtoSourcePlatformTEMPOIO                   ConnectorDtoSourcePlatform = "TEMPO_IO"
	ConnectorDtoSourcePlatformTERADATA                  ConnectorDtoSourcePlatform = "TERADATA"
	ConnectorDtoSourcePlatformTERRAFORM                 ConnectorDtoSourcePlatform = "TERRAFORM"
	ConnectorDtoSourcePlatformTHETRADEDESK              ConnectorDtoSourcePlatform = "THE_TRADE_DESK"
	ConnectorDtoSourcePlatformTHOUGHTSPOT               ConnectorDtoSourcePlatform = "THOUGHT_SPOT"
	ConnectorDtoSourcePlatformTHREESIXTYLEARNING        ConnectorDtoSourcePlatform = "THREESIXTYLEARNING"
	ConnectorDtoSourcePlatformTIKTOK                    ConnectorDtoSourcePlatform = "TIKTOK"
	ConnectorDtoSourcePlatformTOGGL                     ConnectorDtoSourcePlatform = "TOGGL"
	ConnectorDtoSourcePlatformTRANSCEND                 ConnectorDtoSourcePlatform = "TRANSCEND"
	ConnectorDtoSourcePlatformTRELLO                    ConnectorDtoSourcePlatform = "TRELLO"
	ConnectorDtoSourcePlatformTRINET                    ConnectorDtoSourcePlatform = "TRINET"
	ConnectorDtoSourcePlatformTRISOLUTE                 ConnectorDtoSourcePlatform = "TRISOLUTE"
	ConnectorDtoSourcePlatformTWILIO                    ConnectorDtoSourcePlatform = "TWILIO"
	ConnectorDtoSourcePlatformTYPEFORM                  ConnectorDtoSourcePlatform = "TYPEFORM"
	ConnectorDtoSourcePlatformUNKNOWN                   ConnectorDtoSourcePlatform = "UNKNOWN"
	ConnectorDtoSourcePlatformUPLAND                    ConnectorDtoSourcePlatform = "UPLAND"
	ConnectorDtoSourcePlatformUSERVOICE                 ConnectorDtoSourcePlatform = "USERVOICE"
	ConnectorDtoSourcePlatformVALIDIO                   ConnectorDtoSourcePlatform = "VALIDIO"
	ConnectorDtoSourcePlatformVEEVA                     ConnectorDtoSourcePlatform = "VEEVA"
	ConnectorDtoSourcePlatformVERIZONMEDIA              ConnectorDtoSourcePlatform = "VERIZON_MEDIA"
	ConnectorDtoSourcePlatformVITALLY                   ConnectorDtoSourcePlatform = "VITALLY"
	ConnectorDtoSourcePlatformVONAGE                    ConnectorDtoSourcePlatform = "VONAGE"
	ConnectorDtoSourcePlatformVUETIFY                   ConnectorDtoSourcePlatform = "VUETIFY"
	ConnectorDtoSourcePlatformWEBHOOKS                  ConnectorDtoSourcePlatform = "WEBHOOKS"
	ConnectorDtoSourcePlatformWEBSCRAPER                ConnectorDtoSourcePlatform = "WEB_SCRAPER"
	ConnectorDtoSourcePlatformWHENIWORK                 ConnectorDtoSourcePlatform = "WHEN_I_WORK"
	ConnectorDtoSourcePlatformWHEREFOUR                 ConnectorDtoSourcePlatform = "WHEREFOUR"
	ConnectorDtoSourcePlatformWIKIPEDIA                 ConnectorDtoSourcePlatform = "WIKIPEDIA"
	ConnectorDtoSourcePlatformWOOCOMMERCE               ConnectorDtoSourcePlatform = "WOOCOMMERCE"
	ConnectorDtoSourcePlatformWORDPRESS                 ConnectorDtoSourcePlatform = "WORDPRESS"
	ConnectorDtoSourcePlatformWORKABLE                  ConnectorDtoSourcePlatform = "WORKABLE"
	ConnectorDtoSourcePlatformWORKDAY                   ConnectorDtoSourcePlatform = "WORKDAY"
	ConnectorDtoSourcePlatformWORKFLOWMAX               ConnectorDtoSourcePlatform = "WORKFLOW_MAX"
	ConnectorDtoSourcePlatformWRIKE                     ConnectorDtoSourcePlatform = "WRIKE"
	ConnectorDtoSourcePlatformX                         ConnectorDtoSourcePlatform = "X"
	ConnectorDtoSourcePlatformXERO                      ConnectorDtoSourcePlatform = "XERO"
	ConnectorDtoSourcePlatformXRAY                      ConnectorDtoSourcePlatform = "XRAY"
	ConnectorDtoSourcePlatformYAHOO                     ConnectorDtoSourcePlatform = "YAHOO"
	ConnectorDtoSourcePlatformYOTPO                     ConnectorDtoSourcePlatform = "YOTPO"
	ConnectorDtoSourcePlatformYOUTUBE                   ConnectorDtoSourcePlatform = "YOUTUBE"
	ConnectorDtoSourcePlatformZEENEA                    ConnectorDtoSourcePlatform = "ZEENEA"
	ConnectorDtoSourcePlatformZENCART                   ConnectorDtoSourcePlatform = "ZEN_CART"
	ConnectorDtoSourcePlatformZENDESKCHAT               ConnectorDtoSourcePlatform = "ZENDESK_CHAT"
	ConnectorDtoSourcePlatformZENDESKSELL               ConnectorDtoSourcePlatform = "ZENDESK_SELL"
	ConnectorDtoSourcePlatformZENDESKSUNSHINE           ConnectorDtoSourcePlatform = "ZENDESK_SUNSHINE"
	ConnectorDtoSourcePlatformZENDESKSUPPORT            ConnectorDtoSourcePlatform = "ZENDESK_SUPPORT"
	ConnectorDtoSourcePlatformZINGTREE                  ConnectorDtoSourcePlatform = "ZINGTREE"
	ConnectorDtoSourcePlatformZOHOBOOKS                 ConnectorDtoSourcePlatform = "ZOHO_BOOKS"
	ConnectorDtoSourcePlatformZOHOCAMPAIGNS             ConnectorDtoSourcePlatform = "ZOHO_CAMPAIGNS"
	ConnectorDtoSourcePlatformZOHOCRM                   ConnectorDtoSourcePlatform = "ZOHO_CRM"
	ConnectorDtoSourcePlatformZOOM                      ConnectorDtoSourcePlatform = "ZOOM"
	ConnectorDtoSourcePlatformZUORA                     ConnectorDtoSourcePlatform = "ZUORA"
)

// Defines values for CreationByRuleRunIncidentEventDtoType.
const (
	CreationByRuleRunIncidentEventDtoTypeASSIGNEESCHANGE               CreationByRuleRunIncidentEventDtoType = "ASSIGNEES_CHANGE"
	CreationByRuleRunIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED CreationByRuleRunIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	CreationByRuleRunIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   CreationByRuleRunIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	CreationByRuleRunIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED CreationByRuleRunIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	CreationByRuleRunIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE CreationByRuleRunIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	CreationByRuleRunIncidentEventDtoTypeCOMMENT                       CreationByRuleRunIncidentEventDtoType = "COMMENT"
	CreationByRuleRunIncidentEventDtoTypeCREATIONBYRULERUN             CreationByRuleRunIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	CreationByRuleRunIncidentEventDtoTypeCREATIONBYUSER                CreationByRuleRunIncidentEventDtoType = "CREATION_BY_USER"
	CreationByRuleRunIncidentEventDtoTypeNAMECHANGE                    CreationByRuleRunIncidentEventDtoType = "NAME_CHANGE"
	CreationByRuleRunIncidentEventDtoTypeNEWFAILURES                   CreationByRuleRunIncidentEventDtoType = "NEW_FAILURES"
	CreationByRuleRunIncidentEventDtoTypeRULESADDED                    CreationByRuleRunIncidentEventDtoType = "RULES_ADDED"
	CreationByRuleRunIncidentEventDtoTypeRULESMOVEDFROM                CreationByRuleRunIncidentEventDtoType = "RULES_MOVED_FROM"
	CreationByRuleRunIncidentEventDtoTypeRULESMOVEDTO                  CreationByRuleRunIncidentEventDtoType = "RULES_MOVED_TO"
	CreationByRuleRunIncidentEventDtoTypeSEVERITYCHANGE                CreationByRuleRunIncidentEventDtoType = "SEVERITY_CHANGE"
	CreationByRuleRunIncidentEventDtoTypeSTATUSCHANGE                  CreationByRuleRunIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for CreationByUserIncidentEventDtoType.
const (
	CreationByUserIncidentEventDtoTypeASSIGNEESCHANGE               CreationByUserIncidentEventDtoType = "ASSIGNEES_CHANGE"
	CreationByUserIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED CreationByUserIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	CreationByUserIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   CreationByUserIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	CreationByUserIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED CreationByUserIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	CreationByUserIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE CreationByUserIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	CreationByUserIncidentEventDtoTypeCOMMENT                       CreationByUserIncidentEventDtoType = "COMMENT"
	CreationByUserIncidentEventDtoTypeCREATIONBYRULERUN             CreationByUserIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	CreationByUserIncidentEventDtoTypeCREATIONBYUSER                CreationByUserIncidentEventDtoType = "CREATION_BY_USER"
	CreationByUserIncidentEventDtoTypeNAMECHANGE                    CreationByUserIncidentEventDtoType = "NAME_CHANGE"
	CreationByUserIncidentEventDtoTypeNEWFAILURES                   CreationByUserIncidentEventDtoType = "NEW_FAILURES"
	CreationByUserIncidentEventDtoTypeRULESADDED                    CreationByUserIncidentEventDtoType = "RULES_ADDED"
	CreationByUserIncidentEventDtoTypeRULESMOVEDFROM                CreationByUserIncidentEventDtoType = "RULES_MOVED_FROM"
	CreationByUserIncidentEventDtoTypeRULESMOVEDTO                  CreationByUserIncidentEventDtoType = "RULES_MOVED_TO"
	CreationByUserIncidentEventDtoTypeSEVERITYCHANGE                CreationByUserIncidentEventDtoType = "SEVERITY_CHANGE"
	CreationByUserIncidentEventDtoTypeSTATUSCHANGE                  CreationByUserIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for CriticalitySearchFilterElementDtoId.
const (
	CriticalitySearchFilterElementDtoIdCRITICAL CriticalitySearchFilterElementDtoId = "CRITICAL"
	CriticalitySearchFilterElementDtoIdHIGH     CriticalitySearchFilterElementDtoId = "HIGH"
	CriticalitySearchFilterElementDtoIdLOW      CriticalitySearchFilterElementDtoId = "LOW"
	CriticalitySearchFilterElementDtoIdMODERATE CriticalitySearchFilterElementDtoId = "MODERATE"
)

// Defines values for DagAssetOverviewType.
const (
	AIRFLOWDAG    DagAssetOverviewType = "AIRFLOW_DAG"
	AIRFLOWDAGREF DagAssetOverviewType = "AIRFLOW_DAG_REF"
	OTHERREF      DagAssetOverviewType = "OTHER_REF"
)

// Defines values for DagDetailsDtoLineagePlatform.
const (
	DagDetailsDtoLineagePlatformACCELDATA                 DagDetailsDtoLineagePlatform = "ACCELDATA"
	DagDetailsDtoLineagePlatformACRYLDATA                 DagDetailsDtoLineagePlatform = "ACRYL_DATA"
	DagDetailsDtoLineagePlatformACTIANVECTOR              DagDetailsDtoLineagePlatform = "ACTIAN_VECTOR"
	DagDetailsDtoLineagePlatformACTIVECAMPAIGN            DagDetailsDtoLineagePlatform = "ACTIVE_CAMPAIGN"
	DagDetailsDtoLineagePlatformADA                       DagDetailsDtoLineagePlatform = "ADA"
	DagDetailsDtoLineagePlatformADJUST                    DagDetailsDtoLineagePlatform = "ADJUST"
	DagDetailsDtoLineagePlatformADOBE                     DagDetailsDtoLineagePlatform = "ADOBE"
	DagDetailsDtoLineagePlatformADPWFN                    DagDetailsDtoLineagePlatform = "ADP_WFN"
	DagDetailsDtoLineagePlatformADROLL                    DagDetailsDtoLineagePlatform = "ADROLL"
	DagDetailsDtoLineagePlatformAFFINITY                  DagDetailsDtoLineagePlatform = "AFFINITY"
	DagDetailsDtoLineagePlatformAIRBYTE                   DagDetailsDtoLineagePlatform = "AIRBYTE"
	DagDetailsDtoLineagePlatformAIRCALL                   DagDetailsDtoLineagePlatform = "AIRCALL"
	DagDetailsDtoLineagePlatformAIRFLOW                   DagDetailsDtoLineagePlatform = "AIRFLOW"
	DagDetailsDtoLineagePlatformAIRTABLE                  DagDetailsDtoLineagePlatform = "AIRTABLE"
	DagDetailsDtoLineagePlatformALATION                   DagDetailsDtoLineagePlatform = "ALATION"
	DagDetailsDtoLineagePlatformALCHEMER                  DagDetailsDtoLineagePlatform = "ALCHEMER"
	DagDetailsDtoLineagePlatformALVINAI                   DagDetailsDtoLineagePlatform = "ALVIN_AI"
	DagDetailsDtoLineagePlatformAMAZON                    DagDetailsDtoLineagePlatform = "AMAZON"
	DagDetailsDtoLineagePlatformAMAZONCLOUDFRONT          DagDetailsDtoLineagePlatform = "AMAZON_CLOUDFRONT"
	DagDetailsDtoLineagePlatformAMAZONDOCUMENTDB          DagDetailsDtoLineagePlatform = "AMAZON_DOCUMENTDB"
	DagDetailsDtoLineagePlatformAMAZONDYNAMODB            DagDetailsDtoLineagePlatform = "AMAZON_DYNAMODB"
	DagDetailsDtoLineagePlatformAMAZONFIREHOSE            DagDetailsDtoLineagePlatform = "AMAZON_FIREHOSE"
	DagDetailsDtoLineagePlatformAMAZONSAGEMAKER           DagDetailsDtoLineagePlatform = "AMAZON_SAGEMAKER"
	DagDetailsDtoLineagePlatformAMAZONSELLINGPARTNER      DagDetailsDtoLineagePlatform = "AMAZON_SELLING_PARTNER"
	DagDetailsDtoLineagePlatformAMPLITUDE                 DagDetailsDtoLineagePlatform = "AMPLITUDE"
	DagDetailsDtoLineagePlatformANAPLAN                   DagDetailsDtoLineagePlatform = "ANAPLAN"
	DagDetailsDtoLineagePlatformANOMALO                   DagDetailsDtoLineagePlatform = "ANOMALO"
	DagDetailsDtoLineagePlatformAPACHEKAFKA               DagDetailsDtoLineagePlatform = "APACHE_KAFKA"
	DagDetailsDtoLineagePlatformAPACHESPARK               DagDetailsDtoLineagePlatform = "APACHE_SPARK"
	DagDetailsDtoLineagePlatformAPPCUES                   DagDetailsDtoLineagePlatform = "APPCUES"
	DagDetailsDtoLineagePlatformAPPFIGURES                DagDetailsDtoLineagePlatform = "APPFIGURES"
	DagDetailsDtoLineagePlatformAPPLE                     DagDetailsDtoLineagePlatform = "APPLE"
	DagDetailsDtoLineagePlatformAPPLEAPPSTORE             DagDetailsDtoLineagePlatform = "APPLE_APP_STORE"
	DagDetailsDtoLineagePlatformAPPSFLYER                 DagDetailsDtoLineagePlatform = "APPSFLYER"
	DagDetailsDtoLineagePlatformASANA                     DagDetailsDtoLineagePlatform = "ASANA"
	DagDetailsDtoLineagePlatformASSEMBLED                 DagDetailsDtoLineagePlatform = "ASSEMBLED"
	DagDetailsDtoLineagePlatformATHENA                    DagDetailsDtoLineagePlatform = "ATHENA"
	DagDetailsDtoLineagePlatformATLAN                     DagDetailsDtoLineagePlatform = "ATLAN"
	DagDetailsDtoLineagePlatformATLASSIANCONFLUENCE       DagDetailsDtoLineagePlatform = "ATLASSIAN_CONFLUENCE"
	DagDetailsDtoLineagePlatformATLASSIANJIRA             DagDetailsDtoLineagePlatform = "ATLASSIAN_JIRA"
	DagDetailsDtoLineagePlatformATLASSIANOPSGENIE         DagDetailsDtoLineagePlatform = "ATLASSIAN_OPSGENIE"
	DagDetailsDtoLineagePlatformAUTH0                     DagDetailsDtoLineagePlatform = "AUTH0"
	DagDetailsDtoLineagePlatformAUTODESKBIM360            DagDetailsDtoLineagePlatform = "AUTODESK_BIM_360"
	DagDetailsDtoLineagePlatformAWIN                      DagDetailsDtoLineagePlatform = "AWIN"
	DagDetailsDtoLineagePlatformAWSCLOUDTRAIL             DagDetailsDtoLineagePlatform = "AWS_CLOUDTRAIL"
	DagDetailsDtoLineagePlatformAWSCOSTEXPLORER           DagDetailsDtoLineagePlatform = "AWS_COST_EXPLORER"
	DagDetailsDtoLineagePlatformAWSINVENTORY              DagDetailsDtoLineagePlatform = "AWS_INVENTORY"
	DagDetailsDtoLineagePlatformAWSLAMBDA                 DagDetailsDtoLineagePlatform = "AWS_LAMBDA"
	DagDetailsDtoLineagePlatformAZURE                     DagDetailsDtoLineagePlatform = "AZURE"
	DagDetailsDtoLineagePlatformBALLOTREADY               DagDetailsDtoLineagePlatform = "BALLOT_READY"
	DagDetailsDtoLineagePlatformBAMBOOHR                  DagDetailsDtoLineagePlatform = "BAMBOOHR"
	DagDetailsDtoLineagePlatformBIGCOMMERCE               DagDetailsDtoLineagePlatform = "BIGCOMMERCE"
	DagDetailsDtoLineagePlatformBIGEYE                    DagDetailsDtoLineagePlatform = "BIGEYE"
	DagDetailsDtoLineagePlatformBIGQUERY                  DagDetailsDtoLineagePlatform = "BIGQUERY"
	DagDetailsDtoLineagePlatformBILLINGPLATFORM           DagDetailsDtoLineagePlatform = "BILLINGPLATFORM"
	DagDetailsDtoLineagePlatformBIRDEYE                   DagDetailsDtoLineagePlatform = "BIRDEYE"
	DagDetailsDtoLineagePlatformBLACKBOARD                DagDetailsDtoLineagePlatform = "BLACKBOARD"
	DagDetailsDtoLineagePlatformBOX                       DagDetailsDtoLineagePlatform = "BOX"
	DagDetailsDtoLineagePlatformBRAINTREE                 DagDetailsDtoLineagePlatform = "BRAINTREE"
	DagDetailsDtoLineagePlatformBRAZE                     DagDetailsDtoLineagePlatform = "BRAZE"
	DagDetailsDtoLineagePlatformBREVO                     DagDetailsDtoLineagePlatform = "BREVO"
	DagDetailsDtoLineagePlatformBREX                      DagDetailsDtoLineagePlatform = "BREX"
	DagDetailsDtoLineagePlatformBUILDKITE                 DagDetailsDtoLineagePlatform = "BUILDKITE"
	DagDetailsDtoLineagePlatformBUZZSPROUT                DagDetailsDtoLineagePlatform = "BUZZSPROUT"
	DagDetailsDtoLineagePlatformCALENDLY                  DagDetailsDtoLineagePlatform = "CALENDLY"
	DagDetailsDtoLineagePlatformCAMPAIGNMONITOR           DagDetailsDtoLineagePlatform = "CAMPAIGN_MONITOR"
	DagDetailsDtoLineagePlatformCANNY                     DagDetailsDtoLineagePlatform = "CANNY"
	DagDetailsDtoLineagePlatformCANVAS                    DagDetailsDtoLineagePlatform = "CANVAS"
	DagDetailsDtoLineagePlatformCAPTERRA                  DagDetailsDtoLineagePlatform = "CAPTERRA"
	DagDetailsDtoLineagePlatformCASTORDOC                 DagDetailsDtoLineagePlatform = "CASTOR_DOC"
	DagDetailsDtoLineagePlatformCENSUS                    DagDetailsDtoLineagePlatform = "CENSUS"
	DagDetailsDtoLineagePlatformCERTINIA                  DagDetailsDtoLineagePlatform = "CERTINIA"
	DagDetailsDtoLineagePlatformCHAMELEON                 DagDetailsDtoLineagePlatform = "CHAMELEON"
	DagDetailsDtoLineagePlatformCHANNELADVISOR            DagDetailsDtoLineagePlatform = "CHANNEL_ADVISOR"
	DagDetailsDtoLineagePlatformCHARGEBEE                 DagDetailsDtoLineagePlatform = "CHARGEBEE"
	DagDetailsDtoLineagePlatformCHARGEDESK                DagDetailsDtoLineagePlatform = "CHARGEDESK"
	DagDetailsDtoLineagePlatformCHARTMOGUL                DagDetailsDtoLineagePlatform = "CHARTMOGUL"
	DagDetailsDtoLineagePlatformCHORUSAI                  DagDetailsDtoLineagePlatform = "CHORUS_AI"
	DagDetailsDtoLineagePlatformCHURNKEY                  DagDetailsDtoLineagePlatform = "CHURNKEY"
	DagDetailsDtoLineagePlatformCHURNZERO                 DagDetailsDtoLineagePlatform = "CHURNZERO"
	DagDetailsDtoLineagePlatformCIMIS                     DagDetailsDtoLineagePlatform = "CIMIS"
	DagDetailsDtoLineagePlatformCIN7                      DagDetailsDtoLineagePlatform = "CIN7"
	DagDetailsDtoLineagePlatformCIRCLECI                  DagDetailsDtoLineagePlatform = "CIRCLE_CI"
	DagDetailsDtoLineagePlatformCLARI                     DagDetailsDtoLineagePlatform = "CLARI"
	DagDetailsDtoLineagePlatformCLICKUP                   DagDetailsDtoLineagePlatform = "CLICKUP"
	DagDetailsDtoLineagePlatformCLIFFAI                   DagDetailsDtoLineagePlatform = "CLIFF_AI"
	DagDetailsDtoLineagePlatformCLOSE                     DagDetailsDtoLineagePlatform = "CLOSE"
	DagDetailsDtoLineagePlatformCOLLIBRA                  DagDetailsDtoLineagePlatform = "COLLIBRA"
	DagDetailsDtoLineagePlatformCOMMERCETOOLS             DagDetailsDtoLineagePlatform = "COMMERCETOOLS"
	DagDetailsDtoLineagePlatformCOMPOSER                  DagDetailsDtoLineagePlatform = "COMPOSER"
	DagDetailsDtoLineagePlatformCONFLUENTCLOUD            DagDetailsDtoLineagePlatform = "CONFLUENT_CLOUD"
	DagDetailsDtoLineagePlatformCONTRASTSECURITY          DagDetailsDtoLineagePlatform = "CONTRAST_SECURITY"
	DagDetailsDtoLineagePlatformCOUPA                     DagDetailsDtoLineagePlatform = "COUPA"
	DagDetailsDtoLineagePlatformCRITEO                    DagDetailsDtoLineagePlatform = "CRITEO"
	DagDetailsDtoLineagePlatformCROSSBEAM                 DagDetailsDtoLineagePlatform = "CROSSBEAM"
	DagDetailsDtoLineagePlatformCRUNCHBASE                DagDetailsDtoLineagePlatform = "CRUNCHBASE"
	DagDetailsDtoLineagePlatformCUSTOMERIO                DagDetailsDtoLineagePlatform = "CUSTOMER_IO"
	DagDetailsDtoLineagePlatformD2LBRIGHTSPACE            DagDetailsDtoLineagePlatform = "D2L_BRIGHTSPACE"
	DagDetailsDtoLineagePlatformDAGSTER                   DagDetailsDtoLineagePlatform = "DAGSTER"
	DagDetailsDtoLineagePlatformDATABAND                  DagDetailsDtoLineagePlatform = "DATABAND"
	DagDetailsDtoLineagePlatformDATABRICKS                DagDetailsDtoLineagePlatform = "DATABRICKS"
	DagDetailsDtoLineagePlatformDATADOG                   DagDetailsDtoLineagePlatform = "DATADOG"
	DagDetailsDtoLineagePlatformDATAEDO                   DagDetailsDtoLineagePlatform = "DATAEDO"
	DagDetailsDtoLineagePlatformDATAFOLD                  DagDetailsDtoLineagePlatform = "DATAFOLD"
	DagDetailsDtoLineagePlatformDATAGALAXY                DagDetailsDtoLineagePlatform = "DATAGALAXY"
	DagDetailsDtoLineagePlatformDATAHUB                   DagDetailsDtoLineagePlatform = "DATAHUB"
	DagDetailsDtoLineagePlatformDATAIKU                   DagDetailsDtoLineagePlatform = "DATAIKU"
	DagDetailsDtoLineagePlatformDATAWORLD                 DagDetailsDtoLineagePlatform = "DATA_WORLD"
	DagDetailsDtoLineagePlatformDB2                       DagDetailsDtoLineagePlatform = "DB2"
	DagDetailsDtoLineagePlatformDBT                       DagDetailsDtoLineagePlatform = "DBT"
	DagDetailsDtoLineagePlatformDBTCLOUD                  DagDetailsDtoLineagePlatform = "DBTCLOUD"
	DagDetailsDtoLineagePlatformDCLLOGISTICS              DagDetailsDtoLineagePlatform = "DCL_LOGISTICS"
	DagDetailsDtoLineagePlatformDEAR                      DagDetailsDtoLineagePlatform = "DEAR"
	DagDetailsDtoLineagePlatformDECUBE                    DagDetailsDtoLineagePlatform = "DECUBE"
	DagDetailsDtoLineagePlatformDELIGHTED                 DagDetailsDtoLineagePlatform = "DELIGHTED"
	DagDetailsDtoLineagePlatformDEPUTY                    DagDetailsDtoLineagePlatform = "DEPUTY"
	DagDetailsDtoLineagePlatformDESTINI                   DagDetailsDtoLineagePlatform = "DESTINI"
	DagDetailsDtoLineagePlatformDIXA                      DagDetailsDtoLineagePlatform = "DIXA"
	DagDetailsDtoLineagePlatformDOCEBO                    DagDetailsDtoLineagePlatform = "DOCEBO"
	DagDetailsDtoLineagePlatformDRATA                     DagDetailsDtoLineagePlatform = "DRATA"
	DagDetailsDtoLineagePlatformDRIFT                     DagDetailsDtoLineagePlatform = "DRIFT"
	DagDetailsDtoLineagePlatformDRIP                      DagDetailsDtoLineagePlatform = "DRIP"
	DagDetailsDtoLineagePlatformDROPBOX                   DagDetailsDtoLineagePlatform = "DROPBOX"
	DagDetailsDtoLineagePlatformDUOPLANE                  DagDetailsDtoLineagePlatform = "DUOPLANE"
	DagDetailsDtoLineagePlatformEASYPOST                  DagDetailsDtoLineagePlatform = "EASY_POST"
	DagDetailsDtoLineagePlatformECONOMIC                  DagDetailsDtoLineagePlatform = "E_CONOMIC"
	DagDetailsDtoLineagePlatformELASTICSEARCH             DagDetailsDtoLineagePlatform = "ELASTICSEARCH"
	DagDetailsDtoLineagePlatformELEMENTARY                DagDetailsDtoLineagePlatform = "ELEMENTARY"
	DagDetailsDtoLineagePlatformELLUCIAN                  DagDetailsDtoLineagePlatform = "ELLUCIAN"
	DagDetailsDtoLineagePlatformELOQUA                    DagDetailsDtoLineagePlatform = "ELOQUA"
	DagDetailsDtoLineagePlatformEMAIL                     DagDetailsDtoLineagePlatform = "EMAIL"
	DagDetailsDtoLineagePlatformEMPLOYMENTHERO            DagDetailsDtoLineagePlatform = "EMPLOYMENT_HERO"
	DagDetailsDtoLineagePlatformEPICORPROPHET21           DagDetailsDtoLineagePlatform = "EPICOR_PROPHET_21"
	DagDetailsDtoLineagePlatformEVENTBRITE                DagDetailsDtoLineagePlatform = "EVENTBRITE"
	DagDetailsDtoLineagePlatformEVERHOUR                  DagDetailsDtoLineagePlatform = "EVERHOUR"
	DagDetailsDtoLineagePlatformEXCEL                     DagDetailsDtoLineagePlatform = "EXCEL"
	DagDetailsDtoLineagePlatformEXPENSIFY                 DagDetailsDtoLineagePlatform = "EXPENSIFY"
	DagDetailsDtoLineagePlatformFACEBOOK                  DagDetailsDtoLineagePlatform = "FACEBOOK"
	DagDetailsDtoLineagePlatformFIFTEENFIVE               DagDetailsDtoLineagePlatform = "FIFTEENFIVE"
	DagDetailsDtoLineagePlatformFIGMA                     DagDetailsDtoLineagePlatform = "FIGMA"
	DagDetailsDtoLineagePlatformFIREBASE                  DagDetailsDtoLineagePlatform = "FIREBASE"
	DagDetailsDtoLineagePlatformFIREBOLT                  DagDetailsDtoLineagePlatform = "FIREBOLT"
	DagDetailsDtoLineagePlatformFIVETRAN                  DagDetailsDtoLineagePlatform = "FIVETRAN"
	DagDetailsDtoLineagePlatformFLEXPORT                  DagDetailsDtoLineagePlatform = "FLEXPORT"
	DagDetailsDtoLineagePlatformFORJ                      DagDetailsDtoLineagePlatform = "FORJ"
	DagDetailsDtoLineagePlatformFOUNTAIN                  DagDetailsDtoLineagePlatform = "FOUNTAIN"
	DagDetailsDtoLineagePlatformFREIGHTVIEW               DagDetailsDtoLineagePlatform = "FREIGHTVIEW"
	DagDetailsDtoLineagePlatformFRESHBOOKS                DagDetailsDtoLineagePlatform = "FRESHBOOKS"
	DagDetailsDtoLineagePlatformFRESHCHAT                 DagDetailsDtoLineagePlatform = "FRESHCHAT"
	DagDetailsDtoLineagePlatformFRESHDESK                 DagDetailsDtoLineagePlatform = "FRESHDESK"
	DagDetailsDtoLineagePlatformFRESHDESKCONTACTCENTER    DagDetailsDtoLineagePlatform = "FRESHDESK_CONTACT_CENTER"
	DagDetailsDtoLineagePlatformFRESHSERVICE              DagDetailsDtoLineagePlatform = "FRESHSERVICE"
	DagDetailsDtoLineagePlatformFRESHSUCCESS              DagDetailsDtoLineagePlatform = "FRESHSUCCESS"
	DagDetailsDtoLineagePlatformFRESHTEAM                 DagDetailsDtoLineagePlatform = "FRESHTEAM"
	DagDetailsDtoLineagePlatformFRIENDBUY                 DagDetailsDtoLineagePlatform = "FRIENDBUY"
	DagDetailsDtoLineagePlatformFRONT                     DagDetailsDtoLineagePlatform = "FRONT"
	DagDetailsDtoLineagePlatformFTP                       DagDetailsDtoLineagePlatform = "FTP"
	DagDetailsDtoLineagePlatformFULLSTORY                 DagDetailsDtoLineagePlatform = "FULLSTORY"
	DagDetailsDtoLineagePlatformG2                        DagDetailsDtoLineagePlatform = "G2"
	DagDetailsDtoLineagePlatformGAINSIGHT                 DagDetailsDtoLineagePlatform = "GAINSIGHT"
	DagDetailsDtoLineagePlatformGEM                       DagDetailsDtoLineagePlatform = "GEM"
	DagDetailsDtoLineagePlatformGIT                       DagDetailsDtoLineagePlatform = "GIT"
	DagDetailsDtoLineagePlatformGITHUB                    DagDetailsDtoLineagePlatform = "GITHUB"
	DagDetailsDtoLineagePlatformGITLAB                    DagDetailsDtoLineagePlatform = "GITLAB"
	DagDetailsDtoLineagePlatformGLADLY                    DagDetailsDtoLineagePlatform = "GLADLY"
	DagDetailsDtoLineagePlatformGOCARDLESS                DagDetailsDtoLineagePlatform = "GOCARDLESS"
	DagDetailsDtoLineagePlatformGONG                      DagDetailsDtoLineagePlatform = "GONG"
	DagDetailsDtoLineagePlatformGOOGLE                    DagDetailsDtoLineagePlatform = "GOOGLE"
	DagDetailsDtoLineagePlatformGOOGLEADMANAGER           DagDetailsDtoLineagePlatform = "GOOGLE_AD_MANAGER"
	DagDetailsDtoLineagePlatformGOOGLEADS                 DagDetailsDtoLineagePlatform = "GOOGLE_ADS"
	DagDetailsDtoLineagePlatformGOOGLEANALYTICS           DagDetailsDtoLineagePlatform = "GOOGLE_ANALYTICS"
	DagDetailsDtoLineagePlatformGOOGLECALENDAR            DagDetailsDtoLineagePlatform = "GOOGLE_CALENDAR"
	DagDetailsDtoLineagePlatformGOOGLECAMPAIGNMANAGER     DagDetailsDtoLineagePlatform = "GOOGLE_CAMPAIGN_MANAGER"
	DagDetailsDtoLineagePlatformGOOGLECHROME              DagDetailsDtoLineagePlatform = "GOOGLE_CHROME"
	DagDetailsDtoLineagePlatformGOOGLECLOUD               DagDetailsDtoLineagePlatform = "GOOGLE_CLOUD"
	DagDetailsDtoLineagePlatformGOOGLECLOUDSTORAGE        DagDetailsDtoLineagePlatform = "GOOGLE_CLOUD_STORAGE"
	DagDetailsDtoLineagePlatformGOOGLEDISPLAY             DagDetailsDtoLineagePlatform = "GOOGLE_DISPLAY"
	DagDetailsDtoLineagePlatformGOOGLEDRIVE               DagDetailsDtoLineagePlatform = "GOOGLE_DRIVE"
	DagDetailsDtoLineagePlatformGOOGLEPLAY                DagDetailsDtoLineagePlatform = "GOOGLE_PLAY"
	DagDetailsDtoLineagePlatformGOOGLESEARCHADS360        DagDetailsDtoLineagePlatform = "GOOGLE_SEARCH_ADS_360"
	DagDetailsDtoLineagePlatformGOOGLESEARCHCONSOLE       DagDetailsDtoLineagePlatform = "GOOGLE_SEARCH_CONSOLE"
	DagDetailsDtoLineagePlatformGOOGLESHEETS              DagDetailsDtoLineagePlatform = "GOOGLE_SHEETS"
	DagDetailsDtoLineagePlatformGOOGLETASKS               DagDetailsDtoLineagePlatform = "GOOGLE_TASKS"
	DagDetailsDtoLineagePlatformGORGIAS                   DagDetailsDtoLineagePlatform = "GORGIAS"
	DagDetailsDtoLineagePlatformGREENHOUSE                DagDetailsDtoLineagePlatform = "GREENHOUSE"
	DagDetailsDtoLineagePlatformGREENPLUM                 DagDetailsDtoLineagePlatform = "GREENPLUM"
	DagDetailsDtoLineagePlatformGREENPOWERMONITOR         DagDetailsDtoLineagePlatform = "GREEN_POWER_MONITOR"
	DagDetailsDtoLineagePlatformGREPSR                    DagDetailsDtoLineagePlatform = "GREPSR"
	DagDetailsDtoLineagePlatformGRIN                      DagDetailsDtoLineagePlatform = "GRIN"
	DagDetailsDtoLineagePlatformGURU                      DagDetailsDtoLineagePlatform = "GURU"
	DagDetailsDtoLineagePlatformH2                        DagDetailsDtoLineagePlatform = "H2"
	DagDetailsDtoLineagePlatformHARVEST                   DagDetailsDtoLineagePlatform = "HARVEST"
	DagDetailsDtoLineagePlatformHDFS                      DagDetailsDtoLineagePlatform = "HDFS"
	DagDetailsDtoLineagePlatformHDFSSTORAGE               DagDetailsDtoLineagePlatform = "HDFS_STORAGE"
	DagDetailsDtoLineagePlatformHEAP                      DagDetailsDtoLineagePlatform = "HEAP"
	DagDetailsDtoLineagePlatformHEIGHT                    DagDetailsDtoLineagePlatform = "HEIGHT"
	DagDetailsDtoLineagePlatformHELPSCOUT                 DagDetailsDtoLineagePlatform = "HELP_SCOUT"
	DagDetailsDtoLineagePlatformHELPSHIFT                 DagDetailsDtoLineagePlatform = "HELPSHIFT"
	DagDetailsDtoLineagePlatformHEROKUKAFKA               DagDetailsDtoLineagePlatform = "HEROKU_KAFKA"
	DagDetailsDtoLineagePlatformHIBOB                     DagDetailsDtoLineagePlatform = "HIBOB"
	DagDetailsDtoLineagePlatformHIGHTOUCH                 DagDetailsDtoLineagePlatform = "HIGH_TOUCH"
	DagDetailsDtoLineagePlatformHIVE                      DagDetailsDtoLineagePlatform = "HIVE"
	DagDetailsDtoLineagePlatformHIVEPROCESS               DagDetailsDtoLineagePlatform = "HIVE_PROCESS"
	DagDetailsDtoLineagePlatformHOPIN                     DagDetailsDtoLineagePlatform = "HOPIN"
	DagDetailsDtoLineagePlatformHUBSPOT                   DagDetailsDtoLineagePlatform = "HUBSPOT"
	DagDetailsDtoLineagePlatformIMPACT                    DagDetailsDtoLineagePlatform = "IMPACT"
	DagDetailsDtoLineagePlatformINCIDENTIO                DagDetailsDtoLineagePlatform = "INCIDENT_IO"
	DagDetailsDtoLineagePlatformINFOBIP                   DagDetailsDtoLineagePlatform = "INFOBIP"
	DagDetailsDtoLineagePlatformINFORMATICA               DagDetailsDtoLineagePlatform = "INFORMATICA"
	DagDetailsDtoLineagePlatformINSIGHTLY                 DagDetailsDtoLineagePlatform = "INSIGHTLY"
	DagDetailsDtoLineagePlatformINSTAGRAM                 DagDetailsDtoLineagePlatform = "INSTAGRAM"
	DagDetailsDtoLineagePlatformINTERCOM                  DagDetailsDtoLineagePlatform = "INTERCOM"
	DagDetailsDtoLineagePlatformINVESTOPEDIA              DagDetailsDtoLineagePlatform = "INVESTOPEDIA"
	DagDetailsDtoLineagePlatformIRONCLAD                  DagDetailsDtoLineagePlatform = "IRONCLAD"
	DagDetailsDtoLineagePlatformIRONSOURCE                DagDetailsDtoLineagePlatform = "IRONSOURCE"
	DagDetailsDtoLineagePlatformITERABLE                  DagDetailsDtoLineagePlatform = "ITERABLE"
	DagDetailsDtoLineagePlatformJAVA                      DagDetailsDtoLineagePlatform = "JAVA"
	DagDetailsDtoLineagePlatformJENKINS                   DagDetailsDtoLineagePlatform = "JENKINS"
	DagDetailsDtoLineagePlatformJUSTCALL                  DagDetailsDtoLineagePlatform = "JUSTCALL"
	DagDetailsDtoLineagePlatformKANDJI                    DagDetailsDtoLineagePlatform = "KANDJI"
	DagDetailsDtoLineagePlatformKENSU                     DagDetailsDtoLineagePlatform = "KENSU"
	DagDetailsDtoLineagePlatformKHOROSCARE                DagDetailsDtoLineagePlatform = "KHOROS_CARE"
	DagDetailsDtoLineagePlatformKISSMETRICS               DagDetailsDtoLineagePlatform = "KISSMETRICS"
	DagDetailsDtoLineagePlatformKLAVIYO                   DagDetailsDtoLineagePlatform = "KLAVIYO"
	DagDetailsDtoLineagePlatformKNOWBE4                   DagDetailsDtoLineagePlatform = "KNOWBE4"
	DagDetailsDtoLineagePlatformKONNECTINSIGHTS           DagDetailsDtoLineagePlatform = "KONNECT_INSIGHTS"
	DagDetailsDtoLineagePlatformKUSTOMER                  DagDetailsDtoLineagePlatform = "KUSTOMER"
	DagDetailsDtoLineagePlatformLARIATDATA                DagDetailsDtoLineagePlatform = "LARIAT_DATA"
	DagDetailsDtoLineagePlatformLATTICE                   DagDetailsDtoLineagePlatform = "LATTICE"
	DagDetailsDtoLineagePlatformLAUNCHDARKLY              DagDetailsDtoLineagePlatform = "LAUNCH_DARKLY"
	DagDetailsDtoLineagePlatformLEARNUPON                 DagDetailsDtoLineagePlatform = "LEARN_UPON"
	DagDetailsDtoLineagePlatformLESSONLY                  DagDetailsDtoLineagePlatform = "LESSONLY"
	DagDetailsDtoLineagePlatformLEVER                     DagDetailsDtoLineagePlatform = "LEVER"
	DagDetailsDtoLineagePlatformLIFTOFF                   DagDetailsDtoLineagePlatform = "LIFTOFF"
	DagDetailsDtoLineagePlatformLIGHTDASH                 DagDetailsDtoLineagePlatform = "LIGHTDASH"
	DagDetailsDtoLineagePlatformLIGHTSPEED                DagDetailsDtoLineagePlatform = "LIGHTSPEED"
	DagDetailsDtoLineagePlatformLIGHTSUP                  DagDetailsDtoLineagePlatform = "LIGHTSUP"
	DagDetailsDtoLineagePlatformLINEAR                    DagDetailsDtoLineagePlatform = "LINEAR"
	DagDetailsDtoLineagePlatformLINKEDIN                  DagDetailsDtoLineagePlatform = "LINKEDIN"
	DagDetailsDtoLineagePlatformLIVECHAT                  DagDetailsDtoLineagePlatform = "LIVECHAT"
	DagDetailsDtoLineagePlatformLOADEDCOMMERCE            DagDetailsDtoLineagePlatform = "LOADED_COMMERCE"
	DagDetailsDtoLineagePlatformLOB                       DagDetailsDtoLineagePlatform = "LOB"
	DagDetailsDtoLineagePlatformLOOKER                    DagDetailsDtoLineagePlatform = "LOOKER"
	DagDetailsDtoLineagePlatformLOOP                      DagDetailsDtoLineagePlatform = "LOOP"
	DagDetailsDtoLineagePlatformLOOPIO                    DagDetailsDtoLineagePlatform = "LOOPIO"
	DagDetailsDtoLineagePlatformLUMA                      DagDetailsDtoLineagePlatform = "LUMA"
	DagDetailsDtoLineagePlatformMAGENTO                   DagDetailsDtoLineagePlatform = "MAGENTO"
	DagDetailsDtoLineagePlatformMAILCHIMP                 DagDetailsDtoLineagePlatform = "MAILCHIMP"
	DagDetailsDtoLineagePlatformMAILGUN                   DagDetailsDtoLineagePlatform = "MAILGUN"
	DagDetailsDtoLineagePlatformMANDRILL                  DagDetailsDtoLineagePlatform = "MANDRILL"
	DagDetailsDtoLineagePlatformMANTA                     DagDetailsDtoLineagePlatform = "MANTA"
	DagDetailsDtoLineagePlatformMARIADB                   DagDetailsDtoLineagePlatform = "MARIADB"
	DagDetailsDtoLineagePlatformMARINSOFTWARE             DagDetailsDtoLineagePlatform = "MARIN_SOFTWARE"
	DagDetailsDtoLineagePlatformMARKETO                   DagDetailsDtoLineagePlatform = "MARKETO"
	DagDetailsDtoLineagePlatformMATTERMOST                DagDetailsDtoLineagePlatform = "MATTERMOST"
	DagDetailsDtoLineagePlatformMAVENLINK                 DagDetailsDtoLineagePlatform = "MAVENLINK"
	DagDetailsDtoLineagePlatformMAXIO                     DagDetailsDtoLineagePlatform = "MAXIO"
	DagDetailsDtoLineagePlatformMEDALLIA                  DagDetailsDtoLineagePlatform = "MEDALLIA"
	DagDetailsDtoLineagePlatformMETA                      DagDetailsDtoLineagePlatform = "META"
	DagDetailsDtoLineagePlatformMETABASE                  DagDetailsDtoLineagePlatform = "METABASE"
	DagDetailsDtoLineagePlatformMETAPHOR                  DagDetailsDtoLineagePlatform = "METAPHOR"
	DagDetailsDtoLineagePlatformMETAPLANE                 DagDetailsDtoLineagePlatform = "METAPLANE"
	DagDetailsDtoLineagePlatformMICROSOFT                 DagDetailsDtoLineagePlatform = "MICROSOFT"
	DagDetailsDtoLineagePlatformMICROSOFTAZUREBLOBSTORAGE DagDetailsDtoLineagePlatform = "MICROSOFT_AZURE_BLOB_STORAGE"
	DagDetailsDtoLineagePlatformMICROSOFTAZUREML          DagDetailsDtoLineagePlatform = "MICROSOFT_AZURE_ML"
	DagDetailsDtoLineagePlatformMICROSOFTDYNAMICS         DagDetailsDtoLineagePlatform = "MICROSOFT_DYNAMICS"
	DagDetailsDtoLineagePlatformMICROSOFTONEDRIVE         DagDetailsDtoLineagePlatform = "MICROSOFT_ONEDRIVE"
	DagDetailsDtoLineagePlatformMICROSOFTPURVIEW          DagDetailsDtoLineagePlatform = "MICROSOFT_PURVIEW"
	DagDetailsDtoLineagePlatformMICROSOFTTEAMS            DagDetailsDtoLineagePlatform = "MICROSOFT_TEAMS"
	DagDetailsDtoLineagePlatformMICROSTRATEGY             DagDetailsDtoLineagePlatform = "MICROSTRATEGY"
	DagDetailsDtoLineagePlatformMIXMAX                    DagDetailsDtoLineagePlatform = "MIXMAX"
	DagDetailsDtoLineagePlatformMIXPANEL                  DagDetailsDtoLineagePlatform = "MIXPANEL"
	DagDetailsDtoLineagePlatformMONDAYCOM                 DagDetailsDtoLineagePlatform = "MONDAY_COM"
	DagDetailsDtoLineagePlatformMONGODB                   DagDetailsDtoLineagePlatform = "MONGODB"
	DagDetailsDtoLineagePlatformMONTECARLO                DagDetailsDtoLineagePlatform = "MONTE_CARLO"
	DagDetailsDtoLineagePlatformMOUNTAIN                  DagDetailsDtoLineagePlatform = "MOUNTAIN"
	DagDetailsDtoLineagePlatformMSSQL                     DagDetailsDtoLineagePlatform = "MSSQL"
	DagDetailsDtoLineagePlatformMULESOFT                  DagDetailsDtoLineagePlatform = "MULESOFT"
	DagDetailsDtoLineagePlatformMUX                       DagDetailsDtoLineagePlatform = "MUX"
	DagDetailsDtoLineagePlatformMWAA                      DagDetailsDtoLineagePlatform = "MWAA"
	DagDetailsDtoLineagePlatformMYSQL                     DagDetailsDtoLineagePlatform = "MYSQL"
	DagDetailsDtoLineagePlatformNAMELY                    DagDetailsDtoLineagePlatform = "NAMELY"
	DagDetailsDtoLineagePlatformNCINO                     DagDetailsDtoLineagePlatform = "NCINO"
	DagDetailsDtoLineagePlatformNETSUITEANALYTICS         DagDetailsDtoLineagePlatform = "NETSUITE_ANALYTICS"
	DagDetailsDtoLineagePlatformNEWRELIC                  DagDetailsDtoLineagePlatform = "NEW_RELIC"
	DagDetailsDtoLineagePlatformNOTION                    DagDetailsDtoLineagePlatform = "NOTION"
	DagDetailsDtoLineagePlatformNYLAS                     DagDetailsDtoLineagePlatform = "NYLAS"
	DagDetailsDtoLineagePlatformOBSERVE                   DagDetailsDtoLineagePlatform = "OBSERVE"
	DagDetailsDtoLineagePlatformOCTOPAI                   DagDetailsDtoLineagePlatform = "OCTOPAI"
	DagDetailsDtoLineagePlatformOKTA                      DagDetailsDtoLineagePlatform = "OKTA"
	DagDetailsDtoLineagePlatformOPENAI                    DagDetailsDtoLineagePlatform = "OPEN_AI"
	DagDetailsDtoLineagePlatformOPENDATADC                DagDetailsDtoLineagePlatform = "OPEN_DATA_DC"
	DagDetailsDtoLineagePlatformOPENEXCHANGESRATES        DagDetailsDtoLineagePlatform = "OPEN_EXCHANGES_RATES"
	DagDetailsDtoLineagePlatformOPENSEARCH                DagDetailsDtoLineagePlatform = "OPEN_SEARCH"
	DagDetailsDtoLineagePlatformOPTIMIZELY                DagDetailsDtoLineagePlatform = "OPTIMIZELY"
	DagDetailsDtoLineagePlatformORACLE                    DagDetailsDtoLineagePlatform = "ORACLE"
	DagDetailsDtoLineagePlatformORBITCOMMUNITYPLATFORM    DagDetailsDtoLineagePlatform = "ORBIT_COMMUNITY_PLATFORM"
	DagDetailsDtoLineagePlatformORDWAY                    DagDetailsDtoLineagePlatform = "ORDWAY"
	DagDetailsDtoLineagePlatformORTTO                     DagDetailsDtoLineagePlatform = "ORTTO"
	DagDetailsDtoLineagePlatformOSCOMMERCE                DagDetailsDtoLineagePlatform = "OS_COMMERCE"
	DagDetailsDtoLineagePlatformOUTBRAIN                  DagDetailsDtoLineagePlatform = "OUTBRAIN"
	DagDetailsDtoLineagePlatformOUTREACH                  DagDetailsDtoLineagePlatform = "OUTREACH"
	DagDetailsDtoLineagePlatformOVALEDGE                  DagDetailsDtoLineagePlatform = "OVALEDGE"
	DagDetailsDtoLineagePlatformPAGERDUTY                 DagDetailsDtoLineagePlatform = "PAGERDUTY"
	DagDetailsDtoLineagePlatformPAGERSHIFT                DagDetailsDtoLineagePlatform = "PAGERSHIFT"
	DagDetailsDtoLineagePlatformPAYPAL                    DagDetailsDtoLineagePlatform = "PAYPAL"
	DagDetailsDtoLineagePlatformPENDO                     DagDetailsDtoLineagePlatform = "PENDO"
	DagDetailsDtoLineagePlatformPINGDOM                   DagDetailsDtoLineagePlatform = "PINGDOM"
	DagDetailsDtoLineagePlatformPINTEREST                 DagDetailsDtoLineagePlatform = "PINTEREST"
	DagDetailsDtoLineagePlatformPIPE17                    DagDetailsDtoLineagePlatform = "PIPE17"
	DagDetailsDtoLineagePlatformPIPEDRIVE                 DagDetailsDtoLineagePlatform = "PIPEDRIVE"
	DagDetailsDtoLineagePlatformPIVOTALTRACKER            DagDetailsDtoLineagePlatform = "PIVOTAL_TRACKER"
	DagDetailsDtoLineagePlatformPLAYVOX                   DagDetailsDtoLineagePlatform = "PLAYVOX"
	DagDetailsDtoLineagePlatformPOSTGRES                  DagDetailsDtoLineagePlatform = "POSTGRES"
	DagDetailsDtoLineagePlatformPOSTHOG                   DagDetailsDtoLineagePlatform = "POSTHOG"
	DagDetailsDtoLineagePlatformPOWERBI                   DagDetailsDtoLineagePlatform = "POWER_BI"
	DagDetailsDtoLineagePlatformPOWERSCHOOL               DagDetailsDtoLineagePlatform = "POWERSCHOOL"
	DagDetailsDtoLineagePlatformPREFECT                   DagDetailsDtoLineagePlatform = "PREFECT"
	DagDetailsDtoLineagePlatformPRESTASHOP                DagDetailsDtoLineagePlatform = "PRESTASHOP"
	DagDetailsDtoLineagePlatformPRESTO                    DagDetailsDtoLineagePlatform = "PRESTO"
	DagDetailsDtoLineagePlatformPRODUCTBOARD              DagDetailsDtoLineagePlatform = "PRODUCTBOARD"
	DagDetailsDtoLineagePlatformPYTHON                    DagDetailsDtoLineagePlatform = "PYTHON"
	DagDetailsDtoLineagePlatformQLIK                      DagDetailsDtoLineagePlatform = "QLIK"
	DagDetailsDtoLineagePlatformQUALAROO                  DagDetailsDtoLineagePlatform = "QUALAROO"
	DagDetailsDtoLineagePlatformQUALTRICS                 DagDetailsDtoLineagePlatform = "QUALTRICS"
	DagDetailsDtoLineagePlatformQUICKBOOKS                DagDetailsDtoLineagePlatform = "QUICKBOOKS"
	DagDetailsDtoLineagePlatformQUICKSIGHT                DagDetailsDtoLineagePlatform = "QUICKSIGHT"
	DagDetailsDtoLineagePlatformRAMP                      DagDetailsDtoLineagePlatform = "RAMP"
	DagDetailsDtoLineagePlatformRARIBLE                   DagDetailsDtoLineagePlatform = "RARIBLE"
	DagDetailsDtoLineagePlatformRECHARGE                  DagDetailsDtoLineagePlatform = "RECHARGE"
	DagDetailsDtoLineagePlatformRECURLY                   DagDetailsDtoLineagePlatform = "RECURLY"
	DagDetailsDtoLineagePlatformREDDIT                    DagDetailsDtoLineagePlatform = "REDDIT"
	DagDetailsDtoLineagePlatformREDSHIFT                  DagDetailsDtoLineagePlatform = "REDSHIFT"
	DagDetailsDtoLineagePlatformRELTIO                    DagDetailsDtoLineagePlatform = "RELTIO"
	DagDetailsDtoLineagePlatformREPLYIO                   DagDetailsDtoLineagePlatform = "REPLY_IO"
	DagDetailsDtoLineagePlatformRETAILNEXT                DagDetailsDtoLineagePlatform = "RETAILNEXT"
	DagDetailsDtoLineagePlatformRETENTLY                  DagDetailsDtoLineagePlatform = "RETENTLY"
	DagDetailsDtoLineagePlatformREVELSYSTEMS              DagDetailsDtoLineagePlatform = "REVEL_SYSTEMS"
	DagDetailsDtoLineagePlatformRINGCENTRAL               DagDetailsDtoLineagePlatform = "RINGCENTRAL"
	DagDetailsDtoLineagePlatformRIPPLING                  DagDetailsDtoLineagePlatform = "RIPPLING"
	DagDetailsDtoLineagePlatformROLLBAR                   DagDetailsDtoLineagePlatform = "ROLLBAR"
	DagDetailsDtoLineagePlatformROOTLY                    DagDetailsDtoLineagePlatform = "ROOTLY"
	DagDetailsDtoLineagePlatformS3                        DagDetailsDtoLineagePlatform = "S3"
	DagDetailsDtoLineagePlatformSAGEHR                    DagDetailsDtoLineagePlatform = "SAGE_HR"
	DagDetailsDtoLineagePlatformSAGEINTACCT               DagDetailsDtoLineagePlatform = "SAGE_INTACCT"
	DagDetailsDtoLineagePlatformSAILTHRU                  DagDetailsDtoLineagePlatform = "SAILTHRU"
	DagDetailsDtoLineagePlatformSALESFORCE                DagDetailsDtoLineagePlatform = "SALESFORCE"
	DagDetailsDtoLineagePlatformSALESLOFT                 DagDetailsDtoLineagePlatform = "SALESLOFT"
	DagDetailsDtoLineagePlatformSALSIFY                   DagDetailsDtoLineagePlatform = "SALSIFY"
	DagDetailsDtoLineagePlatformSAMSARA                   DagDetailsDtoLineagePlatform = "SAMSARA"
	DagDetailsDtoLineagePlatformSAP                       DagDetailsDtoLineagePlatform = "SAP"
	DagDetailsDtoLineagePlatformSAPCONCUR                 DagDetailsDtoLineagePlatform = "SAP_CONCUR"
	DagDetailsDtoLineagePlatformSCORM                     DagDetailsDtoLineagePlatform = "SCORM"
	DagDetailsDtoLineagePlatformSECODA                    DagDetailsDtoLineagePlatform = "SECODA"
	DagDetailsDtoLineagePlatformSECURITYJOURNEY           DagDetailsDtoLineagePlatform = "SECURITY_JOURNEY"
	DagDetailsDtoLineagePlatformSEGMENT                   DagDetailsDtoLineagePlatform = "SEGMENT"
	DagDetailsDtoLineagePlatformSELECTSTAR                DagDetailsDtoLineagePlatform = "SELECT_STAR"
	DagDetailsDtoLineagePlatformSENDGRID                  DagDetailsDtoLineagePlatform = "SENDGRID"
	DagDetailsDtoLineagePlatformSERVICENOW                DagDetailsDtoLineagePlatform = "SERVICE_NOW"
	DagDetailsDtoLineagePlatformSFTP                      DagDetailsDtoLineagePlatform = "SFTP"
	DagDetailsDtoLineagePlatformSHAREPOINT                DagDetailsDtoLineagePlatform = "SHAREPOINT"
	DagDetailsDtoLineagePlatformSHARETRIBE                DagDetailsDtoLineagePlatform = "SHARETRIBE"
	DagDetailsDtoLineagePlatformSHIPHERO                  DagDetailsDtoLineagePlatform = "SHIPHERO"
	DagDetailsDtoLineagePlatformSHIPSTATION               DagDetailsDtoLineagePlatform = "SHIPSTATION"
	DagDetailsDtoLineagePlatformSHOPIFY                   DagDetailsDtoLineagePlatform = "SHOPIFY"
	DagDetailsDtoLineagePlatformSHOPWARE                  DagDetailsDtoLineagePlatform = "SHOPWARE"
	DagDetailsDtoLineagePlatformSHORTIO                   DagDetailsDtoLineagePlatform = "SHORT_IO"
	DagDetailsDtoLineagePlatformSIFFLET                   DagDetailsDtoLineagePlatform = "SIFFLET"
	DagDetailsDtoLineagePlatformSIGMA                     DagDetailsDtoLineagePlatform = "SIGMA"
	DagDetailsDtoLineagePlatformSIMPLECAST                DagDetailsDtoLineagePlatform = "SIMPLECAST"
	DagDetailsDtoLineagePlatformSIMPLESAT                 DagDetailsDtoLineagePlatform = "SIMPLESAT"
	DagDetailsDtoLineagePlatformSINGLESTORE               DagDetailsDtoLineagePlatform = "SINGLESTORE"
	DagDetailsDtoLineagePlatformSISENSE                   DagDetailsDtoLineagePlatform = "SISENSE"
	DagDetailsDtoLineagePlatformSIXSENSE                  DagDetailsDtoLineagePlatform = "SIXSENSE"
	DagDetailsDtoLineagePlatformSKILLJAR                  DagDetailsDtoLineagePlatform = "SKILLJAR"
	DagDetailsDtoLineagePlatformSKUVAULT                  DagDetailsDtoLineagePlatform = "SKUVAULT"
	DagDetailsDtoLineagePlatformSLAB                      DagDetailsDtoLineagePlatform = "SLAB"
	DagDetailsDtoLineagePlatformSLACK                     DagDetailsDtoLineagePlatform = "SLACK"
	DagDetailsDtoLineagePlatformSMADEX                    DagDetailsDtoLineagePlatform = "SMADEX"
	DagDetailsDtoLineagePlatformSNAPCHAT                  DagDetailsDtoLineagePlatform = "SNAPCHAT"
	DagDetailsDtoLineagePlatformSNOWFLAKE                 DagDetailsDtoLineagePlatform = "SNOWFLAKE"
	DagDetailsDtoLineagePlatformSNOWPLOW                  DagDetailsDtoLineagePlatform = "SNOWPLOW"
	DagDetailsDtoLineagePlatformSODA                      DagDetailsDtoLineagePlatform = "SODA"
	DagDetailsDtoLineagePlatformSONARQUBE                 DagDetailsDtoLineagePlatform = "SONARQUBE"
	DagDetailsDtoLineagePlatformSPARKPROCESS              DagDetailsDtoLineagePlatform = "SPARK_PROCESS"
	DagDetailsDtoLineagePlatformSPLITIO                   DagDetailsDtoLineagePlatform = "SPLIT_IO"
	DagDetailsDtoLineagePlatformSPLUNK                    DagDetailsDtoLineagePlatform = "SPLUNK"
	DagDetailsDtoLineagePlatformSPOTIFY                   DagDetailsDtoLineagePlatform = "SPOTIFY"
	DagDetailsDtoLineagePlatformSPREECOMMERCE             DagDetailsDtoLineagePlatform = "SPREE_COMMERCE"
	DagDetailsDtoLineagePlatformSPROUTSOCIAL              DagDetailsDtoLineagePlatform = "SPROUT_SOCIAL"
	DagDetailsDtoLineagePlatformSQUARE                    DagDetailsDtoLineagePlatform = "SQUARE"
	DagDetailsDtoLineagePlatformSQUARESPACE               DagDetailsDtoLineagePlatform = "SQUARESPACE"
	DagDetailsDtoLineagePlatformSTACKADAPT                DagDetailsDtoLineagePlatform = "STACK_ADAPT"
	DagDetailsDtoLineagePlatformSTATSIG                   DagDetailsDtoLineagePlatform = "STATSIG"
	DagDetailsDtoLineagePlatformSTITCH                    DagDetailsDtoLineagePlatform = "STITCH"
	DagDetailsDtoLineagePlatformSTRIPE                    DagDetailsDtoLineagePlatform = "STRIPE"
	DagDetailsDtoLineagePlatformSTYLIGHT                  DagDetailsDtoLineagePlatform = "STYLIGHT"
	DagDetailsDtoLineagePlatformSUBSCRIPT                 DagDetailsDtoLineagePlatform = "SUBSCRIPT"
	DagDetailsDtoLineagePlatformSYNAPSE                   DagDetailsDtoLineagePlatform = "SYNAPSE"
	DagDetailsDtoLineagePlatformTABLEAU                   DagDetailsDtoLineagePlatform = "TABLEAU"
	DagDetailsDtoLineagePlatformTABOOLA                   DagDetailsDtoLineagePlatform = "TABOOLA"
	DagDetailsDtoLineagePlatformTALEND                    DagDetailsDtoLineagePlatform = "TALEND"
	DagDetailsDtoLineagePlatformTALKDESK                  DagDetailsDtoLineagePlatform = "TALKDESK"
	DagDetailsDtoLineagePlatformTALKWALKER                DagDetailsDtoLineagePlatform = "TALKWALKER"
	DagDetailsDtoLineagePlatformTEAMWORKCOM               DagDetailsDtoLineagePlatform = "TEAMWORK_COM"
	DagDetailsDtoLineagePlatformTEMPOIO                   DagDetailsDtoLineagePlatform = "TEMPO_IO"
	DagDetailsDtoLineagePlatformTERADATA                  DagDetailsDtoLineagePlatform = "TERADATA"
	DagDetailsDtoLineagePlatformTERRAFORM                 DagDetailsDtoLineagePlatform = "TERRAFORM"
	DagDetailsDtoLineagePlatformTHETRADEDESK              DagDetailsDtoLineagePlatform = "THE_TRADE_DESK"
	DagDetailsDtoLineagePlatformTHOUGHTSPOT               DagDetailsDtoLineagePlatform = "THOUGHT_SPOT"
	DagDetailsDtoLineagePlatformTHREESIXTYLEARNING        DagDetailsDtoLineagePlatform = "THREESIXTYLEARNING"
	DagDetailsDtoLineagePlatformTIKTOK                    DagDetailsDtoLineagePlatform = "TIKTOK"
	DagDetailsDtoLineagePlatformTOGGL                     DagDetailsDtoLineagePlatform = "TOGGL"
	DagDetailsDtoLineagePlatformTRANSCEND                 DagDetailsDtoLineagePlatform = "TRANSCEND"
	DagDetailsDtoLineagePlatformTRELLO                    DagDetailsDtoLineagePlatform = "TRELLO"
	DagDetailsDtoLineagePlatformTRINET                    DagDetailsDtoLineagePlatform = "TRINET"
	DagDetailsDtoLineagePlatformTRISOLUTE                 DagDetailsDtoLineagePlatform = "TRISOLUTE"
	DagDetailsDtoLineagePlatformTWILIO                    DagDetailsDtoLineagePlatform = "TWILIO"
	DagDetailsDtoLineagePlatformTYPEFORM                  DagDetailsDtoLineagePlatform = "TYPEFORM"
	DagDetailsDtoLineagePlatformUNKNOWN                   DagDetailsDtoLineagePlatform = "UNKNOWN"
	DagDetailsDtoLineagePlatformUPLAND                    DagDetailsDtoLineagePlatform = "UPLAND"
	DagDetailsDtoLineagePlatformUSERVOICE                 DagDetailsDtoLineagePlatform = "USERVOICE"
	DagDetailsDtoLineagePlatformVALIDIO                   DagDetailsDtoLineagePlatform = "VALIDIO"
	DagDetailsDtoLineagePlatformVEEVA                     DagDetailsDtoLineagePlatform = "VEEVA"
	DagDetailsDtoLineagePlatformVERIZONMEDIA              DagDetailsDtoLineagePlatform = "VERIZON_MEDIA"
	DagDetailsDtoLineagePlatformVITALLY                   DagDetailsDtoLineagePlatform = "VITALLY"
	DagDetailsDtoLineagePlatformVONAGE                    DagDetailsDtoLineagePlatform = "VONAGE"
	DagDetailsDtoLineagePlatformVUETIFY                   DagDetailsDtoLineagePlatform = "VUETIFY"
	DagDetailsDtoLineagePlatformWEBHOOKS                  DagDetailsDtoLineagePlatform = "WEBHOOKS"
	DagDetailsDtoLineagePlatformWEBSCRAPER                DagDetailsDtoLineagePlatform = "WEB_SCRAPER"
	DagDetailsDtoLineagePlatformWHENIWORK                 DagDetailsDtoLineagePlatform = "WHEN_I_WORK"
	DagDetailsDtoLineagePlatformWHEREFOUR                 DagDetailsDtoLineagePlatform = "WHEREFOUR"
	DagDetailsDtoLineagePlatformWIKIPEDIA                 DagDetailsDtoLineagePlatform = "WIKIPEDIA"
	DagDetailsDtoLineagePlatformWOOCOMMERCE               DagDetailsDtoLineagePlatform = "WOOCOMMERCE"
	DagDetailsDtoLineagePlatformWORDPRESS                 DagDetailsDtoLineagePlatform = "WORDPRESS"
	DagDetailsDtoLineagePlatformWORKABLE                  DagDetailsDtoLineagePlatform = "WORKABLE"
	DagDetailsDtoLineagePlatformWORKDAY                   DagDetailsDtoLineagePlatform = "WORKDAY"
	DagDetailsDtoLineagePlatformWORKFLOWMAX               DagDetailsDtoLineagePlatform = "WORKFLOW_MAX"
	DagDetailsDtoLineagePlatformWRIKE                     DagDetailsDtoLineagePlatform = "WRIKE"
	DagDetailsDtoLineagePlatformX                         DagDetailsDtoLineagePlatform = "X"
	DagDetailsDtoLineagePlatformXERO                      DagDetailsDtoLineagePlatform = "XERO"
	DagDetailsDtoLineagePlatformXRAY                      DagDetailsDtoLineagePlatform = "XRAY"
	DagDetailsDtoLineagePlatformYAHOO                     DagDetailsDtoLineagePlatform = "YAHOO"
	DagDetailsDtoLineagePlatformYOTPO                     DagDetailsDtoLineagePlatform = "YOTPO"
	DagDetailsDtoLineagePlatformYOUTUBE                   DagDetailsDtoLineagePlatform = "YOUTUBE"
	DagDetailsDtoLineagePlatformZEENEA                    DagDetailsDtoLineagePlatform = "ZEENEA"
	DagDetailsDtoLineagePlatformZENCART                   DagDetailsDtoLineagePlatform = "ZEN_CART"
	DagDetailsDtoLineagePlatformZENDESKCHAT               DagDetailsDtoLineagePlatform = "ZENDESK_CHAT"
	DagDetailsDtoLineagePlatformZENDESKSELL               DagDetailsDtoLineagePlatform = "ZENDESK_SELL"
	DagDetailsDtoLineagePlatformZENDESKSUNSHINE           DagDetailsDtoLineagePlatform = "ZENDESK_SUNSHINE"
	DagDetailsDtoLineagePlatformZENDESKSUPPORT            DagDetailsDtoLineagePlatform = "ZENDESK_SUPPORT"
	DagDetailsDtoLineagePlatformZINGTREE                  DagDetailsDtoLineagePlatform = "ZINGTREE"
	DagDetailsDtoLineagePlatformZOHOBOOKS                 DagDetailsDtoLineagePlatform = "ZOHO_BOOKS"
	DagDetailsDtoLineagePlatformZOHOCAMPAIGNS             DagDetailsDtoLineagePlatform = "ZOHO_CAMPAIGNS"
	DagDetailsDtoLineagePlatformZOHOCRM                   DagDetailsDtoLineagePlatform = "ZOHO_CRM"
	DagDetailsDtoLineagePlatformZOOM                      DagDetailsDtoLineagePlatform = "ZOOM"
	DagDetailsDtoLineagePlatformZUORA                     DagDetailsDtoLineagePlatform = "ZUORA"
)

// Defines values for DagDetailsDtoSourceCreationType.
const (
	DagDetailsDtoSourceCreationTypeCONNECTED DagDetailsDtoSourceCreationType = "CONNECTED"
	DagDetailsDtoSourceCreationTypeDECLARED  DagDetailsDtoSourceCreationType = "DECLARED"
)

// Defines values for DashboardAssetOverviewType.
const (
	DashboardAssetOverviewTypeLOOKERDASHBOARD        DashboardAssetOverviewType = "LOOKER_DASHBOARD"
	DashboardAssetOverviewTypeMICROSTRATEGYDASHBOARD DashboardAssetOverviewType = "MICROSTRATEGY_DASHBOARD"
	DashboardAssetOverviewTypeMICROSTRATEGYREPORT    DashboardAssetOverviewType = "MICROSTRATEGY_REPORT"
	DashboardAssetOverviewTypePOWERBIDASHBOARD       DashboardAssetOverviewType = "POWERBI_DASHBOARD"
	DashboardAssetOverviewTypePOWERBIREPORT          DashboardAssetOverviewType = "POWERBI_REPORT"
	DashboardAssetOverviewTypeQUICKSIGHTANALYSIS     DashboardAssetOverviewType = "QUICKSIGHT_ANALYSIS"
	DashboardAssetOverviewTypeQUICKSIGHTDASHBOARD    DashboardAssetOverviewType = "QUICKSIGHT_DASHBOARD"
	DashboardAssetOverviewTypeTABLEAUDASHBOARD       DashboardAssetOverviewType = "TABLEAU_DASHBOARD"
)

// Defines values for DashboardWithIncidentsDtoType.
const (
	DashboardWithIncidentsDtoTypeLOOKERDASHBOARD        DashboardWithIncidentsDtoType = "LOOKER_DASHBOARD"
	DashboardWithIncidentsDtoTypeMICROSTRATEGYDASHBOARD DashboardWithIncidentsDtoType = "MICROSTRATEGY_DASHBOARD"
	DashboardWithIncidentsDtoTypeMICROSTRATEGYREPORT    DashboardWithIncidentsDtoType = "MICROSTRATEGY_REPORT"
	DashboardWithIncidentsDtoTypePOWERBIDASHBOARD       DashboardWithIncidentsDtoType = "POWERBI_DASHBOARD"
	DashboardWithIncidentsDtoTypePOWERBIREPORT          DashboardWithIncidentsDtoType = "POWERBI_REPORT"
	DashboardWithIncidentsDtoTypeQUICKSIGHTANALYSIS     DashboardWithIncidentsDtoType = "QUICKSIGHT_ANALYSIS"
	DashboardWithIncidentsDtoTypeQUICKSIGHTDASHBOARD    DashboardWithIncidentsDtoType = "QUICKSIGHT_DASHBOARD"
	DashboardWithIncidentsDtoTypeTABLEAUDASHBOARD       DashboardWithIncidentsDtoType = "TABLEAU_DASHBOARD"
)

// Defines values for DataStackGroupSummaryDtoLineagePlatform.
const (
	DataStackGroupSummaryDtoLineagePlatformACCELDATA                 DataStackGroupSummaryDtoLineagePlatform = "ACCELDATA"
	DataStackGroupSummaryDtoLineagePlatformACRYLDATA                 DataStackGroupSummaryDtoLineagePlatform = "ACRYL_DATA"
	DataStackGroupSummaryDtoLineagePlatformACTIANVECTOR              DataStackGroupSummaryDtoLineagePlatform = "ACTIAN_VECTOR"
	DataStackGroupSummaryDtoLineagePlatformACTIVECAMPAIGN            DataStackGroupSummaryDtoLineagePlatform = "ACTIVE_CAMPAIGN"
	DataStackGroupSummaryDtoLineagePlatformADA                       DataStackGroupSummaryDtoLineagePlatform = "ADA"
	DataStackGroupSummaryDtoLineagePlatformADJUST                    DataStackGroupSummaryDtoLineagePlatform = "ADJUST"
	DataStackGroupSummaryDtoLineagePlatformADOBE                     DataStackGroupSummaryDtoLineagePlatform = "ADOBE"
	DataStackGroupSummaryDtoLineagePlatformADPWFN                    DataStackGroupSummaryDtoLineagePlatform = "ADP_WFN"
	DataStackGroupSummaryDtoLineagePlatformADROLL                    DataStackGroupSummaryDtoLineagePlatform = "ADROLL"
	DataStackGroupSummaryDtoLineagePlatformAFFINITY                  DataStackGroupSummaryDtoLineagePlatform = "AFFINITY"
	DataStackGroupSummaryDtoLineagePlatformAIRBYTE                   DataStackGroupSummaryDtoLineagePlatform = "AIRBYTE"
	DataStackGroupSummaryDtoLineagePlatformAIRCALL                   DataStackGroupSummaryDtoLineagePlatform = "AIRCALL"
	DataStackGroupSummaryDtoLineagePlatformAIRFLOW                   DataStackGroupSummaryDtoLineagePlatform = "AIRFLOW"
	DataStackGroupSummaryDtoLineagePlatformAIRTABLE                  DataStackGroupSummaryDtoLineagePlatform = "AIRTABLE"
	DataStackGroupSummaryDtoLineagePlatformALATION                   DataStackGroupSummaryDtoLineagePlatform = "ALATION"
	DataStackGroupSummaryDtoLineagePlatformALCHEMER                  DataStackGroupSummaryDtoLineagePlatform = "ALCHEMER"
	DataStackGroupSummaryDtoLineagePlatformALVINAI                   DataStackGroupSummaryDtoLineagePlatform = "ALVIN_AI"
	DataStackGroupSummaryDtoLineagePlatformAMAZON                    DataStackGroupSummaryDtoLineagePlatform = "AMAZON"
	DataStackGroupSummaryDtoLineagePlatformAMAZONCLOUDFRONT          DataStackGroupSummaryDtoLineagePlatform = "AMAZON_CLOUDFRONT"
	DataStackGroupSummaryDtoLineagePlatformAMAZONDOCUMENTDB          DataStackGroupSummaryDtoLineagePlatform = "AMAZON_DOCUMENTDB"
	DataStackGroupSummaryDtoLineagePlatformAMAZONDYNAMODB            DataStackGroupSummaryDtoLineagePlatform = "AMAZON_DYNAMODB"
	DataStackGroupSummaryDtoLineagePlatformAMAZONFIREHOSE            DataStackGroupSummaryDtoLineagePlatform = "AMAZON_FIREHOSE"
	DataStackGroupSummaryDtoLineagePlatformAMAZONSAGEMAKER           DataStackGroupSummaryDtoLineagePlatform = "AMAZON_SAGEMAKER"
	DataStackGroupSummaryDtoLineagePlatformAMAZONSELLINGPARTNER      DataStackGroupSummaryDtoLineagePlatform = "AMAZON_SELLING_PARTNER"
	DataStackGroupSummaryDtoLineagePlatformAMPLITUDE                 DataStackGroupSummaryDtoLineagePlatform = "AMPLITUDE"
	DataStackGroupSummaryDtoLineagePlatformANAPLAN                   DataStackGroupSummaryDtoLineagePlatform = "ANAPLAN"
	DataStackGroupSummaryDtoLineagePlatformANOMALO                   DataStackGroupSummaryDtoLineagePlatform = "ANOMALO"
	DataStackGroupSummaryDtoLineagePlatformAPACHEKAFKA               DataStackGroupSummaryDtoLineagePlatform = "APACHE_KAFKA"
	DataStackGroupSummaryDtoLineagePlatformAPACHESPARK               DataStackGroupSummaryDtoLineagePlatform = "APACHE_SPARK"
	DataStackGroupSummaryDtoLineagePlatformAPPCUES                   DataStackGroupSummaryDtoLineagePlatform = "APPCUES"
	DataStackGroupSummaryDtoLineagePlatformAPPFIGURES                DataStackGroupSummaryDtoLineagePlatform = "APPFIGURES"
	DataStackGroupSummaryDtoLineagePlatformAPPLE                     DataStackGroupSummaryDtoLineagePlatform = "APPLE"
	DataStackGroupSummaryDtoLineagePlatformAPPLEAPPSTORE             DataStackGroupSummaryDtoLineagePlatform = "APPLE_APP_STORE"
	DataStackGroupSummaryDtoLineagePlatformAPPSFLYER                 DataStackGroupSummaryDtoLineagePlatform = "APPSFLYER"
	DataStackGroupSummaryDtoLineagePlatformASANA                     DataStackGroupSummaryDtoLineagePlatform = "ASANA"
	DataStackGroupSummaryDtoLineagePlatformASSEMBLED                 DataStackGroupSummaryDtoLineagePlatform = "ASSEMBLED"
	DataStackGroupSummaryDtoLineagePlatformATHENA                    DataStackGroupSummaryDtoLineagePlatform = "ATHENA"
	DataStackGroupSummaryDtoLineagePlatformATLAN                     DataStackGroupSummaryDtoLineagePlatform = "ATLAN"
	DataStackGroupSummaryDtoLineagePlatformATLASSIANCONFLUENCE       DataStackGroupSummaryDtoLineagePlatform = "ATLASSIAN_CONFLUENCE"
	DataStackGroupSummaryDtoLineagePlatformATLASSIANJIRA             DataStackGroupSummaryDtoLineagePlatform = "ATLASSIAN_JIRA"
	DataStackGroupSummaryDtoLineagePlatformATLASSIANOPSGENIE         DataStackGroupSummaryDtoLineagePlatform = "ATLASSIAN_OPSGENIE"
	DataStackGroupSummaryDtoLineagePlatformAUTH0                     DataStackGroupSummaryDtoLineagePlatform = "AUTH0"
	DataStackGroupSummaryDtoLineagePlatformAUTODESKBIM360            DataStackGroupSummaryDtoLineagePlatform = "AUTODESK_BIM_360"
	DataStackGroupSummaryDtoLineagePlatformAWIN                      DataStackGroupSummaryDtoLineagePlatform = "AWIN"
	DataStackGroupSummaryDtoLineagePlatformAWSCLOUDTRAIL             DataStackGroupSummaryDtoLineagePlatform = "AWS_CLOUDTRAIL"
	DataStackGroupSummaryDtoLineagePlatformAWSCOSTEXPLORER           DataStackGroupSummaryDtoLineagePlatform = "AWS_COST_EXPLORER"
	DataStackGroupSummaryDtoLineagePlatformAWSINVENTORY              DataStackGroupSummaryDtoLineagePlatform = "AWS_INVENTORY"
	DataStackGroupSummaryDtoLineagePlatformAWSLAMBDA                 DataStackGroupSummaryDtoLineagePlatform = "AWS_LAMBDA"
	DataStackGroupSummaryDtoLineagePlatformAZURE                     DataStackGroupSummaryDtoLineagePlatform = "AZURE"
	DataStackGroupSummaryDtoLineagePlatformBALLOTREADY               DataStackGroupSummaryDtoLineagePlatform = "BALLOT_READY"
	DataStackGroupSummaryDtoLineagePlatformBAMBOOHR                  DataStackGroupSummaryDtoLineagePlatform = "BAMBOOHR"
	DataStackGroupSummaryDtoLineagePlatformBIGCOMMERCE               DataStackGroupSummaryDtoLineagePlatform = "BIGCOMMERCE"
	DataStackGroupSummaryDtoLineagePlatformBIGEYE                    DataStackGroupSummaryDtoLineagePlatform = "BIGEYE"
	DataStackGroupSummaryDtoLineagePlatformBIGQUERY                  DataStackGroupSummaryDtoLineagePlatform = "BIGQUERY"
	DataStackGroupSummaryDtoLineagePlatformBILLINGPLATFORM           DataStackGroupSummaryDtoLineagePlatform = "BILLINGPLATFORM"
	DataStackGroupSummaryDtoLineagePlatformBIRDEYE                   DataStackGroupSummaryDtoLineagePlatform = "BIRDEYE"
	DataStackGroupSummaryDtoLineagePlatformBLACKBOARD                DataStackGroupSummaryDtoLineagePlatform = "BLACKBOARD"
	DataStackGroupSummaryDtoLineagePlatformBOX                       DataStackGroupSummaryDtoLineagePlatform = "BOX"
	DataStackGroupSummaryDtoLineagePlatformBRAINTREE                 DataStackGroupSummaryDtoLineagePlatform = "BRAINTREE"
	DataStackGroupSummaryDtoLineagePlatformBRAZE                     DataStackGroupSummaryDtoLineagePlatform = "BRAZE"
	DataStackGroupSummaryDtoLineagePlatformBREVO                     DataStackGroupSummaryDtoLineagePlatform = "BREVO"
	DataStackGroupSummaryDtoLineagePlatformBREX                      DataStackGroupSummaryDtoLineagePlatform = "BREX"
	DataStackGroupSummaryDtoLineagePlatformBUILDKITE                 DataStackGroupSummaryDtoLineagePlatform = "BUILDKITE"
	DataStackGroupSummaryDtoLineagePlatformBUZZSPROUT                DataStackGroupSummaryDtoLineagePlatform = "BUZZSPROUT"
	DataStackGroupSummaryDtoLineagePlatformCALENDLY                  DataStackGroupSummaryDtoLineagePlatform = "CALENDLY"
	DataStackGroupSummaryDtoLineagePlatformCAMPAIGNMONITOR           DataStackGroupSummaryDtoLineagePlatform = "CAMPAIGN_MONITOR"
	DataStackGroupSummaryDtoLineagePlatformCANNY                     DataStackGroupSummaryDtoLineagePlatform = "CANNY"
	DataStackGroupSummaryDtoLineagePlatformCANVAS                    DataStackGroupSummaryDtoLineagePlatform = "CANVAS"
	DataStackGroupSummaryDtoLineagePlatformCAPTERRA                  DataStackGroupSummaryDtoLineagePlatform = "CAPTERRA"
	DataStackGroupSummaryDtoLineagePlatformCASTORDOC                 DataStackGroupSummaryDtoLineagePlatform = "CASTOR_DOC"
	DataStackGroupSummaryDtoLineagePlatformCENSUS                    DataStackGroupSummaryDtoLineagePlatform = "CENSUS"
	DataStackGroupSummaryDtoLineagePlatformCERTINIA                  DataStackGroupSummaryDtoLineagePlatform = "CERTINIA"
	DataStackGroupSummaryDtoLineagePlatformCHAMELEON                 DataStackGroupSummaryDtoLineagePlatform = "CHAMELEON"
	DataStackGroupSummaryDtoLineagePlatformCHANNELADVISOR            DataStackGroupSummaryDtoLineagePlatform = "CHANNEL_ADVISOR"
	DataStackGroupSummaryDtoLineagePlatformCHARGEBEE                 DataStackGroupSummaryDtoLineagePlatform = "CHARGEBEE"
	DataStackGroupSummaryDtoLineagePlatformCHARGEDESK                DataStackGroupSummaryDtoLineagePlatform = "CHARGEDESK"
	DataStackGroupSummaryDtoLineagePlatformCHARTMOGUL                DataStackGroupSummaryDtoLineagePlatform = "CHARTMOGUL"
	DataStackGroupSummaryDtoLineagePlatformCHORUSAI                  DataStackGroupSummaryDtoLineagePlatform = "CHORUS_AI"
	DataStackGroupSummaryDtoLineagePlatformCHURNKEY                  DataStackGroupSummaryDtoLineagePlatform = "CHURNKEY"
	DataStackGroupSummaryDtoLineagePlatformCHURNZERO                 DataStackGroupSummaryDtoLineagePlatform = "CHURNZERO"
	DataStackGroupSummaryDtoLineagePlatformCIMIS                     DataStackGroupSummaryDtoLineagePlatform = "CIMIS"
	DataStackGroupSummaryDtoLineagePlatformCIN7                      DataStackGroupSummaryDtoLineagePlatform = "CIN7"
	DataStackGroupSummaryDtoLineagePlatformCIRCLECI                  DataStackGroupSummaryDtoLineagePlatform = "CIRCLE_CI"
	DataStackGroupSummaryDtoLineagePlatformCLARI                     DataStackGroupSummaryDtoLineagePlatform = "CLARI"
	DataStackGroupSummaryDtoLineagePlatformCLICKUP                   DataStackGroupSummaryDtoLineagePlatform = "CLICKUP"
	DataStackGroupSummaryDtoLineagePlatformCLIFFAI                   DataStackGroupSummaryDtoLineagePlatform = "CLIFF_AI"
	DataStackGroupSummaryDtoLineagePlatformCLOSE                     DataStackGroupSummaryDtoLineagePlatform = "CLOSE"
	DataStackGroupSummaryDtoLineagePlatformCOLLIBRA                  DataStackGroupSummaryDtoLineagePlatform = "COLLIBRA"
	DataStackGroupSummaryDtoLineagePlatformCOMMERCETOOLS             DataStackGroupSummaryDtoLineagePlatform = "COMMERCETOOLS"
	DataStackGroupSummaryDtoLineagePlatformCOMPOSER                  DataStackGroupSummaryDtoLineagePlatform = "COMPOSER"
	DataStackGroupSummaryDtoLineagePlatformCONFLUENTCLOUD            DataStackGroupSummaryDtoLineagePlatform = "CONFLUENT_CLOUD"
	DataStackGroupSummaryDtoLineagePlatformCONTRASTSECURITY          DataStackGroupSummaryDtoLineagePlatform = "CONTRAST_SECURITY"
	DataStackGroupSummaryDtoLineagePlatformCOUPA                     DataStackGroupSummaryDtoLineagePlatform = "COUPA"
	DataStackGroupSummaryDtoLineagePlatformCRITEO                    DataStackGroupSummaryDtoLineagePlatform = "CRITEO"
	DataStackGroupSummaryDtoLineagePlatformCROSSBEAM                 DataStackGroupSummaryDtoLineagePlatform = "CROSSBEAM"
	DataStackGroupSummaryDtoLineagePlatformCRUNCHBASE                DataStackGroupSummaryDtoLineagePlatform = "CRUNCHBASE"
	DataStackGroupSummaryDtoLineagePlatformCUSTOMERIO                DataStackGroupSummaryDtoLineagePlatform = "CUSTOMER_IO"
	DataStackGroupSummaryDtoLineagePlatformD2LBRIGHTSPACE            DataStackGroupSummaryDtoLineagePlatform = "D2L_BRIGHTSPACE"
	DataStackGroupSummaryDtoLineagePlatformDAGSTER                   DataStackGroupSummaryDtoLineagePlatform = "DAGSTER"
	DataStackGroupSummaryDtoLineagePlatformDATABAND                  DataStackGroupSummaryDtoLineagePlatform = "DATABAND"
	DataStackGroupSummaryDtoLineagePlatformDATABRICKS                DataStackGroupSummaryDtoLineagePlatform = "DATABRICKS"
	DataStackGroupSummaryDtoLineagePlatformDATADOG                   DataStackGroupSummaryDtoLineagePlatform = "DATADOG"
	DataStackGroupSummaryDtoLineagePlatformDATAEDO                   DataStackGroupSummaryDtoLineagePlatform = "DATAEDO"
	DataStackGroupSummaryDtoLineagePlatformDATAFOLD                  DataStackGroupSummaryDtoLineagePlatform = "DATAFOLD"
	DataStackGroupSummaryDtoLineagePlatformDATAGALAXY                DataStackGroupSummaryDtoLineagePlatform = "DATAGALAXY"
	DataStackGroupSummaryDtoLineagePlatformDATAHUB                   DataStackGroupSummaryDtoLineagePlatform = "DATAHUB"
	DataStackGroupSummaryDtoLineagePlatformDATAIKU                   DataStackGroupSummaryDtoLineagePlatform = "DATAIKU"
	DataStackGroupSummaryDtoLineagePlatformDATAWORLD                 DataStackGroupSummaryDtoLineagePlatform = "DATA_WORLD"
	DataStackGroupSummaryDtoLineagePlatformDB2                       DataStackGroupSummaryDtoLineagePlatform = "DB2"
	DataStackGroupSummaryDtoLineagePlatformDBT                       DataStackGroupSummaryDtoLineagePlatform = "DBT"
	DataStackGroupSummaryDtoLineagePlatformDBTCLOUD                  DataStackGroupSummaryDtoLineagePlatform = "DBTCLOUD"
	DataStackGroupSummaryDtoLineagePlatformDCLLOGISTICS              DataStackGroupSummaryDtoLineagePlatform = "DCL_LOGISTICS"
	DataStackGroupSummaryDtoLineagePlatformDEAR                      DataStackGroupSummaryDtoLineagePlatform = "DEAR"
	DataStackGroupSummaryDtoLineagePlatformDECUBE                    DataStackGroupSummaryDtoLineagePlatform = "DECUBE"
	DataStackGroupSummaryDtoLineagePlatformDELIGHTED                 DataStackGroupSummaryDtoLineagePlatform = "DELIGHTED"
	DataStackGroupSummaryDtoLineagePlatformDEPUTY                    DataStackGroupSummaryDtoLineagePlatform = "DEPUTY"
	DataStackGroupSummaryDtoLineagePlatformDESTINI                   DataStackGroupSummaryDtoLineagePlatform = "DESTINI"
	DataStackGroupSummaryDtoLineagePlatformDIXA                      DataStackGroupSummaryDtoLineagePlatform = "DIXA"
	DataStackGroupSummaryDtoLineagePlatformDOCEBO                    DataStackGroupSummaryDtoLineagePlatform = "DOCEBO"
	DataStackGroupSummaryDtoLineagePlatformDRATA                     DataStackGroupSummaryDtoLineagePlatform = "DRATA"
	DataStackGroupSummaryDtoLineagePlatformDRIFT                     DataStackGroupSummaryDtoLineagePlatform = "DRIFT"
	DataStackGroupSummaryDtoLineagePlatformDRIP                      DataStackGroupSummaryDtoLineagePlatform = "DRIP"
	DataStackGroupSummaryDtoLineagePlatformDROPBOX                   DataStackGroupSummaryDtoLineagePlatform = "DROPBOX"
	DataStackGroupSummaryDtoLineagePlatformDUOPLANE                  DataStackGroupSummaryDtoLineagePlatform = "DUOPLANE"
	DataStackGroupSummaryDtoLineagePlatformEASYPOST                  DataStackGroupSummaryDtoLineagePlatform = "EASY_POST"
	DataStackGroupSummaryDtoLineagePlatformECONOMIC                  DataStackGroupSummaryDtoLineagePlatform = "E_CONOMIC"
	DataStackGroupSummaryDtoLineagePlatformELASTICSEARCH             DataStackGroupSummaryDtoLineagePlatform = "ELASTICSEARCH"
	DataStackGroupSummaryDtoLineagePlatformELEMENTARY                DataStackGroupSummaryDtoLineagePlatform = "ELEMENTARY"
	DataStackGroupSummaryDtoLineagePlatformELLUCIAN                  DataStackGroupSummaryDtoLineagePlatform = "ELLUCIAN"
	DataStackGroupSummaryDtoLineagePlatformELOQUA                    DataStackGroupSummaryDtoLineagePlatform = "ELOQUA"
	DataStackGroupSummaryDtoLineagePlatformEMAIL                     DataStackGroupSummaryDtoLineagePlatform = "EMAIL"
	DataStackGroupSummaryDtoLineagePlatformEMPLOYMENTHERO            DataStackGroupSummaryDtoLineagePlatform = "EMPLOYMENT_HERO"
	DataStackGroupSummaryDtoLineagePlatformEPICORPROPHET21           DataStackGroupSummaryDtoLineagePlatform = "EPICOR_PROPHET_21"
	DataStackGroupSummaryDtoLineagePlatformEVENTBRITE                DataStackGroupSummaryDtoLineagePlatform = "EVENTBRITE"
	DataStackGroupSummaryDtoLineagePlatformEVERHOUR                  DataStackGroupSummaryDtoLineagePlatform = "EVERHOUR"
	DataStackGroupSummaryDtoLineagePlatformEXCEL                     DataStackGroupSummaryDtoLineagePlatform = "EXCEL"
	DataStackGroupSummaryDtoLineagePlatformEXPENSIFY                 DataStackGroupSummaryDtoLineagePlatform = "EXPENSIFY"
	DataStackGroupSummaryDtoLineagePlatformFACEBOOK                  DataStackGroupSummaryDtoLineagePlatform = "FACEBOOK"
	DataStackGroupSummaryDtoLineagePlatformFIFTEENFIVE               DataStackGroupSummaryDtoLineagePlatform = "FIFTEENFIVE"
	DataStackGroupSummaryDtoLineagePlatformFIGMA                     DataStackGroupSummaryDtoLineagePlatform = "FIGMA"
	DataStackGroupSummaryDtoLineagePlatformFIREBASE                  DataStackGroupSummaryDtoLineagePlatform = "FIREBASE"
	DataStackGroupSummaryDtoLineagePlatformFIREBOLT                  DataStackGroupSummaryDtoLineagePlatform = "FIREBOLT"
	DataStackGroupSummaryDtoLineagePlatformFIVETRAN                  DataStackGroupSummaryDtoLineagePlatform = "FIVETRAN"
	DataStackGroupSummaryDtoLineagePlatformFLEXPORT                  DataStackGroupSummaryDtoLineagePlatform = "FLEXPORT"
	DataStackGroupSummaryDtoLineagePlatformFORJ                      DataStackGroupSummaryDtoLineagePlatform = "FORJ"
	DataStackGroupSummaryDtoLineagePlatformFOUNTAIN                  DataStackGroupSummaryDtoLineagePlatform = "FOUNTAIN"
	DataStackGroupSummaryDtoLineagePlatformFREIGHTVIEW               DataStackGroupSummaryDtoLineagePlatform = "FREIGHTVIEW"
	DataStackGroupSummaryDtoLineagePlatformFRESHBOOKS                DataStackGroupSummaryDtoLineagePlatform = "FRESHBOOKS"
	DataStackGroupSummaryDtoLineagePlatformFRESHCHAT                 DataStackGroupSummaryDtoLineagePlatform = "FRESHCHAT"
	DataStackGroupSummaryDtoLineagePlatformFRESHDESK                 DataStackGroupSummaryDtoLineagePlatform = "FRESHDESK"
	DataStackGroupSummaryDtoLineagePlatformFRESHDESKCONTACTCENTER    DataStackGroupSummaryDtoLineagePlatform = "FRESHDESK_CONTACT_CENTER"
	DataStackGroupSummaryDtoLineagePlatformFRESHSERVICE              DataStackGroupSummaryDtoLineagePlatform = "FRESHSERVICE"
	DataStackGroupSummaryDtoLineagePlatformFRESHSUCCESS              DataStackGroupSummaryDtoLineagePlatform = "FRESHSUCCESS"
	DataStackGroupSummaryDtoLineagePlatformFRESHTEAM                 DataStackGroupSummaryDtoLineagePlatform = "FRESHTEAM"
	DataStackGroupSummaryDtoLineagePlatformFRIENDBUY                 DataStackGroupSummaryDtoLineagePlatform = "FRIENDBUY"
	DataStackGroupSummaryDtoLineagePlatformFRONT                     DataStackGroupSummaryDtoLineagePlatform = "FRONT"
	DataStackGroupSummaryDtoLineagePlatformFTP                       DataStackGroupSummaryDtoLineagePlatform = "FTP"
	DataStackGroupSummaryDtoLineagePlatformFULLSTORY                 DataStackGroupSummaryDtoLineagePlatform = "FULLSTORY"
	DataStackGroupSummaryDtoLineagePlatformG2                        DataStackGroupSummaryDtoLineagePlatform = "G2"
	DataStackGroupSummaryDtoLineagePlatformGAINSIGHT                 DataStackGroupSummaryDtoLineagePlatform = "GAINSIGHT"
	DataStackGroupSummaryDtoLineagePlatformGEM                       DataStackGroupSummaryDtoLineagePlatform = "GEM"
	DataStackGroupSummaryDtoLineagePlatformGIT                       DataStackGroupSummaryDtoLineagePlatform = "GIT"
	DataStackGroupSummaryDtoLineagePlatformGITHUB                    DataStackGroupSummaryDtoLineagePlatform = "GITHUB"
	DataStackGroupSummaryDtoLineagePlatformGITLAB                    DataStackGroupSummaryDtoLineagePlatform = "GITLAB"
	DataStackGroupSummaryDtoLineagePlatformGLADLY                    DataStackGroupSummaryDtoLineagePlatform = "GLADLY"
	DataStackGroupSummaryDtoLineagePlatformGOCARDLESS                DataStackGroupSummaryDtoLineagePlatform = "GOCARDLESS"
	DataStackGroupSummaryDtoLineagePlatformGONG                      DataStackGroupSummaryDtoLineagePlatform = "GONG"
	DataStackGroupSummaryDtoLineagePlatformGOOGLE                    DataStackGroupSummaryDtoLineagePlatform = "GOOGLE"
	DataStackGroupSummaryDtoLineagePlatformGOOGLEADMANAGER           DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_AD_MANAGER"
	DataStackGroupSummaryDtoLineagePlatformGOOGLEADS                 DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_ADS"
	DataStackGroupSummaryDtoLineagePlatformGOOGLEANALYTICS           DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_ANALYTICS"
	DataStackGroupSummaryDtoLineagePlatformGOOGLECALENDAR            DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_CALENDAR"
	DataStackGroupSummaryDtoLineagePlatformGOOGLECAMPAIGNMANAGER     DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_CAMPAIGN_MANAGER"
	DataStackGroupSummaryDtoLineagePlatformGOOGLECHROME              DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_CHROME"
	DataStackGroupSummaryDtoLineagePlatformGOOGLECLOUD               DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_CLOUD"
	DataStackGroupSummaryDtoLineagePlatformGOOGLECLOUDSTORAGE        DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_CLOUD_STORAGE"
	DataStackGroupSummaryDtoLineagePlatformGOOGLEDISPLAY             DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_DISPLAY"
	DataStackGroupSummaryDtoLineagePlatformGOOGLEDRIVE               DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_DRIVE"
	DataStackGroupSummaryDtoLineagePlatformGOOGLEPLAY                DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_PLAY"
	DataStackGroupSummaryDtoLineagePlatformGOOGLESEARCHADS360        DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_SEARCH_ADS_360"
	DataStackGroupSummaryDtoLineagePlatformGOOGLESEARCHCONSOLE       DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_SEARCH_CONSOLE"
	DataStackGroupSummaryDtoLineagePlatformGOOGLESHEETS              DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_SHEETS"
	DataStackGroupSummaryDtoLineagePlatformGOOGLETASKS               DataStackGroupSummaryDtoLineagePlatform = "GOOGLE_TASKS"
	DataStackGroupSummaryDtoLineagePlatformGORGIAS                   DataStackGroupSummaryDtoLineagePlatform = "GORGIAS"
	DataStackGroupSummaryDtoLineagePlatformGREENHOUSE                DataStackGroupSummaryDtoLineagePlatform = "GREENHOUSE"
	DataStackGroupSummaryDtoLineagePlatformGREENPLUM                 DataStackGroupSummaryDtoLineagePlatform = "GREENPLUM"
	DataStackGroupSummaryDtoLineagePlatformGREENPOWERMONITOR         DataStackGroupSummaryDtoLineagePlatform = "GREEN_POWER_MONITOR"
	DataStackGroupSummaryDtoLineagePlatformGREPSR                    DataStackGroupSummaryDtoLineagePlatform = "GREPSR"
	DataStackGroupSummaryDtoLineagePlatformGRIN                      DataStackGroupSummaryDtoLineagePlatform = "GRIN"
	DataStackGroupSummaryDtoLineagePlatformGURU                      DataStackGroupSummaryDtoLineagePlatform = "GURU"
	DataStackGroupSummaryDtoLineagePlatformH2                        DataStackGroupSummaryDtoLineagePlatform = "H2"
	DataStackGroupSummaryDtoLineagePlatformHARVEST                   DataStackGroupSummaryDtoLineagePlatform = "HARVEST"
	DataStackGroupSummaryDtoLineagePlatformHDFS                      DataStackGroupSummaryDtoLineagePlatform = "HDFS"
	DataStackGroupSummaryDtoLineagePlatformHDFSSTORAGE               DataStackGroupSummaryDtoLineagePlatform = "HDFS_STORAGE"
	DataStackGroupSummaryDtoLineagePlatformHEAP                      DataStackGroupSummaryDtoLineagePlatform = "HEAP"
	DataStackGroupSummaryDtoLineagePlatformHEIGHT                    DataStackGroupSummaryDtoLineagePlatform = "HEIGHT"
	DataStackGroupSummaryDtoLineagePlatformHELPSCOUT                 DataStackGroupSummaryDtoLineagePlatform = "HELP_SCOUT"
	DataStackGroupSummaryDtoLineagePlatformHELPSHIFT                 DataStackGroupSummaryDtoLineagePlatform = "HELPSHIFT"
	DataStackGroupSummaryDtoLineagePlatformHEROKUKAFKA               DataStackGroupSummaryDtoLineagePlatform = "HEROKU_KAFKA"
	DataStackGroupSummaryDtoLineagePlatformHIBOB                     DataStackGroupSummaryDtoLineagePlatform = "HIBOB"
	DataStackGroupSummaryDtoLineagePlatformHIGHTOUCH                 DataStackGroupSummaryDtoLineagePlatform = "HIGH_TOUCH"
	DataStackGroupSummaryDtoLineagePlatformHIVE                      DataStackGroupSummaryDtoLineagePlatform = "HIVE"
	DataStackGroupSummaryDtoLineagePlatformHIVEPROCESS               DataStackGroupSummaryDtoLineagePlatform = "HIVE_PROCESS"
	DataStackGroupSummaryDtoLineagePlatformHOPIN                     DataStackGroupSummaryDtoLineagePlatform = "HOPIN"
	DataStackGroupSummaryDtoLineagePlatformHUBSPOT                   DataStackGroupSummaryDtoLineagePlatform = "HUBSPOT"
	DataStackGroupSummaryDtoLineagePlatformIMPACT                    DataStackGroupSummaryDtoLineagePlatform = "IMPACT"
	DataStackGroupSummaryDtoLineagePlatformINCIDENTIO                DataStackGroupSummaryDtoLineagePlatform = "INCIDENT_IO"
	DataStackGroupSummaryDtoLineagePlatformINFOBIP                   DataStackGroupSummaryDtoLineagePlatform = "INFOBIP"
	DataStackGroupSummaryDtoLineagePlatformINFORMATICA               DataStackGroupSummaryDtoLineagePlatform = "INFORMATICA"
	DataStackGroupSummaryDtoLineagePlatformINSIGHTLY                 DataStackGroupSummaryDtoLineagePlatform = "INSIGHTLY"
	DataStackGroupSummaryDtoLineagePlatformINSTAGRAM                 DataStackGroupSummaryDtoLineagePlatform = "INSTAGRAM"
	DataStackGroupSummaryDtoLineagePlatformINTERCOM                  DataStackGroupSummaryDtoLineagePlatform = "INTERCOM"
	DataStackGroupSummaryDtoLineagePlatformINVESTOPEDIA              DataStackGroupSummaryDtoLineagePlatform = "INVESTOPEDIA"
	DataStackGroupSummaryDtoLineagePlatformIRONCLAD                  DataStackGroupSummaryDtoLineagePlatform = "IRONCLAD"
	DataStackGroupSummaryDtoLineagePlatformIRONSOURCE                DataStackGroupSummaryDtoLineagePlatform = "IRONSOURCE"
	DataStackGroupSummaryDtoLineagePlatformITERABLE                  DataStackGroupSummaryDtoLineagePlatform = "ITERABLE"
	DataStackGroupSummaryDtoLineagePlatformJAVA                      DataStackGroupSummaryDtoLineagePlatform = "JAVA"
	DataStackGroupSummaryDtoLineagePlatformJENKINS                   DataStackGroupSummaryDtoLineagePlatform = "JENKINS"
	DataStackGroupSummaryDtoLineagePlatformJUSTCALL                  DataStackGroupSummaryDtoLineagePlatform = "JUSTCALL"
	DataStackGroupSummaryDtoLineagePlatformKANDJI                    DataStackGroupSummaryDtoLineagePlatform = "KANDJI"
	DataStackGroupSummaryDtoLineagePlatformKENSU                     DataStackGroupSummaryDtoLineagePlatform = "KENSU"
	DataStackGroupSummaryDtoLineagePlatformKHOROSCARE                DataStackGroupSummaryDtoLineagePlatform = "KHOROS_CARE"
	DataStackGroupSummaryDtoLineagePlatformKISSMETRICS               DataStackGroupSummaryDtoLineagePlatform = "KISSMETRICS"
	DataStackGroupSummaryDtoLineagePlatformKLAVIYO                   DataStackGroupSummaryDtoLineagePlatform = "KLAVIYO"
	DataStackGroupSummaryDtoLineagePlatformKNOWBE4                   DataStackGroupSummaryDtoLineagePlatform = "KNOWBE4"
	DataStackGroupSummaryDtoLineagePlatformKONNECTINSIGHTS           DataStackGroupSummaryDtoLineagePlatform = "KONNECT_INSIGHTS"
	DataStackGroupSummaryDtoLineagePlatformKUSTOMER                  DataStackGroupSummaryDtoLineagePlatform = "KUSTOMER"
	DataStackGroupSummaryDtoLineagePlatformLARIATDATA                DataStackGroupSummaryDtoLineagePlatform = "LARIAT_DATA"
	DataStackGroupSummaryDtoLineagePlatformLATTICE                   DataStackGroupSummaryDtoLineagePlatform = "LATTICE"
	DataStackGroupSummaryDtoLineagePlatformLAUNCHDARKLY              DataStackGroupSummaryDtoLineagePlatform = "LAUNCH_DARKLY"
	DataStackGroupSummaryDtoLineagePlatformLEARNUPON                 DataStackGroupSummaryDtoLineagePlatform = "LEARN_UPON"
	DataStackGroupSummaryDtoLineagePlatformLESSONLY                  DataStackGroupSummaryDtoLineagePlatform = "LESSONLY"
	DataStackGroupSummaryDtoLineagePlatformLEVER                     DataStackGroupSummaryDtoLineagePlatform = "LEVER"
	DataStackGroupSummaryDtoLineagePlatformLIFTOFF                   DataStackGroupSummaryDtoLineagePlatform = "LIFTOFF"
	DataStackGroupSummaryDtoLineagePlatformLIGHTDASH                 DataStackGroupSummaryDtoLineagePlatform = "LIGHTDASH"
	DataStackGroupSummaryDtoLineagePlatformLIGHTSPEED                DataStackGroupSummaryDtoLineagePlatform = "LIGHTSPEED"
	DataStackGroupSummaryDtoLineagePlatformLIGHTSUP                  DataStackGroupSummaryDtoLineagePlatform = "LIGHTSUP"
	DataStackGroupSummaryDtoLineagePlatformLINEAR                    DataStackGroupSummaryDtoLineagePlatform = "LINEAR"
	DataStackGroupSummaryDtoLineagePlatformLINKEDIN                  DataStackGroupSummaryDtoLineagePlatform = "LINKEDIN"
	DataStackGroupSummaryDtoLineagePlatformLIVECHAT                  DataStackGroupSummaryDtoLineagePlatform = "LIVECHAT"
	DataStackGroupSummaryDtoLineagePlatformLOADEDCOMMERCE            DataStackGroupSummaryDtoLineagePlatform = "LOADED_COMMERCE"
	DataStackGroupSummaryDtoLineagePlatformLOB                       DataStackGroupSummaryDtoLineagePlatform = "LOB"
	DataStackGroupSummaryDtoLineagePlatformLOOKER                    DataStackGroupSummaryDtoLineagePlatform = "LOOKER"
	DataStackGroupSummaryDtoLineagePlatformLOOP                      DataStackGroupSummaryDtoLineagePlatform = "LOOP"
	DataStackGroupSummaryDtoLineagePlatformLOOPIO                    DataStackGroupSummaryDtoLineagePlatform = "LOOPIO"
	DataStackGroupSummaryDtoLineagePlatformLUMA                      DataStackGroupSummaryDtoLineagePlatform = "LUMA"
	DataStackGroupSummaryDtoLineagePlatformMAGENTO                   DataStackGroupSummaryDtoLineagePlatform = "MAGENTO"
	DataStackGroupSummaryDtoLineagePlatformMAILCHIMP                 DataStackGroupSummaryDtoLineagePlatform = "MAILCHIMP"
	DataStackGroupSummaryDtoLineagePlatformMAILGUN                   DataStackGroupSummaryDtoLineagePlatform = "MAILGUN"
	DataStackGroupSummaryDtoLineagePlatformMANDRILL                  DataStackGroupSummaryDtoLineagePlatform = "MANDRILL"
	DataStackGroupSummaryDtoLineagePlatformMANTA                     DataStackGroupSummaryDtoLineagePlatform = "MANTA"
	DataStackGroupSummaryDtoLineagePlatformMARIADB                   DataStackGroupSummaryDtoLineagePlatform = "MARIADB"
	DataStackGroupSummaryDtoLineagePlatformMARINSOFTWARE             DataStackGroupSummaryDtoLineagePlatform = "MARIN_SOFTWARE"
	DataStackGroupSummaryDtoLineagePlatformMARKETO                   DataStackGroupSummaryDtoLineagePlatform = "MARKETO"
	DataStackGroupSummaryDtoLineagePlatformMATTERMOST                DataStackGroupSummaryDtoLineagePlatform = "MATTERMOST"
	DataStackGroupSummaryDtoLineagePlatformMAVENLINK                 DataStackGroupSummaryDtoLineagePlatform = "MAVENLINK"
	DataStackGroupSummaryDtoLineagePlatformMAXIO                     DataStackGroupSummaryDtoLineagePlatform = "MAXIO"
	DataStackGroupSummaryDtoLineagePlatformMEDALLIA                  DataStackGroupSummaryDtoLineagePlatform = "MEDALLIA"
	DataStackGroupSummaryDtoLineagePlatformMETA                      DataStackGroupSummaryDtoLineagePlatform = "META"
	DataStackGroupSummaryDtoLineagePlatformMETABASE                  DataStackGroupSummaryDtoLineagePlatform = "METABASE"
	DataStackGroupSummaryDtoLineagePlatformMETAPHOR                  DataStackGroupSummaryDtoLineagePlatform = "METAPHOR"
	DataStackGroupSummaryDtoLineagePlatformMETAPLANE                 DataStackGroupSummaryDtoLineagePlatform = "METAPLANE"
	DataStackGroupSummaryDtoLineagePlatformMICROSOFT                 DataStackGroupSummaryDtoLineagePlatform = "MICROSOFT"
	DataStackGroupSummaryDtoLineagePlatformMICROSOFTAZUREBLOBSTORAGE DataStackGroupSummaryDtoLineagePlatform = "MICROSOFT_AZURE_BLOB_STORAGE"
	DataStackGroupSummaryDtoLineagePlatformMICROSOFTAZUREML          DataStackGroupSummaryDtoLineagePlatform = "MICROSOFT_AZURE_ML"
	DataStackGroupSummaryDtoLineagePlatformMICROSOFTDYNAMICS         DataStackGroupSummaryDtoLineagePlatform = "MICROSOFT_DYNAMICS"
	DataStackGroupSummaryDtoLineagePlatformMICROSOFTONEDRIVE         DataStackGroupSummaryDtoLineagePlatform = "MICROSOFT_ONEDRIVE"
	DataStackGroupSummaryDtoLineagePlatformMICROSOFTPURVIEW          DataStackGroupSummaryDtoLineagePlatform = "MICROSOFT_PURVIEW"
	DataStackGroupSummaryDtoLineagePlatformMICROSOFTTEAMS            DataStackGroupSummaryDtoLineagePlatform = "MICROSOFT_TEAMS"
	DataStackGroupSummaryDtoLineagePlatformMICROSTRATEGY             DataStackGroupSummaryDtoLineagePlatform = "MICROSTRATEGY"
	DataStackGroupSummaryDtoLineagePlatformMIXMAX                    DataStackGroupSummaryDtoLineagePlatform = "MIXMAX"
	DataStackGroupSummaryDtoLineagePlatformMIXPANEL                  DataStackGroupSummaryDtoLineagePlatform = "MIXPANEL"
	DataStackGroupSummaryDtoLineagePlatformMONDAYCOM                 DataStackGroupSummaryDtoLineagePlatform = "MONDAY_COM"
	DataStackGroupSummaryDtoLineagePlatformMONGODB                   DataStackGroupSummaryDtoLineagePlatform = "MONGODB"
	DataStackGroupSummaryDtoLineagePlatformMONTECARLO                DataStackGroupSummaryDtoLineagePlatform = "MONTE_CARLO"
	DataStackGroupSummaryDtoLineagePlatformMOUNTAIN                  DataStackGroupSummaryDtoLineagePlatform = "MOUNTAIN"
	DataStackGroupSummaryDtoLineagePlatformMSSQL                     DataStackGroupSummaryDtoLineagePlatform = "MSSQL"
	DataStackGroupSummaryDtoLineagePlatformMULESOFT                  DataStackGroupSummaryDtoLineagePlatform = "MULESOFT"
	DataStackGroupSummaryDtoLineagePlatformMUX                       DataStackGroupSummaryDtoLineagePlatform = "MUX"
	DataStackGroupSummaryDtoLineagePlatformMWAA                      DataStackGroupSummaryDtoLineagePlatform = "MWAA"
	DataStackGroupSummaryDtoLineagePlatformMYSQL                     DataStackGroupSummaryDtoLineagePlatform = "MYSQL"
	DataStackGroupSummaryDtoLineagePlatformNAMELY                    DataStackGroupSummaryDtoLineagePlatform = "NAMELY"
	DataStackGroupSummaryDtoLineagePlatformNCINO                     DataStackGroupSummaryDtoLineagePlatform = "NCINO"
	DataStackGroupSummaryDtoLineagePlatformNETSUITEANALYTICS         DataStackGroupSummaryDtoLineagePlatform = "NETSUITE_ANALYTICS"
	DataStackGroupSummaryDtoLineagePlatformNEWRELIC                  DataStackGroupSummaryDtoLineagePlatform = "NEW_RELIC"
	DataStackGroupSummaryDtoLineagePlatformNOTION                    DataStackGroupSummaryDtoLineagePlatform = "NOTION"
	DataStackGroupSummaryDtoLineagePlatformNYLAS                     DataStackGroupSummaryDtoLineagePlatform = "NYLAS"
	DataStackGroupSummaryDtoLineagePlatformOBSERVE                   DataStackGroupSummaryDtoLineagePlatform = "OBSERVE"
	DataStackGroupSummaryDtoLineagePlatformOCTOPAI                   DataStackGroupSummaryDtoLineagePlatform = "OCTOPAI"
	DataStackGroupSummaryDtoLineagePlatformOKTA                      DataStackGroupSummaryDtoLineagePlatform = "OKTA"
	DataStackGroupSummaryDtoLineagePlatformOPENAI                    DataStackGroupSummaryDtoLineagePlatform = "OPEN_AI"
	DataStackGroupSummaryDtoLineagePlatformOPENDATADC                DataStackGroupSummaryDtoLineagePlatform = "OPEN_DATA_DC"
	DataStackGroupSummaryDtoLineagePlatformOPENEXCHANGESRATES        DataStackGroupSummaryDtoLineagePlatform = "OPEN_EXCHANGES_RATES"
	DataStackGroupSummaryDtoLineagePlatformOPENSEARCH                DataStackGroupSummaryDtoLineagePlatform = "OPEN_SEARCH"
	DataStackGroupSummaryDtoLineagePlatformOPTIMIZELY                DataStackGroupSummaryDtoLineagePlatform = "OPTIMIZELY"
	DataStackGroupSummaryDtoLineagePlatformORACLE                    DataStackGroupSummaryDtoLineagePlatform = "ORACLE"
	DataStackGroupSummaryDtoLineagePlatformORBITCOMMUNITYPLATFORM    DataStackGroupSummaryDtoLineagePlatform = "ORBIT_COMMUNITY_PLATFORM"
	DataStackGroupSummaryDtoLineagePlatformORDWAY                    DataStackGroupSummaryDtoLineagePlatform = "ORDWAY"
	DataStackGroupSummaryDtoLineagePlatformORTTO                     DataStackGroupSummaryDtoLineagePlatform = "ORTTO"
	DataStackGroupSummaryDtoLineagePlatformOSCOMMERCE                DataStackGroupSummaryDtoLineagePlatform = "OS_COMMERCE"
	DataStackGroupSummaryDtoLineagePlatformOUTBRAIN                  DataStackGroupSummaryDtoLineagePlatform = "OUTBRAIN"
	DataStackGroupSummaryDtoLineagePlatformOUTREACH                  DataStackGroupSummaryDtoLineagePlatform = "OUTREACH"
	DataStackGroupSummaryDtoLineagePlatformOVALEDGE                  DataStackGroupSummaryDtoLineagePlatform = "OVALEDGE"
	DataStackGroupSummaryDtoLineagePlatformPAGERDUTY                 DataStackGroupSummaryDtoLineagePlatform = "PAGERDUTY"
	DataStackGroupSummaryDtoLineagePlatformPAGERSHIFT                DataStackGroupSummaryDtoLineagePlatform = "PAGERSHIFT"
	DataStackGroupSummaryDtoLineagePlatformPAYPAL                    DataStackGroupSummaryDtoLineagePlatform = "PAYPAL"
	DataStackGroupSummaryDtoLineagePlatformPENDO                     DataStackGroupSummaryDtoLineagePlatform = "PENDO"
	DataStackGroupSummaryDtoLineagePlatformPINGDOM                   DataStackGroupSummaryDtoLineagePlatform = "PINGDOM"
	DataStackGroupSummaryDtoLineagePlatformPINTEREST                 DataStackGroupSummaryDtoLineagePlatform = "PINTEREST"
	DataStackGroupSummaryDtoLineagePlatformPIPE17                    DataStackGroupSummaryDtoLineagePlatform = "PIPE17"
	DataStackGroupSummaryDtoLineagePlatformPIPEDRIVE                 DataStackGroupSummaryDtoLineagePlatform = "PIPEDRIVE"
	DataStackGroupSummaryDtoLineagePlatformPIVOTALTRACKER            DataStackGroupSummaryDtoLineagePlatform = "PIVOTAL_TRACKER"
	DataStackGroupSummaryDtoLineagePlatformPLAYVOX                   DataStackGroupSummaryDtoLineagePlatform = "PLAYVOX"
	DataStackGroupSummaryDtoLineagePlatformPOSTGRES                  DataStackGroupSummaryDtoLineagePlatform = "POSTGRES"
	DataStackGroupSummaryDtoLineagePlatformPOSTHOG                   DataStackGroupSummaryDtoLineagePlatform = "POSTHOG"
	DataStackGroupSummaryDtoLineagePlatformPOWERBI                   DataStackGroupSummaryDtoLineagePlatform = "POWER_BI"
	DataStackGroupSummaryDtoLineagePlatformPOWERSCHOOL               DataStackGroupSummaryDtoLineagePlatform = "POWERSCHOOL"
	DataStackGroupSummaryDtoLineagePlatformPREFECT                   DataStackGroupSummaryDtoLineagePlatform = "PREFECT"
	DataStackGroupSummaryDtoLineagePlatformPRESTASHOP                DataStackGroupSummaryDtoLineagePlatform = "PRESTASHOP"
	DataStackGroupSummaryDtoLineagePlatformPRESTO                    DataStackGroupSummaryDtoLineagePlatform = "PRESTO"
	DataStackGroupSummaryDtoLineagePlatformPRODUCTBOARD              DataStackGroupSummaryDtoLineagePlatform = "PRODUCTBOARD"
	DataStackGroupSummaryDtoLineagePlatformPYTHON                    DataStackGroupSummaryDtoLineagePlatform = "PYTHON"
	DataStackGroupSummaryDtoLineagePlatformQLIK                      DataStackGroupSummaryDtoLineagePlatform = "QLIK"
	DataStackGroupSummaryDtoLineagePlatformQUALAROO                  DataStackGroupSummaryDtoLineagePlatform = "QUALAROO"
	DataStackGroupSummaryDtoLineagePlatformQUALTRICS                 DataStackGroupSummaryDtoLineagePlatform = "QUALTRICS"
	DataStackGroupSummaryDtoLineagePlatformQUICKBOOKS                DataStackGroupSummaryDtoLineagePlatform = "QUICKBOOKS"
	DataStackGroupSummaryDtoLineagePlatformQUICKSIGHT                DataStackGroupSummaryDtoLineagePlatform = "QUICKSIGHT"
	DataStackGroupSummaryDtoLineagePlatformRAMP                      DataStackGroupSummaryDtoLineagePlatform = "RAMP"
	DataStackGroupSummaryDtoLineagePlatformRARIBLE                   DataStackGroupSummaryDtoLineagePlatform = "RARIBLE"
	DataStackGroupSummaryDtoLineagePlatformRECHARGE                  DataStackGroupSummaryDtoLineagePlatform = "RECHARGE"
	DataStackGroupSummaryDtoLineagePlatformRECURLY                   DataStackGroupSummaryDtoLineagePlatform = "RECURLY"
	DataStackGroupSummaryDtoLineagePlatformREDDIT                    DataStackGroupSummaryDtoLineagePlatform = "REDDIT"
	DataStackGroupSummaryDtoLineagePlatformREDSHIFT                  DataStackGroupSummaryDtoLineagePlatform = "REDSHIFT"
	DataStackGroupSummaryDtoLineagePlatformRELTIO                    DataStackGroupSummaryDtoLineagePlatform = "RELTIO"
	DataStackGroupSummaryDtoLineagePlatformREPLYIO                   DataStackGroupSummaryDtoLineagePlatform = "REPLY_IO"
	DataStackGroupSummaryDtoLineagePlatformRETAILNEXT                DataStackGroupSummaryDtoLineagePlatform = "RETAILNEXT"
	DataStackGroupSummaryDtoLineagePlatformRETENTLY                  DataStackGroupSummaryDtoLineagePlatform = "RETENTLY"
	DataStackGroupSummaryDtoLineagePlatformREVELSYSTEMS              DataStackGroupSummaryDtoLineagePlatform = "REVEL_SYSTEMS"
	DataStackGroupSummaryDtoLineagePlatformRINGCENTRAL               DataStackGroupSummaryDtoLineagePlatform = "RINGCENTRAL"
	DataStackGroupSummaryDtoLineagePlatformRIPPLING                  DataStackGroupSummaryDtoLineagePlatform = "RIPPLING"
	DataStackGroupSummaryDtoLineagePlatformROLLBAR                   DataStackGroupSummaryDtoLineagePlatform = "ROLLBAR"
	DataStackGroupSummaryDtoLineagePlatformROOTLY                    DataStackGroupSummaryDtoLineagePlatform = "ROOTLY"
	DataStackGroupSummaryDtoLineagePlatformS3                        DataStackGroupSummaryDtoLineagePlatform = "S3"
	DataStackGroupSummaryDtoLineagePlatformSAGEHR                    DataStackGroupSummaryDtoLineagePlatform = "SAGE_HR"
	DataStackGroupSummaryDtoLineagePlatformSAGEINTACCT               DataStackGroupSummaryDtoLineagePlatform = "SAGE_INTACCT"
	DataStackGroupSummaryDtoLineagePlatformSAILTHRU                  DataStackGroupSummaryDtoLineagePlatform = "SAILTHRU"
	DataStackGroupSummaryDtoLineagePlatformSALESFORCE                DataStackGroupSummaryDtoLineagePlatform = "SALESFORCE"
	DataStackGroupSummaryDtoLineagePlatformSALESLOFT                 DataStackGroupSummaryDtoLineagePlatform = "SALESLOFT"
	DataStackGroupSummaryDtoLineagePlatformSALSIFY                   DataStackGroupSummaryDtoLineagePlatform = "SALSIFY"
	DataStackGroupSummaryDtoLineagePlatformSAMSARA                   DataStackGroupSummaryDtoLineagePlatform = "SAMSARA"
	DataStackGroupSummaryDtoLineagePlatformSAP                       DataStackGroupSummaryDtoLineagePlatform = "SAP"
	DataStackGroupSummaryDtoLineagePlatformSAPCONCUR                 DataStackGroupSummaryDtoLineagePlatform = "SAP_CONCUR"
	DataStackGroupSummaryDtoLineagePlatformSCORM                     DataStackGroupSummaryDtoLineagePlatform = "SCORM"
	DataStackGroupSummaryDtoLineagePlatformSECODA                    DataStackGroupSummaryDtoLineagePlatform = "SECODA"
	DataStackGroupSummaryDtoLineagePlatformSECURITYJOURNEY           DataStackGroupSummaryDtoLineagePlatform = "SECURITY_JOURNEY"
	DataStackGroupSummaryDtoLineagePlatformSEGMENT                   DataStackGroupSummaryDtoLineagePlatform = "SEGMENT"
	DataStackGroupSummaryDtoLineagePlatformSELECTSTAR                DataStackGroupSummaryDtoLineagePlatform = "SELECT_STAR"
	DataStackGroupSummaryDtoLineagePlatformSENDGRID                  DataStackGroupSummaryDtoLineagePlatform = "SENDGRID"
	DataStackGroupSummaryDtoLineagePlatformSERVICENOW                DataStackGroupSummaryDtoLineagePlatform = "SERVICE_NOW"
	DataStackGroupSummaryDtoLineagePlatformSFTP                      DataStackGroupSummaryDtoLineagePlatform = "SFTP"
	DataStackGroupSummaryDtoLineagePlatformSHAREPOINT                DataStackGroupSummaryDtoLineagePlatform = "SHAREPOINT"
	DataStackGroupSummaryDtoLineagePlatformSHARETRIBE                DataStackGroupSummaryDtoLineagePlatform = "SHARETRIBE"
	DataStackGroupSummaryDtoLineagePlatformSHIPHERO                  DataStackGroupSummaryDtoLineagePlatform = "SHIPHERO"
	DataStackGroupSummaryDtoLineagePlatformSHIPSTATION               DataStackGroupSummaryDtoLineagePlatform = "SHIPSTATION"
	DataStackGroupSummaryDtoLineagePlatformSHOPIFY                   DataStackGroupSummaryDtoLineagePlatform = "SHOPIFY"
	DataStackGroupSummaryDtoLineagePlatformSHOPWARE                  DataStackGroupSummaryDtoLineagePlatform = "SHOPWARE"
	DataStackGroupSummaryDtoLineagePlatformSHORTIO                   DataStackGroupSummaryDtoLineagePlatform = "SHORT_IO"
	DataStackGroupSummaryDtoLineagePlatformSIFFLET                   DataStackGroupSummaryDtoLineagePlatform = "SIFFLET"
	DataStackGroupSummaryDtoLineagePlatformSIGMA                     DataStackGroupSummaryDtoLineagePlatform = "SIGMA"
	DataStackGroupSummaryDtoLineagePlatformSIMPLECAST                DataStackGroupSummaryDtoLineagePlatform = "SIMPLECAST"
	DataStackGroupSummaryDtoLineagePlatformSIMPLESAT                 DataStackGroupSummaryDtoLineagePlatform = "SIMPLESAT"
	DataStackGroupSummaryDtoLineagePlatformSINGLESTORE               DataStackGroupSummaryDtoLineagePlatform = "SINGLESTORE"
	DataStackGroupSummaryDtoLineagePlatformSISENSE                   DataStackGroupSummaryDtoLineagePlatform = "SISENSE"
	DataStackGroupSummaryDtoLineagePlatformSIXSENSE                  DataStackGroupSummaryDtoLineagePlatform = "SIXSENSE"
	DataStackGroupSummaryDtoLineagePlatformSKILLJAR                  DataStackGroupSummaryDtoLineagePlatform = "SKILLJAR"
	DataStackGroupSummaryDtoLineagePlatformSKUVAULT                  DataStackGroupSummaryDtoLineagePlatform = "SKUVAULT"
	DataStackGroupSummaryDtoLineagePlatformSLAB                      DataStackGroupSummaryDtoLineagePlatform = "SLAB"
	DataStackGroupSummaryDtoLineagePlatformSLACK                     DataStackGroupSummaryDtoLineagePlatform = "SLACK"
	DataStackGroupSummaryDtoLineagePlatformSMADEX                    DataStackGroupSummaryDtoLineagePlatform = "SMADEX"
	DataStackGroupSummaryDtoLineagePlatformSNAPCHAT                  DataStackGroupSummaryDtoLineagePlatform = "SNAPCHAT"
	DataStackGroupSummaryDtoLineagePlatformSNOWFLAKE                 DataStackGroupSummaryDtoLineagePlatform = "SNOWFLAKE"
	DataStackGroupSummaryDtoLineagePlatformSNOWPLOW                  DataStackGroupSummaryDtoLineagePlatform = "SNOWPLOW"
	DataStackGroupSummaryDtoLineagePlatformSODA                      DataStackGroupSummaryDtoLineagePlatform = "SODA"
	DataStackGroupSummaryDtoLineagePlatformSONARQUBE                 DataStackGroupSummaryDtoLineagePlatform = "SONARQUBE"
	DataStackGroupSummaryDtoLineagePlatformSPARKPROCESS              DataStackGroupSummaryDtoLineagePlatform = "SPARK_PROCESS"
	DataStackGroupSummaryDtoLineagePlatformSPLITIO                   DataStackGroupSummaryDtoLineagePlatform = "SPLIT_IO"
	DataStackGroupSummaryDtoLineagePlatformSPLUNK                    DataStackGroupSummaryDtoLineagePlatform = "SPLUNK"
	DataStackGroupSummaryDtoLineagePlatformSPOTIFY                   DataStackGroupSummaryDtoLineagePlatform = "SPOTIFY"
	DataStackGroupSummaryDtoLineagePlatformSPREECOMMERCE             DataStackGroupSummaryDtoLineagePlatform = "SPREE_COMMERCE"
	DataStackGroupSummaryDtoLineagePlatformSPROUTSOCIAL              DataStackGroupSummaryDtoLineagePlatform = "SPROUT_SOCIAL"
	DataStackGroupSummaryDtoLineagePlatformSQUARE                    DataStackGroupSummaryDtoLineagePlatform = "SQUARE"
	DataStackGroupSummaryDtoLineagePlatformSQUARESPACE               DataStackGroupSummaryDtoLineagePlatform = "SQUARESPACE"
	DataStackGroupSummaryDtoLineagePlatformSTACKADAPT                DataStackGroupSummaryDtoLineagePlatform = "STACK_ADAPT"
	DataStackGroupSummaryDtoLineagePlatformSTATSIG                   DataStackGroupSummaryDtoLineagePlatform = "STATSIG"
	DataStackGroupSummaryDtoLineagePlatformSTITCH                    DataStackGroupSummaryDtoLineagePlatform = "STITCH"
	DataStackGroupSummaryDtoLineagePlatformSTRIPE                    DataStackGroupSummaryDtoLineagePlatform = "STRIPE"
	DataStackGroupSummaryDtoLineagePlatformSTYLIGHT                  DataStackGroupSummaryDtoLineagePlatform = "STYLIGHT"
	DataStackGroupSummaryDtoLineagePlatformSUBSCRIPT                 DataStackGroupSummaryDtoLineagePlatform = "SUBSCRIPT"
	DataStackGroupSummaryDtoLineagePlatformSYNAPSE                   DataStackGroupSummaryDtoLineagePlatform = "SYNAPSE"
	DataStackGroupSummaryDtoLineagePlatformTABLEAU                   DataStackGroupSummaryDtoLineagePlatform = "TABLEAU"
	DataStackGroupSummaryDtoLineagePlatformTABOOLA                   DataStackGroupSummaryDtoLineagePlatform = "TABOOLA"
	DataStackGroupSummaryDtoLineagePlatformTALEND                    DataStackGroupSummaryDtoLineagePlatform = "TALEND"
	DataStackGroupSummaryDtoLineagePlatformTALKDESK                  DataStackGroupSummaryDtoLineagePlatform = "TALKDESK"
	DataStackGroupSummaryDtoLineagePlatformTALKWALKER                DataStackGroupSummaryDtoLineagePlatform = "TALKWALKER"
	DataStackGroupSummaryDtoLineagePlatformTEAMWORKCOM               DataStackGroupSummaryDtoLineagePlatform = "TEAMWORK_COM"
	DataStackGroupSummaryDtoLineagePlatformTEMPOIO                   DataStackGroupSummaryDtoLineagePlatform = "TEMPO_IO"
	DataStackGroupSummaryDtoLineagePlatformTERADATA                  DataStackGroupSummaryDtoLineagePlatform = "TERADATA"
	DataStackGroupSummaryDtoLineagePlatformTERRAFORM                 DataStackGroupSummaryDtoLineagePlatform = "TERRAFORM"
	DataStackGroupSummaryDtoLineagePlatformTHETRADEDESK              DataStackGroupSummaryDtoLineagePlatform = "THE_TRADE_DESK"
	DataStackGroupSummaryDtoLineagePlatformTHOUGHTSPOT               DataStackGroupSummaryDtoLineagePlatform = "THOUGHT_SPOT"
	DataStackGroupSummaryDtoLineagePlatformTHREESIXTYLEARNING        DataStackGroupSummaryDtoLineagePlatform = "THREESIXTYLEARNING"
	DataStackGroupSummaryDtoLineagePlatformTIKTOK                    DataStackGroupSummaryDtoLineagePlatform = "TIKTOK"
	DataStackGroupSummaryDtoLineagePlatformTOGGL                     DataStackGroupSummaryDtoLineagePlatform = "TOGGL"
	DataStackGroupSummaryDtoLineagePlatformTRANSCEND                 DataStackGroupSummaryDtoLineagePlatform = "TRANSCEND"
	DataStackGroupSummaryDtoLineagePlatformTRELLO                    DataStackGroupSummaryDtoLineagePlatform = "TRELLO"
	DataStackGroupSummaryDtoLineagePlatformTRINET                    DataStackGroupSummaryDtoLineagePlatform = "TRINET"
	DataStackGroupSummaryDtoLineagePlatformTRISOLUTE                 DataStackGroupSummaryDtoLineagePlatform = "TRISOLUTE"
	DataStackGroupSummaryDtoLineagePlatformTWILIO                    DataStackGroupSummaryDtoLineagePlatform = "TWILIO"
	DataStackGroupSummaryDtoLineagePlatformTYPEFORM                  DataStackGroupSummaryDtoLineagePlatform = "TYPEFORM"
	DataStackGroupSummaryDtoLineagePlatformUNKNOWN                   DataStackGroupSummaryDtoLineagePlatform = "UNKNOWN"
	DataStackGroupSummaryDtoLineagePlatformUPLAND                    DataStackGroupSummaryDtoLineagePlatform = "UPLAND"
	DataStackGroupSummaryDtoLineagePlatformUSERVOICE                 DataStackGroupSummaryDtoLineagePlatform = "USERVOICE"
	DataStackGroupSummaryDtoLineagePlatformVALIDIO                   DataStackGroupSummaryDtoLineagePlatform = "VALIDIO"
	DataStackGroupSummaryDtoLineagePlatformVEEVA                     DataStackGroupSummaryDtoLineagePlatform = "VEEVA"
	DataStackGroupSummaryDtoLineagePlatformVERIZONMEDIA              DataStackGroupSummaryDtoLineagePlatform = "VERIZON_MEDIA"
	DataStackGroupSummaryDtoLineagePlatformVITALLY                   DataStackGroupSummaryDtoLineagePlatform = "VITALLY"
	DataStackGroupSummaryDtoLineagePlatformVONAGE                    DataStackGroupSummaryDtoLineagePlatform = "VONAGE"
	DataStackGroupSummaryDtoLineagePlatformVUETIFY                   DataStackGroupSummaryDtoLineagePlatform = "VUETIFY"
	DataStackGroupSummaryDtoLineagePlatformWEBHOOKS                  DataStackGroupSummaryDtoLineagePlatform = "WEBHOOKS"
	DataStackGroupSummaryDtoLineagePlatformWEBSCRAPER                DataStackGroupSummaryDtoLineagePlatform = "WEB_SCRAPER"
	DataStackGroupSummaryDtoLineagePlatformWHENIWORK                 DataStackGroupSummaryDtoLineagePlatform = "WHEN_I_WORK"
	DataStackGroupSummaryDtoLineagePlatformWHEREFOUR                 DataStackGroupSummaryDtoLineagePlatform = "WHEREFOUR"
	DataStackGroupSummaryDtoLineagePlatformWIKIPEDIA                 DataStackGroupSummaryDtoLineagePlatform = "WIKIPEDIA"
	DataStackGroupSummaryDtoLineagePlatformWOOCOMMERCE               DataStackGroupSummaryDtoLineagePlatform = "WOOCOMMERCE"
	DataStackGroupSummaryDtoLineagePlatformWORDPRESS                 DataStackGroupSummaryDtoLineagePlatform = "WORDPRESS"
	DataStackGroupSummaryDtoLineagePlatformWORKABLE                  DataStackGroupSummaryDtoLineagePlatform = "WORKABLE"
	DataStackGroupSummaryDtoLineagePlatformWORKDAY                   DataStackGroupSummaryDtoLineagePlatform = "WORKDAY"
	DataStackGroupSummaryDtoLineagePlatformWORKFLOWMAX               DataStackGroupSummaryDtoLineagePlatform = "WORKFLOW_MAX"
	DataStackGroupSummaryDtoLineagePlatformWRIKE                     DataStackGroupSummaryDtoLineagePlatform = "WRIKE"
	DataStackGroupSummaryDtoLineagePlatformX                         DataStackGroupSummaryDtoLineagePlatform = "X"
	DataStackGroupSummaryDtoLineagePlatformXERO                      DataStackGroupSummaryDtoLineagePlatform = "XERO"
	DataStackGroupSummaryDtoLineagePlatformXRAY                      DataStackGroupSummaryDtoLineagePlatform = "XRAY"
	DataStackGroupSummaryDtoLineagePlatformYAHOO                     DataStackGroupSummaryDtoLineagePlatform = "YAHOO"
	DataStackGroupSummaryDtoLineagePlatformYOTPO                     DataStackGroupSummaryDtoLineagePlatform = "YOTPO"
	DataStackGroupSummaryDtoLineagePlatformYOUTUBE                   DataStackGroupSummaryDtoLineagePlatform = "YOUTUBE"
	DataStackGroupSummaryDtoLineagePlatformZEENEA                    DataStackGroupSummaryDtoLineagePlatform = "ZEENEA"
	DataStackGroupSummaryDtoLineagePlatformZENCART                   DataStackGroupSummaryDtoLineagePlatform = "ZEN_CART"
	DataStackGroupSummaryDtoLineagePlatformZENDESKCHAT               DataStackGroupSummaryDtoLineagePlatform = "ZENDESK_CHAT"
	DataStackGroupSummaryDtoLineagePlatformZENDESKSELL               DataStackGroupSummaryDtoLineagePlatform = "ZENDESK_SELL"
	DataStackGroupSummaryDtoLineagePlatformZENDESKSUNSHINE           DataStackGroupSummaryDtoLineagePlatform = "ZENDESK_SUNSHINE"
	DataStackGroupSummaryDtoLineagePlatformZENDESKSUPPORT            DataStackGroupSummaryDtoLineagePlatform = "ZENDESK_SUPPORT"
	DataStackGroupSummaryDtoLineagePlatformZINGTREE                  DataStackGroupSummaryDtoLineagePlatform = "ZINGTREE"
	DataStackGroupSummaryDtoLineagePlatformZOHOBOOKS                 DataStackGroupSummaryDtoLineagePlatform = "ZOHO_BOOKS"
	DataStackGroupSummaryDtoLineagePlatformZOHOCAMPAIGNS             DataStackGroupSummaryDtoLineagePlatform = "ZOHO_CAMPAIGNS"
	DataStackGroupSummaryDtoLineagePlatformZOHOCRM                   DataStackGroupSummaryDtoLineagePlatform = "ZOHO_CRM"
	DataStackGroupSummaryDtoLineagePlatformZOOM                      DataStackGroupSummaryDtoLineagePlatform = "ZOOM"
	DataStackGroupSummaryDtoLineagePlatformZUORA                     DataStackGroupSummaryDtoLineagePlatform = "ZUORA"
)

// Defines values for DatasetAssetOverviewType.
const (
	DatasetAssetOverviewTypeBIGQUERYDATASETREF       DatasetAssetOverviewType = "BIGQUERY_DATASET_REF"
	DatasetAssetOverviewTypeBIGQUERYEXTERNALTABLE    DatasetAssetOverviewType = "BIGQUERY_EXTERNAL_TABLE"
	DatasetAssetOverviewTypeBIGQUERYMATERIALIZEDVIEW DatasetAssetOverviewType = "BIGQUERY_MATERIALIZED_VIEW"
	DatasetAssetOverviewTypeBIGQUERYTABLE            DatasetAssetOverviewType = "BIGQUERY_TABLE"
	DatasetAssetOverviewTypeBIGQUERYVIEW             DatasetAssetOverviewType = "BIGQUERY_VIEW"
	DatasetAssetOverviewTypeDATABRICKSSTREAMINGTABLE DatasetAssetOverviewType = "DATABRICKS_STREAMING_TABLE"
	DatasetAssetOverviewTypeDATABRICKSUNKNOWN        DatasetAssetOverviewType = "DATABRICKS_UNKNOWN"
	DatasetAssetOverviewTypeDBTEPHEMERALREF          DatasetAssetOverviewType = "DBT_EPHEMERAL_REF"
	DatasetAssetOverviewTypeDBTMODEL                 DatasetAssetOverviewType = "DBT_MODEL"
	DatasetAssetOverviewTypeDBTSEED                  DatasetAssetOverviewType = "DBT_SEED"
	DatasetAssetOverviewTypeDBTSOURCEDATASETREF      DatasetAssetOverviewType = "DBT_SOURCE_DATASET_REF"
	DatasetAssetOverviewTypeDBTTABLEREF              DatasetAssetOverviewType = "DBT_TABLE_REF"
	DatasetAssetOverviewTypeDBTUNKNOWN               DatasetAssetOverviewType = "DBT_UNKNOWN"
	DatasetAssetOverviewTypeDBTVIEWREF               DatasetAssetOverviewType = "DBT_VIEW_REF"
	DatasetAssetOverviewTypeFIVETRANDATASETREF       DatasetAssetOverviewType = "FIVETRAN_DATASET_REF"
	DatasetAssetOverviewTypeGENERICDROPPEDTABLE      DatasetAssetOverviewType = "GENERIC_DROPPED_TABLE"
	DatasetAssetOverviewTypeGENERICTEMPTABLE         DatasetAssetOverviewType = "GENERIC_TEMP_TABLE"
	DatasetAssetOverviewTypeHIVEDATASETREF           DatasetAssetOverviewType = "HIVE_DATASET_REF"
	DatasetAssetOverviewTypeHIVEEXTERNALTABLE        DatasetAssetOverviewType = "HIVE_EXTERNAL_TABLE"
	DatasetAssetOverviewTypeHIVEHDFSSTORAGE          DatasetAssetOverviewType = "HIVE_HDFS_STORAGE"
	DatasetAssetOverviewTypeHIVEHIVEPROCESS          DatasetAssetOverviewType = "HIVE_HIVE_PROCESS"
	DatasetAssetOverviewTypeHIVEMANAGEDTABLE         DatasetAssetOverviewType = "HIVE_MANAGED_TABLE"
	DatasetAssetOverviewTypeHIVESPARKPROCESS         DatasetAssetOverviewType = "HIVE_SPARK_PROCESS"
	DatasetAssetOverviewTypeHIVEUNKNOWN              DatasetAssetOverviewType = "HIVE_UNKNOWN"
	DatasetAssetOverviewTypeHIVEUNKNOWNPROCESS       DatasetAssetOverviewType = "HIVE_UNKNOWN_PROCESS"
	DatasetAssetOverviewTypeHIVEVIRTUALVIEW          DatasetAssetOverviewType = "HIVE_VIRTUAL_VIEW"
	DatasetAssetOverviewTypeJDBCDATASET              DatasetAssetOverviewType = "JDBC_DATASET"
	DatasetAssetOverviewTypeJDBCDATASETREF           DatasetAssetOverviewType = "JDBC_DATASET_REF"
	DatasetAssetOverviewTypeJDBCEXTERNALTABLE        DatasetAssetOverviewType = "JDBC_EXTERNAL_TABLE"
	DatasetAssetOverviewTypeJDBCSNOWFLAKESTREAM      DatasetAssetOverviewType = "JDBC_SNOWFLAKE_STREAM"
	DatasetAssetOverviewTypeJDBCTABLE                DatasetAssetOverviewType = "JDBC_TABLE"
	DatasetAssetOverviewTypeJDBCVIEW                 DatasetAssetOverviewType = "JDBC_VIEW"
	DatasetAssetOverviewTypeLOOKERQUERY              DatasetAssetOverviewType = "LOOKER_QUERY"
	DatasetAssetOverviewTypeLOOKERSQLTABLE           DatasetAssetOverviewType = "LOOKER_SQL_TABLE"
	DatasetAssetOverviewTypeLOOKERVIEW               DatasetAssetOverviewType = "LOOKER_VIEW"
	DatasetAssetOverviewTypeMICROSTRATEGYDATASETREF  DatasetAssetOverviewType = "MICROSTRATEGY_DATASET_REF"
	DatasetAssetOverviewTypePOWERBISEMANTICMODEL     DatasetAssetOverviewType = "POWERBI_SEMANTIC_MODEL"
	DatasetAssetOverviewTypePOWERBITABLEREF          DatasetAssetOverviewType = "POWERBI_TABLE_REF"
	DatasetAssetOverviewTypeQUICKSIGHTTABLEREF       DatasetAssetOverviewType = "QUICKSIGHT_TABLE_REF"
	DatasetAssetOverviewTypeSTORAGEBUCKETGCP         DatasetAssetOverviewType = "STORAGE_BUCKET_GCP"
	DatasetAssetOverviewTypeSTORAGEBUCKETS3          DatasetAssetOverviewType = "STORAGE_BUCKET_S3"
	DatasetAssetOverviewTypeSTORAGEGOOGLEDRIVE       DatasetAssetOverviewType = "STORAGE_GOOGLE_DRIVE"
	DatasetAssetOverviewTypeTABLEAUDATABASETABLE     DatasetAssetOverviewType = "TABLEAU_DATABASE_TABLE"
	DatasetAssetOverviewTypeTABLEAUQUERY             DatasetAssetOverviewType = "TABLEAU_QUERY"
)

// Defines values for DatasetDetailsDtoLineagePlatform.
const (
	DatasetDetailsDtoLineagePlatformACCELDATA                 DatasetDetailsDtoLineagePlatform = "ACCELDATA"
	DatasetDetailsDtoLineagePlatformACRYLDATA                 DatasetDetailsDtoLineagePlatform = "ACRYL_DATA"
	DatasetDetailsDtoLineagePlatformACTIANVECTOR              DatasetDetailsDtoLineagePlatform = "ACTIAN_VECTOR"
	DatasetDetailsDtoLineagePlatformACTIVECAMPAIGN            DatasetDetailsDtoLineagePlatform = "ACTIVE_CAMPAIGN"
	DatasetDetailsDtoLineagePlatformADA                       DatasetDetailsDtoLineagePlatform = "ADA"
	DatasetDetailsDtoLineagePlatformADJUST                    DatasetDetailsDtoLineagePlatform = "ADJUST"
	DatasetDetailsDtoLineagePlatformADOBE                     DatasetDetailsDtoLineagePlatform = "ADOBE"
	DatasetDetailsDtoLineagePlatformADPWFN                    DatasetDetailsDtoLineagePlatform = "ADP_WFN"
	DatasetDetailsDtoLineagePlatformADROLL                    DatasetDetailsDtoLineagePlatform = "ADROLL"
	DatasetDetailsDtoLineagePlatformAFFINITY                  DatasetDetailsDtoLineagePlatform = "AFFINITY"
	DatasetDetailsDtoLineagePlatformAIRBYTE                   DatasetDetailsDtoLineagePlatform = "AIRBYTE"
	DatasetDetailsDtoLineagePlatformAIRCALL                   DatasetDetailsDtoLineagePlatform = "AIRCALL"
	DatasetDetailsDtoLineagePlatformAIRFLOW                   DatasetDetailsDtoLineagePlatform = "AIRFLOW"
	DatasetDetailsDtoLineagePlatformAIRTABLE                  DatasetDetailsDtoLineagePlatform = "AIRTABLE"
	DatasetDetailsDtoLineagePlatformALATION                   DatasetDetailsDtoLineagePlatform = "ALATION"
	DatasetDetailsDtoLineagePlatformALCHEMER                  DatasetDetailsDtoLineagePlatform = "ALCHEMER"
	DatasetDetailsDtoLineagePlatformALVINAI                   DatasetDetailsDtoLineagePlatform = "ALVIN_AI"
	DatasetDetailsDtoLineagePlatformAMAZON                    DatasetDetailsDtoLineagePlatform = "AMAZON"
	DatasetDetailsDtoLineagePlatformAMAZONCLOUDFRONT          DatasetDetailsDtoLineagePlatform = "AMAZON_CLOUDFRONT"
	DatasetDetailsDtoLineagePlatformAMAZONDOCUMENTDB          DatasetDetailsDtoLineagePlatform = "AMAZON_DOCUMENTDB"
	DatasetDetailsDtoLineagePlatformAMAZONDYNAMODB            DatasetDetailsDtoLineagePlatform = "AMAZON_DYNAMODB"
	DatasetDetailsDtoLineagePlatformAMAZONFIREHOSE            DatasetDetailsDtoLineagePlatform = "AMAZON_FIREHOSE"
	DatasetDetailsDtoLineagePlatformAMAZONSAGEMAKER           DatasetDetailsDtoLineagePlatform = "AMAZON_SAGEMAKER"
	DatasetDetailsDtoLineagePlatformAMAZONSELLINGPARTNER      DatasetDetailsDtoLineagePlatform = "AMAZON_SELLING_PARTNER"
	DatasetDetailsDtoLineagePlatformAMPLITUDE                 DatasetDetailsDtoLineagePlatform = "AMPLITUDE"
	DatasetDetailsDtoLineagePlatformANAPLAN                   DatasetDetailsDtoLineagePlatform = "ANAPLAN"
	DatasetDetailsDtoLineagePlatformANOMALO                   DatasetDetailsDtoLineagePlatform = "ANOMALO"
	DatasetDetailsDtoLineagePlatformAPACHEKAFKA               DatasetDetailsDtoLineagePlatform = "APACHE_KAFKA"
	DatasetDetailsDtoLineagePlatformAPACHESPARK               DatasetDetailsDtoLineagePlatform = "APACHE_SPARK"
	DatasetDetailsDtoLineagePlatformAPPCUES                   DatasetDetailsDtoLineagePlatform = "APPCUES"
	DatasetDetailsDtoLineagePlatformAPPFIGURES                DatasetDetailsDtoLineagePlatform = "APPFIGURES"
	DatasetDetailsDtoLineagePlatformAPPLE                     DatasetDetailsDtoLineagePlatform = "APPLE"
	DatasetDetailsDtoLineagePlatformAPPLEAPPSTORE             DatasetDetailsDtoLineagePlatform = "APPLE_APP_STORE"
	DatasetDetailsDtoLineagePlatformAPPSFLYER                 DatasetDetailsDtoLineagePlatform = "APPSFLYER"
	DatasetDetailsDtoLineagePlatformASANA                     DatasetDetailsDtoLineagePlatform = "ASANA"
	DatasetDetailsDtoLineagePlatformASSEMBLED                 DatasetDetailsDtoLineagePlatform = "ASSEMBLED"
	DatasetDetailsDtoLineagePlatformATHENA                    DatasetDetailsDtoLineagePlatform = "ATHENA"
	DatasetDetailsDtoLineagePlatformATLAN                     DatasetDetailsDtoLineagePlatform = "ATLAN"
	DatasetDetailsDtoLineagePlatformATLASSIANCONFLUENCE       DatasetDetailsDtoLineagePlatform = "ATLASSIAN_CONFLUENCE"
	DatasetDetailsDtoLineagePlatformATLASSIANJIRA             DatasetDetailsDtoLineagePlatform = "ATLASSIAN_JIRA"
	DatasetDetailsDtoLineagePlatformATLASSIANOPSGENIE         DatasetDetailsDtoLineagePlatform = "ATLASSIAN_OPSGENIE"
	DatasetDetailsDtoLineagePlatformAUTH0                     DatasetDetailsDtoLineagePlatform = "AUTH0"
	DatasetDetailsDtoLineagePlatformAUTODESKBIM360            DatasetDetailsDtoLineagePlatform = "AUTODESK_BIM_360"
	DatasetDetailsDtoLineagePlatformAWIN                      DatasetDetailsDtoLineagePlatform = "AWIN"
	DatasetDetailsDtoLineagePlatformAWSCLOUDTRAIL             DatasetDetailsDtoLineagePlatform = "AWS_CLOUDTRAIL"
	DatasetDetailsDtoLineagePlatformAWSCOSTEXPLORER           DatasetDetailsDtoLineagePlatform = "AWS_COST_EXPLORER"
	DatasetDetailsDtoLineagePlatformAWSINVENTORY              DatasetDetailsDtoLineagePlatform = "AWS_INVENTORY"
	DatasetDetailsDtoLineagePlatformAWSLAMBDA                 DatasetDetailsDtoLineagePlatform = "AWS_LAMBDA"
	DatasetDetailsDtoLineagePlatformAZURE                     DatasetDetailsDtoLineagePlatform = "AZURE"
	DatasetDetailsDtoLineagePlatformBALLOTREADY               DatasetDetailsDtoLineagePlatform = "BALLOT_READY"
	DatasetDetailsDtoLineagePlatformBAMBOOHR                  DatasetDetailsDtoLineagePlatform = "BAMBOOHR"
	DatasetDetailsDtoLineagePlatformBIGCOMMERCE               DatasetDetailsDtoLineagePlatform = "BIGCOMMERCE"
	DatasetDetailsDtoLineagePlatformBIGEYE                    DatasetDetailsDtoLineagePlatform = "BIGEYE"
	DatasetDetailsDtoLineagePlatformBIGQUERY                  DatasetDetailsDtoLineagePlatform = "BIGQUERY"
	DatasetDetailsDtoLineagePlatformBILLINGPLATFORM           DatasetDetailsDtoLineagePlatform = "BILLINGPLATFORM"
	DatasetDetailsDtoLineagePlatformBIRDEYE                   DatasetDetailsDtoLineagePlatform = "BIRDEYE"
	DatasetDetailsDtoLineagePlatformBLACKBOARD                DatasetDetailsDtoLineagePlatform = "BLACKBOARD"
	DatasetDetailsDtoLineagePlatformBOX                       DatasetDetailsDtoLineagePlatform = "BOX"
	DatasetDetailsDtoLineagePlatformBRAINTREE                 DatasetDetailsDtoLineagePlatform = "BRAINTREE"
	DatasetDetailsDtoLineagePlatformBRAZE                     DatasetDetailsDtoLineagePlatform = "BRAZE"
	DatasetDetailsDtoLineagePlatformBREVO                     DatasetDetailsDtoLineagePlatform = "BREVO"
	DatasetDetailsDtoLineagePlatformBREX                      DatasetDetailsDtoLineagePlatform = "BREX"
	DatasetDetailsDtoLineagePlatformBUILDKITE                 DatasetDetailsDtoLineagePlatform = "BUILDKITE"
	DatasetDetailsDtoLineagePlatformBUZZSPROUT                DatasetDetailsDtoLineagePlatform = "BUZZSPROUT"
	DatasetDetailsDtoLineagePlatformCALENDLY                  DatasetDetailsDtoLineagePlatform = "CALENDLY"
	DatasetDetailsDtoLineagePlatformCAMPAIGNMONITOR           DatasetDetailsDtoLineagePlatform = "CAMPAIGN_MONITOR"
	DatasetDetailsDtoLineagePlatformCANNY                     DatasetDetailsDtoLineagePlatform = "CANNY"
	DatasetDetailsDtoLineagePlatformCANVAS                    DatasetDetailsDtoLineagePlatform = "CANVAS"
	DatasetDetailsDtoLineagePlatformCAPTERRA                  DatasetDetailsDtoLineagePlatform = "CAPTERRA"
	DatasetDetailsDtoLineagePlatformCASTORDOC                 DatasetDetailsDtoLineagePlatform = "CASTOR_DOC"
	DatasetDetailsDtoLineagePlatformCENSUS                    DatasetDetailsDtoLineagePlatform = "CENSUS"
	DatasetDetailsDtoLineagePlatformCERTINIA                  DatasetDetailsDtoLineagePlatform = "CERTINIA"
	DatasetDetailsDtoLineagePlatformCHAMELEON                 DatasetDetailsDtoLineagePlatform = "CHAMELEON"
	DatasetDetailsDtoLineagePlatformCHANNELADVISOR            DatasetDetailsDtoLineagePlatform = "CHANNEL_ADVISOR"
	DatasetDetailsDtoLineagePlatformCHARGEBEE                 DatasetDetailsDtoLineagePlatform = "CHARGEBEE"
	DatasetDetailsDtoLineagePlatformCHARGEDESK                DatasetDetailsDtoLineagePlatform = "CHARGEDESK"
	DatasetDetailsDtoLineagePlatformCHARTMOGUL                DatasetDetailsDtoLineagePlatform = "CHARTMOGUL"
	DatasetDetailsDtoLineagePlatformCHORUSAI                  DatasetDetailsDtoLineagePlatform = "CHORUS_AI"
	DatasetDetailsDtoLineagePlatformCHURNKEY                  DatasetDetailsDtoLineagePlatform = "CHURNKEY"
	DatasetDetailsDtoLineagePlatformCHURNZERO                 DatasetDetailsDtoLineagePlatform = "CHURNZERO"
	DatasetDetailsDtoLineagePlatformCIMIS                     DatasetDetailsDtoLineagePlatform = "CIMIS"
	DatasetDetailsDtoLineagePlatformCIN7                      DatasetDetailsDtoLineagePlatform = "CIN7"
	DatasetDetailsDtoLineagePlatformCIRCLECI                  DatasetDetailsDtoLineagePlatform = "CIRCLE_CI"
	DatasetDetailsDtoLineagePlatformCLARI                     DatasetDetailsDtoLineagePlatform = "CLARI"
	DatasetDetailsDtoLineagePlatformCLICKUP                   DatasetDetailsDtoLineagePlatform = "CLICKUP"
	DatasetDetailsDtoLineagePlatformCLIFFAI                   DatasetDetailsDtoLineagePlatform = "CLIFF_AI"
	DatasetDetailsDtoLineagePlatformCLOSE                     DatasetDetailsDtoLineagePlatform = "CLOSE"
	DatasetDetailsDtoLineagePlatformCOLLIBRA                  DatasetDetailsDtoLineagePlatform = "COLLIBRA"
	DatasetDetailsDtoLineagePlatformCOMMERCETOOLS             DatasetDetailsDtoLineagePlatform = "COMMERCETOOLS"
	DatasetDetailsDtoLineagePlatformCOMPOSER                  DatasetDetailsDtoLineagePlatform = "COMPOSER"
	DatasetDetailsDtoLineagePlatformCONFLUENTCLOUD            DatasetDetailsDtoLineagePlatform = "CONFLUENT_CLOUD"
	DatasetDetailsDtoLineagePlatformCONTRASTSECURITY          DatasetDetailsDtoLineagePlatform = "CONTRAST_SECURITY"
	DatasetDetailsDtoLineagePlatformCOUPA                     DatasetDetailsDtoLineagePlatform = "COUPA"
	DatasetDetailsDtoLineagePlatformCRITEO                    DatasetDetailsDtoLineagePlatform = "CRITEO"
	DatasetDetailsDtoLineagePlatformCROSSBEAM                 DatasetDetailsDtoLineagePlatform = "CROSSBEAM"
	DatasetDetailsDtoLineagePlatformCRUNCHBASE                DatasetDetailsDtoLineagePlatform = "CRUNCHBASE"
	DatasetDetailsDtoLineagePlatformCUSTOMERIO                DatasetDetailsDtoLineagePlatform = "CUSTOMER_IO"
	DatasetDetailsDtoLineagePlatformD2LBRIGHTSPACE            DatasetDetailsDtoLineagePlatform = "D2L_BRIGHTSPACE"
	DatasetDetailsDtoLineagePlatformDAGSTER                   DatasetDetailsDtoLineagePlatform = "DAGSTER"
	DatasetDetailsDtoLineagePlatformDATABAND                  DatasetDetailsDtoLineagePlatform = "DATABAND"
	DatasetDetailsDtoLineagePlatformDATABRICKS                DatasetDetailsDtoLineagePlatform = "DATABRICKS"
	DatasetDetailsDtoLineagePlatformDATADOG                   DatasetDetailsDtoLineagePlatform = "DATADOG"
	DatasetDetailsDtoLineagePlatformDATAEDO                   DatasetDetailsDtoLineagePlatform = "DATAEDO"
	DatasetDetailsDtoLineagePlatformDATAFOLD                  DatasetDetailsDtoLineagePlatform = "DATAFOLD"
	DatasetDetailsDtoLineagePlatformDATAGALAXY                DatasetDetailsDtoLineagePlatform = "DATAGALAXY"
	DatasetDetailsDtoLineagePlatformDATAHUB                   DatasetDetailsDtoLineagePlatform = "DATAHUB"
	DatasetDetailsDtoLineagePlatformDATAIKU                   DatasetDetailsDtoLineagePlatform = "DATAIKU"
	DatasetDetailsDtoLineagePlatformDATAWORLD                 DatasetDetailsDtoLineagePlatform = "DATA_WORLD"
	DatasetDetailsDtoLineagePlatformDB2                       DatasetDetailsDtoLineagePlatform = "DB2"
	DatasetDetailsDtoLineagePlatformDBT                       DatasetDetailsDtoLineagePlatform = "DBT"
	DatasetDetailsDtoLineagePlatformDBTCLOUD                  DatasetDetailsDtoLineagePlatform = "DBTCLOUD"
	DatasetDetailsDtoLineagePlatformDCLLOGISTICS              DatasetDetailsDtoLineagePlatform = "DCL_LOGISTICS"
	DatasetDetailsDtoLineagePlatformDEAR                      DatasetDetailsDtoLineagePlatform = "DEAR"
	DatasetDetailsDtoLineagePlatformDECUBE                    DatasetDetailsDtoLineagePlatform = "DECUBE"
	DatasetDetailsDtoLineagePlatformDELIGHTED                 DatasetDetailsDtoLineagePlatform = "DELIGHTED"
	DatasetDetailsDtoLineagePlatformDEPUTY                    DatasetDetailsDtoLineagePlatform = "DEPUTY"
	DatasetDetailsDtoLineagePlatformDESTINI                   DatasetDetailsDtoLineagePlatform = "DESTINI"
	DatasetDetailsDtoLineagePlatformDIXA                      DatasetDetailsDtoLineagePlatform = "DIXA"
	DatasetDetailsDtoLineagePlatformDOCEBO                    DatasetDetailsDtoLineagePlatform = "DOCEBO"
	DatasetDetailsDtoLineagePlatformDRATA                     DatasetDetailsDtoLineagePlatform = "DRATA"
	DatasetDetailsDtoLineagePlatformDRIFT                     DatasetDetailsDtoLineagePlatform = "DRIFT"
	DatasetDetailsDtoLineagePlatformDRIP                      DatasetDetailsDtoLineagePlatform = "DRIP"
	DatasetDetailsDtoLineagePlatformDROPBOX                   DatasetDetailsDtoLineagePlatform = "DROPBOX"
	DatasetDetailsDtoLineagePlatformDUOPLANE                  DatasetDetailsDtoLineagePlatform = "DUOPLANE"
	DatasetDetailsDtoLineagePlatformEASYPOST                  DatasetDetailsDtoLineagePlatform = "EASY_POST"
	DatasetDetailsDtoLineagePlatformECONOMIC                  DatasetDetailsDtoLineagePlatform = "E_CONOMIC"
	DatasetDetailsDtoLineagePlatformELASTICSEARCH             DatasetDetailsDtoLineagePlatform = "ELASTICSEARCH"
	DatasetDetailsDtoLineagePlatformELEMENTARY                DatasetDetailsDtoLineagePlatform = "ELEMENTARY"
	DatasetDetailsDtoLineagePlatformELLUCIAN                  DatasetDetailsDtoLineagePlatform = "ELLUCIAN"
	DatasetDetailsDtoLineagePlatformELOQUA                    DatasetDetailsDtoLineagePlatform = "ELOQUA"
	DatasetDetailsDtoLineagePlatformEMAIL                     DatasetDetailsDtoLineagePlatform = "EMAIL"
	DatasetDetailsDtoLineagePlatformEMPLOYMENTHERO            DatasetDetailsDtoLineagePlatform = "EMPLOYMENT_HERO"
	DatasetDetailsDtoLineagePlatformEPICORPROPHET21           DatasetDetailsDtoLineagePlatform = "EPICOR_PROPHET_21"
	DatasetDetailsDtoLineagePlatformEVENTBRITE                DatasetDetailsDtoLineagePlatform = "EVENTBRITE"
	DatasetDetailsDtoLineagePlatformEVERHOUR                  DatasetDetailsDtoLineagePlatform = "EVERHOUR"
	DatasetDetailsDtoLineagePlatformEXCEL                     DatasetDetailsDtoLineagePlatform = "EXCEL"
	DatasetDetailsDtoLineagePlatformEXPENSIFY                 DatasetDetailsDtoLineagePlatform = "EXPENSIFY"
	DatasetDetailsDtoLineagePlatformFACEBOOK                  DatasetDetailsDtoLineagePlatform = "FACEBOOK"
	DatasetDetailsDtoLineagePlatformFIFTEENFIVE               DatasetDetailsDtoLineagePlatform = "FIFTEENFIVE"
	DatasetDetailsDtoLineagePlatformFIGMA                     DatasetDetailsDtoLineagePlatform = "FIGMA"
	DatasetDetailsDtoLineagePlatformFIREBASE                  DatasetDetailsDtoLineagePlatform = "FIREBASE"
	DatasetDetailsDtoLineagePlatformFIREBOLT                  DatasetDetailsDtoLineagePlatform = "FIREBOLT"
	DatasetDetailsDtoLineagePlatformFIVETRAN                  DatasetDetailsDtoLineagePlatform = "FIVETRAN"
	DatasetDetailsDtoLineagePlatformFLEXPORT                  DatasetDetailsDtoLineagePlatform = "FLEXPORT"
	DatasetDetailsDtoLineagePlatformFORJ                      DatasetDetailsDtoLineagePlatform = "FORJ"
	DatasetDetailsDtoLineagePlatformFOUNTAIN                  DatasetDetailsDtoLineagePlatform = "FOUNTAIN"
	DatasetDetailsDtoLineagePlatformFREIGHTVIEW               DatasetDetailsDtoLineagePlatform = "FREIGHTVIEW"
	DatasetDetailsDtoLineagePlatformFRESHBOOKS                DatasetDetailsDtoLineagePlatform = "FRESHBOOKS"
	DatasetDetailsDtoLineagePlatformFRESHCHAT                 DatasetDetailsDtoLineagePlatform = "FRESHCHAT"
	DatasetDetailsDtoLineagePlatformFRESHDESK                 DatasetDetailsDtoLineagePlatform = "FRESHDESK"
	DatasetDetailsDtoLineagePlatformFRESHDESKCONTACTCENTER    DatasetDetailsDtoLineagePlatform = "FRESHDESK_CONTACT_CENTER"
	DatasetDetailsDtoLineagePlatformFRESHSERVICE              DatasetDetailsDtoLineagePlatform = "FRESHSERVICE"
	DatasetDetailsDtoLineagePlatformFRESHSUCCESS              DatasetDetailsDtoLineagePlatform = "FRESHSUCCESS"
	DatasetDetailsDtoLineagePlatformFRESHTEAM                 DatasetDetailsDtoLineagePlatform = "FRESHTEAM"
	DatasetDetailsDtoLineagePlatformFRIENDBUY                 DatasetDetailsDtoLineagePlatform = "FRIENDBUY"
	DatasetDetailsDtoLineagePlatformFRONT                     DatasetDetailsDtoLineagePlatform = "FRONT"
	DatasetDetailsDtoLineagePlatformFTP                       DatasetDetailsDtoLineagePlatform = "FTP"
	DatasetDetailsDtoLineagePlatformFULLSTORY                 DatasetDetailsDtoLineagePlatform = "FULLSTORY"
	DatasetDetailsDtoLineagePlatformG2                        DatasetDetailsDtoLineagePlatform = "G2"
	DatasetDetailsDtoLineagePlatformGAINSIGHT                 DatasetDetailsDtoLineagePlatform = "GAINSIGHT"
	DatasetDetailsDtoLineagePlatformGEM                       DatasetDetailsDtoLineagePlatform = "GEM"
	DatasetDetailsDtoLineagePlatformGIT                       DatasetDetailsDtoLineagePlatform = "GIT"
	DatasetDetailsDtoLineagePlatformGITHUB                    DatasetDetailsDtoLineagePlatform = "GITHUB"
	DatasetDetailsDtoLineagePlatformGITLAB                    DatasetDetailsDtoLineagePlatform = "GITLAB"
	DatasetDetailsDtoLineagePlatformGLADLY                    DatasetDetailsDtoLineagePlatform = "GLADLY"
	DatasetDetailsDtoLineagePlatformGOCARDLESS                DatasetDetailsDtoLineagePlatform = "GOCARDLESS"
	DatasetDetailsDtoLineagePlatformGONG                      DatasetDetailsDtoLineagePlatform = "GONG"
	DatasetDetailsDtoLineagePlatformGOOGLE                    DatasetDetailsDtoLineagePlatform = "GOOGLE"
	DatasetDetailsDtoLineagePlatformGOOGLEADMANAGER           DatasetDetailsDtoLineagePlatform = "GOOGLE_AD_MANAGER"
	DatasetDetailsDtoLineagePlatformGOOGLEADS                 DatasetDetailsDtoLineagePlatform = "GOOGLE_ADS"
	DatasetDetailsDtoLineagePlatformGOOGLEANALYTICS           DatasetDetailsDtoLineagePlatform = "GOOGLE_ANALYTICS"
	DatasetDetailsDtoLineagePlatformGOOGLECALENDAR            DatasetDetailsDtoLineagePlatform = "GOOGLE_CALENDAR"
	DatasetDetailsDtoLineagePlatformGOOGLECAMPAIGNMANAGER     DatasetDetailsDtoLineagePlatform = "GOOGLE_CAMPAIGN_MANAGER"
	DatasetDetailsDtoLineagePlatformGOOGLECHROME              DatasetDetailsDtoLineagePlatform = "GOOGLE_CHROME"
	DatasetDetailsDtoLineagePlatformGOOGLECLOUD               DatasetDetailsDtoLineagePlatform = "GOOGLE_CLOUD"
	DatasetDetailsDtoLineagePlatformGOOGLECLOUDSTORAGE        DatasetDetailsDtoLineagePlatform = "GOOGLE_CLOUD_STORAGE"
	DatasetDetailsDtoLineagePlatformGOOGLEDISPLAY             DatasetDetailsDtoLineagePlatform = "GOOGLE_DISPLAY"
	DatasetDetailsDtoLineagePlatformGOOGLEDRIVE               DatasetDetailsDtoLineagePlatform = "GOOGLE_DRIVE"
	DatasetDetailsDtoLineagePlatformGOOGLEPLAY                DatasetDetailsDtoLineagePlatform = "GOOGLE_PLAY"
	DatasetDetailsDtoLineagePlatformGOOGLESEARCHADS360        DatasetDetailsDtoLineagePlatform = "GOOGLE_SEARCH_ADS_360"
	DatasetDetailsDtoLineagePlatformGOOGLESEARCHCONSOLE       DatasetDetailsDtoLineagePlatform = "GOOGLE_SEARCH_CONSOLE"
	DatasetDetailsDtoLineagePlatformGOOGLESHEETS              DatasetDetailsDtoLineagePlatform = "GOOGLE_SHEETS"
	DatasetDetailsDtoLineagePlatformGOOGLETASKS               DatasetDetailsDtoLineagePlatform = "GOOGLE_TASKS"
	DatasetDetailsDtoLineagePlatformGORGIAS                   DatasetDetailsDtoLineagePlatform = "GORGIAS"
	DatasetDetailsDtoLineagePlatformGREENHOUSE                DatasetDetailsDtoLineagePlatform = "GREENHOUSE"
	DatasetDetailsDtoLineagePlatformGREENPLUM                 DatasetDetailsDtoLineagePlatform = "GREENPLUM"
	DatasetDetailsDtoLineagePlatformGREENPOWERMONITOR         DatasetDetailsDtoLineagePlatform = "GREEN_POWER_MONITOR"
	DatasetDetailsDtoLineagePlatformGREPSR                    DatasetDetailsDtoLineagePlatform = "GREPSR"
	DatasetDetailsDtoLineagePlatformGRIN                      DatasetDetailsDtoLineagePlatform = "GRIN"
	DatasetDetailsDtoLineagePlatformGURU                      DatasetDetailsDtoLineagePlatform = "GURU"
	DatasetDetailsDtoLineagePlatformH2                        DatasetDetailsDtoLineagePlatform = "H2"
	DatasetDetailsDtoLineagePlatformHARVEST                   DatasetDetailsDtoLineagePlatform = "HARVEST"
	DatasetDetailsDtoLineagePlatformHDFS                      DatasetDetailsDtoLineagePlatform = "HDFS"
	DatasetDetailsDtoLineagePlatformHDFSSTORAGE               DatasetDetailsDtoLineagePlatform = "HDFS_STORAGE"
	DatasetDetailsDtoLineagePlatformHEAP                      DatasetDetailsDtoLineagePlatform = "HEAP"
	DatasetDetailsDtoLineagePlatformHEIGHT                    DatasetDetailsDtoLineagePlatform = "HEIGHT"
	DatasetDetailsDtoLineagePlatformHELPSCOUT                 DatasetDetailsDtoLineagePlatform = "HELP_SCOUT"
	DatasetDetailsDtoLineagePlatformHELPSHIFT                 DatasetDetailsDtoLineagePlatform = "HELPSHIFT"
	DatasetDetailsDtoLineagePlatformHEROKUKAFKA               DatasetDetailsDtoLineagePlatform = "HEROKU_KAFKA"
	DatasetDetailsDtoLineagePlatformHIBOB                     DatasetDetailsDtoLineagePlatform = "HIBOB"
	DatasetDetailsDtoLineagePlatformHIGHTOUCH                 DatasetDetailsDtoLineagePlatform = "HIGH_TOUCH"
	DatasetDetailsDtoLineagePlatformHIVE                      DatasetDetailsDtoLineagePlatform = "HIVE"
	DatasetDetailsDtoLineagePlatformHIVEPROCESS               DatasetDetailsDtoLineagePlatform = "HIVE_PROCESS"
	DatasetDetailsDtoLineagePlatformHOPIN                     DatasetDetailsDtoLineagePlatform = "HOPIN"
	DatasetDetailsDtoLineagePlatformHUBSPOT                   DatasetDetailsDtoLineagePlatform = "HUBSPOT"
	DatasetDetailsDtoLineagePlatformIMPACT                    DatasetDetailsDtoLineagePlatform = "IMPACT"
	DatasetDetailsDtoLineagePlatformINCIDENTIO                DatasetDetailsDtoLineagePlatform = "INCIDENT_IO"
	DatasetDetailsDtoLineagePlatformINFOBIP                   DatasetDetailsDtoLineagePlatform = "INFOBIP"
	DatasetDetailsDtoLineagePlatformINFORMATICA               DatasetDetailsDtoLineagePlatform = "INFORMATICA"
	DatasetDetailsDtoLineagePlatformINSIGHTLY                 DatasetDetailsDtoLineagePlatform = "INSIGHTLY"
	DatasetDetailsDtoLineagePlatformINSTAGRAM                 DatasetDetailsDtoLineagePlatform = "INSTAGRAM"
	DatasetDetailsDtoLineagePlatformINTERCOM                  DatasetDetailsDtoLineagePlatform = "INTERCOM"
	DatasetDetailsDtoLineagePlatformINVESTOPEDIA              DatasetDetailsDtoLineagePlatform = "INVESTOPEDIA"
	DatasetDetailsDtoLineagePlatformIRONCLAD                  DatasetDetailsDtoLineagePlatform = "IRONCLAD"
	DatasetDetailsDtoLineagePlatformIRONSOURCE                DatasetDetailsDtoLineagePlatform = "IRONSOURCE"
	DatasetDetailsDtoLineagePlatformITERABLE                  DatasetDetailsDtoLineagePlatform = "ITERABLE"
	DatasetDetailsDtoLineagePlatformJAVA                      DatasetDetailsDtoLineagePlatform = "JAVA"
	DatasetDetailsDtoLineagePlatformJENKINS                   DatasetDetailsDtoLineagePlatform = "JENKINS"
	DatasetDetailsDtoLineagePlatformJUSTCALL                  DatasetDetailsDtoLineagePlatform = "JUSTCALL"
	DatasetDetailsDtoLineagePlatformKANDJI                    DatasetDetailsDtoLineagePlatform = "KANDJI"
	DatasetDetailsDtoLineagePlatformKENSU                     DatasetDetailsDtoLineagePlatform = "KENSU"
	DatasetDetailsDtoLineagePlatformKHOROSCARE                DatasetDetailsDtoLineagePlatform = "KHOROS_CARE"
	DatasetDetailsDtoLineagePlatformKISSMETRICS               DatasetDetailsDtoLineagePlatform = "KISSMETRICS"
	DatasetDetailsDtoLineagePlatformKLAVIYO                   DatasetDetailsDtoLineagePlatform = "KLAVIYO"
	DatasetDetailsDtoLineagePlatformKNOWBE4                   DatasetDetailsDtoLineagePlatform = "KNOWBE4"
	DatasetDetailsDtoLineagePlatformKONNECTINSIGHTS           DatasetDetailsDtoLineagePlatform = "KONNECT_INSIGHTS"
	DatasetDetailsDtoLineagePlatformKUSTOMER                  DatasetDetailsDtoLineagePlatform = "KUSTOMER"
	DatasetDetailsDtoLineagePlatformLARIATDATA                DatasetDetailsDtoLineagePlatform = "LARIAT_DATA"
	DatasetDetailsDtoLineagePlatformLATTICE                   DatasetDetailsDtoLineagePlatform = "LATTICE"
	DatasetDetailsDtoLineagePlatformLAUNCHDARKLY              DatasetDetailsDtoLineagePlatform = "LAUNCH_DARKLY"
	DatasetDetailsDtoLineagePlatformLEARNUPON                 DatasetDetailsDtoLineagePlatform = "LEARN_UPON"
	DatasetDetailsDtoLineagePlatformLESSONLY                  DatasetDetailsDtoLineagePlatform = "LESSONLY"
	DatasetDetailsDtoLineagePlatformLEVER                     DatasetDetailsDtoLineagePlatform = "LEVER"
	DatasetDetailsDtoLineagePlatformLIFTOFF                   DatasetDetailsDtoLineagePlatform = "LIFTOFF"
	DatasetDetailsDtoLineagePlatformLIGHTDASH                 DatasetDetailsDtoLineagePlatform = "LIGHTDASH"
	DatasetDetailsDtoLineagePlatformLIGHTSPEED                DatasetDetailsDtoLineagePlatform = "LIGHTSPEED"
	DatasetDetailsDtoLineagePlatformLIGHTSUP                  DatasetDetailsDtoLineagePlatform = "LIGHTSUP"
	DatasetDetailsDtoLineagePlatformLINEAR                    DatasetDetailsDtoLineagePlatform = "LINEAR"
	DatasetDetailsDtoLineagePlatformLINKEDIN                  DatasetDetailsDtoLineagePlatform = "LINKEDIN"
	DatasetDetailsDtoLineagePlatformLIVECHAT                  DatasetDetailsDtoLineagePlatform = "LIVECHAT"
	DatasetDetailsDtoLineagePlatformLOADEDCOMMERCE            DatasetDetailsDtoLineagePlatform = "LOADED_COMMERCE"
	DatasetDetailsDtoLineagePlatformLOB                       DatasetDetailsDtoLineagePlatform = "LOB"
	DatasetDetailsDtoLineagePlatformLOOKER                    DatasetDetailsDtoLineagePlatform = "LOOKER"
	DatasetDetailsDtoLineagePlatformLOOP                      DatasetDetailsDtoLineagePlatform = "LOOP"
	DatasetDetailsDtoLineagePlatformLOOPIO                    DatasetDetailsDtoLineagePlatform = "LOOPIO"
	DatasetDetailsDtoLineagePlatformLUMA                      DatasetDetailsDtoLineagePlatform = "LUMA"
	DatasetDetailsDtoLineagePlatformMAGENTO                   DatasetDetailsDtoLineagePlatform = "MAGENTO"
	DatasetDetailsDtoLineagePlatformMAILCHIMP                 DatasetDetailsDtoLineagePlatform = "MAILCHIMP"
	DatasetDetailsDtoLineagePlatformMAILGUN                   DatasetDetailsDtoLineagePlatform = "MAILGUN"
	DatasetDetailsDtoLineagePlatformMANDRILL                  DatasetDetailsDtoLineagePlatform = "MANDRILL"
	DatasetDetailsDtoLineagePlatformMANTA                     DatasetDetailsDtoLineagePlatform = "MANTA"
	DatasetDetailsDtoLineagePlatformMARIADB                   DatasetDetailsDtoLineagePlatform = "MARIADB"
	DatasetDetailsDtoLineagePlatformMARINSOFTWARE             DatasetDetailsDtoLineagePlatform = "MARIN_SOFTWARE"
	DatasetDetailsDtoLineagePlatformMARKETO                   DatasetDetailsDtoLineagePlatform = "MARKETO"
	DatasetDetailsDtoLineagePlatformMATTERMOST                DatasetDetailsDtoLineagePlatform = "MATTERMOST"
	DatasetDetailsDtoLineagePlatformMAVENLINK                 DatasetDetailsDtoLineagePlatform = "MAVENLINK"
	DatasetDetailsDtoLineagePlatformMAXIO                     DatasetDetailsDtoLineagePlatform = "MAXIO"
	DatasetDetailsDtoLineagePlatformMEDALLIA                  DatasetDetailsDtoLineagePlatform = "MEDALLIA"
	DatasetDetailsDtoLineagePlatformMETA                      DatasetDetailsDtoLineagePlatform = "META"
	DatasetDetailsDtoLineagePlatformMETABASE                  DatasetDetailsDtoLineagePlatform = "METABASE"
	DatasetDetailsDtoLineagePlatformMETAPHOR                  DatasetDetailsDtoLineagePlatform = "METAPHOR"
	DatasetDetailsDtoLineagePlatformMETAPLANE                 DatasetDetailsDtoLineagePlatform = "METAPLANE"
	DatasetDetailsDtoLineagePlatformMICROSOFT                 DatasetDetailsDtoLineagePlatform = "MICROSOFT"
	DatasetDetailsDtoLineagePlatformMICROSOFTAZUREBLOBSTORAGE DatasetDetailsDtoLineagePlatform = "MICROSOFT_AZURE_BLOB_STORAGE"
	DatasetDetailsDtoLineagePlatformMICROSOFTAZUREML          DatasetDetailsDtoLineagePlatform = "MICROSOFT_AZURE_ML"
	DatasetDetailsDtoLineagePlatformMICROSOFTDYNAMICS         DatasetDetailsDtoLineagePlatform = "MICROSOFT_DYNAMICS"
	DatasetDetailsDtoLineagePlatformMICROSOFTONEDRIVE         DatasetDetailsDtoLineagePlatform = "MICROSOFT_ONEDRIVE"
	DatasetDetailsDtoLineagePlatformMICROSOFTPURVIEW          DatasetDetailsDtoLineagePlatform = "MICROSOFT_PURVIEW"
	DatasetDetailsDtoLineagePlatformMICROSOFTTEAMS            DatasetDetailsDtoLineagePlatform = "MICROSOFT_TEAMS"
	DatasetDetailsDtoLineagePlatformMICROSTRATEGY             DatasetDetailsDtoLineagePlatform = "MICROSTRATEGY"
	DatasetDetailsDtoLineagePlatformMIXMAX                    DatasetDetailsDtoLineagePlatform = "MIXMAX"
	DatasetDetailsDtoLineagePlatformMIXPANEL                  DatasetDetailsDtoLineagePlatform = "MIXPANEL"
	DatasetDetailsDtoLineagePlatformMONDAYCOM                 DatasetDetailsDtoLineagePlatform = "MONDAY_COM"
	DatasetDetailsDtoLineagePlatformMONGODB                   DatasetDetailsDtoLineagePlatform = "MONGODB"
	DatasetDetailsDtoLineagePlatformMONTECARLO                DatasetDetailsDtoLineagePlatform = "MONTE_CARLO"
	DatasetDetailsDtoLineagePlatformMOUNTAIN                  DatasetDetailsDtoLineagePlatform = "MOUNTAIN"
	DatasetDetailsDtoLineagePlatformMSSQL                     DatasetDetailsDtoLineagePlatform = "MSSQL"
	DatasetDetailsDtoLineagePlatformMULESOFT                  DatasetDetailsDtoLineagePlatform = "MULESOFT"
	DatasetDetailsDtoLineagePlatformMUX                       DatasetDetailsDtoLineagePlatform = "MUX"
	DatasetDetailsDtoLineagePlatformMWAA                      DatasetDetailsDtoLineagePlatform = "MWAA"
	DatasetDetailsDtoLineagePlatformMYSQL                     DatasetDetailsDtoLineagePlatform = "MYSQL"
	DatasetDetailsDtoLineagePlatformNAMELY                    DatasetDetailsDtoLineagePlatform = "NAMELY"
	DatasetDetailsDtoLineagePlatformNCINO                     DatasetDetailsDtoLineagePlatform = "NCINO"
	DatasetDetailsDtoLineagePlatformNETSUITEANALYTICS         DatasetDetailsDtoLineagePlatform = "NETSUITE_ANALYTICS"
	DatasetDetailsDtoLineagePlatformNEWRELIC                  DatasetDetailsDtoLineagePlatform = "NEW_RELIC"
	DatasetDetailsDtoLineagePlatformNOTION                    DatasetDetailsDtoLineagePlatform = "NOTION"
	DatasetDetailsDtoLineagePlatformNYLAS                     DatasetDetailsDtoLineagePlatform = "NYLAS"
	DatasetDetailsDtoLineagePlatformOBSERVE                   DatasetDetailsDtoLineagePlatform = "OBSERVE"
	DatasetDetailsDtoLineagePlatformOCTOPAI                   DatasetDetailsDtoLineagePlatform = "OCTOPAI"
	DatasetDetailsDtoLineagePlatformOKTA                      DatasetDetailsDtoLineagePlatform = "OKTA"
	DatasetDetailsDtoLineagePlatformOPENAI                    DatasetDetailsDtoLineagePlatform = "OPEN_AI"
	DatasetDetailsDtoLineagePlatformOPENDATADC                DatasetDetailsDtoLineagePlatform = "OPEN_DATA_DC"
	DatasetDetailsDtoLineagePlatformOPENEXCHANGESRATES        DatasetDetailsDtoLineagePlatform = "OPEN_EXCHANGES_RATES"
	DatasetDetailsDtoLineagePlatformOPENSEARCH                DatasetDetailsDtoLineagePlatform = "OPEN_SEARCH"
	DatasetDetailsDtoLineagePlatformOPTIMIZELY                DatasetDetailsDtoLineagePlatform = "OPTIMIZELY"
	DatasetDetailsDtoLineagePlatformORACLE                    DatasetDetailsDtoLineagePlatform = "ORACLE"
	DatasetDetailsDtoLineagePlatformORBITCOMMUNITYPLATFORM    DatasetDetailsDtoLineagePlatform = "ORBIT_COMMUNITY_PLATFORM"
	DatasetDetailsDtoLineagePlatformORDWAY                    DatasetDetailsDtoLineagePlatform = "ORDWAY"
	DatasetDetailsDtoLineagePlatformORTTO                     DatasetDetailsDtoLineagePlatform = "ORTTO"
	DatasetDetailsDtoLineagePlatformOSCOMMERCE                DatasetDetailsDtoLineagePlatform = "OS_COMMERCE"
	DatasetDetailsDtoLineagePlatformOUTBRAIN                  DatasetDetailsDtoLineagePlatform = "OUTBRAIN"
	DatasetDetailsDtoLineagePlatformOUTREACH                  DatasetDetailsDtoLineagePlatform = "OUTREACH"
	DatasetDetailsDtoLineagePlatformOVALEDGE                  DatasetDetailsDtoLineagePlatform = "OVALEDGE"
	DatasetDetailsDtoLineagePlatformPAGERDUTY                 DatasetDetailsDtoLineagePlatform = "PAGERDUTY"
	DatasetDetailsDtoLineagePlatformPAGERSHIFT                DatasetDetailsDtoLineagePlatform = "PAGERSHIFT"
	DatasetDetailsDtoLineagePlatformPAYPAL                    DatasetDetailsDtoLineagePlatform = "PAYPAL"
	DatasetDetailsDtoLineagePlatformPENDO                     DatasetDetailsDtoLineagePlatform = "PENDO"
	DatasetDetailsDtoLineagePlatformPINGDOM                   DatasetDetailsDtoLineagePlatform = "PINGDOM"
	DatasetDetailsDtoLineagePlatformPINTEREST                 DatasetDetailsDtoLineagePlatform = "PINTEREST"
	DatasetDetailsDtoLineagePlatformPIPE17                    DatasetDetailsDtoLineagePlatform = "PIPE17"
	DatasetDetailsDtoLineagePlatformPIPEDRIVE                 DatasetDetailsDtoLineagePlatform = "PIPEDRIVE"
	DatasetDetailsDtoLineagePlatformPIVOTALTRACKER            DatasetDetailsDtoLineagePlatform = "PIVOTAL_TRACKER"
	DatasetDetailsDtoLineagePlatformPLAYVOX                   DatasetDetailsDtoLineagePlatform = "PLAYVOX"
	DatasetDetailsDtoLineagePlatformPOSTGRES                  DatasetDetailsDtoLineagePlatform = "POSTGRES"
	DatasetDetailsDtoLineagePlatformPOSTHOG                   DatasetDetailsDtoLineagePlatform = "POSTHOG"
	DatasetDetailsDtoLineagePlatformPOWERBI                   DatasetDetailsDtoLineagePlatform = "POWER_BI"
	DatasetDetailsDtoLineagePlatformPOWERSCHOOL               DatasetDetailsDtoLineagePlatform = "POWERSCHOOL"
	DatasetDetailsDtoLineagePlatformPREFECT                   DatasetDetailsDtoLineagePlatform = "PREFECT"
	DatasetDetailsDtoLineagePlatformPRESTASHOP                DatasetDetailsDtoLineagePlatform = "PRESTASHOP"
	DatasetDetailsDtoLineagePlatformPRESTO                    DatasetDetailsDtoLineagePlatform = "PRESTO"
	DatasetDetailsDtoLineagePlatformPRODUCTBOARD              DatasetDetailsDtoLineagePlatform = "PRODUCTBOARD"
	DatasetDetailsDtoLineagePlatformPYTHON                    DatasetDetailsDtoLineagePlatform = "PYTHON"
	DatasetDetailsDtoLineagePlatformQLIK                      DatasetDetailsDtoLineagePlatform = "QLIK"
	DatasetDetailsDtoLineagePlatformQUALAROO                  DatasetDetailsDtoLineagePlatform = "QUALAROO"
	DatasetDetailsDtoLineagePlatformQUALTRICS                 DatasetDetailsDtoLineagePlatform = "QUALTRICS"
	DatasetDetailsDtoLineagePlatformQUICKBOOKS                DatasetDetailsDtoLineagePlatform = "QUICKBOOKS"
	DatasetDetailsDtoLineagePlatformQUICKSIGHT                DatasetDetailsDtoLineagePlatform = "QUICKSIGHT"
	DatasetDetailsDtoLineagePlatformRAMP                      DatasetDetailsDtoLineagePlatform = "RAMP"
	DatasetDetailsDtoLineagePlatformRARIBLE                   DatasetDetailsDtoLineagePlatform = "RARIBLE"
	DatasetDetailsDtoLineagePlatformRECHARGE                  DatasetDetailsDtoLineagePlatform = "RECHARGE"
	DatasetDetailsDtoLineagePlatformRECURLY                   DatasetDetailsDtoLineagePlatform = "RECURLY"
	DatasetDetailsDtoLineagePlatformREDDIT                    DatasetDetailsDtoLineagePlatform = "REDDIT"
	DatasetDetailsDtoLineagePlatformREDSHIFT                  DatasetDetailsDtoLineagePlatform = "REDSHIFT"
	DatasetDetailsDtoLineagePlatformRELTIO                    DatasetDetailsDtoLineagePlatform = "RELTIO"
	DatasetDetailsDtoLineagePlatformREPLYIO                   DatasetDetailsDtoLineagePlatform = "REPLY_IO"
	DatasetDetailsDtoLineagePlatformRETAILNEXT                DatasetDetailsDtoLineagePlatform = "RETAILNEXT"
	DatasetDetailsDtoLineagePlatformRETENTLY                  DatasetDetailsDtoLineagePlatform = "RETENTLY"
	DatasetDetailsDtoLineagePlatformREVELSYSTEMS              DatasetDetailsDtoLineagePlatform = "REVEL_SYSTEMS"
	DatasetDetailsDtoLineagePlatformRINGCENTRAL               DatasetDetailsDtoLineagePlatform = "RINGCENTRAL"
	DatasetDetailsDtoLineagePlatformRIPPLING                  DatasetDetailsDtoLineagePlatform = "RIPPLING"
	DatasetDetailsDtoLineagePlatformROLLBAR                   DatasetDetailsDtoLineagePlatform = "ROLLBAR"
	DatasetDetailsDtoLineagePlatformROOTLY                    DatasetDetailsDtoLineagePlatform = "ROOTLY"
	DatasetDetailsDtoLineagePlatformS3                        DatasetDetailsDtoLineagePlatform = "S3"
	DatasetDetailsDtoLineagePlatformSAGEHR                    DatasetDetailsDtoLineagePlatform = "SAGE_HR"
	DatasetDetailsDtoLineagePlatformSAGEINTACCT               DatasetDetailsDtoLineagePlatform = "SAGE_INTACCT"
	DatasetDetailsDtoLineagePlatformSAILTHRU                  DatasetDetailsDtoLineagePlatform = "SAILTHRU"
	DatasetDetailsDtoLineagePlatformSALESFORCE                DatasetDetailsDtoLineagePlatform = "SALESFORCE"
	DatasetDetailsDtoLineagePlatformSALESLOFT                 DatasetDetailsDtoLineagePlatform = "SALESLOFT"
	DatasetDetailsDtoLineagePlatformSALSIFY                   DatasetDetailsDtoLineagePlatform = "SALSIFY"
	DatasetDetailsDtoLineagePlatformSAMSARA                   DatasetDetailsDtoLineagePlatform = "SAMSARA"
	DatasetDetailsDtoLineagePlatformSAP                       DatasetDetailsDtoLineagePlatform = "SAP"
	DatasetDetailsDtoLineagePlatformSAPCONCUR                 DatasetDetailsDtoLineagePlatform = "SAP_CONCUR"
	DatasetDetailsDtoLineagePlatformSCORM                     DatasetDetailsDtoLineagePlatform = "SCORM"
	DatasetDetailsDtoLineagePlatformSECODA                    DatasetDetailsDtoLineagePlatform = "SECODA"
	DatasetDetailsDtoLineagePlatformSECURITYJOURNEY           DatasetDetailsDtoLineagePlatform = "SECURITY_JOURNEY"
	DatasetDetailsDtoLineagePlatformSEGMENT                   DatasetDetailsDtoLineagePlatform = "SEGMENT"
	DatasetDetailsDtoLineagePlatformSELECTSTAR                DatasetDetailsDtoLineagePlatform = "SELECT_STAR"
	DatasetDetailsDtoLineagePlatformSENDGRID                  DatasetDetailsDtoLineagePlatform = "SENDGRID"
	DatasetDetailsDtoLineagePlatformSERVICENOW                DatasetDetailsDtoLineagePlatform = "SERVICE_NOW"
	DatasetDetailsDtoLineagePlatformSFTP                      DatasetDetailsDtoLineagePlatform = "SFTP"
	DatasetDetailsDtoLineagePlatformSHAREPOINT                DatasetDetailsDtoLineagePlatform = "SHAREPOINT"
	DatasetDetailsDtoLineagePlatformSHARETRIBE                DatasetDetailsDtoLineagePlatform = "SHARETRIBE"
	DatasetDetailsDtoLineagePlatformSHIPHERO                  DatasetDetailsDtoLineagePlatform = "SHIPHERO"
	DatasetDetailsDtoLineagePlatformSHIPSTATION               DatasetDetailsDtoLineagePlatform = "SHIPSTATION"
	DatasetDetailsDtoLineagePlatformSHOPIFY                   DatasetDetailsDtoLineagePlatform = "SHOPIFY"
	DatasetDetailsDtoLineagePlatformSHOPWARE                  DatasetDetailsDtoLineagePlatform = "SHOPWARE"
	DatasetDetailsDtoLineagePlatformSHORTIO                   DatasetDetailsDtoLineagePlatform = "SHORT_IO"
	DatasetDetailsDtoLineagePlatformSIFFLET                   DatasetDetailsDtoLineagePlatform = "SIFFLET"
	DatasetDetailsDtoLineagePlatformSIGMA                     DatasetDetailsDtoLineagePlatform = "SIGMA"
	DatasetDetailsDtoLineagePlatformSIMPLECAST                DatasetDetailsDtoLineagePlatform = "SIMPLECAST"
	DatasetDetailsDtoLineagePlatformSIMPLESAT                 DatasetDetailsDtoLineagePlatform = "SIMPLESAT"
	DatasetDetailsDtoLineagePlatformSINGLESTORE               DatasetDetailsDtoLineagePlatform = "SINGLESTORE"
	DatasetDetailsDtoLineagePlatformSISENSE                   DatasetDetailsDtoLineagePlatform = "SISENSE"
	DatasetDetailsDtoLineagePlatformSIXSENSE                  DatasetDetailsDtoLineagePlatform = "SIXSENSE"
	DatasetDetailsDtoLineagePlatformSKILLJAR                  DatasetDetailsDtoLineagePlatform = "SKILLJAR"
	DatasetDetailsDtoLineagePlatformSKUVAULT                  DatasetDetailsDtoLineagePlatform = "SKUVAULT"
	DatasetDetailsDtoLineagePlatformSLAB                      DatasetDetailsDtoLineagePlatform = "SLAB"
	DatasetDetailsDtoLineagePlatformSLACK                     DatasetDetailsDtoLineagePlatform = "SLACK"
	DatasetDetailsDtoLineagePlatformSMADEX                    DatasetDetailsDtoLineagePlatform = "SMADEX"
	DatasetDetailsDtoLineagePlatformSNAPCHAT                  DatasetDetailsDtoLineagePlatform = "SNAPCHAT"
	DatasetDetailsDtoLineagePlatformSNOWFLAKE                 DatasetDetailsDtoLineagePlatform = "SNOWFLAKE"
	DatasetDetailsDtoLineagePlatformSNOWPLOW                  DatasetDetailsDtoLineagePlatform = "SNOWPLOW"
	DatasetDetailsDtoLineagePlatformSODA                      DatasetDetailsDtoLineagePlatform = "SODA"
	DatasetDetailsDtoLineagePlatformSONARQUBE                 DatasetDetailsDtoLineagePlatform = "SONARQUBE"
	DatasetDetailsDtoLineagePlatformSPARKPROCESS              DatasetDetailsDtoLineagePlatform = "SPARK_PROCESS"
	DatasetDetailsDtoLineagePlatformSPLITIO                   DatasetDetailsDtoLineagePlatform = "SPLIT_IO"
	DatasetDetailsDtoLineagePlatformSPLUNK                    DatasetDetailsDtoLineagePlatform = "SPLUNK"
	DatasetDetailsDtoLineagePlatformSPOTIFY                   DatasetDetailsDtoLineagePlatform = "SPOTIFY"
	DatasetDetailsDtoLineagePlatformSPREECOMMERCE             DatasetDetailsDtoLineagePlatform = "SPREE_COMMERCE"
	DatasetDetailsDtoLineagePlatformSPROUTSOCIAL              DatasetDetailsDtoLineagePlatform = "SPROUT_SOCIAL"
	DatasetDetailsDtoLineagePlatformSQUARE                    DatasetDetailsDtoLineagePlatform = "SQUARE"
	DatasetDetailsDtoLineagePlatformSQUARESPACE               DatasetDetailsDtoLineagePlatform = "SQUARESPACE"
	DatasetDetailsDtoLineagePlatformSTACKADAPT                DatasetDetailsDtoLineagePlatform = "STACK_ADAPT"
	DatasetDetailsDtoLineagePlatformSTATSIG                   DatasetDetailsDtoLineagePlatform = "STATSIG"
	DatasetDetailsDtoLineagePlatformSTITCH                    DatasetDetailsDtoLineagePlatform = "STITCH"
	DatasetDetailsDtoLineagePlatformSTRIPE                    DatasetDetailsDtoLineagePlatform = "STRIPE"
	DatasetDetailsDtoLineagePlatformSTYLIGHT                  DatasetDetailsDtoLineagePlatform = "STYLIGHT"
	DatasetDetailsDtoLineagePlatformSUBSCRIPT                 DatasetDetailsDtoLineagePlatform = "SUBSCRIPT"
	DatasetDetailsDtoLineagePlatformSYNAPSE                   DatasetDetailsDtoLineagePlatform = "SYNAPSE"
	DatasetDetailsDtoLineagePlatformTABLEAU                   DatasetDetailsDtoLineagePlatform = "TABLEAU"
	DatasetDetailsDtoLineagePlatformTABOOLA                   DatasetDetailsDtoLineagePlatform = "TABOOLA"
	DatasetDetailsDtoLineagePlatformTALEND                    DatasetDetailsDtoLineagePlatform = "TALEND"
	DatasetDetailsDtoLineagePlatformTALKDESK                  DatasetDetailsDtoLineagePlatform = "TALKDESK"
	DatasetDetailsDtoLineagePlatformTALKWALKER                DatasetDetailsDtoLineagePlatform = "TALKWALKER"
	DatasetDetailsDtoLineagePlatformTEAMWORKCOM               DatasetDetailsDtoLineagePlatform = "TEAMWORK_COM"
	DatasetDetailsDtoLineagePlatformTEMPOIO                   DatasetDetailsDtoLineagePlatform = "TEMPO_IO"
	DatasetDetailsDtoLineagePlatformTERADATA                  DatasetDetailsDtoLineagePlatform = "TERADATA"
	DatasetDetailsDtoLineagePlatformTERRAFORM                 DatasetDetailsDtoLineagePlatform = "TERRAFORM"
	DatasetDetailsDtoLineagePlatformTHETRADEDESK              DatasetDetailsDtoLineagePlatform = "THE_TRADE_DESK"
	DatasetDetailsDtoLineagePlatformTHOUGHTSPOT               DatasetDetailsDtoLineagePlatform = "THOUGHT_SPOT"
	DatasetDetailsDtoLineagePlatformTHREESIXTYLEARNING        DatasetDetailsDtoLineagePlatform = "THREESIXTYLEARNING"
	DatasetDetailsDtoLineagePlatformTIKTOK                    DatasetDetailsDtoLineagePlatform = "TIKTOK"
	DatasetDetailsDtoLineagePlatformTOGGL                     DatasetDetailsDtoLineagePlatform = "TOGGL"
	DatasetDetailsDtoLineagePlatformTRANSCEND                 DatasetDetailsDtoLineagePlatform = "TRANSCEND"
	DatasetDetailsDtoLineagePlatformTRELLO                    DatasetDetailsDtoLineagePlatform = "TRELLO"
	DatasetDetailsDtoLineagePlatformTRINET                    DatasetDetailsDtoLineagePlatform = "TRINET"
	DatasetDetailsDtoLineagePlatformTRISOLUTE                 DatasetDetailsDtoLineagePlatform = "TRISOLUTE"
	DatasetDetailsDtoLineagePlatformTWILIO                    DatasetDetailsDtoLineagePlatform = "TWILIO"
	DatasetDetailsDtoLineagePlatformTYPEFORM                  DatasetDetailsDtoLineagePlatform = "TYPEFORM"
	DatasetDetailsDtoLineagePlatformUNKNOWN                   DatasetDetailsDtoLineagePlatform = "UNKNOWN"
	DatasetDetailsDtoLineagePlatformUPLAND                    DatasetDetailsDtoLineagePlatform = "UPLAND"
	DatasetDetailsDtoLineagePlatformUSERVOICE                 DatasetDetailsDtoLineagePlatform = "USERVOICE"
	DatasetDetailsDtoLineagePlatformVALIDIO                   DatasetDetailsDtoLineagePlatform = "VALIDIO"
	DatasetDetailsDtoLineagePlatformVEEVA                     DatasetDetailsDtoLineagePlatform = "VEEVA"
	DatasetDetailsDtoLineagePlatformVERIZONMEDIA              DatasetDetailsDtoLineagePlatform = "VERIZON_MEDIA"
	DatasetDetailsDtoLineagePlatformVITALLY                   DatasetDetailsDtoLineagePlatform = "VITALLY"
	DatasetDetailsDtoLineagePlatformVONAGE                    DatasetDetailsDtoLineagePlatform = "VONAGE"
	DatasetDetailsDtoLineagePlatformVUETIFY                   DatasetDetailsDtoLineagePlatform = "VUETIFY"
	DatasetDetailsDtoLineagePlatformWEBHOOKS                  DatasetDetailsDtoLineagePlatform = "WEBHOOKS"
	DatasetDetailsDtoLineagePlatformWEBSCRAPER                DatasetDetailsDtoLineagePlatform = "WEB_SCRAPER"
	DatasetDetailsDtoLineagePlatformWHENIWORK                 DatasetDetailsDtoLineagePlatform = "WHEN_I_WORK"
	DatasetDetailsDtoLineagePlatformWHEREFOUR                 DatasetDetailsDtoLineagePlatform = "WHEREFOUR"
	DatasetDetailsDtoLineagePlatformWIKIPEDIA                 DatasetDetailsDtoLineagePlatform = "WIKIPEDIA"
	DatasetDetailsDtoLineagePlatformWOOCOMMERCE               DatasetDetailsDtoLineagePlatform = "WOOCOMMERCE"
	DatasetDetailsDtoLineagePlatformWORDPRESS                 DatasetDetailsDtoLineagePlatform = "WORDPRESS"
	DatasetDetailsDtoLineagePlatformWORKABLE                  DatasetDetailsDtoLineagePlatform = "WORKABLE"
	DatasetDetailsDtoLineagePlatformWORKDAY                   DatasetDetailsDtoLineagePlatform = "WORKDAY"
	DatasetDetailsDtoLineagePlatformWORKFLOWMAX               DatasetDetailsDtoLineagePlatform = "WORKFLOW_MAX"
	DatasetDetailsDtoLineagePlatformWRIKE                     DatasetDetailsDtoLineagePlatform = "WRIKE"
	DatasetDetailsDtoLineagePlatformX                         DatasetDetailsDtoLineagePlatform = "X"
	DatasetDetailsDtoLineagePlatformXERO                      DatasetDetailsDtoLineagePlatform = "XERO"
	DatasetDetailsDtoLineagePlatformXRAY                      DatasetDetailsDtoLineagePlatform = "XRAY"
	DatasetDetailsDtoLineagePlatformYAHOO                     DatasetDetailsDtoLineagePlatform = "YAHOO"
	DatasetDetailsDtoLineagePlatformYOTPO                     DatasetDetailsDtoLineagePlatform = "YOTPO"
	DatasetDetailsDtoLineagePlatformYOUTUBE                   DatasetDetailsDtoLineagePlatform = "YOUTUBE"
	DatasetDetailsDtoLineagePlatformZEENEA                    DatasetDetailsDtoLineagePlatform = "ZEENEA"
	DatasetDetailsDtoLineagePlatformZENCART                   DatasetDetailsDtoLineagePlatform = "ZEN_CART"
	DatasetDetailsDtoLineagePlatformZENDESKCHAT               DatasetDetailsDtoLineagePlatform = "ZENDESK_CHAT"
	DatasetDetailsDtoLineagePlatformZENDESKSELL               DatasetDetailsDtoLineagePlatform = "ZENDESK_SELL"
	DatasetDetailsDtoLineagePlatformZENDESKSUNSHINE           DatasetDetailsDtoLineagePlatform = "ZENDESK_SUNSHINE"
	DatasetDetailsDtoLineagePlatformZENDESKSUPPORT            DatasetDetailsDtoLineagePlatform = "ZENDESK_SUPPORT"
	DatasetDetailsDtoLineagePlatformZINGTREE                  DatasetDetailsDtoLineagePlatform = "ZINGTREE"
	DatasetDetailsDtoLineagePlatformZOHOBOOKS                 DatasetDetailsDtoLineagePlatform = "ZOHO_BOOKS"
	DatasetDetailsDtoLineagePlatformZOHOCAMPAIGNS             DatasetDetailsDtoLineagePlatform = "ZOHO_CAMPAIGNS"
	DatasetDetailsDtoLineagePlatformZOHOCRM                   DatasetDetailsDtoLineagePlatform = "ZOHO_CRM"
	DatasetDetailsDtoLineagePlatformZOOM                      DatasetDetailsDtoLineagePlatform = "ZOOM"
	DatasetDetailsDtoLineagePlatformZUORA                     DatasetDetailsDtoLineagePlatform = "ZUORA"
)

// Defines values for DatasetDetailsDtoSourceCreationType.
const (
	DatasetDetailsDtoSourceCreationTypeCONNECTED DatasetDetailsDtoSourceCreationType = "CONNECTED"
	DatasetDetailsDtoSourceCreationTypeDECLARED  DatasetDetailsDtoSourceCreationType = "DECLARED"
)

// Defines values for DatasourceCatalogAssetDtoCreationType.
const (
	DatasourceCatalogAssetDtoCreationTypeCONNECTED DatasourceCatalogAssetDtoCreationType = "CONNECTED"
	DatasourceCatalogAssetDtoCreationTypeDECLARED  DatasourceCatalogAssetDtoCreationType = "DECLARED"
)

// Defines values for DatasourceCatalogAssetDtoEntityType.
const (
	DatasourceCatalogAssetDtoEntityTypeACCESSTOKEN                  DatasourceCatalogAssetDtoEntityType = "ACCESS_TOKEN"
	DatasourceCatalogAssetDtoEntityTypeALERTINGHOOK                 DatasourceCatalogAssetDtoEntityType = "ALERTING_HOOK"
	DatasourceCatalogAssetDtoEntityTypeCHART                        DatasourceCatalogAssetDtoEntityType = "CHART"
	DatasourceCatalogAssetDtoEntityTypeCOLLECTION                   DatasourceCatalogAssetDtoEntityType = "COLLECTION"
	DatasourceCatalogAssetDtoEntityTypeCONFIG                       DatasourceCatalogAssetDtoEntityType = "CONFIG"
	DatasourceCatalogAssetDtoEntityTypeDAG                          DatasourceCatalogAssetDtoEntityType = "DAG"
	DatasourceCatalogAssetDtoEntityTypeDASHBOARD                    DatasourceCatalogAssetDtoEntityType = "DASHBOARD"
	DatasourceCatalogAssetDtoEntityTypeDATAPOINTQUALIFICATION       DatasourceCatalogAssetDtoEntityType = "DATAPOINT_QUALIFICATION"
	DatasourceCatalogAssetDtoEntityTypeDATASET                      DatasourceCatalogAssetDtoEntityType = "DATASET"
	DatasourceCatalogAssetDtoEntityTypeDATASETFIELD                 DatasourceCatalogAssetDtoEntityType = "DATASET_FIELD"
	DatasourceCatalogAssetDtoEntityTypeDATASOURCE                   DatasourceCatalogAssetDtoEntityType = "DATASOURCE"
	DatasourceCatalogAssetDtoEntityTypeDATASOURCEINGESTIONRUN       DatasourceCatalogAssetDtoEntityType = "DATASOURCE_INGESTION_RUN"
	DatasourceCatalogAssetDtoEntityTypeDECLAREDASSET                DatasourceCatalogAssetDtoEntityType = "DECLARED_ASSET"
	DatasourceCatalogAssetDtoEntityTypeDOMAIN                       DatasourceCatalogAssetDtoEntityType = "DOMAIN"
	DatasourceCatalogAssetDtoEntityTypeINCIDENT                     DatasourceCatalogAssetDtoEntityType = "INCIDENT"
	DatasourceCatalogAssetDtoEntityTypeRULEMONITORINGRECOMMENDATION DatasourceCatalogAssetDtoEntityType = "RULE_MONITORING_RECOMMENDATION"
	DatasourceCatalogAssetDtoEntityTypeRULERUN                      DatasourceCatalogAssetDtoEntityType = "RULE_RUN"
	DatasourceCatalogAssetDtoEntityTypeSIFFLETAGENT                 DatasourceCatalogAssetDtoEntityType = "SIFFLET_AGENT"
	DatasourceCatalogAssetDtoEntityTypeSIFFLETRULE                  DatasourceCatalogAssetDtoEntityType = "SIFFLET_RULE"
	DatasourceCatalogAssetDtoEntityTypeTAG                          DatasourceCatalogAssetDtoEntityType = "TAG"
	DatasourceCatalogAssetDtoEntityTypeTRANSFORMATION               DatasourceCatalogAssetDtoEntityType = "TRANSFORMATION"
	DatasourceCatalogAssetDtoEntityTypeUSER                         DatasourceCatalogAssetDtoEntityType = "USER"
	DatasourceCatalogAssetDtoEntityTypeWEBHOOK                      DatasourceCatalogAssetDtoEntityType = "WEBHOOK"
)

// Defines values for DatasourceCatalogAssetDtoPlatform.
const (
	DatasourceCatalogAssetDtoPlatformACCELDATA                 DatasourceCatalogAssetDtoPlatform = "ACCELDATA"
	DatasourceCatalogAssetDtoPlatformACRYLDATA                 DatasourceCatalogAssetDtoPlatform = "ACRYL_DATA"
	DatasourceCatalogAssetDtoPlatformACTIANVECTOR              DatasourceCatalogAssetDtoPlatform = "ACTIAN_VECTOR"
	DatasourceCatalogAssetDtoPlatformACTIVECAMPAIGN            DatasourceCatalogAssetDtoPlatform = "ACTIVE_CAMPAIGN"
	DatasourceCatalogAssetDtoPlatformADA                       DatasourceCatalogAssetDtoPlatform = "ADA"
	DatasourceCatalogAssetDtoPlatformADJUST                    DatasourceCatalogAssetDtoPlatform = "ADJUST"
	DatasourceCatalogAssetDtoPlatformADOBE                     DatasourceCatalogAssetDtoPlatform = "ADOBE"
	DatasourceCatalogAssetDtoPlatformADPWFN                    DatasourceCatalogAssetDtoPlatform = "ADP_WFN"
	DatasourceCatalogAssetDtoPlatformADROLL                    DatasourceCatalogAssetDtoPlatform = "ADROLL"
	DatasourceCatalogAssetDtoPlatformAFFINITY                  DatasourceCatalogAssetDtoPlatform = "AFFINITY"
	DatasourceCatalogAssetDtoPlatformAIRBYTE                   DatasourceCatalogAssetDtoPlatform = "AIRBYTE"
	DatasourceCatalogAssetDtoPlatformAIRCALL                   DatasourceCatalogAssetDtoPlatform = "AIRCALL"
	DatasourceCatalogAssetDtoPlatformAIRFLOW                   DatasourceCatalogAssetDtoPlatform = "AIRFLOW"
	DatasourceCatalogAssetDtoPlatformAIRTABLE                  DatasourceCatalogAssetDtoPlatform = "AIRTABLE"
	DatasourceCatalogAssetDtoPlatformALATION                   DatasourceCatalogAssetDtoPlatform = "ALATION"
	DatasourceCatalogAssetDtoPlatformALCHEMER                  DatasourceCatalogAssetDtoPlatform = "ALCHEMER"
	DatasourceCatalogAssetDtoPlatformALVINAI                   DatasourceCatalogAssetDtoPlatform = "ALVIN_AI"
	DatasourceCatalogAssetDtoPlatformAMAZON                    DatasourceCatalogAssetDtoPlatform = "AMAZON"
	DatasourceCatalogAssetDtoPlatformAMAZONCLOUDFRONT          DatasourceCatalogAssetDtoPlatform = "AMAZON_CLOUDFRONT"
	DatasourceCatalogAssetDtoPlatformAMAZONDOCUMENTDB          DatasourceCatalogAssetDtoPlatform = "AMAZON_DOCUMENTDB"
	DatasourceCatalogAssetDtoPlatformAMAZONDYNAMODB            DatasourceCatalogAssetDtoPlatform = "AMAZON_DYNAMODB"
	DatasourceCatalogAssetDtoPlatformAMAZONFIREHOSE            DatasourceCatalogAssetDtoPlatform = "AMAZON_FIREHOSE"
	DatasourceCatalogAssetDtoPlatformAMAZONSAGEMAKER           DatasourceCatalogAssetDtoPlatform = "AMAZON_SAGEMAKER"
	DatasourceCatalogAssetDtoPlatformAMAZONSELLINGPARTNER      DatasourceCatalogAssetDtoPlatform = "AMAZON_SELLING_PARTNER"
	DatasourceCatalogAssetDtoPlatformAMPLITUDE                 DatasourceCatalogAssetDtoPlatform = "AMPLITUDE"
	DatasourceCatalogAssetDtoPlatformANAPLAN                   DatasourceCatalogAssetDtoPlatform = "ANAPLAN"
	DatasourceCatalogAssetDtoPlatformANOMALO                   DatasourceCatalogAssetDtoPlatform = "ANOMALO"
	DatasourceCatalogAssetDtoPlatformAPACHEKAFKA               DatasourceCatalogAssetDtoPlatform = "APACHE_KAFKA"
	DatasourceCatalogAssetDtoPlatformAPACHESPARK               DatasourceCatalogAssetDtoPlatform = "APACHE_SPARK"
	DatasourceCatalogAssetDtoPlatformAPPCUES                   DatasourceCatalogAssetDtoPlatform = "APPCUES"
	DatasourceCatalogAssetDtoPlatformAPPFIGURES                DatasourceCatalogAssetDtoPlatform = "APPFIGURES"
	DatasourceCatalogAssetDtoPlatformAPPLE                     DatasourceCatalogAssetDtoPlatform = "APPLE"
	DatasourceCatalogAssetDtoPlatformAPPLEAPPSTORE             DatasourceCatalogAssetDtoPlatform = "APPLE_APP_STORE"
	DatasourceCatalogAssetDtoPlatformAPPSFLYER                 DatasourceCatalogAssetDtoPlatform = "APPSFLYER"
	DatasourceCatalogAssetDtoPlatformASANA                     DatasourceCatalogAssetDtoPlatform = "ASANA"
	DatasourceCatalogAssetDtoPlatformASSEMBLED                 DatasourceCatalogAssetDtoPlatform = "ASSEMBLED"
	DatasourceCatalogAssetDtoPlatformATHENA                    DatasourceCatalogAssetDtoPlatform = "ATHENA"
	DatasourceCatalogAssetDtoPlatformATLAN                     DatasourceCatalogAssetDtoPlatform = "ATLAN"
	DatasourceCatalogAssetDtoPlatformATLASSIANCONFLUENCE       DatasourceCatalogAssetDtoPlatform = "ATLASSIAN_CONFLUENCE"
	DatasourceCatalogAssetDtoPlatformATLASSIANJIRA             DatasourceCatalogAssetDtoPlatform = "ATLASSIAN_JIRA"
	DatasourceCatalogAssetDtoPlatformATLASSIANOPSGENIE         DatasourceCatalogAssetDtoPlatform = "ATLASSIAN_OPSGENIE"
	DatasourceCatalogAssetDtoPlatformAUTH0                     DatasourceCatalogAssetDtoPlatform = "AUTH0"
	DatasourceCatalogAssetDtoPlatformAUTODESKBIM360            DatasourceCatalogAssetDtoPlatform = "AUTODESK_BIM_360"
	DatasourceCatalogAssetDtoPlatformAWIN                      DatasourceCatalogAssetDtoPlatform = "AWIN"
	DatasourceCatalogAssetDtoPlatformAWSCLOUDTRAIL             DatasourceCatalogAssetDtoPlatform = "AWS_CLOUDTRAIL"
	DatasourceCatalogAssetDtoPlatformAWSCOSTEXPLORER           DatasourceCatalogAssetDtoPlatform = "AWS_COST_EXPLORER"
	DatasourceCatalogAssetDtoPlatformAWSINVENTORY              DatasourceCatalogAssetDtoPlatform = "AWS_INVENTORY"
	DatasourceCatalogAssetDtoPlatformAWSLAMBDA                 DatasourceCatalogAssetDtoPlatform = "AWS_LAMBDA"
	DatasourceCatalogAssetDtoPlatformAZURE                     DatasourceCatalogAssetDtoPlatform = "AZURE"
	DatasourceCatalogAssetDtoPlatformBALLOTREADY               DatasourceCatalogAssetDtoPlatform = "BALLOT_READY"
	DatasourceCatalogAssetDtoPlatformBAMBOOHR                  DatasourceCatalogAssetDtoPlatform = "BAMBOOHR"
	DatasourceCatalogAssetDtoPlatformBIGCOMMERCE               DatasourceCatalogAssetDtoPlatform = "BIGCOMMERCE"
	DatasourceCatalogAssetDtoPlatformBIGEYE                    DatasourceCatalogAssetDtoPlatform = "BIGEYE"
	DatasourceCatalogAssetDtoPlatformBIGQUERY                  DatasourceCatalogAssetDtoPlatform = "BIGQUERY"
	DatasourceCatalogAssetDtoPlatformBILLINGPLATFORM           DatasourceCatalogAssetDtoPlatform = "BILLINGPLATFORM"
	DatasourceCatalogAssetDtoPlatformBIRDEYE                   DatasourceCatalogAssetDtoPlatform = "BIRDEYE"
	DatasourceCatalogAssetDtoPlatformBLACKBOARD                DatasourceCatalogAssetDtoPlatform = "BLACKBOARD"
	DatasourceCatalogAssetDtoPlatformBOX                       DatasourceCatalogAssetDtoPlatform = "BOX"
	DatasourceCatalogAssetDtoPlatformBRAINTREE                 DatasourceCatalogAssetDtoPlatform = "BRAINTREE"
	DatasourceCatalogAssetDtoPlatformBRAZE                     DatasourceCatalogAssetDtoPlatform = "BRAZE"
	DatasourceCatalogAssetDtoPlatformBREVO                     DatasourceCatalogAssetDtoPlatform = "BREVO"
	DatasourceCatalogAssetDtoPlatformBREX                      DatasourceCatalogAssetDtoPlatform = "BREX"
	DatasourceCatalogAssetDtoPlatformBUILDKITE                 DatasourceCatalogAssetDtoPlatform = "BUILDKITE"
	DatasourceCatalogAssetDtoPlatformBUZZSPROUT                DatasourceCatalogAssetDtoPlatform = "BUZZSPROUT"
	DatasourceCatalogAssetDtoPlatformCALENDLY                  DatasourceCatalogAssetDtoPlatform = "CALENDLY"
	DatasourceCatalogAssetDtoPlatformCAMPAIGNMONITOR           DatasourceCatalogAssetDtoPlatform = "CAMPAIGN_MONITOR"
	DatasourceCatalogAssetDtoPlatformCANNY                     DatasourceCatalogAssetDtoPlatform = "CANNY"
	DatasourceCatalogAssetDtoPlatformCANVAS                    DatasourceCatalogAssetDtoPlatform = "CANVAS"
	DatasourceCatalogAssetDtoPlatformCAPTERRA                  DatasourceCatalogAssetDtoPlatform = "CAPTERRA"
	DatasourceCatalogAssetDtoPlatformCASTORDOC                 DatasourceCatalogAssetDtoPlatform = "CASTOR_DOC"
	DatasourceCatalogAssetDtoPlatformCENSUS                    DatasourceCatalogAssetDtoPlatform = "CENSUS"
	DatasourceCatalogAssetDtoPlatformCERTINIA                  DatasourceCatalogAssetDtoPlatform = "CERTINIA"
	DatasourceCatalogAssetDtoPlatformCHAMELEON                 DatasourceCatalogAssetDtoPlatform = "CHAMELEON"
	DatasourceCatalogAssetDtoPlatformCHANNELADVISOR            DatasourceCatalogAssetDtoPlatform = "CHANNEL_ADVISOR"
	DatasourceCatalogAssetDtoPlatformCHARGEBEE                 DatasourceCatalogAssetDtoPlatform = "CHARGEBEE"
	DatasourceCatalogAssetDtoPlatformCHARGEDESK                DatasourceCatalogAssetDtoPlatform = "CHARGEDESK"
	DatasourceCatalogAssetDtoPlatformCHARTMOGUL                DatasourceCatalogAssetDtoPlatform = "CHARTMOGUL"
	DatasourceCatalogAssetDtoPlatformCHORUSAI                  DatasourceCatalogAssetDtoPlatform = "CHORUS_AI"
	DatasourceCatalogAssetDtoPlatformCHURNKEY                  DatasourceCatalogAssetDtoPlatform = "CHURNKEY"
	DatasourceCatalogAssetDtoPlatformCHURNZERO                 DatasourceCatalogAssetDtoPlatform = "CHURNZERO"
	DatasourceCatalogAssetDtoPlatformCIMIS                     DatasourceCatalogAssetDtoPlatform = "CIMIS"
	DatasourceCatalogAssetDtoPlatformCIN7                      DatasourceCatalogAssetDtoPlatform = "CIN7"
	DatasourceCatalogAssetDtoPlatformCIRCLECI                  DatasourceCatalogAssetDtoPlatform = "CIRCLE_CI"
	DatasourceCatalogAssetDtoPlatformCLARI                     DatasourceCatalogAssetDtoPlatform = "CLARI"
	DatasourceCatalogAssetDtoPlatformCLICKUP                   DatasourceCatalogAssetDtoPlatform = "CLICKUP"
	DatasourceCatalogAssetDtoPlatformCLIFFAI                   DatasourceCatalogAssetDtoPlatform = "CLIFF_AI"
	DatasourceCatalogAssetDtoPlatformCLOSE                     DatasourceCatalogAssetDtoPlatform = "CLOSE"
	DatasourceCatalogAssetDtoPlatformCOLLIBRA                  DatasourceCatalogAssetDtoPlatform = "COLLIBRA"
	DatasourceCatalogAssetDtoPlatformCOMMERCETOOLS             DatasourceCatalogAssetDtoPlatform = "COMMERCETOOLS"
	DatasourceCatalogAssetDtoPlatformCOMPOSER                  DatasourceCatalogAssetDtoPlatform = "COMPOSER"
	DatasourceCatalogAssetDtoPlatformCONFLUENTCLOUD            DatasourceCatalogAssetDtoPlatform = "CONFLUENT_CLOUD"
	DatasourceCatalogAssetDtoPlatformCONTRASTSECURITY          DatasourceCatalogAssetDtoPlatform = "CONTRAST_SECURITY"
	DatasourceCatalogAssetDtoPlatformCOUPA                     DatasourceCatalogAssetDtoPlatform = "COUPA"
	DatasourceCatalogAssetDtoPlatformCRITEO                    DatasourceCatalogAssetDtoPlatform = "CRITEO"
	DatasourceCatalogAssetDtoPlatformCROSSBEAM                 DatasourceCatalogAssetDtoPlatform = "CROSSBEAM"
	DatasourceCatalogAssetDtoPlatformCRUNCHBASE                DatasourceCatalogAssetDtoPlatform = "CRUNCHBASE"
	DatasourceCatalogAssetDtoPlatformCUSTOMERIO                DatasourceCatalogAssetDtoPlatform = "CUSTOMER_IO"
	DatasourceCatalogAssetDtoPlatformD2LBRIGHTSPACE            DatasourceCatalogAssetDtoPlatform = "D2L_BRIGHTSPACE"
	DatasourceCatalogAssetDtoPlatformDAGSTER                   DatasourceCatalogAssetDtoPlatform = "DAGSTER"
	DatasourceCatalogAssetDtoPlatformDATABAND                  DatasourceCatalogAssetDtoPlatform = "DATABAND"
	DatasourceCatalogAssetDtoPlatformDATABRICKS                DatasourceCatalogAssetDtoPlatform = "DATABRICKS"
	DatasourceCatalogAssetDtoPlatformDATADOG                   DatasourceCatalogAssetDtoPlatform = "DATADOG"
	DatasourceCatalogAssetDtoPlatformDATAEDO                   DatasourceCatalogAssetDtoPlatform = "DATAEDO"
	DatasourceCatalogAssetDtoPlatformDATAFOLD                  DatasourceCatalogAssetDtoPlatform = "DATAFOLD"
	DatasourceCatalogAssetDtoPlatformDATAGALAXY                DatasourceCatalogAssetDtoPlatform = "DATAGALAXY"
	DatasourceCatalogAssetDtoPlatformDATAHUB                   DatasourceCatalogAssetDtoPlatform = "DATAHUB"
	DatasourceCatalogAssetDtoPlatformDATAIKU                   DatasourceCatalogAssetDtoPlatform = "DATAIKU"
	DatasourceCatalogAssetDtoPlatformDATAWORLD                 DatasourceCatalogAssetDtoPlatform = "DATA_WORLD"
	DatasourceCatalogAssetDtoPlatformDB2                       DatasourceCatalogAssetDtoPlatform = "DB2"
	DatasourceCatalogAssetDtoPlatformDBT                       DatasourceCatalogAssetDtoPlatform = "DBT"
	DatasourceCatalogAssetDtoPlatformDBTCLOUD                  DatasourceCatalogAssetDtoPlatform = "DBTCLOUD"
	DatasourceCatalogAssetDtoPlatformDCLLOGISTICS              DatasourceCatalogAssetDtoPlatform = "DCL_LOGISTICS"
	DatasourceCatalogAssetDtoPlatformDEAR                      DatasourceCatalogAssetDtoPlatform = "DEAR"
	DatasourceCatalogAssetDtoPlatformDECUBE                    DatasourceCatalogAssetDtoPlatform = "DECUBE"
	DatasourceCatalogAssetDtoPlatformDELIGHTED                 DatasourceCatalogAssetDtoPlatform = "DELIGHTED"
	DatasourceCatalogAssetDtoPlatformDEPUTY                    DatasourceCatalogAssetDtoPlatform = "DEPUTY"
	DatasourceCatalogAssetDtoPlatformDESTINI                   DatasourceCatalogAssetDtoPlatform = "DESTINI"
	DatasourceCatalogAssetDtoPlatformDIXA                      DatasourceCatalogAssetDtoPlatform = "DIXA"
	DatasourceCatalogAssetDtoPlatformDOCEBO                    DatasourceCatalogAssetDtoPlatform = "DOCEBO"
	DatasourceCatalogAssetDtoPlatformDRATA                     DatasourceCatalogAssetDtoPlatform = "DRATA"
	DatasourceCatalogAssetDtoPlatformDRIFT                     DatasourceCatalogAssetDtoPlatform = "DRIFT"
	DatasourceCatalogAssetDtoPlatformDRIP                      DatasourceCatalogAssetDtoPlatform = "DRIP"
	DatasourceCatalogAssetDtoPlatformDROPBOX                   DatasourceCatalogAssetDtoPlatform = "DROPBOX"
	DatasourceCatalogAssetDtoPlatformDUOPLANE                  DatasourceCatalogAssetDtoPlatform = "DUOPLANE"
	DatasourceCatalogAssetDtoPlatformEASYPOST                  DatasourceCatalogAssetDtoPlatform = "EASY_POST"
	DatasourceCatalogAssetDtoPlatformECONOMIC                  DatasourceCatalogAssetDtoPlatform = "E_CONOMIC"
	DatasourceCatalogAssetDtoPlatformELASTICSEARCH             DatasourceCatalogAssetDtoPlatform = "ELASTICSEARCH"
	DatasourceCatalogAssetDtoPlatformELEMENTARY                DatasourceCatalogAssetDtoPlatform = "ELEMENTARY"
	DatasourceCatalogAssetDtoPlatformELLUCIAN                  DatasourceCatalogAssetDtoPlatform = "ELLUCIAN"
	DatasourceCatalogAssetDtoPlatformELOQUA                    DatasourceCatalogAssetDtoPlatform = "ELOQUA"
	DatasourceCatalogAssetDtoPlatformEMAIL                     DatasourceCatalogAssetDtoPlatform = "EMAIL"
	DatasourceCatalogAssetDtoPlatformEMPLOYMENTHERO            DatasourceCatalogAssetDtoPlatform = "EMPLOYMENT_HERO"
	DatasourceCatalogAssetDtoPlatformEPICORPROPHET21           DatasourceCatalogAssetDtoPlatform = "EPICOR_PROPHET_21"
	DatasourceCatalogAssetDtoPlatformEVENTBRITE                DatasourceCatalogAssetDtoPlatform = "EVENTBRITE"
	DatasourceCatalogAssetDtoPlatformEVERHOUR                  DatasourceCatalogAssetDtoPlatform = "EVERHOUR"
	DatasourceCatalogAssetDtoPlatformEXCEL                     DatasourceCatalogAssetDtoPlatform = "EXCEL"
	DatasourceCatalogAssetDtoPlatformEXPENSIFY                 DatasourceCatalogAssetDtoPlatform = "EXPENSIFY"
	DatasourceCatalogAssetDtoPlatformFACEBOOK                  DatasourceCatalogAssetDtoPlatform = "FACEBOOK"
	DatasourceCatalogAssetDtoPlatformFIFTEENFIVE               DatasourceCatalogAssetDtoPlatform = "FIFTEENFIVE"
	DatasourceCatalogAssetDtoPlatformFIGMA                     DatasourceCatalogAssetDtoPlatform = "FIGMA"
	DatasourceCatalogAssetDtoPlatformFIREBASE                  DatasourceCatalogAssetDtoPlatform = "FIREBASE"
	DatasourceCatalogAssetDtoPlatformFIREBOLT                  DatasourceCatalogAssetDtoPlatform = "FIREBOLT"
	DatasourceCatalogAssetDtoPlatformFIVETRAN                  DatasourceCatalogAssetDtoPlatform = "FIVETRAN"
	DatasourceCatalogAssetDtoPlatformFLEXPORT                  DatasourceCatalogAssetDtoPlatform = "FLEXPORT"
	DatasourceCatalogAssetDtoPlatformFORJ                      DatasourceCatalogAssetDtoPlatform = "FORJ"
	DatasourceCatalogAssetDtoPlatformFOUNTAIN                  DatasourceCatalogAssetDtoPlatform = "FOUNTAIN"
	DatasourceCatalogAssetDtoPlatformFREIGHTVIEW               DatasourceCatalogAssetDtoPlatform = "FREIGHTVIEW"
	DatasourceCatalogAssetDtoPlatformFRESHBOOKS                DatasourceCatalogAssetDtoPlatform = "FRESHBOOKS"
	DatasourceCatalogAssetDtoPlatformFRESHCHAT                 DatasourceCatalogAssetDtoPlatform = "FRESHCHAT"
	DatasourceCatalogAssetDtoPlatformFRESHDESK                 DatasourceCatalogAssetDtoPlatform = "FRESHDESK"
	DatasourceCatalogAssetDtoPlatformFRESHDESKCONTACTCENTER    DatasourceCatalogAssetDtoPlatform = "FRESHDESK_CONTACT_CENTER"
	DatasourceCatalogAssetDtoPlatformFRESHSERVICE              DatasourceCatalogAssetDtoPlatform = "FRESHSERVICE"
	DatasourceCatalogAssetDtoPlatformFRESHSUCCESS              DatasourceCatalogAssetDtoPlatform = "FRESHSUCCESS"
	DatasourceCatalogAssetDtoPlatformFRESHTEAM                 DatasourceCatalogAssetDtoPlatform = "FRESHTEAM"
	DatasourceCatalogAssetDtoPlatformFRIENDBUY                 DatasourceCatalogAssetDtoPlatform = "FRIENDBUY"
	DatasourceCatalogAssetDtoPlatformFRONT                     DatasourceCatalogAssetDtoPlatform = "FRONT"
	DatasourceCatalogAssetDtoPlatformFTP                       DatasourceCatalogAssetDtoPlatform = "FTP"
	DatasourceCatalogAssetDtoPlatformFULLSTORY                 DatasourceCatalogAssetDtoPlatform = "FULLSTORY"
	DatasourceCatalogAssetDtoPlatformG2                        DatasourceCatalogAssetDtoPlatform = "G2"
	DatasourceCatalogAssetDtoPlatformGAINSIGHT                 DatasourceCatalogAssetDtoPlatform = "GAINSIGHT"
	DatasourceCatalogAssetDtoPlatformGEM                       DatasourceCatalogAssetDtoPlatform = "GEM"
	DatasourceCatalogAssetDtoPlatformGIT                       DatasourceCatalogAssetDtoPlatform = "GIT"
	DatasourceCatalogAssetDtoPlatformGITHUB                    DatasourceCatalogAssetDtoPlatform = "GITHUB"
	DatasourceCatalogAssetDtoPlatformGITLAB                    DatasourceCatalogAssetDtoPlatform = "GITLAB"
	DatasourceCatalogAssetDtoPlatformGLADLY                    DatasourceCatalogAssetDtoPlatform = "GLADLY"
	DatasourceCatalogAssetDtoPlatformGOCARDLESS                DatasourceCatalogAssetDtoPlatform = "GOCARDLESS"
	DatasourceCatalogAssetDtoPlatformGONG                      DatasourceCatalogAssetDtoPlatform = "GONG"
	DatasourceCatalogAssetDtoPlatformGOOGLE                    DatasourceCatalogAssetDtoPlatform = "GOOGLE"
	DatasourceCatalogAssetDtoPlatformGOOGLEADMANAGER           DatasourceCatalogAssetDtoPlatform = "GOOGLE_AD_MANAGER"
	DatasourceCatalogAssetDtoPlatformGOOGLEADS                 DatasourceCatalogAssetDtoPlatform = "GOOGLE_ADS"
	DatasourceCatalogAssetDtoPlatformGOOGLEANALYTICS           DatasourceCatalogAssetDtoPlatform = "GOOGLE_ANALYTICS"
	DatasourceCatalogAssetDtoPlatformGOOGLECALENDAR            DatasourceCatalogAssetDtoPlatform = "GOOGLE_CALENDAR"
	DatasourceCatalogAssetDtoPlatformGOOGLECAMPAIGNMANAGER     DatasourceCatalogAssetDtoPlatform = "GOOGLE_CAMPAIGN_MANAGER"
	DatasourceCatalogAssetDtoPlatformGOOGLECHROME              DatasourceCatalogAssetDtoPlatform = "GOOGLE_CHROME"
	DatasourceCatalogAssetDtoPlatformGOOGLECLOUD               DatasourceCatalogAssetDtoPlatform = "GOOGLE_CLOUD"
	DatasourceCatalogAssetDtoPlatformGOOGLECLOUDSTORAGE        DatasourceCatalogAssetDtoPlatform = "GOOGLE_CLOUD_STORAGE"
	DatasourceCatalogAssetDtoPlatformGOOGLEDISPLAY             DatasourceCatalogAssetDtoPlatform = "GOOGLE_DISPLAY"
	DatasourceCatalogAssetDtoPlatformGOOGLEDRIVE               DatasourceCatalogAssetDtoPlatform = "GOOGLE_DRIVE"
	DatasourceCatalogAssetDtoPlatformGOOGLEPLAY                DatasourceCatalogAssetDtoPlatform = "GOOGLE_PLAY"
	DatasourceCatalogAssetDtoPlatformGOOGLESEARCHADS360        DatasourceCatalogAssetDtoPlatform = "GOOGLE_SEARCH_ADS_360"
	DatasourceCatalogAssetDtoPlatformGOOGLESEARCHCONSOLE       DatasourceCatalogAssetDtoPlatform = "GOOGLE_SEARCH_CONSOLE"
	DatasourceCatalogAssetDtoPlatformGOOGLESHEETS              DatasourceCatalogAssetDtoPlatform = "GOOGLE_SHEETS"
	DatasourceCatalogAssetDtoPlatformGOOGLETASKS               DatasourceCatalogAssetDtoPlatform = "GOOGLE_TASKS"
	DatasourceCatalogAssetDtoPlatformGORGIAS                   DatasourceCatalogAssetDtoPlatform = "GORGIAS"
	DatasourceCatalogAssetDtoPlatformGREENHOUSE                DatasourceCatalogAssetDtoPlatform = "GREENHOUSE"
	DatasourceCatalogAssetDtoPlatformGREENPLUM                 DatasourceCatalogAssetDtoPlatform = "GREENPLUM"
	DatasourceCatalogAssetDtoPlatformGREENPOWERMONITOR         DatasourceCatalogAssetDtoPlatform = "GREEN_POWER_MONITOR"
	DatasourceCatalogAssetDtoPlatformGREPSR                    DatasourceCatalogAssetDtoPlatform = "GREPSR"
	DatasourceCatalogAssetDtoPlatformGRIN                      DatasourceCatalogAssetDtoPlatform = "GRIN"
	DatasourceCatalogAssetDtoPlatformGURU                      DatasourceCatalogAssetDtoPlatform = "GURU"
	DatasourceCatalogAssetDtoPlatformH2                        DatasourceCatalogAssetDtoPlatform = "H2"
	DatasourceCatalogAssetDtoPlatformHARVEST                   DatasourceCatalogAssetDtoPlatform = "HARVEST"
	DatasourceCatalogAssetDtoPlatformHDFS                      DatasourceCatalogAssetDtoPlatform = "HDFS"
	DatasourceCatalogAssetDtoPlatformHDFSSTORAGE               DatasourceCatalogAssetDtoPlatform = "HDFS_STORAGE"
	DatasourceCatalogAssetDtoPlatformHEAP                      DatasourceCatalogAssetDtoPlatform = "HEAP"
	DatasourceCatalogAssetDtoPlatformHEIGHT                    DatasourceCatalogAssetDtoPlatform = "HEIGHT"
	DatasourceCatalogAssetDtoPlatformHELPSCOUT                 DatasourceCatalogAssetDtoPlatform = "HELP_SCOUT"
	DatasourceCatalogAssetDtoPlatformHELPSHIFT                 DatasourceCatalogAssetDtoPlatform = "HELPSHIFT"
	DatasourceCatalogAssetDtoPlatformHEROKUKAFKA               DatasourceCatalogAssetDtoPlatform = "HEROKU_KAFKA"
	DatasourceCatalogAssetDtoPlatformHIBOB                     DatasourceCatalogAssetDtoPlatform = "HIBOB"
	DatasourceCatalogAssetDtoPlatformHIGHTOUCH                 DatasourceCatalogAssetDtoPlatform = "HIGH_TOUCH"
	DatasourceCatalogAssetDtoPlatformHIVE                      DatasourceCatalogAssetDtoPlatform = "HIVE"
	DatasourceCatalogAssetDtoPlatformHIVEPROCESS               DatasourceCatalogAssetDtoPlatform = "HIVE_PROCESS"
	DatasourceCatalogAssetDtoPlatformHOPIN                     DatasourceCatalogAssetDtoPlatform = "HOPIN"
	DatasourceCatalogAssetDtoPlatformHUBSPOT                   DatasourceCatalogAssetDtoPlatform = "HUBSPOT"
	DatasourceCatalogAssetDtoPlatformIMPACT                    DatasourceCatalogAssetDtoPlatform = "IMPACT"
	DatasourceCatalogAssetDtoPlatformINCIDENTIO                DatasourceCatalogAssetDtoPlatform = "INCIDENT_IO"
	DatasourceCatalogAssetDtoPlatformINFOBIP                   DatasourceCatalogAssetDtoPlatform = "INFOBIP"
	DatasourceCatalogAssetDtoPlatformINFORMATICA               DatasourceCatalogAssetDtoPlatform = "INFORMATICA"
	DatasourceCatalogAssetDtoPlatformINSIGHTLY                 DatasourceCatalogAssetDtoPlatform = "INSIGHTLY"
	DatasourceCatalogAssetDtoPlatformINSTAGRAM                 DatasourceCatalogAssetDtoPlatform = "INSTAGRAM"
	DatasourceCatalogAssetDtoPlatformINTERCOM                  DatasourceCatalogAssetDtoPlatform = "INTERCOM"
	DatasourceCatalogAssetDtoPlatformINVESTOPEDIA              DatasourceCatalogAssetDtoPlatform = "INVESTOPEDIA"
	DatasourceCatalogAssetDtoPlatformIRONCLAD                  DatasourceCatalogAssetDtoPlatform = "IRONCLAD"
	DatasourceCatalogAssetDtoPlatformIRONSOURCE                DatasourceCatalogAssetDtoPlatform = "IRONSOURCE"
	DatasourceCatalogAssetDtoPlatformITERABLE                  DatasourceCatalogAssetDtoPlatform = "ITERABLE"
	DatasourceCatalogAssetDtoPlatformJAVA                      DatasourceCatalogAssetDtoPlatform = "JAVA"
	DatasourceCatalogAssetDtoPlatformJENKINS                   DatasourceCatalogAssetDtoPlatform = "JENKINS"
	DatasourceCatalogAssetDtoPlatformJUSTCALL                  DatasourceCatalogAssetDtoPlatform = "JUSTCALL"
	DatasourceCatalogAssetDtoPlatformKANDJI                    DatasourceCatalogAssetDtoPlatform = "KANDJI"
	DatasourceCatalogAssetDtoPlatformKENSU                     DatasourceCatalogAssetDtoPlatform = "KENSU"
	DatasourceCatalogAssetDtoPlatformKHOROSCARE                DatasourceCatalogAssetDtoPlatform = "KHOROS_CARE"
	DatasourceCatalogAssetDtoPlatformKISSMETRICS               DatasourceCatalogAssetDtoPlatform = "KISSMETRICS"
	DatasourceCatalogAssetDtoPlatformKLAVIYO                   DatasourceCatalogAssetDtoPlatform = "KLAVIYO"
	DatasourceCatalogAssetDtoPlatformKNOWBE4                   DatasourceCatalogAssetDtoPlatform = "KNOWBE4"
	DatasourceCatalogAssetDtoPlatformKONNECTINSIGHTS           DatasourceCatalogAssetDtoPlatform = "KONNECT_INSIGHTS"
	DatasourceCatalogAssetDtoPlatformKUSTOMER                  DatasourceCatalogAssetDtoPlatform = "KUSTOMER"
	DatasourceCatalogAssetDtoPlatformLARIATDATA                DatasourceCatalogAssetDtoPlatform = "LARIAT_DATA"
	DatasourceCatalogAssetDtoPlatformLATTICE                   DatasourceCatalogAssetDtoPlatform = "LATTICE"
	DatasourceCatalogAssetDtoPlatformLAUNCHDARKLY              DatasourceCatalogAssetDtoPlatform = "LAUNCH_DARKLY"
	DatasourceCatalogAssetDtoPlatformLEARNUPON                 DatasourceCatalogAssetDtoPlatform = "LEARN_UPON"
	DatasourceCatalogAssetDtoPlatformLESSONLY                  DatasourceCatalogAssetDtoPlatform = "LESSONLY"
	DatasourceCatalogAssetDtoPlatformLEVER                     DatasourceCatalogAssetDtoPlatform = "LEVER"
	DatasourceCatalogAssetDtoPlatformLIFTOFF                   DatasourceCatalogAssetDtoPlatform = "LIFTOFF"
	DatasourceCatalogAssetDtoPlatformLIGHTDASH                 DatasourceCatalogAssetDtoPlatform = "LIGHTDASH"
	DatasourceCatalogAssetDtoPlatformLIGHTSPEED                DatasourceCatalogAssetDtoPlatform = "LIGHTSPEED"
	DatasourceCatalogAssetDtoPlatformLIGHTSUP                  DatasourceCatalogAssetDtoPlatform = "LIGHTSUP"
	DatasourceCatalogAssetDtoPlatformLINEAR                    DatasourceCatalogAssetDtoPlatform = "LINEAR"
	DatasourceCatalogAssetDtoPlatformLINKEDIN                  DatasourceCatalogAssetDtoPlatform = "LINKEDIN"
	DatasourceCatalogAssetDtoPlatformLIVECHAT                  DatasourceCatalogAssetDtoPlatform = "LIVECHAT"
	DatasourceCatalogAssetDtoPlatformLOADEDCOMMERCE            DatasourceCatalogAssetDtoPlatform = "LOADED_COMMERCE"
	DatasourceCatalogAssetDtoPlatformLOB                       DatasourceCatalogAssetDtoPlatform = "LOB"
	DatasourceCatalogAssetDtoPlatformLOOKER                    DatasourceCatalogAssetDtoPlatform = "LOOKER"
	DatasourceCatalogAssetDtoPlatformLOOP                      DatasourceCatalogAssetDtoPlatform = "LOOP"
	DatasourceCatalogAssetDtoPlatformLOOPIO                    DatasourceCatalogAssetDtoPlatform = "LOOPIO"
	DatasourceCatalogAssetDtoPlatformLUMA                      DatasourceCatalogAssetDtoPlatform = "LUMA"
	DatasourceCatalogAssetDtoPlatformMAGENTO                   DatasourceCatalogAssetDtoPlatform = "MAGENTO"
	DatasourceCatalogAssetDtoPlatformMAILCHIMP                 DatasourceCatalogAssetDtoPlatform = "MAILCHIMP"
	DatasourceCatalogAssetDtoPlatformMAILGUN                   DatasourceCatalogAssetDtoPlatform = "MAILGUN"
	DatasourceCatalogAssetDtoPlatformMANDRILL                  DatasourceCatalogAssetDtoPlatform = "MANDRILL"
	DatasourceCatalogAssetDtoPlatformMANTA                     DatasourceCatalogAssetDtoPlatform = "MANTA"
	DatasourceCatalogAssetDtoPlatformMARIADB                   DatasourceCatalogAssetDtoPlatform = "MARIADB"
	DatasourceCatalogAssetDtoPlatformMARINSOFTWARE             DatasourceCatalogAssetDtoPlatform = "MARIN_SOFTWARE"
	DatasourceCatalogAssetDtoPlatformMARKETO                   DatasourceCatalogAssetDtoPlatform = "MARKETO"
	DatasourceCatalogAssetDtoPlatformMATTERMOST                DatasourceCatalogAssetDtoPlatform = "MATTERMOST"
	DatasourceCatalogAssetDtoPlatformMAVENLINK                 DatasourceCatalogAssetDtoPlatform = "MAVENLINK"
	DatasourceCatalogAssetDtoPlatformMAXIO                     DatasourceCatalogAssetDtoPlatform = "MAXIO"
	DatasourceCatalogAssetDtoPlatformMEDALLIA                  DatasourceCatalogAssetDtoPlatform = "MEDALLIA"
	DatasourceCatalogAssetDtoPlatformMETA                      DatasourceCatalogAssetDtoPlatform = "META"
	DatasourceCatalogAssetDtoPlatformMETABASE                  DatasourceCatalogAssetDtoPlatform = "METABASE"
	DatasourceCatalogAssetDtoPlatformMETAPHOR                  DatasourceCatalogAssetDtoPlatform = "METAPHOR"
	DatasourceCatalogAssetDtoPlatformMETAPLANE                 DatasourceCatalogAssetDtoPlatform = "METAPLANE"
	DatasourceCatalogAssetDtoPlatformMICROSOFT                 DatasourceCatalogAssetDtoPlatform = "MICROSOFT"
	DatasourceCatalogAssetDtoPlatformMICROSOFTAZUREBLOBSTORAGE DatasourceCatalogAssetDtoPlatform = "MICROSOFT_AZURE_BLOB_STORAGE"
	DatasourceCatalogAssetDtoPlatformMICROSOFTAZUREML          DatasourceCatalogAssetDtoPlatform = "MICROSOFT_AZURE_ML"
	DatasourceCatalogAssetDtoPlatformMICROSOFTDYNAMICS         DatasourceCatalogAssetDtoPlatform = "MICROSOFT_DYNAMICS"
	DatasourceCatalogAssetDtoPlatformMICROSOFTONEDRIVE         DatasourceCatalogAssetDtoPlatform = "MICROSOFT_ONEDRIVE"
	DatasourceCatalogAssetDtoPlatformMICROSOFTPURVIEW          DatasourceCatalogAssetDtoPlatform = "MICROSOFT_PURVIEW"
	DatasourceCatalogAssetDtoPlatformMICROSOFTTEAMS            DatasourceCatalogAssetDtoPlatform = "MICROSOFT_TEAMS"
	DatasourceCatalogAssetDtoPlatformMICROSTRATEGY             DatasourceCatalogAssetDtoPlatform = "MICROSTRATEGY"
	DatasourceCatalogAssetDtoPlatformMIXMAX                    DatasourceCatalogAssetDtoPlatform = "MIXMAX"
	DatasourceCatalogAssetDtoPlatformMIXPANEL                  DatasourceCatalogAssetDtoPlatform = "MIXPANEL"
	DatasourceCatalogAssetDtoPlatformMONDAYCOM                 DatasourceCatalogAssetDtoPlatform = "MONDAY_COM"
	DatasourceCatalogAssetDtoPlatformMONGODB                   DatasourceCatalogAssetDtoPlatform = "MONGODB"
	DatasourceCatalogAssetDtoPlatformMONTECARLO                DatasourceCatalogAssetDtoPlatform = "MONTE_CARLO"
	DatasourceCatalogAssetDtoPlatformMOUNTAIN                  DatasourceCatalogAssetDtoPlatform = "MOUNTAIN"
	DatasourceCatalogAssetDtoPlatformMSSQL                     DatasourceCatalogAssetDtoPlatform = "MSSQL"
	DatasourceCatalogAssetDtoPlatformMULESOFT                  DatasourceCatalogAssetDtoPlatform = "MULESOFT"
	DatasourceCatalogAssetDtoPlatformMUX                       DatasourceCatalogAssetDtoPlatform = "MUX"
	DatasourceCatalogAssetDtoPlatformMWAA                      DatasourceCatalogAssetDtoPlatform = "MWAA"
	DatasourceCatalogAssetDtoPlatformMYSQL                     DatasourceCatalogAssetDtoPlatform = "MYSQL"
	DatasourceCatalogAssetDtoPlatformNAMELY                    DatasourceCatalogAssetDtoPlatform = "NAMELY"
	DatasourceCatalogAssetDtoPlatformNCINO                     DatasourceCatalogAssetDtoPlatform = "NCINO"
	DatasourceCatalogAssetDtoPlatformNETSUITEANALYTICS         DatasourceCatalogAssetDtoPlatform = "NETSUITE_ANALYTICS"
	DatasourceCatalogAssetDtoPlatformNEWRELIC                  DatasourceCatalogAssetDtoPlatform = "NEW_RELIC"
	DatasourceCatalogAssetDtoPlatformNOTION                    DatasourceCatalogAssetDtoPlatform = "NOTION"
	DatasourceCatalogAssetDtoPlatformNYLAS                     DatasourceCatalogAssetDtoPlatform = "NYLAS"
	DatasourceCatalogAssetDtoPlatformOBSERVE                   DatasourceCatalogAssetDtoPlatform = "OBSERVE"
	DatasourceCatalogAssetDtoPlatformOCTOPAI                   DatasourceCatalogAssetDtoPlatform = "OCTOPAI"
	DatasourceCatalogAssetDtoPlatformOKTA                      DatasourceCatalogAssetDtoPlatform = "OKTA"
	DatasourceCatalogAssetDtoPlatformOPENAI                    DatasourceCatalogAssetDtoPlatform = "OPEN_AI"
	DatasourceCatalogAssetDtoPlatformOPENDATADC                DatasourceCatalogAssetDtoPlatform = "OPEN_DATA_DC"
	DatasourceCatalogAssetDtoPlatformOPENEXCHANGESRATES        DatasourceCatalogAssetDtoPlatform = "OPEN_EXCHANGES_RATES"
	DatasourceCatalogAssetDtoPlatformOPENSEARCH                DatasourceCatalogAssetDtoPlatform = "OPEN_SEARCH"
	DatasourceCatalogAssetDtoPlatformOPTIMIZELY                DatasourceCatalogAssetDtoPlatform = "OPTIMIZELY"
	DatasourceCatalogAssetDtoPlatformORACLE                    DatasourceCatalogAssetDtoPlatform = "ORACLE"
	DatasourceCatalogAssetDtoPlatformORBITCOMMUNITYPLATFORM    DatasourceCatalogAssetDtoPlatform = "ORBIT_COMMUNITY_PLATFORM"
	DatasourceCatalogAssetDtoPlatformORDWAY                    DatasourceCatalogAssetDtoPlatform = "ORDWAY"
	DatasourceCatalogAssetDtoPlatformORTTO                     DatasourceCatalogAssetDtoPlatform = "ORTTO"
	DatasourceCatalogAssetDtoPlatformOSCOMMERCE                DatasourceCatalogAssetDtoPlatform = "OS_COMMERCE"
	DatasourceCatalogAssetDtoPlatformOUTBRAIN                  DatasourceCatalogAssetDtoPlatform = "OUTBRAIN"
	DatasourceCatalogAssetDtoPlatformOUTREACH                  DatasourceCatalogAssetDtoPlatform = "OUTREACH"
	DatasourceCatalogAssetDtoPlatformOVALEDGE                  DatasourceCatalogAssetDtoPlatform = "OVALEDGE"
	DatasourceCatalogAssetDtoPlatformPAGERDUTY                 DatasourceCatalogAssetDtoPlatform = "PAGERDUTY"
	DatasourceCatalogAssetDtoPlatformPAGERSHIFT                DatasourceCatalogAssetDtoPlatform = "PAGERSHIFT"
	DatasourceCatalogAssetDtoPlatformPAYPAL                    DatasourceCatalogAssetDtoPlatform = "PAYPAL"
	DatasourceCatalogAssetDtoPlatformPENDO                     DatasourceCatalogAssetDtoPlatform = "PENDO"
	DatasourceCatalogAssetDtoPlatformPINGDOM                   DatasourceCatalogAssetDtoPlatform = "PINGDOM"
	DatasourceCatalogAssetDtoPlatformPINTEREST                 DatasourceCatalogAssetDtoPlatform = "PINTEREST"
	DatasourceCatalogAssetDtoPlatformPIPE17                    DatasourceCatalogAssetDtoPlatform = "PIPE17"
	DatasourceCatalogAssetDtoPlatformPIPEDRIVE                 DatasourceCatalogAssetDtoPlatform = "PIPEDRIVE"
	DatasourceCatalogAssetDtoPlatformPIVOTALTRACKER            DatasourceCatalogAssetDtoPlatform = "PIVOTAL_TRACKER"
	DatasourceCatalogAssetDtoPlatformPLAYVOX                   DatasourceCatalogAssetDtoPlatform = "PLAYVOX"
	DatasourceCatalogAssetDtoPlatformPOSTGRES                  DatasourceCatalogAssetDtoPlatform = "POSTGRES"
	DatasourceCatalogAssetDtoPlatformPOSTHOG                   DatasourceCatalogAssetDtoPlatform = "POSTHOG"
	DatasourceCatalogAssetDtoPlatformPOWERBI                   DatasourceCatalogAssetDtoPlatform = "POWER_BI"
	DatasourceCatalogAssetDtoPlatformPOWERSCHOOL               DatasourceCatalogAssetDtoPlatform = "POWERSCHOOL"
	DatasourceCatalogAssetDtoPlatformPREFECT                   DatasourceCatalogAssetDtoPlatform = "PREFECT"
	DatasourceCatalogAssetDtoPlatformPRESTASHOP                DatasourceCatalogAssetDtoPlatform = "PRESTASHOP"
	DatasourceCatalogAssetDtoPlatformPRESTO                    DatasourceCatalogAssetDtoPlatform = "PRESTO"
	DatasourceCatalogAssetDtoPlatformPRODUCTBOARD              DatasourceCatalogAssetDtoPlatform = "PRODUCTBOARD"
	DatasourceCatalogAssetDtoPlatformPYTHON                    DatasourceCatalogAssetDtoPlatform = "PYTHON"
	DatasourceCatalogAssetDtoPlatformQLIK                      DatasourceCatalogAssetDtoPlatform = "QLIK"
	DatasourceCatalogAssetDtoPlatformQUALAROO                  DatasourceCatalogAssetDtoPlatform = "QUALAROO"
	DatasourceCatalogAssetDtoPlatformQUALTRICS                 DatasourceCatalogAssetDtoPlatform = "QUALTRICS"
	DatasourceCatalogAssetDtoPlatformQUICKBOOKS                DatasourceCatalogAssetDtoPlatform = "QUICKBOOKS"
	DatasourceCatalogAssetDtoPlatformQUICKSIGHT                DatasourceCatalogAssetDtoPlatform = "QUICKSIGHT"
	DatasourceCatalogAssetDtoPlatformRAMP                      DatasourceCatalogAssetDtoPlatform = "RAMP"
	DatasourceCatalogAssetDtoPlatformRARIBLE                   DatasourceCatalogAssetDtoPlatform = "RARIBLE"
	DatasourceCatalogAssetDtoPlatformRECHARGE                  DatasourceCatalogAssetDtoPlatform = "RECHARGE"
	DatasourceCatalogAssetDtoPlatformRECURLY                   DatasourceCatalogAssetDtoPlatform = "RECURLY"
	DatasourceCatalogAssetDtoPlatformREDDIT                    DatasourceCatalogAssetDtoPlatform = "REDDIT"
	DatasourceCatalogAssetDtoPlatformREDSHIFT                  DatasourceCatalogAssetDtoPlatform = "REDSHIFT"
	DatasourceCatalogAssetDtoPlatformRELTIO                    DatasourceCatalogAssetDtoPlatform = "RELTIO"
	DatasourceCatalogAssetDtoPlatformREPLYIO                   DatasourceCatalogAssetDtoPlatform = "REPLY_IO"
	DatasourceCatalogAssetDtoPlatformRETAILNEXT                DatasourceCatalogAssetDtoPlatform = "RETAILNEXT"
	DatasourceCatalogAssetDtoPlatformRETENTLY                  DatasourceCatalogAssetDtoPlatform = "RETENTLY"
	DatasourceCatalogAssetDtoPlatformREVELSYSTEMS              DatasourceCatalogAssetDtoPlatform = "REVEL_SYSTEMS"
	DatasourceCatalogAssetDtoPlatformRINGCENTRAL               DatasourceCatalogAssetDtoPlatform = "RINGCENTRAL"
	DatasourceCatalogAssetDtoPlatformRIPPLING                  DatasourceCatalogAssetDtoPlatform = "RIPPLING"
	DatasourceCatalogAssetDtoPlatformROLLBAR                   DatasourceCatalogAssetDtoPlatform = "ROLLBAR"
	DatasourceCatalogAssetDtoPlatformROOTLY                    DatasourceCatalogAssetDtoPlatform = "ROOTLY"
	DatasourceCatalogAssetDtoPlatformS3                        DatasourceCatalogAssetDtoPlatform = "S3"
	DatasourceCatalogAssetDtoPlatformSAGEHR                    DatasourceCatalogAssetDtoPlatform = "SAGE_HR"
	DatasourceCatalogAssetDtoPlatformSAGEINTACCT               DatasourceCatalogAssetDtoPlatform = "SAGE_INTACCT"
	DatasourceCatalogAssetDtoPlatformSAILTHRU                  DatasourceCatalogAssetDtoPlatform = "SAILTHRU"
	DatasourceCatalogAssetDtoPlatformSALESFORCE                DatasourceCatalogAssetDtoPlatform = "SALESFORCE"
	DatasourceCatalogAssetDtoPlatformSALESLOFT                 DatasourceCatalogAssetDtoPlatform = "SALESLOFT"
	DatasourceCatalogAssetDtoPlatformSALSIFY                   DatasourceCatalogAssetDtoPlatform = "SALSIFY"
	DatasourceCatalogAssetDtoPlatformSAMSARA                   DatasourceCatalogAssetDtoPlatform = "SAMSARA"
	DatasourceCatalogAssetDtoPlatformSAP                       DatasourceCatalogAssetDtoPlatform = "SAP"
	DatasourceCatalogAssetDtoPlatformSAPCONCUR                 DatasourceCatalogAssetDtoPlatform = "SAP_CONCUR"
	DatasourceCatalogAssetDtoPlatformSCORM                     DatasourceCatalogAssetDtoPlatform = "SCORM"
	DatasourceCatalogAssetDtoPlatformSECODA                    DatasourceCatalogAssetDtoPlatform = "SECODA"
	DatasourceCatalogAssetDtoPlatformSECURITYJOURNEY           DatasourceCatalogAssetDtoPlatform = "SECURITY_JOURNEY"
	DatasourceCatalogAssetDtoPlatformSEGMENT                   DatasourceCatalogAssetDtoPlatform = "SEGMENT"
	DatasourceCatalogAssetDtoPlatformSELECTSTAR                DatasourceCatalogAssetDtoPlatform = "SELECT_STAR"
	DatasourceCatalogAssetDtoPlatformSENDGRID                  DatasourceCatalogAssetDtoPlatform = "SENDGRID"
	DatasourceCatalogAssetDtoPlatformSERVICENOW                DatasourceCatalogAssetDtoPlatform = "SERVICE_NOW"
	DatasourceCatalogAssetDtoPlatformSFTP                      DatasourceCatalogAssetDtoPlatform = "SFTP"
	DatasourceCatalogAssetDtoPlatformSHAREPOINT                DatasourceCatalogAssetDtoPlatform = "SHAREPOINT"
	DatasourceCatalogAssetDtoPlatformSHARETRIBE                DatasourceCatalogAssetDtoPlatform = "SHARETRIBE"
	DatasourceCatalogAssetDtoPlatformSHIPHERO                  DatasourceCatalogAssetDtoPlatform = "SHIPHERO"
	DatasourceCatalogAssetDtoPlatformSHIPSTATION               DatasourceCatalogAssetDtoPlatform = "SHIPSTATION"
	DatasourceCatalogAssetDtoPlatformSHOPIFY                   DatasourceCatalogAssetDtoPlatform = "SHOPIFY"
	DatasourceCatalogAssetDtoPlatformSHOPWARE                  DatasourceCatalogAssetDtoPlatform = "SHOPWARE"
	DatasourceCatalogAssetDtoPlatformSHORTIO                   DatasourceCatalogAssetDtoPlatform = "SHORT_IO"
	DatasourceCatalogAssetDtoPlatformSIFFLET                   DatasourceCatalogAssetDtoPlatform = "SIFFLET"
	DatasourceCatalogAssetDtoPlatformSIGMA                     DatasourceCatalogAssetDtoPlatform = "SIGMA"
	DatasourceCatalogAssetDtoPlatformSIMPLECAST                DatasourceCatalogAssetDtoPlatform = "SIMPLECAST"
	DatasourceCatalogAssetDtoPlatformSIMPLESAT                 DatasourceCatalogAssetDtoPlatform = "SIMPLESAT"
	DatasourceCatalogAssetDtoPlatformSINGLESTORE               DatasourceCatalogAssetDtoPlatform = "SINGLESTORE"
	DatasourceCatalogAssetDtoPlatformSISENSE                   DatasourceCatalogAssetDtoPlatform = "SISENSE"
	DatasourceCatalogAssetDtoPlatformSIXSENSE                  DatasourceCatalogAssetDtoPlatform = "SIXSENSE"
	DatasourceCatalogAssetDtoPlatformSKILLJAR                  DatasourceCatalogAssetDtoPlatform = "SKILLJAR"
	DatasourceCatalogAssetDtoPlatformSKUVAULT                  DatasourceCatalogAssetDtoPlatform = "SKUVAULT"
	DatasourceCatalogAssetDtoPlatformSLAB                      DatasourceCatalogAssetDtoPlatform = "SLAB"
	DatasourceCatalogAssetDtoPlatformSLACK                     DatasourceCatalogAssetDtoPlatform = "SLACK"
	DatasourceCatalogAssetDtoPlatformSMADEX                    DatasourceCatalogAssetDtoPlatform = "SMADEX"
	DatasourceCatalogAssetDtoPlatformSNAPCHAT                  DatasourceCatalogAssetDtoPlatform = "SNAPCHAT"
	DatasourceCatalogAssetDtoPlatformSNOWFLAKE                 DatasourceCatalogAssetDtoPlatform = "SNOWFLAKE"
	DatasourceCatalogAssetDtoPlatformSNOWPLOW                  DatasourceCatalogAssetDtoPlatform = "SNOWPLOW"
	DatasourceCatalogAssetDtoPlatformSODA                      DatasourceCatalogAssetDtoPlatform = "SODA"
	DatasourceCatalogAssetDtoPlatformSONARQUBE                 DatasourceCatalogAssetDtoPlatform = "SONARQUBE"
	DatasourceCatalogAssetDtoPlatformSPARKPROCESS              DatasourceCatalogAssetDtoPlatform = "SPARK_PROCESS"
	DatasourceCatalogAssetDtoPlatformSPLITIO                   DatasourceCatalogAssetDtoPlatform = "SPLIT_IO"
	DatasourceCatalogAssetDtoPlatformSPLUNK                    DatasourceCatalogAssetDtoPlatform = "SPLUNK"
	DatasourceCatalogAssetDtoPlatformSPOTIFY                   DatasourceCatalogAssetDtoPlatform = "SPOTIFY"
	DatasourceCatalogAssetDtoPlatformSPREECOMMERCE             DatasourceCatalogAssetDtoPlatform = "SPREE_COMMERCE"
	DatasourceCatalogAssetDtoPlatformSPROUTSOCIAL              DatasourceCatalogAssetDtoPlatform = "SPROUT_SOCIAL"
	DatasourceCatalogAssetDtoPlatformSQUARE                    DatasourceCatalogAssetDtoPlatform = "SQUARE"
	DatasourceCatalogAssetDtoPlatformSQUARESPACE               DatasourceCatalogAssetDtoPlatform = "SQUARESPACE"
	DatasourceCatalogAssetDtoPlatformSTACKADAPT                DatasourceCatalogAssetDtoPlatform = "STACK_ADAPT"
	DatasourceCatalogAssetDtoPlatformSTATSIG                   DatasourceCatalogAssetDtoPlatform = "STATSIG"
	DatasourceCatalogAssetDtoPlatformSTITCH                    DatasourceCatalogAssetDtoPlatform = "STITCH"
	DatasourceCatalogAssetDtoPlatformSTRIPE                    DatasourceCatalogAssetDtoPlatform = "STRIPE"
	DatasourceCatalogAssetDtoPlatformSTYLIGHT                  DatasourceCatalogAssetDtoPlatform = "STYLIGHT"
	DatasourceCatalogAssetDtoPlatformSUBSCRIPT                 DatasourceCatalogAssetDtoPlatform = "SUBSCRIPT"
	DatasourceCatalogAssetDtoPlatformSYNAPSE                   DatasourceCatalogAssetDtoPlatform = "SYNAPSE"
	DatasourceCatalogAssetDtoPlatformTABLEAU                   DatasourceCatalogAssetDtoPlatform = "TABLEAU"
	DatasourceCatalogAssetDtoPlatformTABOOLA                   DatasourceCatalogAssetDtoPlatform = "TABOOLA"
	DatasourceCatalogAssetDtoPlatformTALEND                    DatasourceCatalogAssetDtoPlatform = "TALEND"
	DatasourceCatalogAssetDtoPlatformTALKDESK                  DatasourceCatalogAssetDtoPlatform = "TALKDESK"
	DatasourceCatalogAssetDtoPlatformTALKWALKER                DatasourceCatalogAssetDtoPlatform = "TALKWALKER"
	DatasourceCatalogAssetDtoPlatformTEAMWORKCOM               DatasourceCatalogAssetDtoPlatform = "TEAMWORK_COM"
	DatasourceCatalogAssetDtoPlatformTEMPOIO                   DatasourceCatalogAssetDtoPlatform = "TEMPO_IO"
	DatasourceCatalogAssetDtoPlatformTERADATA                  DatasourceCatalogAssetDtoPlatform = "TERADATA"
	DatasourceCatalogAssetDtoPlatformTERRAFORM                 DatasourceCatalogAssetDtoPlatform = "TERRAFORM"
	DatasourceCatalogAssetDtoPlatformTHETRADEDESK              DatasourceCatalogAssetDtoPlatform = "THE_TRADE_DESK"
	DatasourceCatalogAssetDtoPlatformTHOUGHTSPOT               DatasourceCatalogAssetDtoPlatform = "THOUGHT_SPOT"
	DatasourceCatalogAssetDtoPlatformTHREESIXTYLEARNING        DatasourceCatalogAssetDtoPlatform = "THREESIXTYLEARNING"
	DatasourceCatalogAssetDtoPlatformTIKTOK                    DatasourceCatalogAssetDtoPlatform = "TIKTOK"
	DatasourceCatalogAssetDtoPlatformTOGGL                     DatasourceCatalogAssetDtoPlatform = "TOGGL"
	DatasourceCatalogAssetDtoPlatformTRANSCEND                 DatasourceCatalogAssetDtoPlatform = "TRANSCEND"
	DatasourceCatalogAssetDtoPlatformTRELLO                    DatasourceCatalogAssetDtoPlatform = "TRELLO"
	DatasourceCatalogAssetDtoPlatformTRINET                    DatasourceCatalogAssetDtoPlatform = "TRINET"
	DatasourceCatalogAssetDtoPlatformTRISOLUTE                 DatasourceCatalogAssetDtoPlatform = "TRISOLUTE"
	DatasourceCatalogAssetDtoPlatformTWILIO                    DatasourceCatalogAssetDtoPlatform = "TWILIO"
	DatasourceCatalogAssetDtoPlatformTYPEFORM                  DatasourceCatalogAssetDtoPlatform = "TYPEFORM"
	DatasourceCatalogAssetDtoPlatformUNKNOWN                   DatasourceCatalogAssetDtoPlatform = "UNKNOWN"
	DatasourceCatalogAssetDtoPlatformUPLAND                    DatasourceCatalogAssetDtoPlatform = "UPLAND"
	DatasourceCatalogAssetDtoPlatformUSERVOICE                 DatasourceCatalogAssetDtoPlatform = "USERVOICE"
	DatasourceCatalogAssetDtoPlatformVALIDIO                   DatasourceCatalogAssetDtoPlatform = "VALIDIO"
	DatasourceCatalogAssetDtoPlatformVEEVA                     DatasourceCatalogAssetDtoPlatform = "VEEVA"
	DatasourceCatalogAssetDtoPlatformVERIZONMEDIA              DatasourceCatalogAssetDtoPlatform = "VERIZON_MEDIA"
	DatasourceCatalogAssetDtoPlatformVITALLY                   DatasourceCatalogAssetDtoPlatform = "VITALLY"
	DatasourceCatalogAssetDtoPlatformVONAGE                    DatasourceCatalogAssetDtoPlatform = "VONAGE"
	DatasourceCatalogAssetDtoPlatformVUETIFY                   DatasourceCatalogAssetDtoPlatform = "VUETIFY"
	DatasourceCatalogAssetDtoPlatformWEBHOOKS                  DatasourceCatalogAssetDtoPlatform = "WEBHOOKS"
	DatasourceCatalogAssetDtoPlatformWEBSCRAPER                DatasourceCatalogAssetDtoPlatform = "WEB_SCRAPER"
	DatasourceCatalogAssetDtoPlatformWHENIWORK                 DatasourceCatalogAssetDtoPlatform = "WHEN_I_WORK"
	DatasourceCatalogAssetDtoPlatformWHEREFOUR                 DatasourceCatalogAssetDtoPlatform = "WHEREFOUR"
	DatasourceCatalogAssetDtoPlatformWIKIPEDIA                 DatasourceCatalogAssetDtoPlatform = "WIKIPEDIA"
	DatasourceCatalogAssetDtoPlatformWOOCOMMERCE               DatasourceCatalogAssetDtoPlatform = "WOOCOMMERCE"
	DatasourceCatalogAssetDtoPlatformWORDPRESS                 DatasourceCatalogAssetDtoPlatform = "WORDPRESS"
	DatasourceCatalogAssetDtoPlatformWORKABLE                  DatasourceCatalogAssetDtoPlatform = "WORKABLE"
	DatasourceCatalogAssetDtoPlatformWORKDAY                   DatasourceCatalogAssetDtoPlatform = "WORKDAY"
	DatasourceCatalogAssetDtoPlatformWORKFLOWMAX               DatasourceCatalogAssetDtoPlatform = "WORKFLOW_MAX"
	DatasourceCatalogAssetDtoPlatformWRIKE                     DatasourceCatalogAssetDtoPlatform = "WRIKE"
	DatasourceCatalogAssetDtoPlatformX                         DatasourceCatalogAssetDtoPlatform = "X"
	DatasourceCatalogAssetDtoPlatformXERO                      DatasourceCatalogAssetDtoPlatform = "XERO"
	DatasourceCatalogAssetDtoPlatformXRAY                      DatasourceCatalogAssetDtoPlatform = "XRAY"
	DatasourceCatalogAssetDtoPlatformYAHOO                     DatasourceCatalogAssetDtoPlatform = "YAHOO"
	DatasourceCatalogAssetDtoPlatformYOTPO                     DatasourceCatalogAssetDtoPlatform = "YOTPO"
	DatasourceCatalogAssetDtoPlatformYOUTUBE                   DatasourceCatalogAssetDtoPlatform = "YOUTUBE"
	DatasourceCatalogAssetDtoPlatformZEENEA                    DatasourceCatalogAssetDtoPlatform = "ZEENEA"
	DatasourceCatalogAssetDtoPlatformZENCART                   DatasourceCatalogAssetDtoPlatform = "ZEN_CART"
	DatasourceCatalogAssetDtoPlatformZENDESKCHAT               DatasourceCatalogAssetDtoPlatform = "ZENDESK_CHAT"
	DatasourceCatalogAssetDtoPlatformZENDESKSELL               DatasourceCatalogAssetDtoPlatform = "ZENDESK_SELL"
	DatasourceCatalogAssetDtoPlatformZENDESKSUNSHINE           DatasourceCatalogAssetDtoPlatform = "ZENDESK_SUNSHINE"
	DatasourceCatalogAssetDtoPlatformZENDESKSUPPORT            DatasourceCatalogAssetDtoPlatform = "ZENDESK_SUPPORT"
	DatasourceCatalogAssetDtoPlatformZINGTREE                  DatasourceCatalogAssetDtoPlatform = "ZINGTREE"
	DatasourceCatalogAssetDtoPlatformZOHOBOOKS                 DatasourceCatalogAssetDtoPlatform = "ZOHO_BOOKS"
	DatasourceCatalogAssetDtoPlatformZOHOCAMPAIGNS             DatasourceCatalogAssetDtoPlatform = "ZOHO_CAMPAIGNS"
	DatasourceCatalogAssetDtoPlatformZOHOCRM                   DatasourceCatalogAssetDtoPlatform = "ZOHO_CRM"
	DatasourceCatalogAssetDtoPlatformZOOM                      DatasourceCatalogAssetDtoPlatform = "ZOOM"
	DatasourceCatalogAssetDtoPlatformZUORA                     DatasourceCatalogAssetDtoPlatform = "ZUORA"
)

// Defines values for DatasourceDtoCreationType.
const (
	DatasourceDtoCreationTypeCONNECTED DatasourceDtoCreationType = "CONNECTED"
	DatasourceDtoCreationTypeDECLARED  DatasourceDtoCreationType = "DECLARED"
)

// Defines values for DatasourceDtoEntityType.
const (
	DatasourceDtoEntityTypeACCESSTOKEN                  DatasourceDtoEntityType = "ACCESS_TOKEN"
	DatasourceDtoEntityTypeALERTINGHOOK                 DatasourceDtoEntityType = "ALERTING_HOOK"
	DatasourceDtoEntityTypeCHART                        DatasourceDtoEntityType = "CHART"
	DatasourceDtoEntityTypeCOLLECTION                   DatasourceDtoEntityType = "COLLECTION"
	DatasourceDtoEntityTypeCONFIG                       DatasourceDtoEntityType = "CONFIG"
	DatasourceDtoEntityTypeDAG                          DatasourceDtoEntityType = "DAG"
	DatasourceDtoEntityTypeDASHBOARD                    DatasourceDtoEntityType = "DASHBOARD"
	DatasourceDtoEntityTypeDATAPOINTQUALIFICATION       DatasourceDtoEntityType = "DATAPOINT_QUALIFICATION"
	DatasourceDtoEntityTypeDATASET                      DatasourceDtoEntityType = "DATASET"
	DatasourceDtoEntityTypeDATASETFIELD                 DatasourceDtoEntityType = "DATASET_FIELD"
	DatasourceDtoEntityTypeDATASOURCE                   DatasourceDtoEntityType = "DATASOURCE"
	DatasourceDtoEntityTypeDATASOURCEINGESTIONRUN       DatasourceDtoEntityType = "DATASOURCE_INGESTION_RUN"
	DatasourceDtoEntityTypeDECLAREDASSET                DatasourceDtoEntityType = "DECLARED_ASSET"
	DatasourceDtoEntityTypeDOMAIN                       DatasourceDtoEntityType = "DOMAIN"
	DatasourceDtoEntityTypeINCIDENT                     DatasourceDtoEntityType = "INCIDENT"
	DatasourceDtoEntityTypeRULEMONITORINGRECOMMENDATION DatasourceDtoEntityType = "RULE_MONITORING_RECOMMENDATION"
	DatasourceDtoEntityTypeRULERUN                      DatasourceDtoEntityType = "RULE_RUN"
	DatasourceDtoEntityTypeSIFFLETAGENT                 DatasourceDtoEntityType = "SIFFLET_AGENT"
	DatasourceDtoEntityTypeSIFFLETRULE                  DatasourceDtoEntityType = "SIFFLET_RULE"
	DatasourceDtoEntityTypeTAG                          DatasourceDtoEntityType = "TAG"
	DatasourceDtoEntityTypeTRANSFORMATION               DatasourceDtoEntityType = "TRANSFORMATION"
	DatasourceDtoEntityTypeUSER                         DatasourceDtoEntityType = "USER"
	DatasourceDtoEntityTypeWEBHOOK                      DatasourceDtoEntityType = "WEBHOOK"
)

// Defines values for DatasourceDtoPlatform.
const (
	DatasourceDtoPlatformACCELDATA                 DatasourceDtoPlatform = "ACCELDATA"
	DatasourceDtoPlatformACRYLDATA                 DatasourceDtoPlatform = "ACRYL_DATA"
	DatasourceDtoPlatformACTIANVECTOR              DatasourceDtoPlatform = "ACTIAN_VECTOR"
	DatasourceDtoPlatformACTIVECAMPAIGN            DatasourceDtoPlatform = "ACTIVE_CAMPAIGN"
	DatasourceDtoPlatformADA                       DatasourceDtoPlatform = "ADA"
	DatasourceDtoPlatformADJUST                    DatasourceDtoPlatform = "ADJUST"
	DatasourceDtoPlatformADOBE                     DatasourceDtoPlatform = "ADOBE"
	DatasourceDtoPlatformADPWFN                    DatasourceDtoPlatform = "ADP_WFN"
	DatasourceDtoPlatformADROLL                    DatasourceDtoPlatform = "ADROLL"
	DatasourceDtoPlatformAFFINITY                  DatasourceDtoPlatform = "AFFINITY"
	DatasourceDtoPlatformAIRBYTE                   DatasourceDtoPlatform = "AIRBYTE"
	DatasourceDtoPlatformAIRCALL                   DatasourceDtoPlatform = "AIRCALL"
	DatasourceDtoPlatformAIRFLOW                   DatasourceDtoPlatform = "AIRFLOW"
	DatasourceDtoPlatformAIRTABLE                  DatasourceDtoPlatform = "AIRTABLE"
	DatasourceDtoPlatformALATION                   DatasourceDtoPlatform = "ALATION"
	DatasourceDtoPlatformALCHEMER                  DatasourceDtoPlatform = "ALCHEMER"
	DatasourceDtoPlatformALVINAI                   DatasourceDtoPlatform = "ALVIN_AI"
	DatasourceDtoPlatformAMAZON                    DatasourceDtoPlatform = "AMAZON"
	DatasourceDtoPlatformAMAZONCLOUDFRONT          DatasourceDtoPlatform = "AMAZON_CLOUDFRONT"
	DatasourceDtoPlatformAMAZONDOCUMENTDB          DatasourceDtoPlatform = "AMAZON_DOCUMENTDB"
	DatasourceDtoPlatformAMAZONDYNAMODB            DatasourceDtoPlatform = "AMAZON_DYNAMODB"
	DatasourceDtoPlatformAMAZONFIREHOSE            DatasourceDtoPlatform = "AMAZON_FIREHOSE"
	DatasourceDtoPlatformAMAZONSAGEMAKER           DatasourceDtoPlatform = "AMAZON_SAGEMAKER"
	DatasourceDtoPlatformAMAZONSELLINGPARTNER      DatasourceDtoPlatform = "AMAZON_SELLING_PARTNER"
	DatasourceDtoPlatformAMPLITUDE                 DatasourceDtoPlatform = "AMPLITUDE"
	DatasourceDtoPlatformANAPLAN                   DatasourceDtoPlatform = "ANAPLAN"
	DatasourceDtoPlatformANOMALO                   DatasourceDtoPlatform = "ANOMALO"
	DatasourceDtoPlatformAPACHEKAFKA               DatasourceDtoPlatform = "APACHE_KAFKA"
	DatasourceDtoPlatformAPACHESPARK               DatasourceDtoPlatform = "APACHE_SPARK"
	DatasourceDtoPlatformAPPCUES                   DatasourceDtoPlatform = "APPCUES"
	DatasourceDtoPlatformAPPFIGURES                DatasourceDtoPlatform = "APPFIGURES"
	DatasourceDtoPlatformAPPLE                     DatasourceDtoPlatform = "APPLE"
	DatasourceDtoPlatformAPPLEAPPSTORE             DatasourceDtoPlatform = "APPLE_APP_STORE"
	DatasourceDtoPlatformAPPSFLYER                 DatasourceDtoPlatform = "APPSFLYER"
	DatasourceDtoPlatformASANA                     DatasourceDtoPlatform = "ASANA"
	DatasourceDtoPlatformASSEMBLED                 DatasourceDtoPlatform = "ASSEMBLED"
	DatasourceDtoPlatformATHENA                    DatasourceDtoPlatform = "ATHENA"
	DatasourceDtoPlatformATLAN                     DatasourceDtoPlatform = "ATLAN"
	DatasourceDtoPlatformATLASSIANCONFLUENCE       DatasourceDtoPlatform = "ATLASSIAN_CONFLUENCE"
	DatasourceDtoPlatformATLASSIANJIRA             DatasourceDtoPlatform = "ATLASSIAN_JIRA"
	DatasourceDtoPlatformATLASSIANOPSGENIE         DatasourceDtoPlatform = "ATLASSIAN_OPSGENIE"
	DatasourceDtoPlatformAUTH0                     DatasourceDtoPlatform = "AUTH0"
	DatasourceDtoPlatformAUTODESKBIM360            DatasourceDtoPlatform = "AUTODESK_BIM_360"
	DatasourceDtoPlatformAWIN                      DatasourceDtoPlatform = "AWIN"
	DatasourceDtoPlatformAWSCLOUDTRAIL             DatasourceDtoPlatform = "AWS_CLOUDTRAIL"
	DatasourceDtoPlatformAWSCOSTEXPLORER           DatasourceDtoPlatform = "AWS_COST_EXPLORER"
	DatasourceDtoPlatformAWSINVENTORY              DatasourceDtoPlatform = "AWS_INVENTORY"
	DatasourceDtoPlatformAWSLAMBDA                 DatasourceDtoPlatform = "AWS_LAMBDA"
	DatasourceDtoPlatformAZURE                     DatasourceDtoPlatform = "AZURE"
	DatasourceDtoPlatformBALLOTREADY               DatasourceDtoPlatform = "BALLOT_READY"
	DatasourceDtoPlatformBAMBOOHR                  DatasourceDtoPlatform = "BAMBOOHR"
	DatasourceDtoPlatformBIGCOMMERCE               DatasourceDtoPlatform = "BIGCOMMERCE"
	DatasourceDtoPlatformBIGEYE                    DatasourceDtoPlatform = "BIGEYE"
	DatasourceDtoPlatformBIGQUERY                  DatasourceDtoPlatform = "BIGQUERY"
	DatasourceDtoPlatformBILLINGPLATFORM           DatasourceDtoPlatform = "BILLINGPLATFORM"
	DatasourceDtoPlatformBIRDEYE                   DatasourceDtoPlatform = "BIRDEYE"
	DatasourceDtoPlatformBLACKBOARD                DatasourceDtoPlatform = "BLACKBOARD"
	DatasourceDtoPlatformBOX                       DatasourceDtoPlatform = "BOX"
	DatasourceDtoPlatformBRAINTREE                 DatasourceDtoPlatform = "BRAINTREE"
	DatasourceDtoPlatformBRAZE                     DatasourceDtoPlatform = "BRAZE"
	DatasourceDtoPlatformBREVO                     DatasourceDtoPlatform = "BREVO"
	DatasourceDtoPlatformBREX                      DatasourceDtoPlatform = "BREX"
	DatasourceDtoPlatformBUILDKITE                 DatasourceDtoPlatform = "BUILDKITE"
	DatasourceDtoPlatformBUZZSPROUT                DatasourceDtoPlatform = "BUZZSPROUT"
	DatasourceDtoPlatformCALENDLY                  DatasourceDtoPlatform = "CALENDLY"
	DatasourceDtoPlatformCAMPAIGNMONITOR           DatasourceDtoPlatform = "CAMPAIGN_MONITOR"
	DatasourceDtoPlatformCANNY                     DatasourceDtoPlatform = "CANNY"
	DatasourceDtoPlatformCANVAS                    DatasourceDtoPlatform = "CANVAS"
	DatasourceDtoPlatformCAPTERRA                  DatasourceDtoPlatform = "CAPTERRA"
	DatasourceDtoPlatformCASTORDOC                 DatasourceDtoPlatform = "CASTOR_DOC"
	DatasourceDtoPlatformCENSUS                    DatasourceDtoPlatform = "CENSUS"
	DatasourceDtoPlatformCERTINIA                  DatasourceDtoPlatform = "CERTINIA"
	DatasourceDtoPlatformCHAMELEON                 DatasourceDtoPlatform = "CHAMELEON"
	DatasourceDtoPlatformCHANNELADVISOR            DatasourceDtoPlatform = "CHANNEL_ADVISOR"
	DatasourceDtoPlatformCHARGEBEE                 DatasourceDtoPlatform = "CHARGEBEE"
	DatasourceDtoPlatformCHARGEDESK                DatasourceDtoPlatform = "CHARGEDESK"
	DatasourceDtoPlatformCHARTMOGUL                DatasourceDtoPlatform = "CHARTMOGUL"
	DatasourceDtoPlatformCHORUSAI                  DatasourceDtoPlatform = "CHORUS_AI"
	DatasourceDtoPlatformCHURNKEY                  DatasourceDtoPlatform = "CHURNKEY"
	DatasourceDtoPlatformCHURNZERO                 DatasourceDtoPlatform = "CHURNZERO"
	DatasourceDtoPlatformCIMIS                     DatasourceDtoPlatform = "CIMIS"
	DatasourceDtoPlatformCIN7                      DatasourceDtoPlatform = "CIN7"
	DatasourceDtoPlatformCIRCLECI                  DatasourceDtoPlatform = "CIRCLE_CI"
	DatasourceDtoPlatformCLARI                     DatasourceDtoPlatform = "CLARI"
	DatasourceDtoPlatformCLICKUP                   DatasourceDtoPlatform = "CLICKUP"
	DatasourceDtoPlatformCLIFFAI                   DatasourceDtoPlatform = "CLIFF_AI"
	DatasourceDtoPlatformCLOSE                     DatasourceDtoPlatform = "CLOSE"
	DatasourceDtoPlatformCOLLIBRA                  DatasourceDtoPlatform = "COLLIBRA"
	DatasourceDtoPlatformCOMMERCETOOLS             DatasourceDtoPlatform = "COMMERCETOOLS"
	DatasourceDtoPlatformCOMPOSER                  DatasourceDtoPlatform = "COMPOSER"
	DatasourceDtoPlatformCONFLUENTCLOUD            DatasourceDtoPlatform = "CONFLUENT_CLOUD"
	DatasourceDtoPlatformCONTRASTSECURITY          DatasourceDtoPlatform = "CONTRAST_SECURITY"
	DatasourceDtoPlatformCOUPA                     DatasourceDtoPlatform = "COUPA"
	DatasourceDtoPlatformCRITEO                    DatasourceDtoPlatform = "CRITEO"
	DatasourceDtoPlatformCROSSBEAM                 DatasourceDtoPlatform = "CROSSBEAM"
	DatasourceDtoPlatformCRUNCHBASE                DatasourceDtoPlatform = "CRUNCHBASE"
	DatasourceDtoPlatformCUSTOMERIO                DatasourceDtoPlatform = "CUSTOMER_IO"
	DatasourceDtoPlatformD2LBRIGHTSPACE            DatasourceDtoPlatform = "D2L_BRIGHTSPACE"
	DatasourceDtoPlatformDAGSTER                   DatasourceDtoPlatform = "DAGSTER"
	DatasourceDtoPlatformDATABAND                  DatasourceDtoPlatform = "DATABAND"
	DatasourceDtoPlatformDATABRICKS                DatasourceDtoPlatform = "DATABRICKS"
	DatasourceDtoPlatformDATADOG                   DatasourceDtoPlatform = "DATADOG"
	DatasourceDtoPlatformDATAEDO                   DatasourceDtoPlatform = "DATAEDO"
	DatasourceDtoPlatformDATAFOLD                  DatasourceDtoPlatform = "DATAFOLD"
	DatasourceDtoPlatformDATAGALAXY                DatasourceDtoPlatform = "DATAGALAXY"
	DatasourceDtoPlatformDATAHUB                   DatasourceDtoPlatform = "DATAHUB"
	DatasourceDtoPlatformDATAIKU                   DatasourceDtoPlatform = "DATAIKU"
	DatasourceDtoPlatformDATAWORLD                 DatasourceDtoPlatform = "DATA_WORLD"
	DatasourceDtoPlatformDB2                       DatasourceDtoPlatform = "DB2"
	DatasourceDtoPlatformDBT                       DatasourceDtoPlatform = "DBT"
	DatasourceDtoPlatformDBTCLOUD                  DatasourceDtoPlatform = "DBTCLOUD"
	DatasourceDtoPlatformDCLLOGISTICS              DatasourceDtoPlatform = "DCL_LOGISTICS"
	DatasourceDtoPlatformDEAR                      DatasourceDtoPlatform = "DEAR"
	DatasourceDtoPlatformDECUBE                    DatasourceDtoPlatform = "DECUBE"
	DatasourceDtoPlatformDELIGHTED                 DatasourceDtoPlatform = "DELIGHTED"
	DatasourceDtoPlatformDEPUTY                    DatasourceDtoPlatform = "DEPUTY"
	DatasourceDtoPlatformDESTINI                   DatasourceDtoPlatform = "DESTINI"
	DatasourceDtoPlatformDIXA                      DatasourceDtoPlatform = "DIXA"
	DatasourceDtoPlatformDOCEBO                    DatasourceDtoPlatform = "DOCEBO"
	DatasourceDtoPlatformDRATA                     DatasourceDtoPlatform = "DRATA"
	DatasourceDtoPlatformDRIFT                     DatasourceDtoPlatform = "DRIFT"
	DatasourceDtoPlatformDRIP                      DatasourceDtoPlatform = "DRIP"
	DatasourceDtoPlatformDROPBOX                   DatasourceDtoPlatform = "DROPBOX"
	DatasourceDtoPlatformDUOPLANE                  DatasourceDtoPlatform = "DUOPLANE"
	DatasourceDtoPlatformEASYPOST                  DatasourceDtoPlatform = "EASY_POST"
	DatasourceDtoPlatformECONOMIC                  DatasourceDtoPlatform = "E_CONOMIC"
	DatasourceDtoPlatformELASTICSEARCH             DatasourceDtoPlatform = "ELASTICSEARCH"
	DatasourceDtoPlatformELEMENTARY                DatasourceDtoPlatform = "ELEMENTARY"
	DatasourceDtoPlatformELLUCIAN                  DatasourceDtoPlatform = "ELLUCIAN"
	DatasourceDtoPlatformELOQUA                    DatasourceDtoPlatform = "ELOQUA"
	DatasourceDtoPlatformEMAIL                     DatasourceDtoPlatform = "EMAIL"
	DatasourceDtoPlatformEMPLOYMENTHERO            DatasourceDtoPlatform = "EMPLOYMENT_HERO"
	DatasourceDtoPlatformEPICORPROPHET21           DatasourceDtoPlatform = "EPICOR_PROPHET_21"
	DatasourceDtoPlatformEVENTBRITE                DatasourceDtoPlatform = "EVENTBRITE"
	DatasourceDtoPlatformEVERHOUR                  DatasourceDtoPlatform = "EVERHOUR"
	DatasourceDtoPlatformEXCEL                     DatasourceDtoPlatform = "EXCEL"
	DatasourceDtoPlatformEXPENSIFY                 DatasourceDtoPlatform = "EXPENSIFY"
	DatasourceDtoPlatformFACEBOOK                  DatasourceDtoPlatform = "FACEBOOK"
	DatasourceDtoPlatformFIFTEENFIVE               DatasourceDtoPlatform = "FIFTEENFIVE"
	DatasourceDtoPlatformFIGMA                     DatasourceDtoPlatform = "FIGMA"
	DatasourceDtoPlatformFIREBASE                  DatasourceDtoPlatform = "FIREBASE"
	DatasourceDtoPlatformFIREBOLT                  DatasourceDtoPlatform = "FIREBOLT"
	DatasourceDtoPlatformFIVETRAN                  DatasourceDtoPlatform = "FIVETRAN"
	DatasourceDtoPlatformFLEXPORT                  DatasourceDtoPlatform = "FLEXPORT"
	DatasourceDtoPlatformFORJ                      DatasourceDtoPlatform = "FORJ"
	DatasourceDtoPlatformFOUNTAIN                  DatasourceDtoPlatform = "FOUNTAIN"
	DatasourceDtoPlatformFREIGHTVIEW               DatasourceDtoPlatform = "FREIGHTVIEW"
	DatasourceDtoPlatformFRESHBOOKS                DatasourceDtoPlatform = "FRESHBOOKS"
	DatasourceDtoPlatformFRESHCHAT                 DatasourceDtoPlatform = "FRESHCHAT"
	DatasourceDtoPlatformFRESHDESK                 DatasourceDtoPlatform = "FRESHDESK"
	DatasourceDtoPlatformFRESHDESKCONTACTCENTER    DatasourceDtoPlatform = "FRESHDESK_CONTACT_CENTER"
	DatasourceDtoPlatformFRESHSERVICE              DatasourceDtoPlatform = "FRESHSERVICE"
	DatasourceDtoPlatformFRESHSUCCESS              DatasourceDtoPlatform = "FRESHSUCCESS"
	DatasourceDtoPlatformFRESHTEAM                 DatasourceDtoPlatform = "FRESHTEAM"
	DatasourceDtoPlatformFRIENDBUY                 DatasourceDtoPlatform = "FRIENDBUY"
	DatasourceDtoPlatformFRONT                     DatasourceDtoPlatform = "FRONT"
	DatasourceDtoPlatformFTP                       DatasourceDtoPlatform = "FTP"
	DatasourceDtoPlatformFULLSTORY                 DatasourceDtoPlatform = "FULLSTORY"
	DatasourceDtoPlatformG2                        DatasourceDtoPlatform = "G2"
	DatasourceDtoPlatformGAINSIGHT                 DatasourceDtoPlatform = "GAINSIGHT"
	DatasourceDtoPlatformGEM                       DatasourceDtoPlatform = "GEM"
	DatasourceDtoPlatformGIT                       DatasourceDtoPlatform = "GIT"
	DatasourceDtoPlatformGITHUB                    DatasourceDtoPlatform = "GITHUB"
	DatasourceDtoPlatformGITLAB                    DatasourceDtoPlatform = "GITLAB"
	DatasourceDtoPlatformGLADLY                    DatasourceDtoPlatform = "GLADLY"
	DatasourceDtoPlatformGOCARDLESS                DatasourceDtoPlatform = "GOCARDLESS"
	DatasourceDtoPlatformGONG                      DatasourceDtoPlatform = "GONG"
	DatasourceDtoPlatformGOOGLE                    DatasourceDtoPlatform = "GOOGLE"
	DatasourceDtoPlatformGOOGLEADMANAGER           DatasourceDtoPlatform = "GOOGLE_AD_MANAGER"
	DatasourceDtoPlatformGOOGLEADS                 DatasourceDtoPlatform = "GOOGLE_ADS"
	DatasourceDtoPlatformGOOGLEANALYTICS           DatasourceDtoPlatform = "GOOGLE_ANALYTICS"
	DatasourceDtoPlatformGOOGLECALENDAR            DatasourceDtoPlatform = "GOOGLE_CALENDAR"
	DatasourceDtoPlatformGOOGLECAMPAIGNMANAGER     DatasourceDtoPlatform = "GOOGLE_CAMPAIGN_MANAGER"
	DatasourceDtoPlatformGOOGLECHROME              DatasourceDtoPlatform = "GOOGLE_CHROME"
	DatasourceDtoPlatformGOOGLECLOUD               DatasourceDtoPlatform = "GOOGLE_CLOUD"
	DatasourceDtoPlatformGOOGLECLOUDSTORAGE        DatasourceDtoPlatform = "GOOGLE_CLOUD_STORAGE"
	DatasourceDtoPlatformGOOGLEDISPLAY             DatasourceDtoPlatform = "GOOGLE_DISPLAY"
	DatasourceDtoPlatformGOOGLEDRIVE               DatasourceDtoPlatform = "GOOGLE_DRIVE"
	DatasourceDtoPlatformGOOGLEPLAY                DatasourceDtoPlatform = "GOOGLE_PLAY"
	DatasourceDtoPlatformGOOGLESEARCHADS360        DatasourceDtoPlatform = "GOOGLE_SEARCH_ADS_360"
	DatasourceDtoPlatformGOOGLESEARCHCONSOLE       DatasourceDtoPlatform = "GOOGLE_SEARCH_CONSOLE"
	DatasourceDtoPlatformGOOGLESHEETS              DatasourceDtoPlatform = "GOOGLE_SHEETS"
	DatasourceDtoPlatformGOOGLETASKS               DatasourceDtoPlatform = "GOOGLE_TASKS"
	DatasourceDtoPlatformGORGIAS                   DatasourceDtoPlatform = "GORGIAS"
	DatasourceDtoPlatformGREENHOUSE                DatasourceDtoPlatform = "GREENHOUSE"
	DatasourceDtoPlatformGREENPLUM                 DatasourceDtoPlatform = "GREENPLUM"
	DatasourceDtoPlatformGREENPOWERMONITOR         DatasourceDtoPlatform = "GREEN_POWER_MONITOR"
	DatasourceDtoPlatformGREPSR                    DatasourceDtoPlatform = "GREPSR"
	DatasourceDtoPlatformGRIN                      DatasourceDtoPlatform = "GRIN"
	DatasourceDtoPlatformGURU                      DatasourceDtoPlatform = "GURU"
	DatasourceDtoPlatformH2                        DatasourceDtoPlatform = "H2"
	DatasourceDtoPlatformHARVEST                   DatasourceDtoPlatform = "HARVEST"
	DatasourceDtoPlatformHDFS                      DatasourceDtoPlatform = "HDFS"
	DatasourceDtoPlatformHDFSSTORAGE               DatasourceDtoPlatform = "HDFS_STORAGE"
	DatasourceDtoPlatformHEAP                      DatasourceDtoPlatform = "HEAP"
	DatasourceDtoPlatformHEIGHT                    DatasourceDtoPlatform = "HEIGHT"
	DatasourceDtoPlatformHELPSCOUT                 DatasourceDtoPlatform = "HELP_SCOUT"
	DatasourceDtoPlatformHELPSHIFT                 DatasourceDtoPlatform = "HELPSHIFT"
	DatasourceDtoPlatformHEROKUKAFKA               DatasourceDtoPlatform = "HEROKU_KAFKA"
	DatasourceDtoPlatformHIBOB                     DatasourceDtoPlatform = "HIBOB"
	DatasourceDtoPlatformHIGHTOUCH                 DatasourceDtoPlatform = "HIGH_TOUCH"
	DatasourceDtoPlatformHIVE                      DatasourceDtoPlatform = "HIVE"
	DatasourceDtoPlatformHIVEPROCESS               DatasourceDtoPlatform = "HIVE_PROCESS"
	DatasourceDtoPlatformHOPIN                     DatasourceDtoPlatform = "HOPIN"
	DatasourceDtoPlatformHUBSPOT                   DatasourceDtoPlatform = "HUBSPOT"
	DatasourceDtoPlatformIMPACT                    DatasourceDtoPlatform = "IMPACT"
	DatasourceDtoPlatformINCIDENTIO                DatasourceDtoPlatform = "INCIDENT_IO"
	DatasourceDtoPlatformINFOBIP                   DatasourceDtoPlatform = "INFOBIP"
	DatasourceDtoPlatformINFORMATICA               DatasourceDtoPlatform = "INFORMATICA"
	DatasourceDtoPlatformINSIGHTLY                 DatasourceDtoPlatform = "INSIGHTLY"
	DatasourceDtoPlatformINSTAGRAM                 DatasourceDtoPlatform = "INSTAGRAM"
	DatasourceDtoPlatformINTERCOM                  DatasourceDtoPlatform = "INTERCOM"
	DatasourceDtoPlatformINVESTOPEDIA              DatasourceDtoPlatform = "INVESTOPEDIA"
	DatasourceDtoPlatformIRONCLAD                  DatasourceDtoPlatform = "IRONCLAD"
	DatasourceDtoPlatformIRONSOURCE                DatasourceDtoPlatform = "IRONSOURCE"
	DatasourceDtoPlatformITERABLE                  DatasourceDtoPlatform = "ITERABLE"
	DatasourceDtoPlatformJAVA                      DatasourceDtoPlatform = "JAVA"
	DatasourceDtoPlatformJENKINS                   DatasourceDtoPlatform = "JENKINS"
	DatasourceDtoPlatformJUSTCALL                  DatasourceDtoPlatform = "JUSTCALL"
	DatasourceDtoPlatformKANDJI                    DatasourceDtoPlatform = "KANDJI"
	DatasourceDtoPlatformKENSU                     DatasourceDtoPlatform = "KENSU"
	DatasourceDtoPlatformKHOROSCARE                DatasourceDtoPlatform = "KHOROS_CARE"
	DatasourceDtoPlatformKISSMETRICS               DatasourceDtoPlatform = "KISSMETRICS"
	DatasourceDtoPlatformKLAVIYO                   DatasourceDtoPlatform = "KLAVIYO"
	DatasourceDtoPlatformKNOWBE4                   DatasourceDtoPlatform = "KNOWBE4"
	DatasourceDtoPlatformKONNECTINSIGHTS           DatasourceDtoPlatform = "KONNECT_INSIGHTS"
	DatasourceDtoPlatformKUSTOMER                  DatasourceDtoPlatform = "KUSTOMER"
	DatasourceDtoPlatformLARIATDATA                DatasourceDtoPlatform = "LARIAT_DATA"
	DatasourceDtoPlatformLATTICE                   DatasourceDtoPlatform = "LATTICE"
	DatasourceDtoPlatformLAUNCHDARKLY              DatasourceDtoPlatform = "LAUNCH_DARKLY"
	DatasourceDtoPlatformLEARNUPON                 DatasourceDtoPlatform = "LEARN_UPON"
	DatasourceDtoPlatformLESSONLY                  DatasourceDtoPlatform = "LESSONLY"
	DatasourceDtoPlatformLEVER                     DatasourceDtoPlatform = "LEVER"
	DatasourceDtoPlatformLIFTOFF                   DatasourceDtoPlatform = "LIFTOFF"
	DatasourceDtoPlatformLIGHTDASH                 DatasourceDtoPlatform = "LIGHTDASH"
	DatasourceDtoPlatformLIGHTSPEED                DatasourceDtoPlatform = "LIGHTSPEED"
	DatasourceDtoPlatformLIGHTSUP                  DatasourceDtoPlatform = "LIGHTSUP"
	DatasourceDtoPlatformLINEAR                    DatasourceDtoPlatform = "LINEAR"
	DatasourceDtoPlatformLINKEDIN                  DatasourceDtoPlatform = "LINKEDIN"
	DatasourceDtoPlatformLIVECHAT                  DatasourceDtoPlatform = "LIVECHAT"
	DatasourceDtoPlatformLOADEDCOMMERCE            DatasourceDtoPlatform = "LOADED_COMMERCE"
	DatasourceDtoPlatformLOB                       DatasourceDtoPlatform = "LOB"
	DatasourceDtoPlatformLOOKER                    DatasourceDtoPlatform = "LOOKER"
	DatasourceDtoPlatformLOOP                      DatasourceDtoPlatform = "LOOP"
	DatasourceDtoPlatformLOOPIO                    DatasourceDtoPlatform = "LOOPIO"
	DatasourceDtoPlatformLUMA                      DatasourceDtoPlatform = "LUMA"
	DatasourceDtoPlatformMAGENTO                   DatasourceDtoPlatform = "MAGENTO"
	DatasourceDtoPlatformMAILCHIMP                 DatasourceDtoPlatform = "MAILCHIMP"
	DatasourceDtoPlatformMAILGUN                   DatasourceDtoPlatform = "MAILGUN"
	DatasourceDtoPlatformMANDRILL                  DatasourceDtoPlatform = "MANDRILL"
	DatasourceDtoPlatformMANTA                     DatasourceDtoPlatform = "MANTA"
	DatasourceDtoPlatformMARIADB                   DatasourceDtoPlatform = "MARIADB"
	DatasourceDtoPlatformMARINSOFTWARE             DatasourceDtoPlatform = "MARIN_SOFTWARE"
	DatasourceDtoPlatformMARKETO                   DatasourceDtoPlatform = "MARKETO"
	DatasourceDtoPlatformMATTERMOST                DatasourceDtoPlatform = "MATTERMOST"
	DatasourceDtoPlatformMAVENLINK                 DatasourceDtoPlatform = "MAVENLINK"
	DatasourceDtoPlatformMAXIO                     DatasourceDtoPlatform = "MAXIO"
	DatasourceDtoPlatformMEDALLIA                  DatasourceDtoPlatform = "MEDALLIA"
	DatasourceDtoPlatformMETA                      DatasourceDtoPlatform = "META"
	DatasourceDtoPlatformMETABASE                  DatasourceDtoPlatform = "METABASE"
	DatasourceDtoPlatformMETAPHOR                  DatasourceDtoPlatform = "METAPHOR"
	DatasourceDtoPlatformMETAPLANE                 DatasourceDtoPlatform = "METAPLANE"
	DatasourceDtoPlatformMICROSOFT                 DatasourceDtoPlatform = "MICROSOFT"
	DatasourceDtoPlatformMICROSOFTAZUREBLOBSTORAGE DatasourceDtoPlatform = "MICROSOFT_AZURE_BLOB_STORAGE"
	DatasourceDtoPlatformMICROSOFTAZUREML          DatasourceDtoPlatform = "MICROSOFT_AZURE_ML"
	DatasourceDtoPlatformMICROSOFTDYNAMICS         DatasourceDtoPlatform = "MICROSOFT_DYNAMICS"
	DatasourceDtoPlatformMICROSOFTONEDRIVE         DatasourceDtoPlatform = "MICROSOFT_ONEDRIVE"
	DatasourceDtoPlatformMICROSOFTPURVIEW          DatasourceDtoPlatform = "MICROSOFT_PURVIEW"
	DatasourceDtoPlatformMICROSOFTTEAMS            DatasourceDtoPlatform = "MICROSOFT_TEAMS"
	DatasourceDtoPlatformMICROSTRATEGY             DatasourceDtoPlatform = "MICROSTRATEGY"
	DatasourceDtoPlatformMIXMAX                    DatasourceDtoPlatform = "MIXMAX"
	DatasourceDtoPlatformMIXPANEL                  DatasourceDtoPlatform = "MIXPANEL"
	DatasourceDtoPlatformMONDAYCOM                 DatasourceDtoPlatform = "MONDAY_COM"
	DatasourceDtoPlatformMONGODB                   DatasourceDtoPlatform = "MONGODB"
	DatasourceDtoPlatformMONTECARLO                DatasourceDtoPlatform = "MONTE_CARLO"
	DatasourceDtoPlatformMOUNTAIN                  DatasourceDtoPlatform = "MOUNTAIN"
	DatasourceDtoPlatformMSSQL                     DatasourceDtoPlatform = "MSSQL"
	DatasourceDtoPlatformMULESOFT                  DatasourceDtoPlatform = "MULESOFT"
	DatasourceDtoPlatformMUX                       DatasourceDtoPlatform = "MUX"
	DatasourceDtoPlatformMWAA                      DatasourceDtoPlatform = "MWAA"
	DatasourceDtoPlatformMYSQL                     DatasourceDtoPlatform = "MYSQL"
	DatasourceDtoPlatformNAMELY                    DatasourceDtoPlatform = "NAMELY"
	DatasourceDtoPlatformNCINO                     DatasourceDtoPlatform = "NCINO"
	DatasourceDtoPlatformNETSUITEANALYTICS         DatasourceDtoPlatform = "NETSUITE_ANALYTICS"
	DatasourceDtoPlatformNEWRELIC                  DatasourceDtoPlatform = "NEW_RELIC"
	DatasourceDtoPlatformNOTION                    DatasourceDtoPlatform = "NOTION"
	DatasourceDtoPlatformNYLAS                     DatasourceDtoPlatform = "NYLAS"
	DatasourceDtoPlatformOBSERVE                   DatasourceDtoPlatform = "OBSERVE"
	DatasourceDtoPlatformOCTOPAI                   DatasourceDtoPlatform = "OCTOPAI"
	DatasourceDtoPlatformOKTA                      DatasourceDtoPlatform = "OKTA"
	DatasourceDtoPlatformOPENAI                    DatasourceDtoPlatform = "OPEN_AI"
	DatasourceDtoPlatformOPENDATADC                DatasourceDtoPlatform = "OPEN_DATA_DC"
	DatasourceDtoPlatformOPENEXCHANGESRATES        DatasourceDtoPlatform = "OPEN_EXCHANGES_RATES"
	DatasourceDtoPlatformOPENSEARCH                DatasourceDtoPlatform = "OPEN_SEARCH"
	DatasourceDtoPlatformOPTIMIZELY                DatasourceDtoPlatform = "OPTIMIZELY"
	DatasourceDtoPlatformORACLE                    DatasourceDtoPlatform = "ORACLE"
	DatasourceDtoPlatformORBITCOMMUNITYPLATFORM    DatasourceDtoPlatform = "ORBIT_COMMUNITY_PLATFORM"
	DatasourceDtoPlatformORDWAY                    DatasourceDtoPlatform = "ORDWAY"
	DatasourceDtoPlatformORTTO                     DatasourceDtoPlatform = "ORTTO"
	DatasourceDtoPlatformOSCOMMERCE                DatasourceDtoPlatform = "OS_COMMERCE"
	DatasourceDtoPlatformOUTBRAIN                  DatasourceDtoPlatform = "OUTBRAIN"
	DatasourceDtoPlatformOUTREACH                  DatasourceDtoPlatform = "OUTREACH"
	DatasourceDtoPlatformOVALEDGE                  DatasourceDtoPlatform = "OVALEDGE"
	DatasourceDtoPlatformPAGERDUTY                 DatasourceDtoPlatform = "PAGERDUTY"
	DatasourceDtoPlatformPAGERSHIFT                DatasourceDtoPlatform = "PAGERSHIFT"
	DatasourceDtoPlatformPAYPAL                    DatasourceDtoPlatform = "PAYPAL"
	DatasourceDtoPlatformPENDO                     DatasourceDtoPlatform = "PENDO"
	DatasourceDtoPlatformPINGDOM                   DatasourceDtoPlatform = "PINGDOM"
	DatasourceDtoPlatformPINTEREST                 DatasourceDtoPlatform = "PINTEREST"
	DatasourceDtoPlatformPIPE17                    DatasourceDtoPlatform = "PIPE17"
	DatasourceDtoPlatformPIPEDRIVE                 DatasourceDtoPlatform = "PIPEDRIVE"
	DatasourceDtoPlatformPIVOTALTRACKER            DatasourceDtoPlatform = "PIVOTAL_TRACKER"
	DatasourceDtoPlatformPLAYVOX                   DatasourceDtoPlatform = "PLAYVOX"
	DatasourceDtoPlatformPOSTGRES                  DatasourceDtoPlatform = "POSTGRES"
	DatasourceDtoPlatformPOSTHOG                   DatasourceDtoPlatform = "POSTHOG"
	DatasourceDtoPlatformPOWERBI                   DatasourceDtoPlatform = "POWER_BI"
	DatasourceDtoPlatformPOWERSCHOOL               DatasourceDtoPlatform = "POWERSCHOOL"
	DatasourceDtoPlatformPREFECT                   DatasourceDtoPlatform = "PREFECT"
	DatasourceDtoPlatformPRESTASHOP                DatasourceDtoPlatform = "PRESTASHOP"
	DatasourceDtoPlatformPRESTO                    DatasourceDtoPlatform = "PRESTO"
	DatasourceDtoPlatformPRODUCTBOARD              DatasourceDtoPlatform = "PRODUCTBOARD"
	DatasourceDtoPlatformPYTHON                    DatasourceDtoPlatform = "PYTHON"
	DatasourceDtoPlatformQLIK                      DatasourceDtoPlatform = "QLIK"
	DatasourceDtoPlatformQUALAROO                  DatasourceDtoPlatform = "QUALAROO"
	DatasourceDtoPlatformQUALTRICS                 DatasourceDtoPlatform = "QUALTRICS"
	DatasourceDtoPlatformQUICKBOOKS                DatasourceDtoPlatform = "QUICKBOOKS"
	DatasourceDtoPlatformQUICKSIGHT                DatasourceDtoPlatform = "QUICKSIGHT"
	DatasourceDtoPlatformRAMP                      DatasourceDtoPlatform = "RAMP"
	DatasourceDtoPlatformRARIBLE                   DatasourceDtoPlatform = "RARIBLE"
	DatasourceDtoPlatformRECHARGE                  DatasourceDtoPlatform = "RECHARGE"
	DatasourceDtoPlatformRECURLY                   DatasourceDtoPlatform = "RECURLY"
	DatasourceDtoPlatformREDDIT                    DatasourceDtoPlatform = "REDDIT"
	DatasourceDtoPlatformREDSHIFT                  DatasourceDtoPlatform = "REDSHIFT"
	DatasourceDtoPlatformRELTIO                    DatasourceDtoPlatform = "RELTIO"
	DatasourceDtoPlatformREPLYIO                   DatasourceDtoPlatform = "REPLY_IO"
	DatasourceDtoPlatformRETAILNEXT                DatasourceDtoPlatform = "RETAILNEXT"
	DatasourceDtoPlatformRETENTLY                  DatasourceDtoPlatform = "RETENTLY"
	DatasourceDtoPlatformREVELSYSTEMS              DatasourceDtoPlatform = "REVEL_SYSTEMS"
	DatasourceDtoPlatformRINGCENTRAL               DatasourceDtoPlatform = "RINGCENTRAL"
	DatasourceDtoPlatformRIPPLING                  DatasourceDtoPlatform = "RIPPLING"
	DatasourceDtoPlatformROLLBAR                   DatasourceDtoPlatform = "ROLLBAR"
	DatasourceDtoPlatformROOTLY                    DatasourceDtoPlatform = "ROOTLY"
	DatasourceDtoPlatformS3                        DatasourceDtoPlatform = "S3"
	DatasourceDtoPlatformSAGEHR                    DatasourceDtoPlatform = "SAGE_HR"
	DatasourceDtoPlatformSAGEINTACCT               DatasourceDtoPlatform = "SAGE_INTACCT"
	DatasourceDtoPlatformSAILTHRU                  DatasourceDtoPlatform = "SAILTHRU"
	DatasourceDtoPlatformSALESFORCE                DatasourceDtoPlatform = "SALESFORCE"
	DatasourceDtoPlatformSALESLOFT                 DatasourceDtoPlatform = "SALESLOFT"
	DatasourceDtoPlatformSALSIFY                   DatasourceDtoPlatform = "SALSIFY"
	DatasourceDtoPlatformSAMSARA                   DatasourceDtoPlatform = "SAMSARA"
	DatasourceDtoPlatformSAP                       DatasourceDtoPlatform = "SAP"
	DatasourceDtoPlatformSAPCONCUR                 DatasourceDtoPlatform = "SAP_CONCUR"
	DatasourceDtoPlatformSCORM                     DatasourceDtoPlatform = "SCORM"
	DatasourceDtoPlatformSECODA                    DatasourceDtoPlatform = "SECODA"
	DatasourceDtoPlatformSECURITYJOURNEY           DatasourceDtoPlatform = "SECURITY_JOURNEY"
	DatasourceDtoPlatformSEGMENT                   DatasourceDtoPlatform = "SEGMENT"
	DatasourceDtoPlatformSELECTSTAR                DatasourceDtoPlatform = "SELECT_STAR"
	DatasourceDtoPlatformSENDGRID                  DatasourceDtoPlatform = "SENDGRID"
	DatasourceDtoPlatformSERVICENOW                DatasourceDtoPlatform = "SERVICE_NOW"
	DatasourceDtoPlatformSFTP                      DatasourceDtoPlatform = "SFTP"
	DatasourceDtoPlatformSHAREPOINT                DatasourceDtoPlatform = "SHAREPOINT"
	DatasourceDtoPlatformSHARETRIBE                DatasourceDtoPlatform = "SHARETRIBE"
	DatasourceDtoPlatformSHIPHERO                  DatasourceDtoPlatform = "SHIPHERO"
	DatasourceDtoPlatformSHIPSTATION               DatasourceDtoPlatform = "SHIPSTATION"
	DatasourceDtoPlatformSHOPIFY                   DatasourceDtoPlatform = "SHOPIFY"
	DatasourceDtoPlatformSHOPWARE                  DatasourceDtoPlatform = "SHOPWARE"
	DatasourceDtoPlatformSHORTIO                   DatasourceDtoPlatform = "SHORT_IO"
	DatasourceDtoPlatformSIFFLET                   DatasourceDtoPlatform = "SIFFLET"
	DatasourceDtoPlatformSIGMA                     DatasourceDtoPlatform = "SIGMA"
	DatasourceDtoPlatformSIMPLECAST                DatasourceDtoPlatform = "SIMPLECAST"
	DatasourceDtoPlatformSIMPLESAT                 DatasourceDtoPlatform = "SIMPLESAT"
	DatasourceDtoPlatformSINGLESTORE               DatasourceDtoPlatform = "SINGLESTORE"
	DatasourceDtoPlatformSISENSE                   DatasourceDtoPlatform = "SISENSE"
	DatasourceDtoPlatformSIXSENSE                  DatasourceDtoPlatform = "SIXSENSE"
	DatasourceDtoPlatformSKILLJAR                  DatasourceDtoPlatform = "SKILLJAR"
	DatasourceDtoPlatformSKUVAULT                  DatasourceDtoPlatform = "SKUVAULT"
	DatasourceDtoPlatformSLAB                      DatasourceDtoPlatform = "SLAB"
	DatasourceDtoPlatformSLACK                     DatasourceDtoPlatform = "SLACK"
	DatasourceDtoPlatformSMADEX                    DatasourceDtoPlatform = "SMADEX"
	DatasourceDtoPlatformSNAPCHAT                  DatasourceDtoPlatform = "SNAPCHAT"
	DatasourceDtoPlatformSNOWFLAKE                 DatasourceDtoPlatform = "SNOWFLAKE"
	DatasourceDtoPlatformSNOWPLOW                  DatasourceDtoPlatform = "SNOWPLOW"
	DatasourceDtoPlatformSODA                      DatasourceDtoPlatform = "SODA"
	DatasourceDtoPlatformSONARQUBE                 DatasourceDtoPlatform = "SONARQUBE"
	DatasourceDtoPlatformSPARKPROCESS              DatasourceDtoPlatform = "SPARK_PROCESS"
	DatasourceDtoPlatformSPLITIO                   DatasourceDtoPlatform = "SPLIT_IO"
	DatasourceDtoPlatformSPLUNK                    DatasourceDtoPlatform = "SPLUNK"
	DatasourceDtoPlatformSPOTIFY                   DatasourceDtoPlatform = "SPOTIFY"
	DatasourceDtoPlatformSPREECOMMERCE             DatasourceDtoPlatform = "SPREE_COMMERCE"
	DatasourceDtoPlatformSPROUTSOCIAL              DatasourceDtoPlatform = "SPROUT_SOCIAL"
	DatasourceDtoPlatformSQUARE                    DatasourceDtoPlatform = "SQUARE"
	DatasourceDtoPlatformSQUARESPACE               DatasourceDtoPlatform = "SQUARESPACE"
	DatasourceDtoPlatformSTACKADAPT                DatasourceDtoPlatform = "STACK_ADAPT"
	DatasourceDtoPlatformSTATSIG                   DatasourceDtoPlatform = "STATSIG"
	DatasourceDtoPlatformSTITCH                    DatasourceDtoPlatform = "STITCH"
	DatasourceDtoPlatformSTRIPE                    DatasourceDtoPlatform = "STRIPE"
	DatasourceDtoPlatformSTYLIGHT                  DatasourceDtoPlatform = "STYLIGHT"
	DatasourceDtoPlatformSUBSCRIPT                 DatasourceDtoPlatform = "SUBSCRIPT"
	DatasourceDtoPlatformSYNAPSE                   DatasourceDtoPlatform = "SYNAPSE"
	DatasourceDtoPlatformTABLEAU                   DatasourceDtoPlatform = "TABLEAU"
	DatasourceDtoPlatformTABOOLA                   DatasourceDtoPlatform = "TABOOLA"
	DatasourceDtoPlatformTALEND                    DatasourceDtoPlatform = "TALEND"
	DatasourceDtoPlatformTALKDESK                  DatasourceDtoPlatform = "TALKDESK"
	DatasourceDtoPlatformTALKWALKER                DatasourceDtoPlatform = "TALKWALKER"
	DatasourceDtoPlatformTEAMWORKCOM               DatasourceDtoPlatform = "TEAMWORK_COM"
	DatasourceDtoPlatformTEMPOIO                   DatasourceDtoPlatform = "TEMPO_IO"
	DatasourceDtoPlatformTERADATA                  DatasourceDtoPlatform = "TERADATA"
	DatasourceDtoPlatformTERRAFORM                 DatasourceDtoPlatform = "TERRAFORM"
	DatasourceDtoPlatformTHETRADEDESK              DatasourceDtoPlatform = "THE_TRADE_DESK"
	DatasourceDtoPlatformTHOUGHTSPOT               DatasourceDtoPlatform = "THOUGHT_SPOT"
	DatasourceDtoPlatformTHREESIXTYLEARNING        DatasourceDtoPlatform = "THREESIXTYLEARNING"
	DatasourceDtoPlatformTIKTOK                    DatasourceDtoPlatform = "TIKTOK"
	DatasourceDtoPlatformTOGGL                     DatasourceDtoPlatform = "TOGGL"
	DatasourceDtoPlatformTRANSCEND                 DatasourceDtoPlatform = "TRANSCEND"
	DatasourceDtoPlatformTRELLO                    DatasourceDtoPlatform = "TRELLO"
	DatasourceDtoPlatformTRINET                    DatasourceDtoPlatform = "TRINET"
	DatasourceDtoPlatformTRISOLUTE                 DatasourceDtoPlatform = "TRISOLUTE"
	DatasourceDtoPlatformTWILIO                    DatasourceDtoPlatform = "TWILIO"
	DatasourceDtoPlatformTYPEFORM                  DatasourceDtoPlatform = "TYPEFORM"
	DatasourceDtoPlatformUNKNOWN                   DatasourceDtoPlatform = "UNKNOWN"
	DatasourceDtoPlatformUPLAND                    DatasourceDtoPlatform = "UPLAND"
	DatasourceDtoPlatformUSERVOICE                 DatasourceDtoPlatform = "USERVOICE"
	DatasourceDtoPlatformVALIDIO                   DatasourceDtoPlatform = "VALIDIO"
	DatasourceDtoPlatformVEEVA                     DatasourceDtoPlatform = "VEEVA"
	DatasourceDtoPlatformVERIZONMEDIA              DatasourceDtoPlatform = "VERIZON_MEDIA"
	DatasourceDtoPlatformVITALLY                   DatasourceDtoPlatform = "VITALLY"
	DatasourceDtoPlatformVONAGE                    DatasourceDtoPlatform = "VONAGE"
	DatasourceDtoPlatformVUETIFY                   DatasourceDtoPlatform = "VUETIFY"
	DatasourceDtoPlatformWEBHOOKS                  DatasourceDtoPlatform = "WEBHOOKS"
	DatasourceDtoPlatformWEBSCRAPER                DatasourceDtoPlatform = "WEB_SCRAPER"
	DatasourceDtoPlatformWHENIWORK                 DatasourceDtoPlatform = "WHEN_I_WORK"
	DatasourceDtoPlatformWHEREFOUR                 DatasourceDtoPlatform = "WHEREFOUR"
	DatasourceDtoPlatformWIKIPEDIA                 DatasourceDtoPlatform = "WIKIPEDIA"
	DatasourceDtoPlatformWOOCOMMERCE               DatasourceDtoPlatform = "WOOCOMMERCE"
	DatasourceDtoPlatformWORDPRESS                 DatasourceDtoPlatform = "WORDPRESS"
	DatasourceDtoPlatformWORKABLE                  DatasourceDtoPlatform = "WORKABLE"
	DatasourceDtoPlatformWORKDAY                   DatasourceDtoPlatform = "WORKDAY"
	DatasourceDtoPlatformWORKFLOWMAX               DatasourceDtoPlatform = "WORKFLOW_MAX"
	DatasourceDtoPlatformWRIKE                     DatasourceDtoPlatform = "WRIKE"
	DatasourceDtoPlatformX                         DatasourceDtoPlatform = "X"
	DatasourceDtoPlatformXERO                      DatasourceDtoPlatform = "XERO"
	DatasourceDtoPlatformXRAY                      DatasourceDtoPlatform = "XRAY"
	DatasourceDtoPlatformYAHOO                     DatasourceDtoPlatform = "YAHOO"
	DatasourceDtoPlatformYOTPO                     DatasourceDtoPlatform = "YOTPO"
	DatasourceDtoPlatformYOUTUBE                   DatasourceDtoPlatform = "YOUTUBE"
	DatasourceDtoPlatformZEENEA                    DatasourceDtoPlatform = "ZEENEA"
	DatasourceDtoPlatformZENCART                   DatasourceDtoPlatform = "ZEN_CART"
	DatasourceDtoPlatformZENDESKCHAT               DatasourceDtoPlatform = "ZENDESK_CHAT"
	DatasourceDtoPlatformZENDESKSELL               DatasourceDtoPlatform = "ZENDESK_SELL"
	DatasourceDtoPlatformZENDESKSUNSHINE           DatasourceDtoPlatform = "ZENDESK_SUNSHINE"
	DatasourceDtoPlatformZENDESKSUPPORT            DatasourceDtoPlatform = "ZENDESK_SUPPORT"
	DatasourceDtoPlatformZINGTREE                  DatasourceDtoPlatform = "ZINGTREE"
	DatasourceDtoPlatformZOHOBOOKS                 DatasourceDtoPlatform = "ZOHO_BOOKS"
	DatasourceDtoPlatformZOHOCAMPAIGNS             DatasourceDtoPlatform = "ZOHO_CAMPAIGNS"
	DatasourceDtoPlatformZOHOCRM                   DatasourceDtoPlatform = "ZOHO_CRM"
	DatasourceDtoPlatformZOOM                      DatasourceDtoPlatform = "ZOOM"
	DatasourceDtoPlatformZUORA                     DatasourceDtoPlatform = "ZUORA"
)

// Defines values for DatasourceIngestionRunDtoLastStatus.
const (
	DatasourceIngestionRunDtoLastStatusFAILURE                         DatasourceIngestionRunDtoLastStatus = "FAILURE"
	DatasourceIngestionRunDtoLastStatusPENDING                         DatasourceIngestionRunDtoLastStatus = "PENDING"
	DatasourceIngestionRunDtoLastStatusRUNNING                         DatasourceIngestionRunDtoLastStatus = "RUNNING"
	DatasourceIngestionRunDtoLastStatusSKIPPEDDATASOURCEALREADYRUNNING DatasourceIngestionRunDtoLastStatus = "SKIPPED_DATASOURCE_ALREADY_RUNNING"
	DatasourceIngestionRunDtoLastStatusSUCCESS                         DatasourceIngestionRunDtoLastStatus = "SUCCESS"
)

// Defines values for DatasourceProviderDtoType.
const (
	DatasourceProviderDtoTypeACCESSTOKEN DatasourceProviderDtoType = "ACCESS_TOKEN"
	DatasourceProviderDtoTypeDATASOURCE  DatasourceProviderDtoType = "DATASOURCE"
	DatasourceProviderDtoTypeGENERIC     DatasourceProviderDtoType = "GENERIC"
	DatasourceProviderDtoTypeUSER        DatasourceProviderDtoType = "USER"
)

// Defines values for DeclaredAssetDetailsDtoLineagePlatform.
const (
	DeclaredAssetDetailsDtoLineagePlatformACCELDATA                 DeclaredAssetDetailsDtoLineagePlatform = "ACCELDATA"
	DeclaredAssetDetailsDtoLineagePlatformACRYLDATA                 DeclaredAssetDetailsDtoLineagePlatform = "ACRYL_DATA"
	DeclaredAssetDetailsDtoLineagePlatformACTIANVECTOR              DeclaredAssetDetailsDtoLineagePlatform = "ACTIAN_VECTOR"
	DeclaredAssetDetailsDtoLineagePlatformACTIVECAMPAIGN            DeclaredAssetDetailsDtoLineagePlatform = "ACTIVE_CAMPAIGN"
	DeclaredAssetDetailsDtoLineagePlatformADA                       DeclaredAssetDetailsDtoLineagePlatform = "ADA"
	DeclaredAssetDetailsDtoLineagePlatformADJUST                    DeclaredAssetDetailsDtoLineagePlatform = "ADJUST"
	DeclaredAssetDetailsDtoLineagePlatformADOBE                     DeclaredAssetDetailsDtoLineagePlatform = "ADOBE"
	DeclaredAssetDetailsDtoLineagePlatformADPWFN                    DeclaredAssetDetailsDtoLineagePlatform = "ADP_WFN"
	DeclaredAssetDetailsDtoLineagePlatformADROLL                    DeclaredAssetDetailsDtoLineagePlatform = "ADROLL"
	DeclaredAssetDetailsDtoLineagePlatformAFFINITY                  DeclaredAssetDetailsDtoLineagePlatform = "AFFINITY"
	DeclaredAssetDetailsDtoLineagePlatformAIRBYTE                   DeclaredAssetDetailsDtoLineagePlatform = "AIRBYTE"
	DeclaredAssetDetailsDtoLineagePlatformAIRCALL                   DeclaredAssetDetailsDtoLineagePlatform = "AIRCALL"
	DeclaredAssetDetailsDtoLineagePlatformAIRFLOW                   DeclaredAssetDetailsDtoLineagePlatform = "AIRFLOW"
	DeclaredAssetDetailsDtoLineagePlatformAIRTABLE                  DeclaredAssetDetailsDtoLineagePlatform = "AIRTABLE"
	DeclaredAssetDetailsDtoLineagePlatformALATION                   DeclaredAssetDetailsDtoLineagePlatform = "ALATION"
	DeclaredAssetDetailsDtoLineagePlatformALCHEMER                  DeclaredAssetDetailsDtoLineagePlatform = "ALCHEMER"
	DeclaredAssetDetailsDtoLineagePlatformALVINAI                   DeclaredAssetDetailsDtoLineagePlatform = "ALVIN_AI"
	DeclaredAssetDetailsDtoLineagePlatformAMAZON                    DeclaredAssetDetailsDtoLineagePlatform = "AMAZON"
	DeclaredAssetDetailsDtoLineagePlatformAMAZONCLOUDFRONT          DeclaredAssetDetailsDtoLineagePlatform = "AMAZON_CLOUDFRONT"
	DeclaredAssetDetailsDtoLineagePlatformAMAZONDOCUMENTDB          DeclaredAssetDetailsDtoLineagePlatform = "AMAZON_DOCUMENTDB"
	DeclaredAssetDetailsDtoLineagePlatformAMAZONDYNAMODB            DeclaredAssetDetailsDtoLineagePlatform = "AMAZON_DYNAMODB"
	DeclaredAssetDetailsDtoLineagePlatformAMAZONFIREHOSE            DeclaredAssetDetailsDtoLineagePlatform = "AMAZON_FIREHOSE"
	DeclaredAssetDetailsDtoLineagePlatformAMAZONSAGEMAKER           DeclaredAssetDetailsDtoLineagePlatform = "AMAZON_SAGEMAKER"
	DeclaredAssetDetailsDtoLineagePlatformAMAZONSELLINGPARTNER      DeclaredAssetDetailsDtoLineagePlatform = "AMAZON_SELLING_PARTNER"
	DeclaredAssetDetailsDtoLineagePlatformAMPLITUDE                 DeclaredAssetDetailsDtoLineagePlatform = "AMPLITUDE"
	DeclaredAssetDetailsDtoLineagePlatformANAPLAN                   DeclaredAssetDetailsDtoLineagePlatform = "ANAPLAN"
	DeclaredAssetDetailsDtoLineagePlatformANOMALO                   DeclaredAssetDetailsDtoLineagePlatform = "ANOMALO"
	DeclaredAssetDetailsDtoLineagePlatformAPACHEKAFKA               DeclaredAssetDetailsDtoLineagePlatform = "APACHE_KAFKA"
	DeclaredAssetDetailsDtoLineagePlatformAPACHESPARK               DeclaredAssetDetailsDtoLineagePlatform = "APACHE_SPARK"
	DeclaredAssetDetailsDtoLineagePlatformAPPCUES                   DeclaredAssetDetailsDtoLineagePlatform = "APPCUES"
	DeclaredAssetDetailsDtoLineagePlatformAPPFIGURES                DeclaredAssetDetailsDtoLineagePlatform = "APPFIGURES"
	DeclaredAssetDetailsDtoLineagePlatformAPPLE                     DeclaredAssetDetailsDtoLineagePlatform = "APPLE"
	DeclaredAssetDetailsDtoLineagePlatformAPPLEAPPSTORE             DeclaredAssetDetailsDtoLineagePlatform = "APPLE_APP_STORE"
	DeclaredAssetDetailsDtoLineagePlatformAPPSFLYER                 DeclaredAssetDetailsDtoLineagePlatform = "APPSFLYER"
	DeclaredAssetDetailsDtoLineagePlatformASANA                     DeclaredAssetDetailsDtoLineagePlatform = "ASANA"
	DeclaredAssetDetailsDtoLineagePlatformASSEMBLED                 DeclaredAssetDetailsDtoLineagePlatform = "ASSEMBLED"
	DeclaredAssetDetailsDtoLineagePlatformATHENA                    DeclaredAssetDetailsDtoLineagePlatform = "ATHENA"
	DeclaredAssetDetailsDtoLineagePlatformATLAN                     DeclaredAssetDetailsDtoLineagePlatform = "ATLAN"
	DeclaredAssetDetailsDtoLineagePlatformATLASSIANCONFLUENCE       DeclaredAssetDetailsDtoLineagePlatform = "ATLASSIAN_CONFLUENCE"
	DeclaredAssetDetailsDtoLineagePlatformATLASSIANJIRA             DeclaredAssetDetailsDtoLineagePlatform = "ATLASSIAN_JIRA"
	DeclaredAssetDetailsDtoLineagePlatformATLASSIANOPSGENIE         DeclaredAssetDetailsDtoLineagePlatform = "ATLASSIAN_OPSGENIE"
	DeclaredAssetDetailsDtoLineagePlatformAUTH0                     DeclaredAssetDetailsDtoLineagePlatform = "AUTH0"
	DeclaredAssetDetailsDtoLineagePlatformAUTODESKBIM360            DeclaredAssetDetailsDtoLineagePlatform = "AUTODESK_BIM_360"
	DeclaredAssetDetailsDtoLineagePlatformAWIN                      DeclaredAssetDetailsDtoLineagePlatform = "AWIN"
	DeclaredAssetDetailsDtoLineagePlatformAWSCLOUDTRAIL             DeclaredAssetDetailsDtoLineagePlatform = "AWS_CLOUDTRAIL"
	DeclaredAssetDetailsDtoLineagePlatformAWSCOSTEXPLORER           DeclaredAssetDetailsDtoLineagePlatform = "AWS_COST_EXPLORER"
	DeclaredAssetDetailsDtoLineagePlatformAWSINVENTORY              DeclaredAssetDetailsDtoLineagePlatform = "AWS_INVENTORY"
	DeclaredAssetDetailsDtoLineagePlatformAWSLAMBDA                 DeclaredAssetDetailsDtoLineagePlatform = "AWS_LAMBDA"
	DeclaredAssetDetailsDtoLineagePlatformAZURE                     DeclaredAssetDetailsDtoLineagePlatform = "AZURE"
	DeclaredAssetDetailsDtoLineagePlatformBALLOTREADY               DeclaredAssetDetailsDtoLineagePlatform = "BALLOT_READY"
	DeclaredAssetDetailsDtoLineagePlatformBAMBOOHR                  DeclaredAssetDetailsDtoLineagePlatform = "BAMBOOHR"
	DeclaredAssetDetailsDtoLineagePlatformBIGCOMMERCE               DeclaredAssetDetailsDtoLineagePlatform = "BIGCOMMERCE"
	DeclaredAssetDetailsDtoLineagePlatformBIGEYE                    DeclaredAssetDetailsDtoLineagePlatform = "BIGEYE"
	DeclaredAssetDetailsDtoLineagePlatformBIGQUERY                  DeclaredAssetDetailsDtoLineagePlatform = "BIGQUERY"
	DeclaredAssetDetailsDtoLineagePlatformBILLINGPLATFORM           DeclaredAssetDetailsDtoLineagePlatform = "BILLINGPLATFORM"
	DeclaredAssetDetailsDtoLineagePlatformBIRDEYE                   DeclaredAssetDetailsDtoLineagePlatform = "BIRDEYE"
	DeclaredAssetDetailsDtoLineagePlatformBLACKBOARD                DeclaredAssetDetailsDtoLineagePlatform = "BLACKBOARD"
	DeclaredAssetDetailsDtoLineagePlatformBOX                       DeclaredAssetDetailsDtoLineagePlatform = "BOX"
	DeclaredAssetDetailsDtoLineagePlatformBRAINTREE                 DeclaredAssetDetailsDtoLineagePlatform = "BRAINTREE"
	DeclaredAssetDetailsDtoLineagePlatformBRAZE                     DeclaredAssetDetailsDtoLineagePlatform = "BRAZE"
	DeclaredAssetDetailsDtoLineagePlatformBREVO                     DeclaredAssetDetailsDtoLineagePlatform = "BREVO"
	DeclaredAssetDetailsDtoLineagePlatformBREX                      DeclaredAssetDetailsDtoLineagePlatform = "BREX"
	DeclaredAssetDetailsDtoLineagePlatformBUILDKITE                 DeclaredAssetDetailsDtoLineagePlatform = "BUILDKITE"
	DeclaredAssetDetailsDtoLineagePlatformBUZZSPROUT                DeclaredAssetDetailsDtoLineagePlatform = "BUZZSPROUT"
	DeclaredAssetDetailsDtoLineagePlatformCALENDLY                  DeclaredAssetDetailsDtoLineagePlatform = "CALENDLY"
	DeclaredAssetDetailsDtoLineagePlatformCAMPAIGNMONITOR           DeclaredAssetDetailsDtoLineagePlatform = "CAMPAIGN_MONITOR"
	DeclaredAssetDetailsDtoLineagePlatformCANNY                     DeclaredAssetDetailsDtoLineagePlatform = "CANNY"
	DeclaredAssetDetailsDtoLineagePlatformCANVAS                    DeclaredAssetDetailsDtoLineagePlatform = "CANVAS"
	DeclaredAssetDetailsDtoLineagePlatformCAPTERRA                  DeclaredAssetDetailsDtoLineagePlatform = "CAPTERRA"
	DeclaredAssetDetailsDtoLineagePlatformCASTORDOC                 DeclaredAssetDetailsDtoLineagePlatform = "CASTOR_DOC"
	DeclaredAssetDetailsDtoLineagePlatformCENSUS                    DeclaredAssetDetailsDtoLineagePlatform = "CENSUS"
	DeclaredAssetDetailsDtoLineagePlatformCERTINIA                  DeclaredAssetDetailsDtoLineagePlatform = "CERTINIA"
	DeclaredAssetDetailsDtoLineagePlatformCHAMELEON                 DeclaredAssetDetailsDtoLineagePlatform = "CHAMELEON"
	DeclaredAssetDetailsDtoLineagePlatformCHANNELADVISOR            DeclaredAssetDetailsDtoLineagePlatform = "CHANNEL_ADVISOR"
	DeclaredAssetDetailsDtoLineagePlatformCHARGEBEE                 DeclaredAssetDetailsDtoLineagePlatform = "CHARGEBEE"
	DeclaredAssetDetailsDtoLineagePlatformCHARGEDESK                DeclaredAssetDetailsDtoLineagePlatform = "CHARGEDESK"
	DeclaredAssetDetailsDtoLineagePlatformCHARTMOGUL                DeclaredAssetDetailsDtoLineagePlatform = "CHARTMOGUL"
	DeclaredAssetDetailsDtoLineagePlatformCHORUSAI                  DeclaredAssetDetailsDtoLineagePlatform = "CHORUS_AI"
	DeclaredAssetDetailsDtoLineagePlatformCHURNKEY                  DeclaredAssetDetailsDtoLineagePlatform = "CHURNKEY"
	DeclaredAssetDetailsDtoLineagePlatformCHURNZERO                 DeclaredAssetDetailsDtoLineagePlatform = "CHURNZERO"
	DeclaredAssetDetailsDtoLineagePlatformCIMIS                     DeclaredAssetDetailsDtoLineagePlatform = "CIMIS"
	DeclaredAssetDetailsDtoLineagePlatformCIN7                      DeclaredAssetDetailsDtoLineagePlatform = "CIN7"
	DeclaredAssetDetailsDtoLineagePlatformCIRCLECI                  DeclaredAssetDetailsDtoLineagePlatform = "CIRCLE_CI"
	DeclaredAssetDetailsDtoLineagePlatformCLARI                     DeclaredAssetDetailsDtoLineagePlatform = "CLARI"
	DeclaredAssetDetailsDtoLineagePlatformCLICKUP                   DeclaredAssetDetailsDtoLineagePlatform = "CLICKUP"
	DeclaredAssetDetailsDtoLineagePlatformCLIFFAI                   DeclaredAssetDetailsDtoLineagePlatform = "CLIFF_AI"
	DeclaredAssetDetailsDtoLineagePlatformCLOSE                     DeclaredAssetDetailsDtoLineagePlatform = "CLOSE"
	DeclaredAssetDetailsDtoLineagePlatformCOLLIBRA                  DeclaredAssetDetailsDtoLineagePlatform = "COLLIBRA"
	DeclaredAssetDetailsDtoLineagePlatformCOMMERCETOOLS             DeclaredAssetDetailsDtoLineagePlatform = "COMMERCETOOLS"
	DeclaredAssetDetailsDtoLineagePlatformCOMPOSER                  DeclaredAssetDetailsDtoLineagePlatform = "COMPOSER"
	DeclaredAssetDetailsDtoLineagePlatformCONFLUENTCLOUD            DeclaredAssetDetailsDtoLineagePlatform = "CONFLUENT_CLOUD"
	DeclaredAssetDetailsDtoLineagePlatformCONTRASTSECURITY          DeclaredAssetDetailsDtoLineagePlatform = "CONTRAST_SECURITY"
	DeclaredAssetDetailsDtoLineagePlatformCOUPA                     DeclaredAssetDetailsDtoLineagePlatform = "COUPA"
	DeclaredAssetDetailsDtoLineagePlatformCRITEO                    DeclaredAssetDetailsDtoLineagePlatform = "CRITEO"
	DeclaredAssetDetailsDtoLineagePlatformCROSSBEAM                 DeclaredAssetDetailsDtoLineagePlatform = "CROSSBEAM"
	DeclaredAssetDetailsDtoLineagePlatformCRUNCHBASE                DeclaredAssetDetailsDtoLineagePlatform = "CRUNCHBASE"
	DeclaredAssetDetailsDtoLineagePlatformCUSTOMERIO                DeclaredAssetDetailsDtoLineagePlatform = "CUSTOMER_IO"
	DeclaredAssetDetailsDtoLineagePlatformD2LBRIGHTSPACE            DeclaredAssetDetailsDtoLineagePlatform = "D2L_BRIGHTSPACE"
	DeclaredAssetDetailsDtoLineagePlatformDAGSTER                   DeclaredAssetDetailsDtoLineagePlatform = "DAGSTER"
	DeclaredAssetDetailsDtoLineagePlatformDATABAND                  DeclaredAssetDetailsDtoLineagePlatform = "DATABAND"
	DeclaredAssetDetailsDtoLineagePlatformDATABRICKS                DeclaredAssetDetailsDtoLineagePlatform = "DATABRICKS"
	DeclaredAssetDetailsDtoLineagePlatformDATADOG                   DeclaredAssetDetailsDtoLineagePlatform = "DATADOG"
	DeclaredAssetDetailsDtoLineagePlatformDATAEDO                   DeclaredAssetDetailsDtoLineagePlatform = "DATAEDO"
	DeclaredAssetDetailsDtoLineagePlatformDATAFOLD                  DeclaredAssetDetailsDtoLineagePlatform = "DATAFOLD"
	DeclaredAssetDetailsDtoLineagePlatformDATAGALAXY                DeclaredAssetDetailsDtoLineagePlatform = "DATAGALAXY"
	DeclaredAssetDetailsDtoLineagePlatformDATAHUB                   DeclaredAssetDetailsDtoLineagePlatform = "DATAHUB"
	DeclaredAssetDetailsDtoLineagePlatformDATAIKU                   DeclaredAssetDetailsDtoLineagePlatform = "DATAIKU"
	DeclaredAssetDetailsDtoLineagePlatformDATAWORLD                 DeclaredAssetDetailsDtoLineagePlatform = "DATA_WORLD"
	DeclaredAssetDetailsDtoLineagePlatformDB2                       DeclaredAssetDetailsDtoLineagePlatform = "DB2"
	DeclaredAssetDetailsDtoLineagePlatformDBT                       DeclaredAssetDetailsDtoLineagePlatform = "DBT"
	DeclaredAssetDetailsDtoLineagePlatformDBTCLOUD                  DeclaredAssetDetailsDtoLineagePlatform = "DBTCLOUD"
	DeclaredAssetDetailsDtoLineagePlatformDCLLOGISTICS              DeclaredAssetDetailsDtoLineagePlatform = "DCL_LOGISTICS"
	DeclaredAssetDetailsDtoLineagePlatformDEAR                      DeclaredAssetDetailsDtoLineagePlatform = "DEAR"
	DeclaredAssetDetailsDtoLineagePlatformDECUBE                    DeclaredAssetDetailsDtoLineagePlatform = "DECUBE"
	DeclaredAssetDetailsDtoLineagePlatformDELIGHTED                 DeclaredAssetDetailsDtoLineagePlatform = "DELIGHTED"
	DeclaredAssetDetailsDtoLineagePlatformDEPUTY                    DeclaredAssetDetailsDtoLineagePlatform = "DEPUTY"
	DeclaredAssetDetailsDtoLineagePlatformDESTINI                   DeclaredAssetDetailsDtoLineagePlatform = "DESTINI"
	DeclaredAssetDetailsDtoLineagePlatformDIXA                      DeclaredAssetDetailsDtoLineagePlatform = "DIXA"
	DeclaredAssetDetailsDtoLineagePlatformDOCEBO                    DeclaredAssetDetailsDtoLineagePlatform = "DOCEBO"
	DeclaredAssetDetailsDtoLineagePlatformDRATA                     DeclaredAssetDetailsDtoLineagePlatform = "DRATA"
	DeclaredAssetDetailsDtoLineagePlatformDRIFT                     DeclaredAssetDetailsDtoLineagePlatform = "DRIFT"
	DeclaredAssetDetailsDtoLineagePlatformDRIP                      DeclaredAssetDetailsDtoLineagePlatform = "DRIP"
	DeclaredAssetDetailsDtoLineagePlatformDROPBOX                   DeclaredAssetDetailsDtoLineagePlatform = "DROPBOX"
	DeclaredAssetDetailsDtoLineagePlatformDUOPLANE                  DeclaredAssetDetailsDtoLineagePlatform = "DUOPLANE"
	DeclaredAssetDetailsDtoLineagePlatformEASYPOST                  DeclaredAssetDetailsDtoLineagePlatform = "EASY_POST"
	DeclaredAssetDetailsDtoLineagePlatformECONOMIC                  DeclaredAssetDetailsDtoLineagePlatform = "E_CONOMIC"
	DeclaredAssetDetailsDtoLineagePlatformELASTICSEARCH             DeclaredAssetDetailsDtoLineagePlatform = "ELASTICSEARCH"
	DeclaredAssetDetailsDtoLineagePlatformELEMENTARY                DeclaredAssetDetailsDtoLineagePlatform = "ELEMENTARY"
	DeclaredAssetDetailsDtoLineagePlatformELLUCIAN                  DeclaredAssetDetailsDtoLineagePlatform = "ELLUCIAN"
	DeclaredAssetDetailsDtoLineagePlatformELOQUA                    DeclaredAssetDetailsDtoLineagePlatform = "ELOQUA"
	DeclaredAssetDetailsDtoLineagePlatformEMAIL                     DeclaredAssetDetailsDtoLineagePlatform = "EMAIL"
	DeclaredAssetDetailsDtoLineagePlatformEMPLOYMENTHERO            DeclaredAssetDetailsDtoLineagePlatform = "EMPLOYMENT_HERO"
	DeclaredAssetDetailsDtoLineagePlatformEPICORPROPHET21           DeclaredAssetDetailsDtoLineagePlatform = "EPICOR_PROPHET_21"
	DeclaredAssetDetailsDtoLineagePlatformEVENTBRITE                DeclaredAssetDetailsDtoLineagePlatform = "EVENTBRITE"
	DeclaredAssetDetailsDtoLineagePlatformEVERHOUR                  DeclaredAssetDetailsDtoLineagePlatform = "EVERHOUR"
	DeclaredAssetDetailsDtoLineagePlatformEXCEL                     DeclaredAssetDetailsDtoLineagePlatform = "EXCEL"
	DeclaredAssetDetailsDtoLineagePlatformEXPENSIFY                 DeclaredAssetDetailsDtoLineagePlatform = "EXPENSIFY"
	DeclaredAssetDetailsDtoLineagePlatformFACEBOOK                  DeclaredAssetDetailsDtoLineagePlatform = "FACEBOOK"
	DeclaredAssetDetailsDtoLineagePlatformFIFTEENFIVE               DeclaredAssetDetailsDtoLineagePlatform = "FIFTEENFIVE"
	DeclaredAssetDetailsDtoLineagePlatformFIGMA                     DeclaredAssetDetailsDtoLineagePlatform = "FIGMA"
	DeclaredAssetDetailsDtoLineagePlatformFIREBASE                  DeclaredAssetDetailsDtoLineagePlatform = "FIREBASE"
	DeclaredAssetDetailsDtoLineagePlatformFIREBOLT                  DeclaredAssetDetailsDtoLineagePlatform = "FIREBOLT"
	DeclaredAssetDetailsDtoLineagePlatformFIVETRAN                  DeclaredAssetDetailsDtoLineagePlatform = "FIVETRAN"
	DeclaredAssetDetailsDtoLineagePlatformFLEXPORT                  DeclaredAssetDetailsDtoLineagePlatform = "FLEXPORT"
	DeclaredAssetDetailsDtoLineagePlatformFORJ                      DeclaredAssetDetailsDtoLineagePlatform = "FORJ"
	DeclaredAssetDetailsDtoLineagePlatformFOUNTAIN                  DeclaredAssetDetailsDtoLineagePlatform = "FOUNTAIN"
	DeclaredAssetDetailsDtoLineagePlatformFREIGHTVIEW               DeclaredAssetDetailsDtoLineagePlatform = "FREIGHTVIEW"
	DeclaredAssetDetailsDtoLineagePlatformFRESHBOOKS                DeclaredAssetDetailsDtoLineagePlatform = "FRESHBOOKS"
	DeclaredAssetDetailsDtoLineagePlatformFRESHCHAT                 DeclaredAssetDetailsDtoLineagePlatform = "FRESHCHAT"
	DeclaredAssetDetailsDtoLineagePlatformFRESHDESK                 DeclaredAssetDetailsDtoLineagePlatform = "FRESHDESK"
	DeclaredAssetDetailsDtoLineagePlatformFRESHDESKCONTACTCENTER    DeclaredAssetDetailsDtoLineagePlatform = "FRESHDESK_CONTACT_CENTER"
	DeclaredAssetDetailsDtoLineagePlatformFRESHSERVICE              DeclaredAssetDetailsDtoLineagePlatform = "FRESHSERVICE"
	DeclaredAssetDetailsDtoLineagePlatformFRESHSUCCESS              DeclaredAssetDetailsDtoLineagePlatform = "FRESHSUCCESS"
	DeclaredAssetDetailsDtoLineagePlatformFRESHTEAM                 DeclaredAssetDetailsDtoLineagePlatform = "FRESHTEAM"
	DeclaredAssetDetailsDtoLineagePlatformFRIENDBUY                 DeclaredAssetDetailsDtoLineagePlatform = "FRIENDBUY"
	DeclaredAssetDetailsDtoLineagePlatformFRONT                     DeclaredAssetDetailsDtoLineagePlatform = "FRONT"
	DeclaredAssetDetailsDtoLineagePlatformFTP                       DeclaredAssetDetailsDtoLineagePlatform = "FTP"
	DeclaredAssetDetailsDtoLineagePlatformFULLSTORY                 DeclaredAssetDetailsDtoLineagePlatform = "FULLSTORY"
	DeclaredAssetDetailsDtoLineagePlatformG2                        DeclaredAssetDetailsDtoLineagePlatform = "G2"
	DeclaredAssetDetailsDtoLineagePlatformGAINSIGHT                 DeclaredAssetDetailsDtoLineagePlatform = "GAINSIGHT"
	DeclaredAssetDetailsDtoLineagePlatformGEM                       DeclaredAssetDetailsDtoLineagePlatform = "GEM"
	DeclaredAssetDetailsDtoLineagePlatformGIT                       DeclaredAssetDetailsDtoLineagePlatform = "GIT"
	DeclaredAssetDetailsDtoLineagePlatformGITHUB                    DeclaredAssetDetailsDtoLineagePlatform = "GITHUB"
	DeclaredAssetDetailsDtoLineagePlatformGITLAB                    DeclaredAssetDetailsDtoLineagePlatform = "GITLAB"
	DeclaredAssetDetailsDtoLineagePlatformGLADLY                    DeclaredAssetDetailsDtoLineagePlatform = "GLADLY"
	DeclaredAssetDetailsDtoLineagePlatformGOCARDLESS                DeclaredAssetDetailsDtoLineagePlatform = "GOCARDLESS"
	DeclaredAssetDetailsDtoLineagePlatformGONG                      DeclaredAssetDetailsDtoLineagePlatform = "GONG"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLE                    DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLEADMANAGER           DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_AD_MANAGER"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLEADS                 DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_ADS"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLEANALYTICS           DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_ANALYTICS"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLECALENDAR            DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_CALENDAR"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLECAMPAIGNMANAGER     DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_CAMPAIGN_MANAGER"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLECHROME              DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_CHROME"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLECLOUD               DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_CLOUD"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLECLOUDSTORAGE        DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_CLOUD_STORAGE"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLEDISPLAY             DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_DISPLAY"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLEDRIVE               DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_DRIVE"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLEPLAY                DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_PLAY"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLESEARCHADS360        DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_SEARCH_ADS_360"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLESEARCHCONSOLE       DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_SEARCH_CONSOLE"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLESHEETS              DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_SHEETS"
	DeclaredAssetDetailsDtoLineagePlatformGOOGLETASKS               DeclaredAssetDetailsDtoLineagePlatform = "GOOGLE_TASKS"
	DeclaredAssetDetailsDtoLineagePlatformGORGIAS                   DeclaredAssetDetailsDtoLineagePlatform = "GORGIAS"
	DeclaredAssetDetailsDtoLineagePlatformGREENHOUSE                DeclaredAssetDetailsDtoLineagePlatform = "GREENHOUSE"
	DeclaredAssetDetailsDtoLineagePlatformGREENPLUM                 DeclaredAssetDetailsDtoLineagePlatform = "GREENPLUM"
	DeclaredAssetDetailsDtoLineagePlatformGREENPOWERMONITOR         DeclaredAssetDetailsDtoLineagePlatform = "GREEN_POWER_MONITOR"
	DeclaredAssetDetailsDtoLineagePlatformGREPSR                    DeclaredAssetDetailsDtoLineagePlatform = "GREPSR"
	DeclaredAssetDetailsDtoLineagePlatformGRIN                      DeclaredAssetDetailsDtoLineagePlatform = "GRIN"
	DeclaredAssetDetailsDtoLineagePlatformGURU                      DeclaredAssetDetailsDtoLineagePlatform = "GURU"
	DeclaredAssetDetailsDtoLineagePlatformH2                        DeclaredAssetDetailsDtoLineagePlatform = "H2"
	DeclaredAssetDetailsDtoLineagePlatformHARVEST                   DeclaredAssetDetailsDtoLineagePlatform = "HARVEST"
	DeclaredAssetDetailsDtoLineagePlatformHDFS                      DeclaredAssetDetailsDtoLineagePlatform = "HDFS"
	DeclaredAssetDetailsDtoLineagePlatformHDFSSTORAGE               DeclaredAssetDetailsDtoLineagePlatform = "HDFS_STORAGE"
	DeclaredAssetDetailsDtoLineagePlatformHEAP                      DeclaredAssetDetailsDtoLineagePlatform = "HEAP"
	DeclaredAssetDetailsDtoLineagePlatformHEIGHT                    DeclaredAssetDetailsDtoLineagePlatform = "HEIGHT"
	DeclaredAssetDetailsDtoLineagePlatformHELPSCOUT                 DeclaredAssetDetailsDtoLineagePlatform = "HELP_SCOUT"
	DeclaredAssetDetailsDtoLineagePlatformHELPSHIFT                 DeclaredAssetDetailsDtoLineagePlatform = "HELPSHIFT"
	DeclaredAssetDetailsDtoLineagePlatformHEROKUKAFKA               DeclaredAssetDetailsDtoLineagePlatform = "HEROKU_KAFKA"
	DeclaredAssetDetailsDtoLineagePlatformHIBOB                     DeclaredAssetDetailsDtoLineagePlatform = "HIBOB"
	DeclaredAssetDetailsDtoLineagePlatformHIGHTOUCH                 DeclaredAssetDetailsDtoLineagePlatform = "HIGH_TOUCH"
	DeclaredAssetDetailsDtoLineagePlatformHIVE                      DeclaredAssetDetailsDtoLineagePlatform = "HIVE"
	DeclaredAssetDetailsDtoLineagePlatformHIVEPROCESS               DeclaredAssetDetailsDtoLineagePlatform = "HIVE_PROCESS"
	DeclaredAssetDetailsDtoLineagePlatformHOPIN                     DeclaredAssetDetailsDtoLineagePlatform = "HOPIN"
	DeclaredAssetDetailsDtoLineagePlatformHUBSPOT                   DeclaredAssetDetailsDtoLineagePlatform = "HUBSPOT"
	DeclaredAssetDetailsDtoLineagePlatformIMPACT                    DeclaredAssetDetailsDtoLineagePlatform = "IMPACT"
	DeclaredAssetDetailsDtoLineagePlatformINCIDENTIO                DeclaredAssetDetailsDtoLineagePlatform = "INCIDENT_IO"
	DeclaredAssetDetailsDtoLineagePlatformINFOBIP                   DeclaredAssetDetailsDtoLineagePlatform = "INFOBIP"
	DeclaredAssetDetailsDtoLineagePlatformINFORMATICA               DeclaredAssetDetailsDtoLineagePlatform = "INFORMATICA"
	DeclaredAssetDetailsDtoLineagePlatformINSIGHTLY                 DeclaredAssetDetailsDtoLineagePlatform = "INSIGHTLY"
	DeclaredAssetDetailsDtoLineagePlatformINSTAGRAM                 DeclaredAssetDetailsDtoLineagePlatform = "INSTAGRAM"
	DeclaredAssetDetailsDtoLineagePlatformINTERCOM                  DeclaredAssetDetailsDtoLineagePlatform = "INTERCOM"
	DeclaredAssetDetailsDtoLineagePlatformINVESTOPEDIA              DeclaredAssetDetailsDtoLineagePlatform = "INVESTOPEDIA"
	DeclaredAssetDetailsDtoLineagePlatformIRONCLAD                  DeclaredAssetDetailsDtoLineagePlatform = "IRONCLAD"
	DeclaredAssetDetailsDtoLineagePlatformIRONSOURCE                DeclaredAssetDetailsDtoLineagePlatform = "IRONSOURCE"
	DeclaredAssetDetailsDtoLineagePlatformITERABLE                  DeclaredAssetDetailsDtoLineagePlatform = "ITERABLE"
	DeclaredAssetDetailsDtoLineagePlatformJAVA                      DeclaredAssetDetailsDtoLineagePlatform = "JAVA"
	DeclaredAssetDetailsDtoLineagePlatformJENKINS                   DeclaredAssetDetailsDtoLineagePlatform = "JENKINS"
	DeclaredAssetDetailsDtoLineagePlatformJUSTCALL                  DeclaredAssetDetailsDtoLineagePlatform = "JUSTCALL"
	DeclaredAssetDetailsDtoLineagePlatformKANDJI                    DeclaredAssetDetailsDtoLineagePlatform = "KANDJI"
	DeclaredAssetDetailsDtoLineagePlatformKENSU                     DeclaredAssetDetailsDtoLineagePlatform = "KENSU"
	DeclaredAssetDetailsDtoLineagePlatformKHOROSCARE                DeclaredAssetDetailsDtoLineagePlatform = "KHOROS_CARE"
	DeclaredAssetDetailsDtoLineagePlatformKISSMETRICS               DeclaredAssetDetailsDtoLineagePlatform = "KISSMETRICS"
	DeclaredAssetDetailsDtoLineagePlatformKLAVIYO                   DeclaredAssetDetailsDtoLineagePlatform = "KLAVIYO"
	DeclaredAssetDetailsDtoLineagePlatformKNOWBE4                   DeclaredAssetDetailsDtoLineagePlatform = "KNOWBE4"
	DeclaredAssetDetailsDtoLineagePlatformKONNECTINSIGHTS           DeclaredAssetDetailsDtoLineagePlatform = "KONNECT_INSIGHTS"
	DeclaredAssetDetailsDtoLineagePlatformKUSTOMER                  DeclaredAssetDetailsDtoLineagePlatform = "KUSTOMER"
	DeclaredAssetDetailsDtoLineagePlatformLARIATDATA                DeclaredAssetDetailsDtoLineagePlatform = "LARIAT_DATA"
	DeclaredAssetDetailsDtoLineagePlatformLATTICE                   DeclaredAssetDetailsDtoLineagePlatform = "LATTICE"
	DeclaredAssetDetailsDtoLineagePlatformLAUNCHDARKLY              DeclaredAssetDetailsDtoLineagePlatform = "LAUNCH_DARKLY"
	DeclaredAssetDetailsDtoLineagePlatformLEARNUPON                 DeclaredAssetDetailsDtoLineagePlatform = "LEARN_UPON"
	DeclaredAssetDetailsDtoLineagePlatformLESSONLY                  DeclaredAssetDetailsDtoLineagePlatform = "LESSONLY"
	DeclaredAssetDetailsDtoLineagePlatformLEVER                     DeclaredAssetDetailsDtoLineagePlatform = "LEVER"
	DeclaredAssetDetailsDtoLineagePlatformLIFTOFF                   DeclaredAssetDetailsDtoLineagePlatform = "LIFTOFF"
	DeclaredAssetDetailsDtoLineagePlatformLIGHTDASH                 DeclaredAssetDetailsDtoLineagePlatform = "LIGHTDASH"
	DeclaredAssetDetailsDtoLineagePlatformLIGHTSPEED                DeclaredAssetDetailsDtoLineagePlatform = "LIGHTSPEED"
	DeclaredAssetDetailsDtoLineagePlatformLIGHTSUP                  DeclaredAssetDetailsDtoLineagePlatform = "LIGHTSUP"
	DeclaredAssetDetailsDtoLineagePlatformLINEAR                    DeclaredAssetDetailsDtoLineagePlatform = "LINEAR"
	DeclaredAssetDetailsDtoLineagePlatformLINKEDIN                  DeclaredAssetDetailsDtoLineagePlatform = "LINKEDIN"
	DeclaredAssetDetailsDtoLineagePlatformLIVECHAT                  DeclaredAssetDetailsDtoLineagePlatform = "LIVECHAT"
	DeclaredAssetDetailsDtoLineagePlatformLOADEDCOMMERCE            DeclaredAssetDetailsDtoLineagePlatform = "LOADED_COMMERCE"
	DeclaredAssetDetailsDtoLineagePlatformLOB                       DeclaredAssetDetailsDtoLineagePlatform = "LOB"
	DeclaredAssetDetailsDtoLineagePlatformLOOKER                    DeclaredAssetDetailsDtoLineagePlatform = "LOOKER"
	DeclaredAssetDetailsDtoLineagePlatformLOOP                      DeclaredAssetDetailsDtoLineagePlatform = "LOOP"
	DeclaredAssetDetailsDtoLineagePlatformLOOPIO                    DeclaredAssetDetailsDtoLineagePlatform = "LOOPIO"
	DeclaredAssetDetailsDtoLineagePlatformLUMA                      DeclaredAssetDetailsDtoLineagePlatform = "LUMA"
	DeclaredAssetDetailsDtoLineagePlatformMAGENTO                   DeclaredAssetDetailsDtoLineagePlatform = "MAGENTO"
	DeclaredAssetDetailsDtoLineagePlatformMAILCHIMP                 DeclaredAssetDetailsDtoLineagePlatform = "MAILCHIMP"
	DeclaredAssetDetailsDtoLineagePlatformMAILGUN                   DeclaredAssetDetailsDtoLineagePlatform = "MAILGUN"
	DeclaredAssetDetailsDtoLineagePlatformMANDRILL                  DeclaredAssetDetailsDtoLineagePlatform = "MANDRILL"
	DeclaredAssetDetailsDtoLineagePlatformMANTA                     DeclaredAssetDetailsDtoLineagePlatform = "MANTA"
	DeclaredAssetDetailsDtoLineagePlatformMARIADB                   DeclaredAssetDetailsDtoLineagePlatform = "MARIADB"
	DeclaredAssetDetailsDtoLineagePlatformMARINSOFTWARE             DeclaredAssetDetailsDtoLineagePlatform = "MARIN_SOFTWARE"
	DeclaredAssetDetailsDtoLineagePlatformMARKETO                   DeclaredAssetDetailsDtoLineagePlatform = "MARKETO"
	DeclaredAssetDetailsDtoLineagePlatformMATTERMOST                DeclaredAssetDetailsDtoLineagePlatform = "MATTERMOST"
	DeclaredAssetDetailsDtoLineagePlatformMAVENLINK                 DeclaredAssetDetailsDtoLineagePlatform = "MAVENLINK"
	DeclaredAssetDetailsDtoLineagePlatformMAXIO                     DeclaredAssetDetailsDtoLineagePlatform = "MAXIO"
	DeclaredAssetDetailsDtoLineagePlatformMEDALLIA                  DeclaredAssetDetailsDtoLineagePlatform = "MEDALLIA"
	DeclaredAssetDetailsDtoLineagePlatformMETA                      DeclaredAssetDetailsDtoLineagePlatform = "META"
	DeclaredAssetDetailsDtoLineagePlatformMETABASE                  DeclaredAssetDetailsDtoLineagePlatform = "METABASE"
	DeclaredAssetDetailsDtoLineagePlatformMETAPHOR                  DeclaredAssetDetailsDtoLineagePlatform = "METAPHOR"
	DeclaredAssetDetailsDtoLineagePlatformMETAPLANE                 DeclaredAssetDetailsDtoLineagePlatform = "METAPLANE"
	DeclaredAssetDetailsDtoLineagePlatformMICROSOFT                 DeclaredAssetDetailsDtoLineagePlatform = "MICROSOFT"
	DeclaredAssetDetailsDtoLineagePlatformMICROSOFTAZUREBLOBSTORAGE DeclaredAssetDetailsDtoLineagePlatform = "MICROSOFT_AZURE_BLOB_STORAGE"
	DeclaredAssetDetailsDtoLineagePlatformMICROSOFTAZUREML          DeclaredAssetDetailsDtoLineagePlatform = "MICROSOFT_AZURE_ML"
	DeclaredAssetDetailsDtoLineagePlatformMICROSOFTDYNAMICS         DeclaredAssetDetailsDtoLineagePlatform = "MICROSOFT_DYNAMICS"
	DeclaredAssetDetailsDtoLineagePlatformMICROSOFTONEDRIVE         DeclaredAssetDetailsDtoLineagePlatform = "MICROSOFT_ONEDRIVE"
	DeclaredAssetDetailsDtoLineagePlatformMICROSOFTPURVIEW          DeclaredAssetDetailsDtoLineagePlatform = "MICROSOFT_PURVIEW"
	DeclaredAssetDetailsDtoLineagePlatformMICROSOFTTEAMS            DeclaredAssetDetailsDtoLineagePlatform = "MICROSOFT_TEAMS"
	DeclaredAssetDetailsDtoLineagePlatformMICROSTRATEGY             DeclaredAssetDetailsDtoLineagePlatform = "MICROSTRATEGY"
	DeclaredAssetDetailsDtoLineagePlatformMIXMAX                    DeclaredAssetDetailsDtoLineagePlatform = "MIXMAX"
	DeclaredAssetDetailsDtoLineagePlatformMIXPANEL                  DeclaredAssetDetailsDtoLineagePlatform = "MIXPANEL"
	DeclaredAssetDetailsDtoLineagePlatformMONDAYCOM                 DeclaredAssetDetailsDtoLineagePlatform = "MONDAY_COM"
	DeclaredAssetDetailsDtoLineagePlatformMONGODB                   DeclaredAssetDetailsDtoLineagePlatform = "MONGODB"
	DeclaredAssetDetailsDtoLineagePlatformMONTECARLO                DeclaredAssetDetailsDtoLineagePlatform = "MONTE_CARLO"
	DeclaredAssetDetailsDtoLineagePlatformMOUNTAIN                  DeclaredAssetDetailsDtoLineagePlatform = "MOUNTAIN"
	DeclaredAssetDetailsDtoLineagePlatformMSSQL                     DeclaredAssetDetailsDtoLineagePlatform = "MSSQL"
	DeclaredAssetDetailsDtoLineagePlatformMULESOFT                  DeclaredAssetDetailsDtoLineagePlatform = "MULESOFT"
	DeclaredAssetDetailsDtoLineagePlatformMUX                       DeclaredAssetDetailsDtoLineagePlatform = "MUX"
	DeclaredAssetDetailsDtoLineagePlatformMWAA                      DeclaredAssetDetailsDtoLineagePlatform = "MWAA"
	DeclaredAssetDetailsDtoLineagePlatformMYSQL                     DeclaredAssetDetailsDtoLineagePlatform = "MYSQL"
	DeclaredAssetDetailsDtoLineagePlatformNAMELY                    DeclaredAssetDetailsDtoLineagePlatform = "NAMELY"
	DeclaredAssetDetailsDtoLineagePlatformNCINO                     DeclaredAssetDetailsDtoLineagePlatform = "NCINO"
	DeclaredAssetDetailsDtoLineagePlatformNETSUITEANALYTICS         DeclaredAssetDetailsDtoLineagePlatform = "NETSUITE_ANALYTICS"
	DeclaredAssetDetailsDtoLineagePlatformNEWRELIC                  DeclaredAssetDetailsDtoLineagePlatform = "NEW_RELIC"
	DeclaredAssetDetailsDtoLineagePlatformNOTION                    DeclaredAssetDetailsDtoLineagePlatform = "NOTION"
	DeclaredAssetDetailsDtoLineagePlatformNYLAS                     DeclaredAssetDetailsDtoLineagePlatform = "NYLAS"
	DeclaredAssetDetailsDtoLineagePlatformOBSERVE                   DeclaredAssetDetailsDtoLineagePlatform = "OBSERVE"
	DeclaredAssetDetailsDtoLineagePlatformOCTOPAI                   DeclaredAssetDetailsDtoLineagePlatform = "OCTOPAI"
	DeclaredAssetDetailsDtoLineagePlatformOKTA                      DeclaredAssetDetailsDtoLineagePlatform = "OKTA"
	DeclaredAssetDetailsDtoLineagePlatformOPENAI                    DeclaredAssetDetailsDtoLineagePlatform = "OPEN_AI"
	DeclaredAssetDetailsDtoLineagePlatformOPENDATADC                DeclaredAssetDetailsDtoLineagePlatform = "OPEN_DATA_DC"
	DeclaredAssetDetailsDtoLineagePlatformOPENEXCHANGESRATES        DeclaredAssetDetailsDtoLineagePlatform = "OPEN_EXCHANGES_RATES"
	DeclaredAssetDetailsDtoLineagePlatformOPENSEARCH                DeclaredAssetDetailsDtoLineagePlatform = "OPEN_SEARCH"
	DeclaredAssetDetailsDtoLineagePlatformOPTIMIZELY                DeclaredAssetDetailsDtoLineagePlatform = "OPTIMIZELY"
	DeclaredAssetDetailsDtoLineagePlatformORACLE                    DeclaredAssetDetailsDtoLineagePlatform = "ORACLE"
	DeclaredAssetDetailsDtoLineagePlatformORBITCOMMUNITYPLATFORM    DeclaredAssetDetailsDtoLineagePlatform = "ORBIT_COMMUNITY_PLATFORM"
	DeclaredAssetDetailsDtoLineagePlatformORDWAY                    DeclaredAssetDetailsDtoLineagePlatform = "ORDWAY"
	DeclaredAssetDetailsDtoLineagePlatformORTTO                     DeclaredAssetDetailsDtoLineagePlatform = "ORTTO"
	DeclaredAssetDetailsDtoLineagePlatformOSCOMMERCE                DeclaredAssetDetailsDtoLineagePlatform = "OS_COMMERCE"
	DeclaredAssetDetailsDtoLineagePlatformOUTBRAIN                  DeclaredAssetDetailsDtoLineagePlatform = "OUTBRAIN"
	DeclaredAssetDetailsDtoLineagePlatformOUTREACH                  DeclaredAssetDetailsDtoLineagePlatform = "OUTREACH"
	DeclaredAssetDetailsDtoLineagePlatformOVALEDGE                  DeclaredAssetDetailsDtoLineagePlatform = "OVALEDGE"
	DeclaredAssetDetailsDtoLineagePlatformPAGERDUTY                 DeclaredAssetDetailsDtoLineagePlatform = "PAGERDUTY"
	DeclaredAssetDetailsDtoLineagePlatformPAGERSHIFT                DeclaredAssetDetailsDtoLineagePlatform = "PAGERSHIFT"
	DeclaredAssetDetailsDtoLineagePlatformPAYPAL                    DeclaredAssetDetailsDtoLineagePlatform = "PAYPAL"
	DeclaredAssetDetailsDtoLineagePlatformPENDO                     DeclaredAssetDetailsDtoLineagePlatform = "PENDO"
	DeclaredAssetDetailsDtoLineagePlatformPINGDOM                   DeclaredAssetDetailsDtoLineagePlatform = "PINGDOM"
	DeclaredAssetDetailsDtoLineagePlatformPINTEREST                 DeclaredAssetDetailsDtoLineagePlatform = "PINTEREST"
	DeclaredAssetDetailsDtoLineagePlatformPIPE17                    DeclaredAssetDetailsDtoLineagePlatform = "PIPE17"
	DeclaredAssetDetailsDtoLineagePlatformPIPEDRIVE                 DeclaredAssetDetailsDtoLineagePlatform = "PIPEDRIVE"
	DeclaredAssetDetailsDtoLineagePlatformPIVOTALTRACKER            DeclaredAssetDetailsDtoLineagePlatform = "PIVOTAL_TRACKER"
	DeclaredAssetDetailsDtoLineagePlatformPLAYVOX                   DeclaredAssetDetailsDtoLineagePlatform = "PLAYVOX"
	DeclaredAssetDetailsDtoLineagePlatformPOSTGRES                  DeclaredAssetDetailsDtoLineagePlatform = "POSTGRES"
	DeclaredAssetDetailsDtoLineagePlatformPOSTHOG                   DeclaredAssetDetailsDtoLineagePlatform = "POSTHOG"
	DeclaredAssetDetailsDtoLineagePlatformPOWERBI                   DeclaredAssetDetailsDtoLineagePlatform = "POWER_BI"
	DeclaredAssetDetailsDtoLineagePlatformPOWERSCHOOL               DeclaredAssetDetailsDtoLineagePlatform = "POWERSCHOOL"
	DeclaredAssetDetailsDtoLineagePlatformPREFECT                   DeclaredAssetDetailsDtoLineagePlatform = "PREFECT"
	DeclaredAssetDetailsDtoLineagePlatformPRESTASHOP                DeclaredAssetDetailsDtoLineagePlatform = "PRESTASHOP"
	DeclaredAssetDetailsDtoLineagePlatformPRESTO                    DeclaredAssetDetailsDtoLineagePlatform = "PRESTO"
	DeclaredAssetDetailsDtoLineagePlatformPRODUCTBOARD              DeclaredAssetDetailsDtoLineagePlatform = "PRODUCTBOARD"
	DeclaredAssetDetailsDtoLineagePlatformPYTHON                    DeclaredAssetDetailsDtoLineagePlatform = "PYTHON"
	DeclaredAssetDetailsDtoLineagePlatformQLIK                      DeclaredAssetDetailsDtoLineagePlatform = "QLIK"
	DeclaredAssetDetailsDtoLineagePlatformQUALAROO                  DeclaredAssetDetailsDtoLineagePlatform = "QUALAROO"
	DeclaredAssetDetailsDtoLineagePlatformQUALTRICS                 DeclaredAssetDetailsDtoLineagePlatform = "QUALTRICS"
	DeclaredAssetDetailsDtoLineagePlatformQUICKBOOKS                DeclaredAssetDetailsDtoLineagePlatform = "QUICKBOOKS"
	DeclaredAssetDetailsDtoLineagePlatformQUICKSIGHT                DeclaredAssetDetailsDtoLineagePlatform = "QUICKSIGHT"
	DeclaredAssetDetailsDtoLineagePlatformRAMP                      DeclaredAssetDetailsDtoLineagePlatform = "RAMP"
	DeclaredAssetDetailsDtoLineagePlatformRARIBLE                   DeclaredAssetDetailsDtoLineagePlatform = "RARIBLE"
	DeclaredAssetDetailsDtoLineagePlatformRECHARGE                  DeclaredAssetDetailsDtoLineagePlatform = "RECHARGE"
	DeclaredAssetDetailsDtoLineagePlatformRECURLY                   DeclaredAssetDetailsDtoLineagePlatform = "RECURLY"
	DeclaredAssetDetailsDtoLineagePlatformREDDIT                    DeclaredAssetDetailsDtoLineagePlatform = "REDDIT"
	DeclaredAssetDetailsDtoLineagePlatformREDSHIFT                  DeclaredAssetDetailsDtoLineagePlatform = "REDSHIFT"
	DeclaredAssetDetailsDtoLineagePlatformRELTIO                    DeclaredAssetDetailsDtoLineagePlatform = "RELTIO"
	DeclaredAssetDetailsDtoLineagePlatformREPLYIO                   DeclaredAssetDetailsDtoLineagePlatform = "REPLY_IO"
	DeclaredAssetDetailsDtoLineagePlatformRETAILNEXT                DeclaredAssetDetailsDtoLineagePlatform = "RETAILNEXT"
	DeclaredAssetDetailsDtoLineagePlatformRETENTLY                  DeclaredAssetDetailsDtoLineagePlatform = "RETENTLY"
	DeclaredAssetDetailsDtoLineagePlatformREVELSYSTEMS              DeclaredAssetDetailsDtoLineagePlatform = "REVEL_SYSTEMS"
	DeclaredAssetDetailsDtoLineagePlatformRINGCENTRAL               DeclaredAssetDetailsDtoLineagePlatform = "RINGCENTRAL"
	DeclaredAssetDetailsDtoLineagePlatformRIPPLING                  DeclaredAssetDetailsDtoLineagePlatform = "RIPPLING"
	DeclaredAssetDetailsDtoLineagePlatformROLLBAR                   DeclaredAssetDetailsDtoLineagePlatform = "ROLLBAR"
	DeclaredAssetDetailsDtoLineagePlatformROOTLY                    DeclaredAssetDetailsDtoLineagePlatform = "ROOTLY"
	DeclaredAssetDetailsDtoLineagePlatformS3                        DeclaredAssetDetailsDtoLineagePlatform = "S3"
	DeclaredAssetDetailsDtoLineagePlatformSAGEHR                    DeclaredAssetDetailsDtoLineagePlatform = "SAGE_HR"
	DeclaredAssetDetailsDtoLineagePlatformSAGEINTACCT               DeclaredAssetDetailsDtoLineagePlatform = "SAGE_INTACCT"
	DeclaredAssetDetailsDtoLineagePlatformSAILTHRU                  DeclaredAssetDetailsDtoLineagePlatform = "SAILTHRU"
	DeclaredAssetDetailsDtoLineagePlatformSALESFORCE                DeclaredAssetDetailsDtoLineagePlatform = "SALESFORCE"
	DeclaredAssetDetailsDtoLineagePlatformSALESLOFT                 DeclaredAssetDetailsDtoLineagePlatform = "SALESLOFT"
	DeclaredAssetDetailsDtoLineagePlatformSALSIFY                   DeclaredAssetDetailsDtoLineagePlatform = "SALSIFY"
	DeclaredAssetDetailsDtoLineagePlatformSAMSARA                   DeclaredAssetDetailsDtoLineagePlatform = "SAMSARA"
	DeclaredAssetDetailsDtoLineagePlatformSAP                       DeclaredAssetDetailsDtoLineagePlatform = "SAP"
	DeclaredAssetDetailsDtoLineagePlatformSAPCONCUR                 DeclaredAssetDetailsDtoLineagePlatform = "SAP_CONCUR"
	DeclaredAssetDetailsDtoLineagePlatformSCORM                     DeclaredAssetDetailsDtoLineagePlatform = "SCORM"
	DeclaredAssetDetailsDtoLineagePlatformSECODA                    DeclaredAssetDetailsDtoLineagePlatform = "SECODA"
	DeclaredAssetDetailsDtoLineagePlatformSECURITYJOURNEY           DeclaredAssetDetailsDtoLineagePlatform = "SECURITY_JOURNEY"
	DeclaredAssetDetailsDtoLineagePlatformSEGMENT                   DeclaredAssetDetailsDtoLineagePlatform = "SEGMENT"
	DeclaredAssetDetailsDtoLineagePlatformSELECTSTAR                DeclaredAssetDetailsDtoLineagePlatform = "SELECT_STAR"
	DeclaredAssetDetailsDtoLineagePlatformSENDGRID                  DeclaredAssetDetailsDtoLineagePlatform = "SENDGRID"
	DeclaredAssetDetailsDtoLineagePlatformSERVICENOW                DeclaredAssetDetailsDtoLineagePlatform = "SERVICE_NOW"
	DeclaredAssetDetailsDtoLineagePlatformSFTP                      DeclaredAssetDetailsDtoLineagePlatform = "SFTP"
	DeclaredAssetDetailsDtoLineagePlatformSHAREPOINT                DeclaredAssetDetailsDtoLineagePlatform = "SHAREPOINT"
	DeclaredAssetDetailsDtoLineagePlatformSHARETRIBE                DeclaredAssetDetailsDtoLineagePlatform = "SHARETRIBE"
	DeclaredAssetDetailsDtoLineagePlatformSHIPHERO                  DeclaredAssetDetailsDtoLineagePlatform = "SHIPHERO"
	DeclaredAssetDetailsDtoLineagePlatformSHIPSTATION               DeclaredAssetDetailsDtoLineagePlatform = "SHIPSTATION"
	DeclaredAssetDetailsDtoLineagePlatformSHOPIFY                   DeclaredAssetDetailsDtoLineagePlatform = "SHOPIFY"
	DeclaredAssetDetailsDtoLineagePlatformSHOPWARE                  DeclaredAssetDetailsDtoLineagePlatform = "SHOPWARE"
	DeclaredAssetDetailsDtoLineagePlatformSHORTIO                   DeclaredAssetDetailsDtoLineagePlatform = "SHORT_IO"
	DeclaredAssetDetailsDtoLineagePlatformSIFFLET                   DeclaredAssetDetailsDtoLineagePlatform = "SIFFLET"
	DeclaredAssetDetailsDtoLineagePlatformSIGMA                     DeclaredAssetDetailsDtoLineagePlatform = "SIGMA"
	DeclaredAssetDetailsDtoLineagePlatformSIMPLECAST                DeclaredAssetDetailsDtoLineagePlatform = "SIMPLECAST"
	DeclaredAssetDetailsDtoLineagePlatformSIMPLESAT                 DeclaredAssetDetailsDtoLineagePlatform = "SIMPLESAT"
	DeclaredAssetDetailsDtoLineagePlatformSINGLESTORE               DeclaredAssetDetailsDtoLineagePlatform = "SINGLESTORE"
	DeclaredAssetDetailsDtoLineagePlatformSISENSE                   DeclaredAssetDetailsDtoLineagePlatform = "SISENSE"
	DeclaredAssetDetailsDtoLineagePlatformSIXSENSE                  DeclaredAssetDetailsDtoLineagePlatform = "SIXSENSE"
	DeclaredAssetDetailsDtoLineagePlatformSKILLJAR                  DeclaredAssetDetailsDtoLineagePlatform = "SKILLJAR"
	DeclaredAssetDetailsDtoLineagePlatformSKUVAULT                  DeclaredAssetDetailsDtoLineagePlatform = "SKUVAULT"
	DeclaredAssetDetailsDtoLineagePlatformSLAB                      DeclaredAssetDetailsDtoLineagePlatform = "SLAB"
	DeclaredAssetDetailsDtoLineagePlatformSLACK                     DeclaredAssetDetailsDtoLineagePlatform = "SLACK"
	DeclaredAssetDetailsDtoLineagePlatformSMADEX                    DeclaredAssetDetailsDtoLineagePlatform = "SMADEX"
	DeclaredAssetDetailsDtoLineagePlatformSNAPCHAT                  DeclaredAssetDetailsDtoLineagePlatform = "SNAPCHAT"
	DeclaredAssetDetailsDtoLineagePlatformSNOWFLAKE                 DeclaredAssetDetailsDtoLineagePlatform = "SNOWFLAKE"
	DeclaredAssetDetailsDtoLineagePlatformSNOWPLOW                  DeclaredAssetDetailsDtoLineagePlatform = "SNOWPLOW"
	DeclaredAssetDetailsDtoLineagePlatformSODA                      DeclaredAssetDetailsDtoLineagePlatform = "SODA"
	DeclaredAssetDetailsDtoLineagePlatformSONARQUBE                 DeclaredAssetDetailsDtoLineagePlatform = "SONARQUBE"
	DeclaredAssetDetailsDtoLineagePlatformSPARKPROCESS              DeclaredAssetDetailsDtoLineagePlatform = "SPARK_PROCESS"
	DeclaredAssetDetailsDtoLineagePlatformSPLITIO                   DeclaredAssetDetailsDtoLineagePlatform = "SPLIT_IO"
	DeclaredAssetDetailsDtoLineagePlatformSPLUNK                    DeclaredAssetDetailsDtoLineagePlatform = "SPLUNK"
	DeclaredAssetDetailsDtoLineagePlatformSPOTIFY                   DeclaredAssetDetailsDtoLineagePlatform = "SPOTIFY"
	DeclaredAssetDetailsDtoLineagePlatformSPREECOMMERCE             DeclaredAssetDetailsDtoLineagePlatform = "SPREE_COMMERCE"
	DeclaredAssetDetailsDtoLineagePlatformSPROUTSOCIAL              DeclaredAssetDetailsDtoLineagePlatform = "SPROUT_SOCIAL"
	DeclaredAssetDetailsDtoLineagePlatformSQUARE                    DeclaredAssetDetailsDtoLineagePlatform = "SQUARE"
	DeclaredAssetDetailsDtoLineagePlatformSQUARESPACE               DeclaredAssetDetailsDtoLineagePlatform = "SQUARESPACE"
	DeclaredAssetDetailsDtoLineagePlatformSTACKADAPT                DeclaredAssetDetailsDtoLineagePlatform = "STACK_ADAPT"
	DeclaredAssetDetailsDtoLineagePlatformSTATSIG                   DeclaredAssetDetailsDtoLineagePlatform = "STATSIG"
	DeclaredAssetDetailsDtoLineagePlatformSTITCH                    DeclaredAssetDetailsDtoLineagePlatform = "STITCH"
	DeclaredAssetDetailsDtoLineagePlatformSTRIPE                    DeclaredAssetDetailsDtoLineagePlatform = "STRIPE"
	DeclaredAssetDetailsDtoLineagePlatformSTYLIGHT                  DeclaredAssetDetailsDtoLineagePlatform = "STYLIGHT"
	DeclaredAssetDetailsDtoLineagePlatformSUBSCRIPT                 DeclaredAssetDetailsDtoLineagePlatform = "SUBSCRIPT"
	DeclaredAssetDetailsDtoLineagePlatformSYNAPSE                   DeclaredAssetDetailsDtoLineagePlatform = "SYNAPSE"
	DeclaredAssetDetailsDtoLineagePlatformTABLEAU                   DeclaredAssetDetailsDtoLineagePlatform = "TABLEAU"
	DeclaredAssetDetailsDtoLineagePlatformTABOOLA                   DeclaredAssetDetailsDtoLineagePlatform = "TABOOLA"
	DeclaredAssetDetailsDtoLineagePlatformTALEND                    DeclaredAssetDetailsDtoLineagePlatform = "TALEND"
	DeclaredAssetDetailsDtoLineagePlatformTALKDESK                  DeclaredAssetDetailsDtoLineagePlatform = "TALKDESK"
	DeclaredAssetDetailsDtoLineagePlatformTALKWALKER                DeclaredAssetDetailsDtoLineagePlatform = "TALKWALKER"
	DeclaredAssetDetailsDtoLineagePlatformTEAMWORKCOM               DeclaredAssetDetailsDtoLineagePlatform = "TEAMWORK_COM"
	DeclaredAssetDetailsDtoLineagePlatformTEMPOIO                   DeclaredAssetDetailsDtoLineagePlatform = "TEMPO_IO"
	DeclaredAssetDetailsDtoLineagePlatformTERADATA                  DeclaredAssetDetailsDtoLineagePlatform = "TERADATA"
	DeclaredAssetDetailsDtoLineagePlatformTERRAFORM                 DeclaredAssetDetailsDtoLineagePlatform = "TERRAFORM"
	DeclaredAssetDetailsDtoLineagePlatformTHETRADEDESK              DeclaredAssetDetailsDtoLineagePlatform = "THE_TRADE_DESK"
	DeclaredAssetDetailsDtoLineagePlatformTHOUGHTSPOT               DeclaredAssetDetailsDtoLineagePlatform = "THOUGHT_SPOT"
	DeclaredAssetDetailsDtoLineagePlatformTHREESIXTYLEARNING        DeclaredAssetDetailsDtoLineagePlatform = "THREESIXTYLEARNING"
	DeclaredAssetDetailsDtoLineagePlatformTIKTOK                    DeclaredAssetDetailsDtoLineagePlatform = "TIKTOK"
	DeclaredAssetDetailsDtoLineagePlatformTOGGL                     DeclaredAssetDetailsDtoLineagePlatform = "TOGGL"
	DeclaredAssetDetailsDtoLineagePlatformTRANSCEND                 DeclaredAssetDetailsDtoLineagePlatform = "TRANSCEND"
	DeclaredAssetDetailsDtoLineagePlatformTRELLO                    DeclaredAssetDetailsDtoLineagePlatform = "TRELLO"
	DeclaredAssetDetailsDtoLineagePlatformTRINET                    DeclaredAssetDetailsDtoLineagePlatform = "TRINET"
	DeclaredAssetDetailsDtoLineagePlatformTRISOLUTE                 DeclaredAssetDetailsDtoLineagePlatform = "TRISOLUTE"
	DeclaredAssetDetailsDtoLineagePlatformTWILIO                    DeclaredAssetDetailsDtoLineagePlatform = "TWILIO"
	DeclaredAssetDetailsDtoLineagePlatformTYPEFORM                  DeclaredAssetDetailsDtoLineagePlatform = "TYPEFORM"
	DeclaredAssetDetailsDtoLineagePlatformUNKNOWN                   DeclaredAssetDetailsDtoLineagePlatform = "UNKNOWN"
	DeclaredAssetDetailsDtoLineagePlatformUPLAND                    DeclaredAssetDetailsDtoLineagePlatform = "UPLAND"
	DeclaredAssetDetailsDtoLineagePlatformUSERVOICE                 DeclaredAssetDetailsDtoLineagePlatform = "USERVOICE"
	DeclaredAssetDetailsDtoLineagePlatformVALIDIO                   DeclaredAssetDetailsDtoLineagePlatform = "VALIDIO"
	DeclaredAssetDetailsDtoLineagePlatformVEEVA                     DeclaredAssetDetailsDtoLineagePlatform = "VEEVA"
	DeclaredAssetDetailsDtoLineagePlatformVERIZONMEDIA              DeclaredAssetDetailsDtoLineagePlatform = "VERIZON_MEDIA"
	DeclaredAssetDetailsDtoLineagePlatformVITALLY                   DeclaredAssetDetailsDtoLineagePlatform = "VITALLY"
	DeclaredAssetDetailsDtoLineagePlatformVONAGE                    DeclaredAssetDetailsDtoLineagePlatform = "VONAGE"
	DeclaredAssetDetailsDtoLineagePlatformVUETIFY                   DeclaredAssetDetailsDtoLineagePlatform = "VUETIFY"
	DeclaredAssetDetailsDtoLineagePlatformWEBHOOKS                  DeclaredAssetDetailsDtoLineagePlatform = "WEBHOOKS"
	DeclaredAssetDetailsDtoLineagePlatformWEBSCRAPER                DeclaredAssetDetailsDtoLineagePlatform = "WEB_SCRAPER"
	DeclaredAssetDetailsDtoLineagePlatformWHENIWORK                 DeclaredAssetDetailsDtoLineagePlatform = "WHEN_I_WORK"
	DeclaredAssetDetailsDtoLineagePlatformWHEREFOUR                 DeclaredAssetDetailsDtoLineagePlatform = "WHEREFOUR"
	DeclaredAssetDetailsDtoLineagePlatformWIKIPEDIA                 DeclaredAssetDetailsDtoLineagePlatform = "WIKIPEDIA"
	DeclaredAssetDetailsDtoLineagePlatformWOOCOMMERCE               DeclaredAssetDetailsDtoLineagePlatform = "WOOCOMMERCE"
	DeclaredAssetDetailsDtoLineagePlatformWORDPRESS                 DeclaredAssetDetailsDtoLineagePlatform = "WORDPRESS"
	DeclaredAssetDetailsDtoLineagePlatformWORKABLE                  DeclaredAssetDetailsDtoLineagePlatform = "WORKABLE"
	DeclaredAssetDetailsDtoLineagePlatformWORKDAY                   DeclaredAssetDetailsDtoLineagePlatform = "WORKDAY"
	DeclaredAssetDetailsDtoLineagePlatformWORKFLOWMAX               DeclaredAssetDetailsDtoLineagePlatform = "WORKFLOW_MAX"
	DeclaredAssetDetailsDtoLineagePlatformWRIKE                     DeclaredAssetDetailsDtoLineagePlatform = "WRIKE"
	DeclaredAssetDetailsDtoLineagePlatformX                         DeclaredAssetDetailsDtoLineagePlatform = "X"
	DeclaredAssetDetailsDtoLineagePlatformXERO                      DeclaredAssetDetailsDtoLineagePlatform = "XERO"
	DeclaredAssetDetailsDtoLineagePlatformXRAY                      DeclaredAssetDetailsDtoLineagePlatform = "XRAY"
	DeclaredAssetDetailsDtoLineagePlatformYAHOO                     DeclaredAssetDetailsDtoLineagePlatform = "YAHOO"
	DeclaredAssetDetailsDtoLineagePlatformYOTPO                     DeclaredAssetDetailsDtoLineagePlatform = "YOTPO"
	DeclaredAssetDetailsDtoLineagePlatformYOUTUBE                   DeclaredAssetDetailsDtoLineagePlatform = "YOUTUBE"
	DeclaredAssetDetailsDtoLineagePlatformZEENEA                    DeclaredAssetDetailsDtoLineagePlatform = "ZEENEA"
	DeclaredAssetDetailsDtoLineagePlatformZENCART                   DeclaredAssetDetailsDtoLineagePlatform = "ZEN_CART"
	DeclaredAssetDetailsDtoLineagePlatformZENDESKCHAT               DeclaredAssetDetailsDtoLineagePlatform = "ZENDESK_CHAT"
	DeclaredAssetDetailsDtoLineagePlatformZENDESKSELL               DeclaredAssetDetailsDtoLineagePlatform = "ZENDESK_SELL"
	DeclaredAssetDetailsDtoLineagePlatformZENDESKSUNSHINE           DeclaredAssetDetailsDtoLineagePlatform = "ZENDESK_SUNSHINE"
	DeclaredAssetDetailsDtoLineagePlatformZENDESKSUPPORT            DeclaredAssetDetailsDtoLineagePlatform = "ZENDESK_SUPPORT"
	DeclaredAssetDetailsDtoLineagePlatformZINGTREE                  DeclaredAssetDetailsDtoLineagePlatform = "ZINGTREE"
	DeclaredAssetDetailsDtoLineagePlatformZOHOBOOKS                 DeclaredAssetDetailsDtoLineagePlatform = "ZOHO_BOOKS"
	DeclaredAssetDetailsDtoLineagePlatformZOHOCAMPAIGNS             DeclaredAssetDetailsDtoLineagePlatform = "ZOHO_CAMPAIGNS"
	DeclaredAssetDetailsDtoLineagePlatformZOHOCRM                   DeclaredAssetDetailsDtoLineagePlatform = "ZOHO_CRM"
	DeclaredAssetDetailsDtoLineagePlatformZOOM                      DeclaredAssetDetailsDtoLineagePlatform = "ZOOM"
	DeclaredAssetDetailsDtoLineagePlatformZUORA                     DeclaredAssetDetailsDtoLineagePlatform = "ZUORA"
)

// Defines values for DeclaredAssetDetailsDtoSourceCreationType.
const (
	DeclaredAssetDetailsDtoSourceCreationTypeCONNECTED DeclaredAssetDetailsDtoSourceCreationType = "CONNECTED"
	DeclaredAssetDetailsDtoSourceCreationTypeDECLARED  DeclaredAssetDetailsDtoSourceCreationType = "DECLARED"
)

// Defines values for DescriptionDtoSourceType.
const (
	DescriptionDtoSourceTypeACCELDATA                 DescriptionDtoSourceType = "ACCELDATA"
	DescriptionDtoSourceTypeACRYLDATA                 DescriptionDtoSourceType = "ACRYL_DATA"
	DescriptionDtoSourceTypeACTIANVECTOR              DescriptionDtoSourceType = "ACTIAN_VECTOR"
	DescriptionDtoSourceTypeACTIVECAMPAIGN            DescriptionDtoSourceType = "ACTIVE_CAMPAIGN"
	DescriptionDtoSourceTypeADA                       DescriptionDtoSourceType = "ADA"
	DescriptionDtoSourceTypeADJUST                    DescriptionDtoSourceType = "ADJUST"
	DescriptionDtoSourceTypeADOBE                     DescriptionDtoSourceType = "ADOBE"
	DescriptionDtoSourceTypeADPWFN                    DescriptionDtoSourceType = "ADP_WFN"
	DescriptionDtoSourceTypeADROLL                    DescriptionDtoSourceType = "ADROLL"
	DescriptionDtoSourceTypeAFFINITY                  DescriptionDtoSourceType = "AFFINITY"
	DescriptionDtoSourceTypeAIRBYTE                   DescriptionDtoSourceType = "AIRBYTE"
	DescriptionDtoSourceTypeAIRCALL                   DescriptionDtoSourceType = "AIRCALL"
	DescriptionDtoSourceTypeAIRFLOW                   DescriptionDtoSourceType = "AIRFLOW"
	DescriptionDtoSourceTypeAIRTABLE                  DescriptionDtoSourceType = "AIRTABLE"
	DescriptionDtoSourceTypeALATION                   DescriptionDtoSourceType = "ALATION"
	DescriptionDtoSourceTypeALCHEMER                  DescriptionDtoSourceType = "ALCHEMER"
	DescriptionDtoSourceTypeALVINAI                   DescriptionDtoSourceType = "ALVIN_AI"
	DescriptionDtoSourceTypeAMAZON                    DescriptionDtoSourceType = "AMAZON"
	DescriptionDtoSourceTypeAMAZONCLOUDFRONT          DescriptionDtoSourceType = "AMAZON_CLOUDFRONT"
	DescriptionDtoSourceTypeAMAZONDOCUMENTDB          DescriptionDtoSourceType = "AMAZON_DOCUMENTDB"
	DescriptionDtoSourceTypeAMAZONDYNAMODB            DescriptionDtoSourceType = "AMAZON_DYNAMODB"
	DescriptionDtoSourceTypeAMAZONFIREHOSE            DescriptionDtoSourceType = "AMAZON_FIREHOSE"
	DescriptionDtoSourceTypeAMAZONSAGEMAKER           DescriptionDtoSourceType = "AMAZON_SAGEMAKER"
	DescriptionDtoSourceTypeAMAZONSELLINGPARTNER      DescriptionDtoSourceType = "AMAZON_SELLING_PARTNER"
	DescriptionDtoSourceTypeAMPLITUDE                 DescriptionDtoSourceType = "AMPLITUDE"
	DescriptionDtoSourceTypeANAPLAN                   DescriptionDtoSourceType = "ANAPLAN"
	DescriptionDtoSourceTypeANOMALO                   DescriptionDtoSourceType = "ANOMALO"
	DescriptionDtoSourceTypeAPACHEKAFKA               DescriptionDtoSourceType = "APACHE_KAFKA"
	DescriptionDtoSourceTypeAPACHESPARK               DescriptionDtoSourceType = "APACHE_SPARK"
	DescriptionDtoSourceTypeAPPCUES                   DescriptionDtoSourceType = "APPCUES"
	DescriptionDtoSourceTypeAPPFIGURES                DescriptionDtoSourceType = "APPFIGURES"
	DescriptionDtoSourceTypeAPPLE                     DescriptionDtoSourceType = "APPLE"
	DescriptionDtoSourceTypeAPPLEAPPSTORE             DescriptionDtoSourceType = "APPLE_APP_STORE"
	DescriptionDtoSourceTypeAPPSFLYER                 DescriptionDtoSourceType = "APPSFLYER"
	DescriptionDtoSourceTypeASANA                     DescriptionDtoSourceType = "ASANA"
	DescriptionDtoSourceTypeASSEMBLED                 DescriptionDtoSourceType = "ASSEMBLED"
	DescriptionDtoSourceTypeATHENA                    DescriptionDtoSourceType = "ATHENA"
	DescriptionDtoSourceTypeATLAN                     DescriptionDtoSourceType = "ATLAN"
	DescriptionDtoSourceTypeATLASSIANCONFLUENCE       DescriptionDtoSourceType = "ATLASSIAN_CONFLUENCE"
	DescriptionDtoSourceTypeATLASSIANJIRA             DescriptionDtoSourceType = "ATLASSIAN_JIRA"
	DescriptionDtoSourceTypeATLASSIANOPSGENIE         DescriptionDtoSourceType = "ATLASSIAN_OPSGENIE"
	DescriptionDtoSourceTypeAUTH0                     DescriptionDtoSourceType = "AUTH0"
	DescriptionDtoSourceTypeAUTODESKBIM360            DescriptionDtoSourceType = "AUTODESK_BIM_360"
	DescriptionDtoSourceTypeAWIN                      DescriptionDtoSourceType = "AWIN"
	DescriptionDtoSourceTypeAWSCLOUDTRAIL             DescriptionDtoSourceType = "AWS_CLOUDTRAIL"
	DescriptionDtoSourceTypeAWSCOSTEXPLORER           DescriptionDtoSourceType = "AWS_COST_EXPLORER"
	DescriptionDtoSourceTypeAWSINVENTORY              DescriptionDtoSourceType = "AWS_INVENTORY"
	DescriptionDtoSourceTypeAWSLAMBDA                 DescriptionDtoSourceType = "AWS_LAMBDA"
	DescriptionDtoSourceTypeAZURE                     DescriptionDtoSourceType = "AZURE"
	DescriptionDtoSourceTypeBALLOTREADY               DescriptionDtoSourceType = "BALLOT_READY"
	DescriptionDtoSourceTypeBAMBOOHR                  DescriptionDtoSourceType = "BAMBOOHR"
	DescriptionDtoSourceTypeBIGCOMMERCE               DescriptionDtoSourceType = "BIGCOMMERCE"
	DescriptionDtoSourceTypeBIGEYE                    DescriptionDtoSourceType = "BIGEYE"
	DescriptionDtoSourceTypeBIGQUERY                  DescriptionDtoSourceType = "BIGQUERY"
	DescriptionDtoSourceTypeBILLINGPLATFORM           DescriptionDtoSourceType = "BILLINGPLATFORM"
	DescriptionDtoSourceTypeBIRDEYE                   DescriptionDtoSourceType = "BIRDEYE"
	DescriptionDtoSourceTypeBLACKBOARD                DescriptionDtoSourceType = "BLACKBOARD"
	DescriptionDtoSourceTypeBOX                       DescriptionDtoSourceType = "BOX"
	DescriptionDtoSourceTypeBRAINTREE                 DescriptionDtoSourceType = "BRAINTREE"
	DescriptionDtoSourceTypeBRAZE                     DescriptionDtoSourceType = "BRAZE"
	DescriptionDtoSourceTypeBREVO                     DescriptionDtoSourceType = "BREVO"
	DescriptionDtoSourceTypeBREX                      DescriptionDtoSourceType = "BREX"
	DescriptionDtoSourceTypeBUILDKITE                 DescriptionDtoSourceType = "BUILDKITE"
	DescriptionDtoSourceTypeBUZZSPROUT                DescriptionDtoSourceType = "BUZZSPROUT"
	DescriptionDtoSourceTypeCALENDLY                  DescriptionDtoSourceType = "CALENDLY"
	DescriptionDtoSourceTypeCAMPAIGNMONITOR           DescriptionDtoSourceType = "CAMPAIGN_MONITOR"
	DescriptionDtoSourceTypeCANNY                     DescriptionDtoSourceType = "CANNY"
	DescriptionDtoSourceTypeCANVAS                    DescriptionDtoSourceType = "CANVAS"
	DescriptionDtoSourceTypeCAPTERRA                  DescriptionDtoSourceType = "CAPTERRA"
	DescriptionDtoSourceTypeCASTORDOC                 DescriptionDtoSourceType = "CASTOR_DOC"
	DescriptionDtoSourceTypeCENSUS                    DescriptionDtoSourceType = "CENSUS"
	DescriptionDtoSourceTypeCERTINIA                  DescriptionDtoSourceType = "CERTINIA"
	DescriptionDtoSourceTypeCHAMELEON                 DescriptionDtoSourceType = "CHAMELEON"
	DescriptionDtoSourceTypeCHANNELADVISOR            DescriptionDtoSourceType = "CHANNEL_ADVISOR"
	DescriptionDtoSourceTypeCHARGEBEE                 DescriptionDtoSourceType = "CHARGEBEE"
	DescriptionDtoSourceTypeCHARGEDESK                DescriptionDtoSourceType = "CHARGEDESK"
	DescriptionDtoSourceTypeCHARTMOGUL                DescriptionDtoSourceType = "CHARTMOGUL"
	DescriptionDtoSourceTypeCHORUSAI                  DescriptionDtoSourceType = "CHORUS_AI"
	DescriptionDtoSourceTypeCHURNKEY                  DescriptionDtoSourceType = "CHURNKEY"
	DescriptionDtoSourceTypeCHURNZERO                 DescriptionDtoSourceType = "CHURNZERO"
	DescriptionDtoSourceTypeCIMIS                     DescriptionDtoSourceType = "CIMIS"
	DescriptionDtoSourceTypeCIN7                      DescriptionDtoSourceType = "CIN7"
	DescriptionDtoSourceTypeCIRCLECI                  DescriptionDtoSourceType = "CIRCLE_CI"
	DescriptionDtoSourceTypeCLARI                     DescriptionDtoSourceType = "CLARI"
	DescriptionDtoSourceTypeCLICKUP                   DescriptionDtoSourceType = "CLICKUP"
	DescriptionDtoSourceTypeCLIFFAI                   DescriptionDtoSourceType = "CLIFF_AI"
	DescriptionDtoSourceTypeCLOSE                     DescriptionDtoSourceType = "CLOSE"
	DescriptionDtoSourceTypeCOLLIBRA                  DescriptionDtoSourceType = "COLLIBRA"
	DescriptionDtoSourceTypeCOMMERCETOOLS             DescriptionDtoSourceType = "COMMERCETOOLS"
	DescriptionDtoSourceTypeCOMPOSER                  DescriptionDtoSourceType = "COMPOSER"
	DescriptionDtoSourceTypeCONFLUENTCLOUD            DescriptionDtoSourceType = "CONFLUENT_CLOUD"
	DescriptionDtoSourceTypeCONTRASTSECURITY          DescriptionDtoSourceType = "CONTRAST_SECURITY"
	DescriptionDtoSourceTypeCOUPA                     DescriptionDtoSourceType = "COUPA"
	DescriptionDtoSourceTypeCRITEO                    DescriptionDtoSourceType = "CRITEO"
	DescriptionDtoSourceTypeCROSSBEAM                 DescriptionDtoSourceType = "CROSSBEAM"
	DescriptionDtoSourceTypeCRUNCHBASE                DescriptionDtoSourceType = "CRUNCHBASE"
	DescriptionDtoSourceTypeCUSTOMERIO                DescriptionDtoSourceType = "CUSTOMER_IO"
	DescriptionDtoSourceTypeD2LBRIGHTSPACE            DescriptionDtoSourceType = "D2L_BRIGHTSPACE"
	DescriptionDtoSourceTypeDAGSTER                   DescriptionDtoSourceType = "DAGSTER"
	DescriptionDtoSourceTypeDATABAND                  DescriptionDtoSourceType = "DATABAND"
	DescriptionDtoSourceTypeDATABRICKS                DescriptionDtoSourceType = "DATABRICKS"
	DescriptionDtoSourceTypeDATADOG                   DescriptionDtoSourceType = "DATADOG"
	DescriptionDtoSourceTypeDATAEDO                   DescriptionDtoSourceType = "DATAEDO"
	DescriptionDtoSourceTypeDATAFOLD                  DescriptionDtoSourceType = "DATAFOLD"
	DescriptionDtoSourceTypeDATAGALAXY                DescriptionDtoSourceType = "DATAGALAXY"
	DescriptionDtoSourceTypeDATAHUB                   DescriptionDtoSourceType = "DATAHUB"
	DescriptionDtoSourceTypeDATAIKU                   DescriptionDtoSourceType = "DATAIKU"
	DescriptionDtoSourceTypeDATAWORLD                 DescriptionDtoSourceType = "DATA_WORLD"
	DescriptionDtoSourceTypeDB2                       DescriptionDtoSourceType = "DB2"
	DescriptionDtoSourceTypeDBT                       DescriptionDtoSourceType = "DBT"
	DescriptionDtoSourceTypeDBTCLOUD                  DescriptionDtoSourceType = "DBTCLOUD"
	DescriptionDtoSourceTypeDCLLOGISTICS              DescriptionDtoSourceType = "DCL_LOGISTICS"
	DescriptionDtoSourceTypeDEAR                      DescriptionDtoSourceType = "DEAR"
	DescriptionDtoSourceTypeDECUBE                    DescriptionDtoSourceType = "DECUBE"
	DescriptionDtoSourceTypeDELIGHTED                 DescriptionDtoSourceType = "DELIGHTED"
	DescriptionDtoSourceTypeDEPUTY                    DescriptionDtoSourceType = "DEPUTY"
	DescriptionDtoSourceTypeDESTINI                   DescriptionDtoSourceType = "DESTINI"
	DescriptionDtoSourceTypeDIXA                      DescriptionDtoSourceType = "DIXA"
	DescriptionDtoSourceTypeDOCEBO                    DescriptionDtoSourceType = "DOCEBO"
	DescriptionDtoSourceTypeDRATA                     DescriptionDtoSourceType = "DRATA"
	DescriptionDtoSourceTypeDRIFT                     DescriptionDtoSourceType = "DRIFT"
	DescriptionDtoSourceTypeDRIP                      DescriptionDtoSourceType = "DRIP"
	DescriptionDtoSourceTypeDROPBOX                   DescriptionDtoSourceType = "DROPBOX"
	DescriptionDtoSourceTypeDUOPLANE                  DescriptionDtoSourceType = "DUOPLANE"
	DescriptionDtoSourceTypeEASYPOST                  DescriptionDtoSourceType = "EASY_POST"
	DescriptionDtoSourceTypeECONOMIC                  DescriptionDtoSourceType = "E_CONOMIC"
	DescriptionDtoSourceTypeELASTICSEARCH             DescriptionDtoSourceType = "ELASTICSEARCH"
	DescriptionDtoSourceTypeELEMENTARY                DescriptionDtoSourceType = "ELEMENTARY"
	DescriptionDtoSourceTypeELLUCIAN                  DescriptionDtoSourceType = "ELLUCIAN"
	DescriptionDtoSourceTypeELOQUA                    DescriptionDtoSourceType = "ELOQUA"
	DescriptionDtoSourceTypeEMAIL                     DescriptionDtoSourceType = "EMAIL"
	DescriptionDtoSourceTypeEMPLOYMENTHERO            DescriptionDtoSourceType = "EMPLOYMENT_HERO"
	DescriptionDtoSourceTypeEPICORPROPHET21           DescriptionDtoSourceType = "EPICOR_PROPHET_21"
	DescriptionDtoSourceTypeEVENTBRITE                DescriptionDtoSourceType = "EVENTBRITE"
	DescriptionDtoSourceTypeEVERHOUR                  DescriptionDtoSourceType = "EVERHOUR"
	DescriptionDtoSourceTypeEXCEL                     DescriptionDtoSourceType = "EXCEL"
	DescriptionDtoSourceTypeEXPENSIFY                 DescriptionDtoSourceType = "EXPENSIFY"
	DescriptionDtoSourceTypeFACEBOOK                  DescriptionDtoSourceType = "FACEBOOK"
	DescriptionDtoSourceTypeFIFTEENFIVE               DescriptionDtoSourceType = "FIFTEENFIVE"
	DescriptionDtoSourceTypeFIGMA                     DescriptionDtoSourceType = "FIGMA"
	DescriptionDtoSourceTypeFIREBASE                  DescriptionDtoSourceType = "FIREBASE"
	DescriptionDtoSourceTypeFIREBOLT                  DescriptionDtoSourceType = "FIREBOLT"
	DescriptionDtoSourceTypeFIVETRAN                  DescriptionDtoSourceType = "FIVETRAN"
	DescriptionDtoSourceTypeFLEXPORT                  DescriptionDtoSourceType = "FLEXPORT"
	DescriptionDtoSourceTypeFORJ                      DescriptionDtoSourceType = "FORJ"
	DescriptionDtoSourceTypeFOUNTAIN                  DescriptionDtoSourceType = "FOUNTAIN"
	DescriptionDtoSourceTypeFREIGHTVIEW               DescriptionDtoSourceType = "FREIGHTVIEW"
	DescriptionDtoSourceTypeFRESHBOOKS                DescriptionDtoSourceType = "FRESHBOOKS"
	DescriptionDtoSourceTypeFRESHCHAT                 DescriptionDtoSourceType = "FRESHCHAT"
	DescriptionDtoSourceTypeFRESHDESK                 DescriptionDtoSourceType = "FRESHDESK"
	DescriptionDtoSourceTypeFRESHDESKCONTACTCENTER    DescriptionDtoSourceType = "FRESHDESK_CONTACT_CENTER"
	DescriptionDtoSourceTypeFRESHSERVICE              DescriptionDtoSourceType = "FRESHSERVICE"
	DescriptionDtoSourceTypeFRESHSUCCESS              DescriptionDtoSourceType = "FRESHSUCCESS"
	DescriptionDtoSourceTypeFRESHTEAM                 DescriptionDtoSourceType = "FRESHTEAM"
	DescriptionDtoSourceTypeFRIENDBUY                 DescriptionDtoSourceType = "FRIENDBUY"
	DescriptionDtoSourceTypeFRONT                     DescriptionDtoSourceType = "FRONT"
	DescriptionDtoSourceTypeFTP                       DescriptionDtoSourceType = "FTP"
	DescriptionDtoSourceTypeFULLSTORY                 DescriptionDtoSourceType = "FULLSTORY"
	DescriptionDtoSourceTypeG2                        DescriptionDtoSourceType = "G2"
	DescriptionDtoSourceTypeGAINSIGHT                 DescriptionDtoSourceType = "GAINSIGHT"
	DescriptionDtoSourceTypeGEM                       DescriptionDtoSourceType = "GEM"
	DescriptionDtoSourceTypeGIT                       DescriptionDtoSourceType = "GIT"
	DescriptionDtoSourceTypeGITHUB                    DescriptionDtoSourceType = "GITHUB"
	DescriptionDtoSourceTypeGITLAB                    DescriptionDtoSourceType = "GITLAB"
	DescriptionDtoSourceTypeGLADLY                    DescriptionDtoSourceType = "GLADLY"
	DescriptionDtoSourceTypeGOCARDLESS                DescriptionDtoSourceType = "GOCARDLESS"
	DescriptionDtoSourceTypeGONG                      DescriptionDtoSourceType = "GONG"
	DescriptionDtoSourceTypeGOOGLE                    DescriptionDtoSourceType = "GOOGLE"
	DescriptionDtoSourceTypeGOOGLEADMANAGER           DescriptionDtoSourceType = "GOOGLE_AD_MANAGER"
	DescriptionDtoSourceTypeGOOGLEADS                 DescriptionDtoSourceType = "GOOGLE_ADS"
	DescriptionDtoSourceTypeGOOGLEANALYTICS           DescriptionDtoSourceType = "GOOGLE_ANALYTICS"
	DescriptionDtoSourceTypeGOOGLECALENDAR            DescriptionDtoSourceType = "GOOGLE_CALENDAR"
	DescriptionDtoSourceTypeGOOGLECAMPAIGNMANAGER     DescriptionDtoSourceType = "GOOGLE_CAMPAIGN_MANAGER"
	DescriptionDtoSourceTypeGOOGLECHROME              DescriptionDtoSourceType = "GOOGLE_CHROME"
	DescriptionDtoSourceTypeGOOGLECLOUD               DescriptionDtoSourceType = "GOOGLE_CLOUD"
	DescriptionDtoSourceTypeGOOGLECLOUDSTORAGE        DescriptionDtoSourceType = "GOOGLE_CLOUD_STORAGE"
	DescriptionDtoSourceTypeGOOGLEDISPLAY             DescriptionDtoSourceType = "GOOGLE_DISPLAY"
	DescriptionDtoSourceTypeGOOGLEDRIVE               DescriptionDtoSourceType = "GOOGLE_DRIVE"
	DescriptionDtoSourceTypeGOOGLEPLAY                DescriptionDtoSourceType = "GOOGLE_PLAY"
	DescriptionDtoSourceTypeGOOGLESEARCHADS360        DescriptionDtoSourceType = "GOOGLE_SEARCH_ADS_360"
	DescriptionDtoSourceTypeGOOGLESEARCHCONSOLE       DescriptionDtoSourceType = "GOOGLE_SEARCH_CONSOLE"
	DescriptionDtoSourceTypeGOOGLESHEETS              DescriptionDtoSourceType = "GOOGLE_SHEETS"
	DescriptionDtoSourceTypeGOOGLETASKS               DescriptionDtoSourceType = "GOOGLE_TASKS"
	DescriptionDtoSourceTypeGORGIAS                   DescriptionDtoSourceType = "GORGIAS"
	DescriptionDtoSourceTypeGREENHOUSE                DescriptionDtoSourceType = "GREENHOUSE"
	DescriptionDtoSourceTypeGREENPLUM                 DescriptionDtoSourceType = "GREENPLUM"
	DescriptionDtoSourceTypeGREENPOWERMONITOR         DescriptionDtoSourceType = "GREEN_POWER_MONITOR"
	DescriptionDtoSourceTypeGREPSR                    DescriptionDtoSourceType = "GREPSR"
	DescriptionDtoSourceTypeGRIN                      DescriptionDtoSourceType = "GRIN"
	DescriptionDtoSourceTypeGURU                      DescriptionDtoSourceType = "GURU"
	DescriptionDtoSourceTypeH2                        DescriptionDtoSourceType = "H2"
	DescriptionDtoSourceTypeHARVEST                   DescriptionDtoSourceType = "HARVEST"
	DescriptionDtoSourceTypeHDFS                      DescriptionDtoSourceType = "HDFS"
	DescriptionDtoSourceTypeHDFSSTORAGE               DescriptionDtoSourceType = "HDFS_STORAGE"
	DescriptionDtoSourceTypeHEAP                      DescriptionDtoSourceType = "HEAP"
	DescriptionDtoSourceTypeHEIGHT                    DescriptionDtoSourceType = "HEIGHT"
	DescriptionDtoSourceTypeHELPSCOUT                 DescriptionDtoSourceType = "HELP_SCOUT"
	DescriptionDtoSourceTypeHELPSHIFT                 DescriptionDtoSourceType = "HELPSHIFT"
	DescriptionDtoSourceTypeHEROKUKAFKA               DescriptionDtoSourceType = "HEROKU_KAFKA"
	DescriptionDtoSourceTypeHIBOB                     DescriptionDtoSourceType = "HIBOB"
	DescriptionDtoSourceTypeHIGHTOUCH                 DescriptionDtoSourceType = "HIGH_TOUCH"
	DescriptionDtoSourceTypeHIVE                      DescriptionDtoSourceType = "HIVE"
	DescriptionDtoSourceTypeHIVEPROCESS               DescriptionDtoSourceType = "HIVE_PROCESS"
	DescriptionDtoSourceTypeHOPIN                     DescriptionDtoSourceType = "HOPIN"
	DescriptionDtoSourceTypeHUBSPOT                   DescriptionDtoSourceType = "HUBSPOT"
	DescriptionDtoSourceTypeIMPACT                    DescriptionDtoSourceType = "IMPACT"
	DescriptionDtoSourceTypeINCIDENTIO                DescriptionDtoSourceType = "INCIDENT_IO"
	DescriptionDtoSourceTypeINFOBIP                   DescriptionDtoSourceType = "INFOBIP"
	DescriptionDtoSourceTypeINFORMATICA               DescriptionDtoSourceType = "INFORMATICA"
	DescriptionDtoSourceTypeINSIGHTLY                 DescriptionDtoSourceType = "INSIGHTLY"
	DescriptionDtoSourceTypeINSTAGRAM                 DescriptionDtoSourceType = "INSTAGRAM"
	DescriptionDtoSourceTypeINTERCOM                  DescriptionDtoSourceType = "INTERCOM"
	DescriptionDtoSourceTypeINVESTOPEDIA              DescriptionDtoSourceType = "INVESTOPEDIA"
	DescriptionDtoSourceTypeIRONCLAD                  DescriptionDtoSourceType = "IRONCLAD"
	DescriptionDtoSourceTypeIRONSOURCE                DescriptionDtoSourceType = "IRONSOURCE"
	DescriptionDtoSourceTypeITERABLE                  DescriptionDtoSourceType = "ITERABLE"
	DescriptionDtoSourceTypeJAVA                      DescriptionDtoSourceType = "JAVA"
	DescriptionDtoSourceTypeJENKINS                   DescriptionDtoSourceType = "JENKINS"
	DescriptionDtoSourceTypeJUSTCALL                  DescriptionDtoSourceType = "JUSTCALL"
	DescriptionDtoSourceTypeKANDJI                    DescriptionDtoSourceType = "KANDJI"
	DescriptionDtoSourceTypeKENSU                     DescriptionDtoSourceType = "KENSU"
	DescriptionDtoSourceTypeKHOROSCARE                DescriptionDtoSourceType = "KHOROS_CARE"
	DescriptionDtoSourceTypeKISSMETRICS               DescriptionDtoSourceType = "KISSMETRICS"
	DescriptionDtoSourceTypeKLAVIYO                   DescriptionDtoSourceType = "KLAVIYO"
	DescriptionDtoSourceTypeKNOWBE4                   DescriptionDtoSourceType = "KNOWBE4"
	DescriptionDtoSourceTypeKONNECTINSIGHTS           DescriptionDtoSourceType = "KONNECT_INSIGHTS"
	DescriptionDtoSourceTypeKUSTOMER                  DescriptionDtoSourceType = "KUSTOMER"
	DescriptionDtoSourceTypeLARIATDATA                DescriptionDtoSourceType = "LARIAT_DATA"
	DescriptionDtoSourceTypeLATTICE                   DescriptionDtoSourceType = "LATTICE"
	DescriptionDtoSourceTypeLAUNCHDARKLY              DescriptionDtoSourceType = "LAUNCH_DARKLY"
	DescriptionDtoSourceTypeLEARNUPON                 DescriptionDtoSourceType = "LEARN_UPON"
	DescriptionDtoSourceTypeLESSONLY                  DescriptionDtoSourceType = "LESSONLY"
	DescriptionDtoSourceTypeLEVER                     DescriptionDtoSourceType = "LEVER"
	DescriptionDtoSourceTypeLIFTOFF                   DescriptionDtoSourceType = "LIFTOFF"
	DescriptionDtoSourceTypeLIGHTDASH                 DescriptionDtoSourceType = "LIGHTDASH"
	DescriptionDtoSourceTypeLIGHTSPEED                DescriptionDtoSourceType = "LIGHTSPEED"
	DescriptionDtoSourceTypeLIGHTSUP                  DescriptionDtoSourceType = "LIGHTSUP"
	DescriptionDtoSourceTypeLINEAR                    DescriptionDtoSourceType = "LINEAR"
	DescriptionDtoSourceTypeLINKEDIN                  DescriptionDtoSourceType = "LINKEDIN"
	DescriptionDtoSourceTypeLIVECHAT                  DescriptionDtoSourceType = "LIVECHAT"
	DescriptionDtoSourceTypeLOADEDCOMMERCE            DescriptionDtoSourceType = "LOADED_COMMERCE"
	DescriptionDtoSourceTypeLOB                       DescriptionDtoSourceType = "LOB"
	DescriptionDtoSourceTypeLOOKER                    DescriptionDtoSourceType = "LOOKER"
	DescriptionDtoSourceTypeLOOP                      DescriptionDtoSourceType = "LOOP"
	DescriptionDtoSourceTypeLOOPIO                    DescriptionDtoSourceType = "LOOPIO"
	DescriptionDtoSourceTypeLUMA                      DescriptionDtoSourceType = "LUMA"
	DescriptionDtoSourceTypeMAGENTO                   DescriptionDtoSourceType = "MAGENTO"
	DescriptionDtoSourceTypeMAILCHIMP                 DescriptionDtoSourceType = "MAILCHIMP"
	DescriptionDtoSourceTypeMAILGUN                   DescriptionDtoSourceType = "MAILGUN"
	DescriptionDtoSourceTypeMANDRILL                  DescriptionDtoSourceType = "MANDRILL"
	DescriptionDtoSourceTypeMANTA                     DescriptionDtoSourceType = "MANTA"
	DescriptionDtoSourceTypeMARIADB                   DescriptionDtoSourceType = "MARIADB"
	DescriptionDtoSourceTypeMARINSOFTWARE             DescriptionDtoSourceType = "MARIN_SOFTWARE"
	DescriptionDtoSourceTypeMARKETO                   DescriptionDtoSourceType = "MARKETO"
	DescriptionDtoSourceTypeMATTERMOST                DescriptionDtoSourceType = "MATTERMOST"
	DescriptionDtoSourceTypeMAVENLINK                 DescriptionDtoSourceType = "MAVENLINK"
	DescriptionDtoSourceTypeMAXIO                     DescriptionDtoSourceType = "MAXIO"
	DescriptionDtoSourceTypeMEDALLIA                  DescriptionDtoSourceType = "MEDALLIA"
	DescriptionDtoSourceTypeMETA                      DescriptionDtoSourceType = "META"
	DescriptionDtoSourceTypeMETABASE                  DescriptionDtoSourceType = "METABASE"
	DescriptionDtoSourceTypeMETAPHOR                  DescriptionDtoSourceType = "METAPHOR"
	DescriptionDtoSourceTypeMETAPLANE                 DescriptionDtoSourceType = "METAPLANE"
	DescriptionDtoSourceTypeMICROSOFT                 DescriptionDtoSourceType = "MICROSOFT"
	DescriptionDtoSourceTypeMICROSOFTAZUREBLOBSTORAGE DescriptionDtoSourceType = "MICROSOFT_AZURE_BLOB_STORAGE"
	DescriptionDtoSourceTypeMICROSOFTAZUREML          DescriptionDtoSourceType = "MICROSOFT_AZURE_ML"
	DescriptionDtoSourceTypeMICROSOFTDYNAMICS         DescriptionDtoSourceType = "MICROSOFT_DYNAMICS"
	DescriptionDtoSourceTypeMICROSOFTONEDRIVE         DescriptionDtoSourceType = "MICROSOFT_ONEDRIVE"
	DescriptionDtoSourceTypeMICROSOFTPURVIEW          DescriptionDtoSourceType = "MICROSOFT_PURVIEW"
	DescriptionDtoSourceTypeMICROSOFTTEAMS            DescriptionDtoSourceType = "MICROSOFT_TEAMS"
	DescriptionDtoSourceTypeMICROSTRATEGY             DescriptionDtoSourceType = "MICROSTRATEGY"
	DescriptionDtoSourceTypeMIXMAX                    DescriptionDtoSourceType = "MIXMAX"
	DescriptionDtoSourceTypeMIXPANEL                  DescriptionDtoSourceType = "MIXPANEL"
	DescriptionDtoSourceTypeMONDAYCOM                 DescriptionDtoSourceType = "MONDAY_COM"
	DescriptionDtoSourceTypeMONGODB                   DescriptionDtoSourceType = "MONGODB"
	DescriptionDtoSourceTypeMONTECARLO                DescriptionDtoSourceType = "MONTE_CARLO"
	DescriptionDtoSourceTypeMOUNTAIN                  DescriptionDtoSourceType = "MOUNTAIN"
	DescriptionDtoSourceTypeMSSQL                     DescriptionDtoSourceType = "MSSQL"
	DescriptionDtoSourceTypeMULESOFT                  DescriptionDtoSourceType = "MULESOFT"
	DescriptionDtoSourceTypeMUX                       DescriptionDtoSourceType = "MUX"
	DescriptionDtoSourceTypeMWAA                      DescriptionDtoSourceType = "MWAA"
	DescriptionDtoSourceTypeMYSQL                     DescriptionDtoSourceType = "MYSQL"
	DescriptionDtoSourceTypeNAMELY                    DescriptionDtoSourceType = "NAMELY"
	DescriptionDtoSourceTypeNCINO                     DescriptionDtoSourceType = "NCINO"
	DescriptionDtoSourceTypeNETSUITEANALYTICS         DescriptionDtoSourceType = "NETSUITE_ANALYTICS"
	DescriptionDtoSourceTypeNEWRELIC                  DescriptionDtoSourceType = "NEW_RELIC"
	DescriptionDtoSourceTypeNOTION                    DescriptionDtoSourceType = "NOTION"
	DescriptionDtoSourceTypeNYLAS                     DescriptionDtoSourceType = "NYLAS"
	DescriptionDtoSourceTypeOBSERVE                   DescriptionDtoSourceType = "OBSERVE"
	DescriptionDtoSourceTypeOCTOPAI                   DescriptionDtoSourceType = "OCTOPAI"
	DescriptionDtoSourceTypeOKTA                      DescriptionDtoSourceType = "OKTA"
	DescriptionDtoSourceTypeOPENAI                    DescriptionDtoSourceType = "OPEN_AI"
	DescriptionDtoSourceTypeOPENDATADC                DescriptionDtoSourceType = "OPEN_DATA_DC"
	DescriptionDtoSourceTypeOPENEXCHANGESRATES        DescriptionDtoSourceType = "OPEN_EXCHANGES_RATES"
	DescriptionDtoSourceTypeOPENSEARCH                DescriptionDtoSourceType = "OPEN_SEARCH"
	DescriptionDtoSourceTypeOPTIMIZELY                DescriptionDtoSourceType = "OPTIMIZELY"
	DescriptionDtoSourceTypeORACLE                    DescriptionDtoSourceType = "ORACLE"
	DescriptionDtoSourceTypeORBITCOMMUNITYPLATFORM    DescriptionDtoSourceType = "ORBIT_COMMUNITY_PLATFORM"
	DescriptionDtoSourceTypeORDWAY                    DescriptionDtoSourceType = "ORDWAY"
	DescriptionDtoSourceTypeORTTO                     DescriptionDtoSourceType = "ORTTO"
	DescriptionDtoSourceTypeOSCOMMERCE                DescriptionDtoSourceType = "OS_COMMERCE"
	DescriptionDtoSourceTypeOUTBRAIN                  DescriptionDtoSourceType = "OUTBRAIN"
	DescriptionDtoSourceTypeOUTREACH                  DescriptionDtoSourceType = "OUTREACH"
	DescriptionDtoSourceTypeOVALEDGE                  DescriptionDtoSourceType = "OVALEDGE"
	DescriptionDtoSourceTypePAGERDUTY                 DescriptionDtoSourceType = "PAGERDUTY"
	DescriptionDtoSourceTypePAGERSHIFT                DescriptionDtoSourceType = "PAGERSHIFT"
	DescriptionDtoSourceTypePAYPAL                    DescriptionDtoSourceType = "PAYPAL"
	DescriptionDtoSourceTypePENDO                     DescriptionDtoSourceType = "PENDO"
	DescriptionDtoSourceTypePINGDOM                   DescriptionDtoSourceType = "PINGDOM"
	DescriptionDtoSourceTypePINTEREST                 DescriptionDtoSourceType = "PINTEREST"
	DescriptionDtoSourceTypePIPE17                    DescriptionDtoSourceType = "PIPE17"
	DescriptionDtoSourceTypePIPEDRIVE                 DescriptionDtoSourceType = "PIPEDRIVE"
	DescriptionDtoSourceTypePIVOTALTRACKER            DescriptionDtoSourceType = "PIVOTAL_TRACKER"
	DescriptionDtoSourceTypePLAYVOX                   DescriptionDtoSourceType = "PLAYVOX"
	DescriptionDtoSourceTypePOSTGRES                  DescriptionDtoSourceType = "POSTGRES"
	DescriptionDtoSourceTypePOSTHOG                   DescriptionDtoSourceType = "POSTHOG"
	DescriptionDtoSourceTypePOWERBI                   DescriptionDtoSourceType = "POWER_BI"
	DescriptionDtoSourceTypePOWERSCHOOL               DescriptionDtoSourceType = "POWERSCHOOL"
	DescriptionDtoSourceTypePREFECT                   DescriptionDtoSourceType = "PREFECT"
	DescriptionDtoSourceTypePRESTASHOP                DescriptionDtoSourceType = "PRESTASHOP"
	DescriptionDtoSourceTypePRESTO                    DescriptionDtoSourceType = "PRESTO"
	DescriptionDtoSourceTypePRODUCTBOARD              DescriptionDtoSourceType = "PRODUCTBOARD"
	DescriptionDtoSourceTypePYTHON                    DescriptionDtoSourceType = "PYTHON"
	DescriptionDtoSourceTypeQLIK                      DescriptionDtoSourceType = "QLIK"
	DescriptionDtoSourceTypeQUALAROO                  DescriptionDtoSourceType = "QUALAROO"
	DescriptionDtoSourceTypeQUALTRICS                 DescriptionDtoSourceType = "QUALTRICS"
	DescriptionDtoSourceTypeQUICKBOOKS                DescriptionDtoSourceType = "QUICKBOOKS"
	DescriptionDtoSourceTypeQUICKSIGHT                DescriptionDtoSourceType = "QUICKSIGHT"
	DescriptionDtoSourceTypeRAMP                      DescriptionDtoSourceType = "RAMP"
	DescriptionDtoSourceTypeRARIBLE                   DescriptionDtoSourceType = "RARIBLE"
	DescriptionDtoSourceTypeRECHARGE                  DescriptionDtoSourceType = "RECHARGE"
	DescriptionDtoSourceTypeRECURLY                   DescriptionDtoSourceType = "RECURLY"
	DescriptionDtoSourceTypeREDDIT                    DescriptionDtoSourceType = "REDDIT"
	DescriptionDtoSourceTypeREDSHIFT                  DescriptionDtoSourceType = "REDSHIFT"
	DescriptionDtoSourceTypeRELTIO                    DescriptionDtoSourceType = "RELTIO"
	DescriptionDtoSourceTypeREPLYIO                   DescriptionDtoSourceType = "REPLY_IO"
	DescriptionDtoSourceTypeRETAILNEXT                DescriptionDtoSourceType = "RETAILNEXT"
	DescriptionDtoSourceTypeRETENTLY                  DescriptionDtoSourceType = "RETENTLY"
	DescriptionDtoSourceTypeREVELSYSTEMS              DescriptionDtoSourceType = "REVEL_SYSTEMS"
	DescriptionDtoSourceTypeRINGCENTRAL               DescriptionDtoSourceType = "RINGCENTRAL"
	DescriptionDtoSourceTypeRIPPLING                  DescriptionDtoSourceType = "RIPPLING"
	DescriptionDtoSourceTypeROLLBAR                   DescriptionDtoSourceType = "ROLLBAR"
	DescriptionDtoSourceTypeROOTLY                    DescriptionDtoSourceType = "ROOTLY"
	DescriptionDtoSourceTypeS3                        DescriptionDtoSourceType = "S3"
	DescriptionDtoSourceTypeSAGEHR                    DescriptionDtoSourceType = "SAGE_HR"
	DescriptionDtoSourceTypeSAGEINTACCT               DescriptionDtoSourceType = "SAGE_INTACCT"
	DescriptionDtoSourceTypeSAILTHRU                  DescriptionDtoSourceType = "SAILTHRU"
	DescriptionDtoSourceTypeSALESFORCE                DescriptionDtoSourceType = "SALESFORCE"
	DescriptionDtoSourceTypeSALESLOFT                 DescriptionDtoSourceType = "SALESLOFT"
	DescriptionDtoSourceTypeSALSIFY                   DescriptionDtoSourceType = "SALSIFY"
	DescriptionDtoSourceTypeSAMSARA                   DescriptionDtoSourceType = "SAMSARA"
	DescriptionDtoSourceTypeSAP                       DescriptionDtoSourceType = "SAP"
	DescriptionDtoSourceTypeSAPCONCUR                 DescriptionDtoSourceType = "SAP_CONCUR"
	DescriptionDtoSourceTypeSCORM                     DescriptionDtoSourceType = "SCORM"
	DescriptionDtoSourceTypeSECODA                    DescriptionDtoSourceType = "SECODA"
	DescriptionDtoSourceTypeSECURITYJOURNEY           DescriptionDtoSourceType = "SECURITY_JOURNEY"
	DescriptionDtoSourceTypeSEGMENT                   DescriptionDtoSourceType = "SEGMENT"
	DescriptionDtoSourceTypeSELECTSTAR                DescriptionDtoSourceType = "SELECT_STAR"
	DescriptionDtoSourceTypeSENDGRID                  DescriptionDtoSourceType = "SENDGRID"
	DescriptionDtoSourceTypeSERVICENOW                DescriptionDtoSourceType = "SERVICE_NOW"
	DescriptionDtoSourceTypeSFTP                      DescriptionDtoSourceType = "SFTP"
	DescriptionDtoSourceTypeSHAREPOINT                DescriptionDtoSourceType = "SHAREPOINT"
	DescriptionDtoSourceTypeSHARETRIBE                DescriptionDtoSourceType = "SHARETRIBE"
	DescriptionDtoSourceTypeSHIPHERO                  DescriptionDtoSourceType = "SHIPHERO"
	DescriptionDtoSourceTypeSHIPSTATION               DescriptionDtoSourceType = "SHIPSTATION"
	DescriptionDtoSourceTypeSHOPIFY                   DescriptionDtoSourceType = "SHOPIFY"
	DescriptionDtoSourceTypeSHOPWARE                  DescriptionDtoSourceType = "SHOPWARE"
	DescriptionDtoSourceTypeSHORTIO                   DescriptionDtoSourceType = "SHORT_IO"
	DescriptionDtoSourceTypeSIFFLET                   DescriptionDtoSourceType = "SIFFLET"
	DescriptionDtoSourceTypeSIGMA                     DescriptionDtoSourceType = "SIGMA"
	DescriptionDtoSourceTypeSIMPLECAST                DescriptionDtoSourceType = "SIMPLECAST"
	DescriptionDtoSourceTypeSIMPLESAT                 DescriptionDtoSourceType = "SIMPLESAT"
	DescriptionDtoSourceTypeSINGLESTORE               DescriptionDtoSourceType = "SINGLESTORE"
	DescriptionDtoSourceTypeSISENSE                   DescriptionDtoSourceType = "SISENSE"
	DescriptionDtoSourceTypeSIXSENSE                  DescriptionDtoSourceType = "SIXSENSE"
	DescriptionDtoSourceTypeSKILLJAR                  DescriptionDtoSourceType = "SKILLJAR"
	DescriptionDtoSourceTypeSKUVAULT                  DescriptionDtoSourceType = "SKUVAULT"
	DescriptionDtoSourceTypeSLAB                      DescriptionDtoSourceType = "SLAB"
	DescriptionDtoSourceTypeSLACK                     DescriptionDtoSourceType = "SLACK"
	DescriptionDtoSourceTypeSMADEX                    DescriptionDtoSourceType = "SMADEX"
	DescriptionDtoSourceTypeSNAPCHAT                  DescriptionDtoSourceType = "SNAPCHAT"
	DescriptionDtoSourceTypeSNOWFLAKE                 DescriptionDtoSourceType = "SNOWFLAKE"
	DescriptionDtoSourceTypeSNOWPLOW                  DescriptionDtoSourceType = "SNOWPLOW"
	DescriptionDtoSourceTypeSODA                      DescriptionDtoSourceType = "SODA"
	DescriptionDtoSourceTypeSONARQUBE                 DescriptionDtoSourceType = "SONARQUBE"
	DescriptionDtoSourceTypeSPARKPROCESS              DescriptionDtoSourceType = "SPARK_PROCESS"
	DescriptionDtoSourceTypeSPLITIO                   DescriptionDtoSourceType = "SPLIT_IO"
	DescriptionDtoSourceTypeSPLUNK                    DescriptionDtoSourceType = "SPLUNK"
	DescriptionDtoSourceTypeSPOTIFY                   DescriptionDtoSourceType = "SPOTIFY"
	DescriptionDtoSourceTypeSPREECOMMERCE             DescriptionDtoSourceType = "SPREE_COMMERCE"
	DescriptionDtoSourceTypeSPROUTSOCIAL              DescriptionDtoSourceType = "SPROUT_SOCIAL"
	DescriptionDtoSourceTypeSQUARE                    DescriptionDtoSourceType = "SQUARE"
	DescriptionDtoSourceTypeSQUARESPACE               DescriptionDtoSourceType = "SQUARESPACE"
	DescriptionDtoSourceTypeSTACKADAPT                DescriptionDtoSourceType = "STACK_ADAPT"
	DescriptionDtoSourceTypeSTATSIG                   DescriptionDtoSourceType = "STATSIG"
	DescriptionDtoSourceTypeSTITCH                    DescriptionDtoSourceType = "STITCH"
	DescriptionDtoSourceTypeSTRIPE                    DescriptionDtoSourceType = "STRIPE"
	DescriptionDtoSourceTypeSTYLIGHT                  DescriptionDtoSourceType = "STYLIGHT"
	DescriptionDtoSourceTypeSUBSCRIPT                 DescriptionDtoSourceType = "SUBSCRIPT"
	DescriptionDtoSourceTypeSYNAPSE                   DescriptionDtoSourceType = "SYNAPSE"
	DescriptionDtoSourceTypeTABLEAU                   DescriptionDtoSourceType = "TABLEAU"
	DescriptionDtoSourceTypeTABOOLA                   DescriptionDtoSourceType = "TABOOLA"
	DescriptionDtoSourceTypeTALEND                    DescriptionDtoSourceType = "TALEND"
	DescriptionDtoSourceTypeTALKDESK                  DescriptionDtoSourceType = "TALKDESK"
	DescriptionDtoSourceTypeTALKWALKER                DescriptionDtoSourceType = "TALKWALKER"
	DescriptionDtoSourceTypeTEAMWORKCOM               DescriptionDtoSourceType = "TEAMWORK_COM"
	DescriptionDtoSourceTypeTEMPOIO                   DescriptionDtoSourceType = "TEMPO_IO"
	DescriptionDtoSourceTypeTERADATA                  DescriptionDtoSourceType = "TERADATA"
	DescriptionDtoSourceTypeTERRAFORM                 DescriptionDtoSourceType = "TERRAFORM"
	DescriptionDtoSourceTypeTHETRADEDESK              DescriptionDtoSourceType = "THE_TRADE_DESK"
	DescriptionDtoSourceTypeTHOUGHTSPOT               DescriptionDtoSourceType = "THOUGHT_SPOT"
	DescriptionDtoSourceTypeTHREESIXTYLEARNING        DescriptionDtoSourceType = "THREESIXTYLEARNING"
	DescriptionDtoSourceTypeTIKTOK                    DescriptionDtoSourceType = "TIKTOK"
	DescriptionDtoSourceTypeTOGGL                     DescriptionDtoSourceType = "TOGGL"
	DescriptionDtoSourceTypeTRANSCEND                 DescriptionDtoSourceType = "TRANSCEND"
	DescriptionDtoSourceTypeTRELLO                    DescriptionDtoSourceType = "TRELLO"
	DescriptionDtoSourceTypeTRINET                    DescriptionDtoSourceType = "TRINET"
	DescriptionDtoSourceTypeTRISOLUTE                 DescriptionDtoSourceType = "TRISOLUTE"
	DescriptionDtoSourceTypeTWILIO                    DescriptionDtoSourceType = "TWILIO"
	DescriptionDtoSourceTypeTYPEFORM                  DescriptionDtoSourceType = "TYPEFORM"
	DescriptionDtoSourceTypeUNKNOWN                   DescriptionDtoSourceType = "UNKNOWN"
	DescriptionDtoSourceTypeUPLAND                    DescriptionDtoSourceType = "UPLAND"
	DescriptionDtoSourceTypeUSERVOICE                 DescriptionDtoSourceType = "USERVOICE"
	DescriptionDtoSourceTypeVALIDIO                   DescriptionDtoSourceType = "VALIDIO"
	DescriptionDtoSourceTypeVEEVA                     DescriptionDtoSourceType = "VEEVA"
	DescriptionDtoSourceTypeVERIZONMEDIA              DescriptionDtoSourceType = "VERIZON_MEDIA"
	DescriptionDtoSourceTypeVITALLY                   DescriptionDtoSourceType = "VITALLY"
	DescriptionDtoSourceTypeVONAGE                    DescriptionDtoSourceType = "VONAGE"
	DescriptionDtoSourceTypeVUETIFY                   DescriptionDtoSourceType = "VUETIFY"
	DescriptionDtoSourceTypeWEBHOOKS                  DescriptionDtoSourceType = "WEBHOOKS"
	DescriptionDtoSourceTypeWEBSCRAPER                DescriptionDtoSourceType = "WEB_SCRAPER"
	DescriptionDtoSourceTypeWHENIWORK                 DescriptionDtoSourceType = "WHEN_I_WORK"
	DescriptionDtoSourceTypeWHEREFOUR                 DescriptionDtoSourceType = "WHEREFOUR"
	DescriptionDtoSourceTypeWIKIPEDIA                 DescriptionDtoSourceType = "WIKIPEDIA"
	DescriptionDtoSourceTypeWOOCOMMERCE               DescriptionDtoSourceType = "WOOCOMMERCE"
	DescriptionDtoSourceTypeWORDPRESS                 DescriptionDtoSourceType = "WORDPRESS"
	DescriptionDtoSourceTypeWORKABLE                  DescriptionDtoSourceType = "WORKABLE"
	DescriptionDtoSourceTypeWORKDAY                   DescriptionDtoSourceType = "WORKDAY"
	DescriptionDtoSourceTypeWORKFLOWMAX               DescriptionDtoSourceType = "WORKFLOW_MAX"
	DescriptionDtoSourceTypeWRIKE                     DescriptionDtoSourceType = "WRIKE"
	DescriptionDtoSourceTypeX                         DescriptionDtoSourceType = "X"
	DescriptionDtoSourceTypeXERO                      DescriptionDtoSourceType = "XERO"
	DescriptionDtoSourceTypeXRAY                      DescriptionDtoSourceType = "XRAY"
	DescriptionDtoSourceTypeYAHOO                     DescriptionDtoSourceType = "YAHOO"
	DescriptionDtoSourceTypeYOTPO                     DescriptionDtoSourceType = "YOTPO"
	DescriptionDtoSourceTypeYOUTUBE                   DescriptionDtoSourceType = "YOUTUBE"
	DescriptionDtoSourceTypeZEENEA                    DescriptionDtoSourceType = "ZEENEA"
	DescriptionDtoSourceTypeZENCART                   DescriptionDtoSourceType = "ZEN_CART"
	DescriptionDtoSourceTypeZENDESKCHAT               DescriptionDtoSourceType = "ZENDESK_CHAT"
	DescriptionDtoSourceTypeZENDESKSELL               DescriptionDtoSourceType = "ZENDESK_SELL"
	DescriptionDtoSourceTypeZENDESKSUNSHINE           DescriptionDtoSourceType = "ZENDESK_SUNSHINE"
	DescriptionDtoSourceTypeZENDESKSUPPORT            DescriptionDtoSourceType = "ZENDESK_SUPPORT"
	DescriptionDtoSourceTypeZINGTREE                  DescriptionDtoSourceType = "ZINGTREE"
	DescriptionDtoSourceTypeZOHOBOOKS                 DescriptionDtoSourceType = "ZOHO_BOOKS"
	DescriptionDtoSourceTypeZOHOCAMPAIGNS             DescriptionDtoSourceType = "ZOHO_CAMPAIGNS"
	DescriptionDtoSourceTypeZOHOCRM                   DescriptionDtoSourceType = "ZOHO_CRM"
	DescriptionDtoSourceTypeZOOM                      DescriptionDtoSourceType = "ZOOM"
	DescriptionDtoSourceTypeZUORA                     DescriptionDtoSourceType = "ZUORA"
)

// Defines values for FieldDtoEntityType.
const (
	FieldDtoEntityTypeACCESSTOKEN                  FieldDtoEntityType = "ACCESS_TOKEN"
	FieldDtoEntityTypeALERTINGHOOK                 FieldDtoEntityType = "ALERTING_HOOK"
	FieldDtoEntityTypeCHART                        FieldDtoEntityType = "CHART"
	FieldDtoEntityTypeCOLLECTION                   FieldDtoEntityType = "COLLECTION"
	FieldDtoEntityTypeCONFIG                       FieldDtoEntityType = "CONFIG"
	FieldDtoEntityTypeDAG                          FieldDtoEntityType = "DAG"
	FieldDtoEntityTypeDASHBOARD                    FieldDtoEntityType = "DASHBOARD"
	FieldDtoEntityTypeDATAPOINTQUALIFICATION       FieldDtoEntityType = "DATAPOINT_QUALIFICATION"
	FieldDtoEntityTypeDATASET                      FieldDtoEntityType = "DATASET"
	FieldDtoEntityTypeDATASETFIELD                 FieldDtoEntityType = "DATASET_FIELD"
	FieldDtoEntityTypeDATASOURCE                   FieldDtoEntityType = "DATASOURCE"
	FieldDtoEntityTypeDATASOURCEINGESTIONRUN       FieldDtoEntityType = "DATASOURCE_INGESTION_RUN"
	FieldDtoEntityTypeDECLAREDASSET                FieldDtoEntityType = "DECLARED_ASSET"
	FieldDtoEntityTypeDOMAIN                       FieldDtoEntityType = "DOMAIN"
	FieldDtoEntityTypeINCIDENT                     FieldDtoEntityType = "INCIDENT"
	FieldDtoEntityTypeRULEMONITORINGRECOMMENDATION FieldDtoEntityType = "RULE_MONITORING_RECOMMENDATION"
	FieldDtoEntityTypeRULERUN                      FieldDtoEntityType = "RULE_RUN"
	FieldDtoEntityTypeSIFFLETAGENT                 FieldDtoEntityType = "SIFFLET_AGENT"
	FieldDtoEntityTypeSIFFLETRULE                  FieldDtoEntityType = "SIFFLET_RULE"
	FieldDtoEntityTypeTAG                          FieldDtoEntityType = "TAG"
	FieldDtoEntityTypeTRANSFORMATION               FieldDtoEntityType = "TRANSFORMATION"
	FieldDtoEntityTypeUSER                         FieldDtoEntityType = "USER"
	FieldDtoEntityTypeWEBHOOK                      FieldDtoEntityType = "WEBHOOK"
)

// Defines values for FieldLevelSearchDtoDisplayedType.
const (
	FieldLevelSearchDtoDisplayedTypeCONNECTOR        FieldLevelSearchDtoDisplayedType = "CONNECTOR"
	FieldLevelSearchDtoDisplayedTypeDAG              FieldLevelSearchDtoDisplayedType = "DAG"
	FieldLevelSearchDtoDisplayedTypeDASHBOARD        FieldLevelSearchDtoDisplayedType = "DASHBOARD"
	FieldLevelSearchDtoDisplayedTypeDATABASE         FieldLevelSearchDtoDisplayedType = "DATABASE"
	FieldLevelSearchDtoDisplayedTypeDECLAREDASSET    FieldLevelSearchDtoDisplayedType = "DECLARED_ASSET"
	FieldLevelSearchDtoDisplayedTypeEXTERNALTABLE    FieldLevelSearchDtoDisplayedType = "EXTERNAL_TABLE"
	FieldLevelSearchDtoDisplayedTypeFIELD            FieldLevelSearchDtoDisplayedType = "FIELD"
	FieldLevelSearchDtoDisplayedTypeMATERIALIZEDVIEW FieldLevelSearchDtoDisplayedType = "MATERIALIZED_VIEW"
	FieldLevelSearchDtoDisplayedTypeMLMODEL          FieldLevelSearchDtoDisplayedType = "ML_MODEL"
	FieldLevelSearchDtoDisplayedTypeMODEL            FieldLevelSearchDtoDisplayedType = "MODEL"
	FieldLevelSearchDtoDisplayedTypeMONITOR          FieldLevelSearchDtoDisplayedType = "MONITOR"
	FieldLevelSearchDtoDisplayedTypeNONE             FieldLevelSearchDtoDisplayedType = "NONE"
	FieldLevelSearchDtoDisplayedTypeORCHESTRATOR     FieldLevelSearchDtoDisplayedType = "ORCHESTRATOR"
	FieldLevelSearchDtoDisplayedTypePIPELINE         FieldLevelSearchDtoDisplayedType = "PIPELINE"
	FieldLevelSearchDtoDisplayedTypeREPORT           FieldLevelSearchDtoDisplayedType = "REPORT"
	FieldLevelSearchDtoDisplayedTypeSCHEMA           FieldLevelSearchDtoDisplayedType = "SCHEMA"
	FieldLevelSearchDtoDisplayedTypeSNOWFLAKESTREAM  FieldLevelSearchDtoDisplayedType = "SNOWFLAKE_STREAM"
	FieldLevelSearchDtoDisplayedTypeTABLE            FieldLevelSearchDtoDisplayedType = "TABLE"
	FieldLevelSearchDtoDisplayedTypeTRANSFORMATION   FieldLevelSearchDtoDisplayedType = "TRANSFORMATION"
	FieldLevelSearchDtoDisplayedTypeVIEW             FieldLevelSearchDtoDisplayedType = "VIEW"
)

// Defines values for FieldLevelSearchDtoEntityType.
const (
	FieldLevelSearchDtoEntityTypeACCESSTOKEN                  FieldLevelSearchDtoEntityType = "ACCESS_TOKEN"
	FieldLevelSearchDtoEntityTypeALERTINGHOOK                 FieldLevelSearchDtoEntityType = "ALERTING_HOOK"
	FieldLevelSearchDtoEntityTypeCHART                        FieldLevelSearchDtoEntityType = "CHART"
	FieldLevelSearchDtoEntityTypeCOLLECTION                   FieldLevelSearchDtoEntityType = "COLLECTION"
	FieldLevelSearchDtoEntityTypeCONFIG                       FieldLevelSearchDtoEntityType = "CONFIG"
	FieldLevelSearchDtoEntityTypeDAG                          FieldLevelSearchDtoEntityType = "DAG"
	FieldLevelSearchDtoEntityTypeDASHBOARD                    FieldLevelSearchDtoEntityType = "DASHBOARD"
	FieldLevelSearchDtoEntityTypeDATAPOINTQUALIFICATION       FieldLevelSearchDtoEntityType = "DATAPOINT_QUALIFICATION"
	FieldLevelSearchDtoEntityTypeDATASET                      FieldLevelSearchDtoEntityType = "DATASET"
	FieldLevelSearchDtoEntityTypeDATASETFIELD                 FieldLevelSearchDtoEntityType = "DATASET_FIELD"
	FieldLevelSearchDtoEntityTypeDATASOURCE                   FieldLevelSearchDtoEntityType = "DATASOURCE"
	FieldLevelSearchDtoEntityTypeDATASOURCEINGESTIONRUN       FieldLevelSearchDtoEntityType = "DATASOURCE_INGESTION_RUN"
	FieldLevelSearchDtoEntityTypeDECLAREDASSET                FieldLevelSearchDtoEntityType = "DECLARED_ASSET"
	FieldLevelSearchDtoEntityTypeDOMAIN                       FieldLevelSearchDtoEntityType = "DOMAIN"
	FieldLevelSearchDtoEntityTypeINCIDENT                     FieldLevelSearchDtoEntityType = "INCIDENT"
	FieldLevelSearchDtoEntityTypeRULEMONITORINGRECOMMENDATION FieldLevelSearchDtoEntityType = "RULE_MONITORING_RECOMMENDATION"
	FieldLevelSearchDtoEntityTypeRULERUN                      FieldLevelSearchDtoEntityType = "RULE_RUN"
	FieldLevelSearchDtoEntityTypeSIFFLETAGENT                 FieldLevelSearchDtoEntityType = "SIFFLET_AGENT"
	FieldLevelSearchDtoEntityTypeSIFFLETRULE                  FieldLevelSearchDtoEntityType = "SIFFLET_RULE"
	FieldLevelSearchDtoEntityTypeTAG                          FieldLevelSearchDtoEntityType = "TAG"
	FieldLevelSearchDtoEntityTypeTRANSFORMATION               FieldLevelSearchDtoEntityType = "TRANSFORMATION"
	FieldLevelSearchDtoEntityTypeUSER                         FieldLevelSearchDtoEntityType = "USER"
	FieldLevelSearchDtoEntityTypeWEBHOOK                      FieldLevelSearchDtoEntityType = "WEBHOOK"
)

// Defines values for FieldLevelSearchDtoHealth.
const (
	FieldLevelSearchDtoHealthATRISK       FieldLevelSearchDtoHealth = "AT_RISK"
	FieldLevelSearchDtoHealthCRITICAL     FieldLevelSearchDtoHealth = "CRITICAL"
	FieldLevelSearchDtoHealthHEALTHY      FieldLevelSearchDtoHealth = "HEALTHY"
	FieldLevelSearchDtoHealthNOTSUPPORTED FieldLevelSearchDtoHealth = "NOT_SUPPORTED"
	FieldLevelSearchDtoHealthUNMONITORED  FieldLevelSearchDtoHealth = "UNMONITORED"
)

// Defines values for FieldLevelSearchDtoLineagePlatform.
const (
	FieldLevelSearchDtoLineagePlatformACCELDATA                 FieldLevelSearchDtoLineagePlatform = "ACCELDATA"
	FieldLevelSearchDtoLineagePlatformACRYLDATA                 FieldLevelSearchDtoLineagePlatform = "ACRYL_DATA"
	FieldLevelSearchDtoLineagePlatformACTIANVECTOR              FieldLevelSearchDtoLineagePlatform = "ACTIAN_VECTOR"
	FieldLevelSearchDtoLineagePlatformACTIVECAMPAIGN            FieldLevelSearchDtoLineagePlatform = "ACTIVE_CAMPAIGN"
	FieldLevelSearchDtoLineagePlatformADA                       FieldLevelSearchDtoLineagePlatform = "ADA"
	FieldLevelSearchDtoLineagePlatformADJUST                    FieldLevelSearchDtoLineagePlatform = "ADJUST"
	FieldLevelSearchDtoLineagePlatformADOBE                     FieldLevelSearchDtoLineagePlatform = "ADOBE"
	FieldLevelSearchDtoLineagePlatformADPWFN                    FieldLevelSearchDtoLineagePlatform = "ADP_WFN"
	FieldLevelSearchDtoLineagePlatformADROLL                    FieldLevelSearchDtoLineagePlatform = "ADROLL"
	FieldLevelSearchDtoLineagePlatformAFFINITY                  FieldLevelSearchDtoLineagePlatform = "AFFINITY"
	FieldLevelSearchDtoLineagePlatformAIRBYTE                   FieldLevelSearchDtoLineagePlatform = "AIRBYTE"
	FieldLevelSearchDtoLineagePlatformAIRCALL                   FieldLevelSearchDtoLineagePlatform = "AIRCALL"
	FieldLevelSearchDtoLineagePlatformAIRFLOW                   FieldLevelSearchDtoLineagePlatform = "AIRFLOW"
	FieldLevelSearchDtoLineagePlatformAIRTABLE                  FieldLevelSearchDtoLineagePlatform = "AIRTABLE"
	FieldLevelSearchDtoLineagePlatformALATION                   FieldLevelSearchDtoLineagePlatform = "ALATION"
	FieldLevelSearchDtoLineagePlatformALCHEMER                  FieldLevelSearchDtoLineagePlatform = "ALCHEMER"
	FieldLevelSearchDtoLineagePlatformALVINAI                   FieldLevelSearchDtoLineagePlatform = "ALVIN_AI"
	FieldLevelSearchDtoLineagePlatformAMAZON                    FieldLevelSearchDtoLineagePlatform = "AMAZON"
	FieldLevelSearchDtoLineagePlatformAMAZONCLOUDFRONT          FieldLevelSearchDtoLineagePlatform = "AMAZON_CLOUDFRONT"
	FieldLevelSearchDtoLineagePlatformAMAZONDOCUMENTDB          FieldLevelSearchDtoLineagePlatform = "AMAZON_DOCUMENTDB"
	FieldLevelSearchDtoLineagePlatformAMAZONDYNAMODB            FieldLevelSearchDtoLineagePlatform = "AMAZON_DYNAMODB"
	FieldLevelSearchDtoLineagePlatformAMAZONFIREHOSE            FieldLevelSearchDtoLineagePlatform = "AMAZON_FIREHOSE"
	FieldLevelSearchDtoLineagePlatformAMAZONSAGEMAKER           FieldLevelSearchDtoLineagePlatform = "AMAZON_SAGEMAKER"
	FieldLevelSearchDtoLineagePlatformAMAZONSELLINGPARTNER      FieldLevelSearchDtoLineagePlatform = "AMAZON_SELLING_PARTNER"
	FieldLevelSearchDtoLineagePlatformAMPLITUDE                 FieldLevelSearchDtoLineagePlatform = "AMPLITUDE"
	FieldLevelSearchDtoLineagePlatformANAPLAN                   FieldLevelSearchDtoLineagePlatform = "ANAPLAN"
	FieldLevelSearchDtoLineagePlatformANOMALO                   FieldLevelSearchDtoLineagePlatform = "ANOMALO"
	FieldLevelSearchDtoLineagePlatformAPACHEKAFKA               FieldLevelSearchDtoLineagePlatform = "APACHE_KAFKA"
	FieldLevelSearchDtoLineagePlatformAPACHESPARK               FieldLevelSearchDtoLineagePlatform = "APACHE_SPARK"
	FieldLevelSearchDtoLineagePlatformAPPCUES                   FieldLevelSearchDtoLineagePlatform = "APPCUES"
	FieldLevelSearchDtoLineagePlatformAPPFIGURES                FieldLevelSearchDtoLineagePlatform = "APPFIGURES"
	FieldLevelSearchDtoLineagePlatformAPPLE                     FieldLevelSearchDtoLineagePlatform = "APPLE"
	FieldLevelSearchDtoLineagePlatformAPPLEAPPSTORE             FieldLevelSearchDtoLineagePlatform = "APPLE_APP_STORE"
	FieldLevelSearchDtoLineagePlatformAPPSFLYER                 FieldLevelSearchDtoLineagePlatform = "APPSFLYER"
	FieldLevelSearchDtoLineagePlatformASANA                     FieldLevelSearchDtoLineagePlatform = "ASANA"
	FieldLevelSearchDtoLineagePlatformASSEMBLED                 FieldLevelSearchDtoLineagePlatform = "ASSEMBLED"
	FieldLevelSearchDtoLineagePlatformATHENA                    FieldLevelSearchDtoLineagePlatform = "ATHENA"
	FieldLevelSearchDtoLineagePlatformATLAN                     FieldLevelSearchDtoLineagePlatform = "ATLAN"
	FieldLevelSearchDtoLineagePlatformATLASSIANCONFLUENCE       FieldLevelSearchDtoLineagePlatform = "ATLASSIAN_CONFLUENCE"
	FieldLevelSearchDtoLineagePlatformATLASSIANJIRA             FieldLevelSearchDtoLineagePlatform = "ATLASSIAN_JIRA"
	FieldLevelSearchDtoLineagePlatformATLASSIANOPSGENIE         FieldLevelSearchDtoLineagePlatform = "ATLASSIAN_OPSGENIE"
	FieldLevelSearchDtoLineagePlatformAUTH0                     FieldLevelSearchDtoLineagePlatform = "AUTH0"
	FieldLevelSearchDtoLineagePlatformAUTODESKBIM360            FieldLevelSearchDtoLineagePlatform = "AUTODESK_BIM_360"
	FieldLevelSearchDtoLineagePlatformAWIN                      FieldLevelSearchDtoLineagePlatform = "AWIN"
	FieldLevelSearchDtoLineagePlatformAWSCLOUDTRAIL             FieldLevelSearchDtoLineagePlatform = "AWS_CLOUDTRAIL"
	FieldLevelSearchDtoLineagePlatformAWSCOSTEXPLORER           FieldLevelSearchDtoLineagePlatform = "AWS_COST_EXPLORER"
	FieldLevelSearchDtoLineagePlatformAWSINVENTORY              FieldLevelSearchDtoLineagePlatform = "AWS_INVENTORY"
	FieldLevelSearchDtoLineagePlatformAWSLAMBDA                 FieldLevelSearchDtoLineagePlatform = "AWS_LAMBDA"
	FieldLevelSearchDtoLineagePlatformAZURE                     FieldLevelSearchDtoLineagePlatform = "AZURE"
	FieldLevelSearchDtoLineagePlatformBALLOTREADY               FieldLevelSearchDtoLineagePlatform = "BALLOT_READY"
	FieldLevelSearchDtoLineagePlatformBAMBOOHR                  FieldLevelSearchDtoLineagePlatform = "BAMBOOHR"
	FieldLevelSearchDtoLineagePlatformBIGCOMMERCE               FieldLevelSearchDtoLineagePlatform = "BIGCOMMERCE"
	FieldLevelSearchDtoLineagePlatformBIGEYE                    FieldLevelSearchDtoLineagePlatform = "BIGEYE"
	FieldLevelSearchDtoLineagePlatformBIGQUERY                  FieldLevelSearchDtoLineagePlatform = "BIGQUERY"
	FieldLevelSearchDtoLineagePlatformBILLINGPLATFORM           FieldLevelSearchDtoLineagePlatform = "BILLINGPLATFORM"
	FieldLevelSearchDtoLineagePlatformBIRDEYE                   FieldLevelSearchDtoLineagePlatform = "BIRDEYE"
	FieldLevelSearchDtoLineagePlatformBLACKBOARD                FieldLevelSearchDtoLineagePlatform = "BLACKBOARD"
	FieldLevelSearchDtoLineagePlatformBOX                       FieldLevelSearchDtoLineagePlatform = "BOX"
	FieldLevelSearchDtoLineagePlatformBRAINTREE                 FieldLevelSearchDtoLineagePlatform = "BRAINTREE"
	FieldLevelSearchDtoLineagePlatformBRAZE                     FieldLevelSearchDtoLineagePlatform = "BRAZE"
	FieldLevelSearchDtoLineagePlatformBREVO                     FieldLevelSearchDtoLineagePlatform = "BREVO"
	FieldLevelSearchDtoLineagePlatformBREX                      FieldLevelSearchDtoLineagePlatform = "BREX"
	FieldLevelSearchDtoLineagePlatformBUILDKITE                 FieldLevelSearchDtoLineagePlatform = "BUILDKITE"
	FieldLevelSearchDtoLineagePlatformBUZZSPROUT                FieldLevelSearchDtoLineagePlatform = "BUZZSPROUT"
	FieldLevelSearchDtoLineagePlatformCALENDLY                  FieldLevelSearchDtoLineagePlatform = "CALENDLY"
	FieldLevelSearchDtoLineagePlatformCAMPAIGNMONITOR           FieldLevelSearchDtoLineagePlatform = "CAMPAIGN_MONITOR"
	FieldLevelSearchDtoLineagePlatformCANNY                     FieldLevelSearchDtoLineagePlatform = "CANNY"
	FieldLevelSearchDtoLineagePlatformCANVAS                    FieldLevelSearchDtoLineagePlatform = "CANVAS"
	FieldLevelSearchDtoLineagePlatformCAPTERRA                  FieldLevelSearchDtoLineagePlatform = "CAPTERRA"
	FieldLevelSearchDtoLineagePlatformCASTORDOC                 FieldLevelSearchDtoLineagePlatform = "CASTOR_DOC"
	FieldLevelSearchDtoLineagePlatformCENSUS                    FieldLevelSearchDtoLineagePlatform = "CENSUS"
	FieldLevelSearchDtoLineagePlatformCERTINIA                  FieldLevelSearchDtoLineagePlatform = "CERTINIA"
	FieldLevelSearchDtoLineagePlatformCHAMELEON                 FieldLevelSearchDtoLineagePlatform = "CHAMELEON"
	FieldLevelSearchDtoLineagePlatformCHANNELADVISOR            FieldLevelSearchDtoLineagePlatform = "CHANNEL_ADVISOR"
	FieldLevelSearchDtoLineagePlatformCHARGEBEE                 FieldLevelSearchDtoLineagePlatform = "CHARGEBEE"
	FieldLevelSearchDtoLineagePlatformCHARGEDESK                FieldLevelSearchDtoLineagePlatform = "CHARGEDESK"
	FieldLevelSearchDtoLineagePlatformCHARTMOGUL                FieldLevelSearchDtoLineagePlatform = "CHARTMOGUL"
	FieldLevelSearchDtoLineagePlatformCHORUSAI                  FieldLevelSearchDtoLineagePlatform = "CHORUS_AI"
	FieldLevelSearchDtoLineagePlatformCHURNKEY                  FieldLevelSearchDtoLineagePlatform = "CHURNKEY"
	FieldLevelSearchDtoLineagePlatformCHURNZERO                 FieldLevelSearchDtoLineagePlatform = "CHURNZERO"
	FieldLevelSearchDtoLineagePlatformCIMIS                     FieldLevelSearchDtoLineagePlatform = "CIMIS"
	FieldLevelSearchDtoLineagePlatformCIN7                      FieldLevelSearchDtoLineagePlatform = "CIN7"
	FieldLevelSearchDtoLineagePlatformCIRCLECI                  FieldLevelSearchDtoLineagePlatform = "CIRCLE_CI"
	FieldLevelSearchDtoLineagePlatformCLARI                     FieldLevelSearchDtoLineagePlatform = "CLARI"
	FieldLevelSearchDtoLineagePlatformCLICKUP                   FieldLevelSearchDtoLineagePlatform = "CLICKUP"
	FieldLevelSearchDtoLineagePlatformCLIFFAI                   FieldLevelSearchDtoLineagePlatform = "CLIFF_AI"
	FieldLevelSearchDtoLineagePlatformCLOSE                     FieldLevelSearchDtoLineagePlatform = "CLOSE"
	FieldLevelSearchDtoLineagePlatformCOLLIBRA                  FieldLevelSearchDtoLineagePlatform = "COLLIBRA"
	FieldLevelSearchDtoLineagePlatformCOMMERCETOOLS             FieldLevelSearchDtoLineagePlatform = "COMMERCETOOLS"
	FieldLevelSearchDtoLineagePlatformCOMPOSER                  FieldLevelSearchDtoLineagePlatform = "COMPOSER"
	FieldLevelSearchDtoLineagePlatformCONFLUENTCLOUD            FieldLevelSearchDtoLineagePlatform = "CONFLUENT_CLOUD"
	FieldLevelSearchDtoLineagePlatformCONTRASTSECURITY          FieldLevelSearchDtoLineagePlatform = "CONTRAST_SECURITY"
	FieldLevelSearchDtoLineagePlatformCOUPA                     FieldLevelSearchDtoLineagePlatform = "COUPA"
	FieldLevelSearchDtoLineagePlatformCRITEO                    FieldLevelSearchDtoLineagePlatform = "CRITEO"
	FieldLevelSearchDtoLineagePlatformCROSSBEAM                 FieldLevelSearchDtoLineagePlatform = "CROSSBEAM"
	FieldLevelSearchDtoLineagePlatformCRUNCHBASE                FieldLevelSearchDtoLineagePlatform = "CRUNCHBASE"
	FieldLevelSearchDtoLineagePlatformCUSTOMERIO                FieldLevelSearchDtoLineagePlatform = "CUSTOMER_IO"
	FieldLevelSearchDtoLineagePlatformD2LBRIGHTSPACE            FieldLevelSearchDtoLineagePlatform = "D2L_BRIGHTSPACE"
	FieldLevelSearchDtoLineagePlatformDAGSTER                   FieldLevelSearchDtoLineagePlatform = "DAGSTER"
	FieldLevelSearchDtoLineagePlatformDATABAND                  FieldLevelSearchDtoLineagePlatform = "DATABAND"
	FieldLevelSearchDtoLineagePlatformDATABRICKS                FieldLevelSearchDtoLineagePlatform = "DATABRICKS"
	FieldLevelSearchDtoLineagePlatformDATADOG                   FieldLevelSearchDtoLineagePlatform = "DATADOG"
	FieldLevelSearchDtoLineagePlatformDATAEDO                   FieldLevelSearchDtoLineagePlatform = "DATAEDO"
	FieldLevelSearchDtoLineagePlatformDATAFOLD                  FieldLevelSearchDtoLineagePlatform = "DATAFOLD"
	FieldLevelSearchDtoLineagePlatformDATAGALAXY                FieldLevelSearchDtoLineagePlatform = "DATAGALAXY"
	FieldLevelSearchDtoLineagePlatformDATAHUB                   FieldLevelSearchDtoLineagePlatform = "DATAHUB"
	FieldLevelSearchDtoLineagePlatformDATAIKU                   FieldLevelSearchDtoLineagePlatform = "DATAIKU"
	FieldLevelSearchDtoLineagePlatformDATAWORLD                 FieldLevelSearchDtoLineagePlatform = "DATA_WORLD"
	FieldLevelSearchDtoLineagePlatformDB2                       FieldLevelSearchDtoLineagePlatform = "DB2"
	FieldLevelSearchDtoLineagePlatformDBT                       FieldLevelSearchDtoLineagePlatform = "DBT"
	FieldLevelSearchDtoLineagePlatformDBTCLOUD                  FieldLevelSearchDtoLineagePlatform = "DBTCLOUD"
	FieldLevelSearchDtoLineagePlatformDCLLOGISTICS              FieldLevelSearchDtoLineagePlatform = "DCL_LOGISTICS"
	FieldLevelSearchDtoLineagePlatformDEAR                      FieldLevelSearchDtoLineagePlatform = "DEAR"
	FieldLevelSearchDtoLineagePlatformDECUBE                    FieldLevelSearchDtoLineagePlatform = "DECUBE"
	FieldLevelSearchDtoLineagePlatformDELIGHTED                 FieldLevelSearchDtoLineagePlatform = "DELIGHTED"
	FieldLevelSearchDtoLineagePlatformDEPUTY                    FieldLevelSearchDtoLineagePlatform = "DEPUTY"
	FieldLevelSearchDtoLineagePlatformDESTINI                   FieldLevelSearchDtoLineagePlatform = "DESTINI"
	FieldLevelSearchDtoLineagePlatformDIXA                      FieldLevelSearchDtoLineagePlatform = "DIXA"
	FieldLevelSearchDtoLineagePlatformDOCEBO                    FieldLevelSearchDtoLineagePlatform = "DOCEBO"
	FieldLevelSearchDtoLineagePlatformDRATA                     FieldLevelSearchDtoLineagePlatform = "DRATA"
	FieldLevelSearchDtoLineagePlatformDRIFT                     FieldLevelSearchDtoLineagePlatform = "DRIFT"
	FieldLevelSearchDtoLineagePlatformDRIP                      FieldLevelSearchDtoLineagePlatform = "DRIP"
	FieldLevelSearchDtoLineagePlatformDROPBOX                   FieldLevelSearchDtoLineagePlatform = "DROPBOX"
	FieldLevelSearchDtoLineagePlatformDUOPLANE                  FieldLevelSearchDtoLineagePlatform = "DUOPLANE"
	FieldLevelSearchDtoLineagePlatformEASYPOST                  FieldLevelSearchDtoLineagePlatform = "EASY_POST"
	FieldLevelSearchDtoLineagePlatformECONOMIC                  FieldLevelSearchDtoLineagePlatform = "E_CONOMIC"
	FieldLevelSearchDtoLineagePlatformELASTICSEARCH             FieldLevelSearchDtoLineagePlatform = "ELASTICSEARCH"
	FieldLevelSearchDtoLineagePlatformELEMENTARY                FieldLevelSearchDtoLineagePlatform = "ELEMENTARY"
	FieldLevelSearchDtoLineagePlatformELLUCIAN                  FieldLevelSearchDtoLineagePlatform = "ELLUCIAN"
	FieldLevelSearchDtoLineagePlatformELOQUA                    FieldLevelSearchDtoLineagePlatform = "ELOQUA"
	FieldLevelSearchDtoLineagePlatformEMAIL                     FieldLevelSearchDtoLineagePlatform = "EMAIL"
	FieldLevelSearchDtoLineagePlatformEMPLOYMENTHERO            FieldLevelSearchDtoLineagePlatform = "EMPLOYMENT_HERO"
	FieldLevelSearchDtoLineagePlatformEPICORPROPHET21           FieldLevelSearchDtoLineagePlatform = "EPICOR_PROPHET_21"
	FieldLevelSearchDtoLineagePlatformEVENTBRITE                FieldLevelSearchDtoLineagePlatform = "EVENTBRITE"
	FieldLevelSearchDtoLineagePlatformEVERHOUR                  FieldLevelSearchDtoLineagePlatform = "EVERHOUR"
	FieldLevelSearchDtoLineagePlatformEXCEL                     FieldLevelSearchDtoLineagePlatform = "EXCEL"
	FieldLevelSearchDtoLineagePlatformEXPENSIFY                 FieldLevelSearchDtoLineagePlatform = "EXPENSIFY"
	FieldLevelSearchDtoLineagePlatformFACEBOOK                  FieldLevelSearchDtoLineagePlatform = "FACEBOOK"
	FieldLevelSearchDtoLineagePlatformFIFTEENFIVE               FieldLevelSearchDtoLineagePlatform = "FIFTEENFIVE"
	FieldLevelSearchDtoLineagePlatformFIGMA                     FieldLevelSearchDtoLineagePlatform = "FIGMA"
	FieldLevelSearchDtoLineagePlatformFIREBASE                  FieldLevelSearchDtoLineagePlatform = "FIREBASE"
	FieldLevelSearchDtoLineagePlatformFIREBOLT                  FieldLevelSearchDtoLineagePlatform = "FIREBOLT"
	FieldLevelSearchDtoLineagePlatformFIVETRAN                  FieldLevelSearchDtoLineagePlatform = "FIVETRAN"
	FieldLevelSearchDtoLineagePlatformFLEXPORT                  FieldLevelSearchDtoLineagePlatform = "FLEXPORT"
	FieldLevelSearchDtoLineagePlatformFORJ                      FieldLevelSearchDtoLineagePlatform = "FORJ"
	FieldLevelSearchDtoLineagePlatformFOUNTAIN                  FieldLevelSearchDtoLineagePlatform = "FOUNTAIN"
	FieldLevelSearchDtoLineagePlatformFREIGHTVIEW               FieldLevelSearchDtoLineagePlatform = "FREIGHTVIEW"
	FieldLevelSearchDtoLineagePlatformFRESHBOOKS                FieldLevelSearchDtoLineagePlatform = "FRESHBOOKS"
	FieldLevelSearchDtoLineagePlatformFRESHCHAT                 FieldLevelSearchDtoLineagePlatform = "FRESHCHAT"
	FieldLevelSearchDtoLineagePlatformFRESHDESK                 FieldLevelSearchDtoLineagePlatform = "FRESHDESK"
	FieldLevelSearchDtoLineagePlatformFRESHDESKCONTACTCENTER    FieldLevelSearchDtoLineagePlatform = "FRESHDESK_CONTACT_CENTER"
	FieldLevelSearchDtoLineagePlatformFRESHSERVICE              FieldLevelSearchDtoLineagePlatform = "FRESHSERVICE"
	FieldLevelSearchDtoLineagePlatformFRESHSUCCESS              FieldLevelSearchDtoLineagePlatform = "FRESHSUCCESS"
	FieldLevelSearchDtoLineagePlatformFRESHTEAM                 FieldLevelSearchDtoLineagePlatform = "FRESHTEAM"
	FieldLevelSearchDtoLineagePlatformFRIENDBUY                 FieldLevelSearchDtoLineagePlatform = "FRIENDBUY"
	FieldLevelSearchDtoLineagePlatformFRONT                     FieldLevelSearchDtoLineagePlatform = "FRONT"
	FieldLevelSearchDtoLineagePlatformFTP                       FieldLevelSearchDtoLineagePlatform = "FTP"
	FieldLevelSearchDtoLineagePlatformFULLSTORY                 FieldLevelSearchDtoLineagePlatform = "FULLSTORY"
	FieldLevelSearchDtoLineagePlatformG2                        FieldLevelSearchDtoLineagePlatform = "G2"
	FieldLevelSearchDtoLineagePlatformGAINSIGHT                 FieldLevelSearchDtoLineagePlatform = "GAINSIGHT"
	FieldLevelSearchDtoLineagePlatformGEM                       FieldLevelSearchDtoLineagePlatform = "GEM"
	FieldLevelSearchDtoLineagePlatformGIT                       FieldLevelSearchDtoLineagePlatform = "GIT"
	FieldLevelSearchDtoLineagePlatformGITHUB                    FieldLevelSearchDtoLineagePlatform = "GITHUB"
	FieldLevelSearchDtoLineagePlatformGITLAB                    FieldLevelSearchDtoLineagePlatform = "GITLAB"
	FieldLevelSearchDtoLineagePlatformGLADLY                    FieldLevelSearchDtoLineagePlatform = "GLADLY"
	FieldLevelSearchDtoLineagePlatformGOCARDLESS                FieldLevelSearchDtoLineagePlatform = "GOCARDLESS"
	FieldLevelSearchDtoLineagePlatformGONG                      FieldLevelSearchDtoLineagePlatform = "GONG"
	FieldLevelSearchDtoLineagePlatformGOOGLE                    FieldLevelSearchDtoLineagePlatform = "GOOGLE"
	FieldLevelSearchDtoLineagePlatformGOOGLEADMANAGER           FieldLevelSearchDtoLineagePlatform = "GOOGLE_AD_MANAGER"
	FieldLevelSearchDtoLineagePlatformGOOGLEADS                 FieldLevelSearchDtoLineagePlatform = "GOOGLE_ADS"
	FieldLevelSearchDtoLineagePlatformGOOGLEANALYTICS           FieldLevelSearchDtoLineagePlatform = "GOOGLE_ANALYTICS"
	FieldLevelSearchDtoLineagePlatformGOOGLECALENDAR            FieldLevelSearchDtoLineagePlatform = "GOOGLE_CALENDAR"
	FieldLevelSearchDtoLineagePlatformGOOGLECAMPAIGNMANAGER     FieldLevelSearchDtoLineagePlatform = "GOOGLE_CAMPAIGN_MANAGER"
	FieldLevelSearchDtoLineagePlatformGOOGLECHROME              FieldLevelSearchDtoLineagePlatform = "GOOGLE_CHROME"
	FieldLevelSearchDtoLineagePlatformGOOGLECLOUD               FieldLevelSearchDtoLineagePlatform = "GOOGLE_CLOUD"
	FieldLevelSearchDtoLineagePlatformGOOGLECLOUDSTORAGE        FieldLevelSearchDtoLineagePlatform = "GOOGLE_CLOUD_STORAGE"
	FieldLevelSearchDtoLineagePlatformGOOGLEDISPLAY             FieldLevelSearchDtoLineagePlatform = "GOOGLE_DISPLAY"
	FieldLevelSearchDtoLineagePlatformGOOGLEDRIVE               FieldLevelSearchDtoLineagePlatform = "GOOGLE_DRIVE"
	FieldLevelSearchDtoLineagePlatformGOOGLEPLAY                FieldLevelSearchDtoLineagePlatform = "GOOGLE_PLAY"
	FieldLevelSearchDtoLineagePlatformGOOGLESEARCHADS360        FieldLevelSearchDtoLineagePlatform = "GOOGLE_SEARCH_ADS_360"
	FieldLevelSearchDtoLineagePlatformGOOGLESEARCHCONSOLE       FieldLevelSearchDtoLineagePlatform = "GOOGLE_SEARCH_CONSOLE"
	FieldLevelSearchDtoLineagePlatformGOOGLESHEETS              FieldLevelSearchDtoLineagePlatform = "GOOGLE_SHEETS"
	FieldLevelSearchDtoLineagePlatformGOOGLETASKS               FieldLevelSearchDtoLineagePlatform = "GOOGLE_TASKS"
	FieldLevelSearchDtoLineagePlatformGORGIAS                   FieldLevelSearchDtoLineagePlatform = "GORGIAS"
	FieldLevelSearchDtoLineagePlatformGREENHOUSE                FieldLevelSearchDtoLineagePlatform = "GREENHOUSE"
	FieldLevelSearchDtoLineagePlatformGREENPLUM                 FieldLevelSearchDtoLineagePlatform = "GREENPLUM"
	FieldLevelSearchDtoLineagePlatformGREENPOWERMONITOR         FieldLevelSearchDtoLineagePlatform = "GREEN_POWER_MONITOR"
	FieldLevelSearchDtoLineagePlatformGREPSR                    FieldLevelSearchDtoLineagePlatform = "GREPSR"
	FieldLevelSearchDtoLineagePlatformGRIN                      FieldLevelSearchDtoLineagePlatform = "GRIN"
	FieldLevelSearchDtoLineagePlatformGURU                      FieldLevelSearchDtoLineagePlatform = "GURU"
	FieldLevelSearchDtoLineagePlatformH2                        FieldLevelSearchDtoLineagePlatform = "H2"
	FieldLevelSearchDtoLineagePlatformHARVEST                   FieldLevelSearchDtoLineagePlatform = "HARVEST"
	FieldLevelSearchDtoLineagePlatformHDFS                      FieldLevelSearchDtoLineagePlatform = "HDFS"
	FieldLevelSearchDtoLineagePlatformHDFSSTORAGE               FieldLevelSearchDtoLineagePlatform = "HDFS_STORAGE"
	FieldLevelSearchDtoLineagePlatformHEAP                      FieldLevelSearchDtoLineagePlatform = "HEAP"
	FieldLevelSearchDtoLineagePlatformHEIGHT                    FieldLevelSearchDtoLineagePlatform = "HEIGHT"
	FieldLevelSearchDtoLineagePlatformHELPSCOUT                 FieldLevelSearchDtoLineagePlatform = "HELP_SCOUT"
	FieldLevelSearchDtoLineagePlatformHELPSHIFT                 FieldLevelSearchDtoLineagePlatform = "HELPSHIFT"
	FieldLevelSearchDtoLineagePlatformHEROKUKAFKA               FieldLevelSearchDtoLineagePlatform = "HEROKU_KAFKA"
	FieldLevelSearchDtoLineagePlatformHIBOB                     FieldLevelSearchDtoLineagePlatform = "HIBOB"
	FieldLevelSearchDtoLineagePlatformHIGHTOUCH                 FieldLevelSearchDtoLineagePlatform = "HIGH_TOUCH"
	FieldLevelSearchDtoLineagePlatformHIVE                      FieldLevelSearchDtoLineagePlatform = "HIVE"
	FieldLevelSearchDtoLineagePlatformHIVEPROCESS               FieldLevelSearchDtoLineagePlatform = "HIVE_PROCESS"
	FieldLevelSearchDtoLineagePlatformHOPIN                     FieldLevelSearchDtoLineagePlatform = "HOPIN"
	FieldLevelSearchDtoLineagePlatformHUBSPOT                   FieldLevelSearchDtoLineagePlatform = "HUBSPOT"
	FieldLevelSearchDtoLineagePlatformIMPACT                    FieldLevelSearchDtoLineagePlatform = "IMPACT"
	FieldLevelSearchDtoLineagePlatformINCIDENTIO                FieldLevelSearchDtoLineagePlatform = "INCIDENT_IO"
	FieldLevelSearchDtoLineagePlatformINFOBIP                   FieldLevelSearchDtoLineagePlatform = "INFOBIP"
	FieldLevelSearchDtoLineagePlatformINFORMATICA               FieldLevelSearchDtoLineagePlatform = "INFORMATICA"
	FieldLevelSearchDtoLineagePlatformINSIGHTLY                 FieldLevelSearchDtoLineagePlatform = "INSIGHTLY"
	FieldLevelSearchDtoLineagePlatformINSTAGRAM                 FieldLevelSearchDtoLineagePlatform = "INSTAGRAM"
	FieldLevelSearchDtoLineagePlatformINTERCOM                  FieldLevelSearchDtoLineagePlatform = "INTERCOM"
	FieldLevelSearchDtoLineagePlatformINVESTOPEDIA              FieldLevelSearchDtoLineagePlatform = "INVESTOPEDIA"
	FieldLevelSearchDtoLineagePlatformIRONCLAD                  FieldLevelSearchDtoLineagePlatform = "IRONCLAD"
	FieldLevelSearchDtoLineagePlatformIRONSOURCE                FieldLevelSearchDtoLineagePlatform = "IRONSOURCE"
	FieldLevelSearchDtoLineagePlatformITERABLE                  FieldLevelSearchDtoLineagePlatform = "ITERABLE"
	FieldLevelSearchDtoLineagePlatformJAVA                      FieldLevelSearchDtoLineagePlatform = "JAVA"
	FieldLevelSearchDtoLineagePlatformJENKINS                   FieldLevelSearchDtoLineagePlatform = "JENKINS"
	FieldLevelSearchDtoLineagePlatformJUSTCALL                  FieldLevelSearchDtoLineagePlatform = "JUSTCALL"
	FieldLevelSearchDtoLineagePlatformKANDJI                    FieldLevelSearchDtoLineagePlatform = "KANDJI"
	FieldLevelSearchDtoLineagePlatformKENSU                     FieldLevelSearchDtoLineagePlatform = "KENSU"
	FieldLevelSearchDtoLineagePlatformKHOROSCARE                FieldLevelSearchDtoLineagePlatform = "KHOROS_CARE"
	FieldLevelSearchDtoLineagePlatformKISSMETRICS               FieldLevelSearchDtoLineagePlatform = "KISSMETRICS"
	FieldLevelSearchDtoLineagePlatformKLAVIYO                   FieldLevelSearchDtoLineagePlatform = "KLAVIYO"
	FieldLevelSearchDtoLineagePlatformKNOWBE4                   FieldLevelSearchDtoLineagePlatform = "KNOWBE4"
	FieldLevelSearchDtoLineagePlatformKONNECTINSIGHTS           FieldLevelSearchDtoLineagePlatform = "KONNECT_INSIGHTS"
	FieldLevelSearchDtoLineagePlatformKUSTOMER                  FieldLevelSearchDtoLineagePlatform = "KUSTOMER"
	FieldLevelSearchDtoLineagePlatformLARIATDATA                FieldLevelSearchDtoLineagePlatform = "LARIAT_DATA"
	FieldLevelSearchDtoLineagePlatformLATTICE                   FieldLevelSearchDtoLineagePlatform = "LATTICE"
	FieldLevelSearchDtoLineagePlatformLAUNCHDARKLY              FieldLevelSearchDtoLineagePlatform = "LAUNCH_DARKLY"
	FieldLevelSearchDtoLineagePlatformLEARNUPON                 FieldLevelSearchDtoLineagePlatform = "LEARN_UPON"
	FieldLevelSearchDtoLineagePlatformLESSONLY                  FieldLevelSearchDtoLineagePlatform = "LESSONLY"
	FieldLevelSearchDtoLineagePlatformLEVER                     FieldLevelSearchDtoLineagePlatform = "LEVER"
	FieldLevelSearchDtoLineagePlatformLIFTOFF                   FieldLevelSearchDtoLineagePlatform = "LIFTOFF"
	FieldLevelSearchDtoLineagePlatformLIGHTDASH                 FieldLevelSearchDtoLineagePlatform = "LIGHTDASH"
	FieldLevelSearchDtoLineagePlatformLIGHTSPEED                FieldLevelSearchDtoLineagePlatform = "LIGHTSPEED"
	FieldLevelSearchDtoLineagePlatformLIGHTSUP                  FieldLevelSearchDtoLineagePlatform = "LIGHTSUP"
	FieldLevelSearchDtoLineagePlatformLINEAR                    FieldLevelSearchDtoLineagePlatform = "LINEAR"
	FieldLevelSearchDtoLineagePlatformLINKEDIN                  FieldLevelSearchDtoLineagePlatform = "LINKEDIN"
	FieldLevelSearchDtoLineagePlatformLIVECHAT                  FieldLevelSearchDtoLineagePlatform = "LIVECHAT"
	FieldLevelSearchDtoLineagePlatformLOADEDCOMMERCE            FieldLevelSearchDtoLineagePlatform = "LOADED_COMMERCE"
	FieldLevelSearchDtoLineagePlatformLOB                       FieldLevelSearchDtoLineagePlatform = "LOB"
	FieldLevelSearchDtoLineagePlatformLOOKER                    FieldLevelSearchDtoLineagePlatform = "LOOKER"
	FieldLevelSearchDtoLineagePlatformLOOP                      FieldLevelSearchDtoLineagePlatform = "LOOP"
	FieldLevelSearchDtoLineagePlatformLOOPIO                    FieldLevelSearchDtoLineagePlatform = "LOOPIO"
	FieldLevelSearchDtoLineagePlatformLUMA                      FieldLevelSearchDtoLineagePlatform = "LUMA"
	FieldLevelSearchDtoLineagePlatformMAGENTO                   FieldLevelSearchDtoLineagePlatform = "MAGENTO"
	FieldLevelSearchDtoLineagePlatformMAILCHIMP                 FieldLevelSearchDtoLineagePlatform = "MAILCHIMP"
	FieldLevelSearchDtoLineagePlatformMAILGUN                   FieldLevelSearchDtoLineagePlatform = "MAILGUN"
	FieldLevelSearchDtoLineagePlatformMANDRILL                  FieldLevelSearchDtoLineagePlatform = "MANDRILL"
	FieldLevelSearchDtoLineagePlatformMANTA                     FieldLevelSearchDtoLineagePlatform = "MANTA"
	FieldLevelSearchDtoLineagePlatformMARIADB                   FieldLevelSearchDtoLineagePlatform = "MARIADB"
	FieldLevelSearchDtoLineagePlatformMARINSOFTWARE             FieldLevelSearchDtoLineagePlatform = "MARIN_SOFTWARE"
	FieldLevelSearchDtoLineagePlatformMARKETO                   FieldLevelSearchDtoLineagePlatform = "MARKETO"
	FieldLevelSearchDtoLineagePlatformMATTERMOST                FieldLevelSearchDtoLineagePlatform = "MATTERMOST"
	FieldLevelSearchDtoLineagePlatformMAVENLINK                 FieldLevelSearchDtoLineagePlatform = "MAVENLINK"
	FieldLevelSearchDtoLineagePlatformMAXIO                     FieldLevelSearchDtoLineagePlatform = "MAXIO"
	FieldLevelSearchDtoLineagePlatformMEDALLIA                  FieldLevelSearchDtoLineagePlatform = "MEDALLIA"
	FieldLevelSearchDtoLineagePlatformMETA                      FieldLevelSearchDtoLineagePlatform = "META"
	FieldLevelSearchDtoLineagePlatformMETABASE                  FieldLevelSearchDtoLineagePlatform = "METABASE"
	FieldLevelSearchDtoLineagePlatformMETAPHOR                  FieldLevelSearchDtoLineagePlatform = "METAPHOR"
	FieldLevelSearchDtoLineagePlatformMETAPLANE                 FieldLevelSearchDtoLineagePlatform = "METAPLANE"
	FieldLevelSearchDtoLineagePlatformMICROSOFT                 FieldLevelSearchDtoLineagePlatform = "MICROSOFT"
	FieldLevelSearchDtoLineagePlatformMICROSOFTAZUREBLOBSTORAGE FieldLevelSearchDtoLineagePlatform = "MICROSOFT_AZURE_BLOB_STORAGE"
	FieldLevelSearchDtoLineagePlatformMICROSOFTAZUREML          FieldLevelSearchDtoLineagePlatform = "MICROSOFT_AZURE_ML"
	FieldLevelSearchDtoLineagePlatformMICROSOFTDYNAMICS         FieldLevelSearchDtoLineagePlatform = "MICROSOFT_DYNAMICS"
	FieldLevelSearchDtoLineagePlatformMICROSOFTONEDRIVE         FieldLevelSearchDtoLineagePlatform = "MICROSOFT_ONEDRIVE"
	FieldLevelSearchDtoLineagePlatformMICROSOFTPURVIEW          FieldLevelSearchDtoLineagePlatform = "MICROSOFT_PURVIEW"
	FieldLevelSearchDtoLineagePlatformMICROSOFTTEAMS            FieldLevelSearchDtoLineagePlatform = "MICROSOFT_TEAMS"
	FieldLevelSearchDtoLineagePlatformMICROSTRATEGY             FieldLevelSearchDtoLineagePlatform = "MICROSTRATEGY"
	FieldLevelSearchDtoLineagePlatformMIXMAX                    FieldLevelSearchDtoLineagePlatform = "MIXMAX"
	FieldLevelSearchDtoLineagePlatformMIXPANEL                  FieldLevelSearchDtoLineagePlatform = "MIXPANEL"
	FieldLevelSearchDtoLineagePlatformMONDAYCOM                 FieldLevelSearchDtoLineagePlatform = "MONDAY_COM"
	FieldLevelSearchDtoLineagePlatformMONGODB                   FieldLevelSearchDtoLineagePlatform = "MONGODB"
	FieldLevelSearchDtoLineagePlatformMONTECARLO                FieldLevelSearchDtoLineagePlatform = "MONTE_CARLO"
	FieldLevelSearchDtoLineagePlatformMOUNTAIN                  FieldLevelSearchDtoLineagePlatform = "MOUNTAIN"
	FieldLevelSearchDtoLineagePlatformMSSQL                     FieldLevelSearchDtoLineagePlatform = "MSSQL"
	FieldLevelSearchDtoLineagePlatformMULESOFT                  FieldLevelSearchDtoLineagePlatform = "MULESOFT"
	FieldLevelSearchDtoLineagePlatformMUX                       FieldLevelSearchDtoLineagePlatform = "MUX"
	FieldLevelSearchDtoLineagePlatformMWAA                      FieldLevelSearchDtoLineagePlatform = "MWAA"
	FieldLevelSearchDtoLineagePlatformMYSQL                     FieldLevelSearchDtoLineagePlatform = "MYSQL"
	FieldLevelSearchDtoLineagePlatformNAMELY                    FieldLevelSearchDtoLineagePlatform = "NAMELY"
	FieldLevelSearchDtoLineagePlatformNCINO                     FieldLevelSearchDtoLineagePlatform = "NCINO"
	FieldLevelSearchDtoLineagePlatformNETSUITEANALYTICS         FieldLevelSearchDtoLineagePlatform = "NETSUITE_ANALYTICS"
	FieldLevelSearchDtoLineagePlatformNEWRELIC                  FieldLevelSearchDtoLineagePlatform = "NEW_RELIC"
	FieldLevelSearchDtoLineagePlatformNOTION                    FieldLevelSearchDtoLineagePlatform = "NOTION"
	FieldLevelSearchDtoLineagePlatformNYLAS                     FieldLevelSearchDtoLineagePlatform = "NYLAS"
	FieldLevelSearchDtoLineagePlatformOBSERVE                   FieldLevelSearchDtoLineagePlatform = "OBSERVE"
	FieldLevelSearchDtoLineagePlatformOCTOPAI                   FieldLevelSearchDtoLineagePlatform = "OCTOPAI"
	FieldLevelSearchDtoLineagePlatformOKTA                      FieldLevelSearchDtoLineagePlatform = "OKTA"
	FieldLevelSearchDtoLineagePlatformOPENAI                    FieldLevelSearchDtoLineagePlatform = "OPEN_AI"
	FieldLevelSearchDtoLineagePlatformOPENDATADC                FieldLevelSearchDtoLineagePlatform = "OPEN_DATA_DC"
	FieldLevelSearchDtoLineagePlatformOPENEXCHANGESRATES        FieldLevelSearchDtoLineagePlatform = "OPEN_EXCHANGES_RATES"
	FieldLevelSearchDtoLineagePlatformOPENSEARCH                FieldLevelSearchDtoLineagePlatform = "OPEN_SEARCH"
	FieldLevelSearchDtoLineagePlatformOPTIMIZELY                FieldLevelSearchDtoLineagePlatform = "OPTIMIZELY"
	FieldLevelSearchDtoLineagePlatformORACLE                    FieldLevelSearchDtoLineagePlatform = "ORACLE"
	FieldLevelSearchDtoLineagePlatformORBITCOMMUNITYPLATFORM    FieldLevelSearchDtoLineagePlatform = "ORBIT_COMMUNITY_PLATFORM"
	FieldLevelSearchDtoLineagePlatformORDWAY                    FieldLevelSearchDtoLineagePlatform = "ORDWAY"
	FieldLevelSearchDtoLineagePlatformORTTO                     FieldLevelSearchDtoLineagePlatform = "ORTTO"
	FieldLevelSearchDtoLineagePlatformOSCOMMERCE                FieldLevelSearchDtoLineagePlatform = "OS_COMMERCE"
	FieldLevelSearchDtoLineagePlatformOUTBRAIN                  FieldLevelSearchDtoLineagePlatform = "OUTBRAIN"
	FieldLevelSearchDtoLineagePlatformOUTREACH                  FieldLevelSearchDtoLineagePlatform = "OUTREACH"
	FieldLevelSearchDtoLineagePlatformOVALEDGE                  FieldLevelSearchDtoLineagePlatform = "OVALEDGE"
	FieldLevelSearchDtoLineagePlatformPAGERDUTY                 FieldLevelSearchDtoLineagePlatform = "PAGERDUTY"
	FieldLevelSearchDtoLineagePlatformPAGERSHIFT                FieldLevelSearchDtoLineagePlatform = "PAGERSHIFT"
	FieldLevelSearchDtoLineagePlatformPAYPAL                    FieldLevelSearchDtoLineagePlatform = "PAYPAL"
	FieldLevelSearchDtoLineagePlatformPENDO                     FieldLevelSearchDtoLineagePlatform = "PENDO"
	FieldLevelSearchDtoLineagePlatformPINGDOM                   FieldLevelSearchDtoLineagePlatform = "PINGDOM"
	FieldLevelSearchDtoLineagePlatformPINTEREST                 FieldLevelSearchDtoLineagePlatform = "PINTEREST"
	FieldLevelSearchDtoLineagePlatformPIPE17                    FieldLevelSearchDtoLineagePlatform = "PIPE17"
	FieldLevelSearchDtoLineagePlatformPIPEDRIVE                 FieldLevelSearchDtoLineagePlatform = "PIPEDRIVE"
	FieldLevelSearchDtoLineagePlatformPIVOTALTRACKER            FieldLevelSearchDtoLineagePlatform = "PIVOTAL_TRACKER"
	FieldLevelSearchDtoLineagePlatformPLAYVOX                   FieldLevelSearchDtoLineagePlatform = "PLAYVOX"
	FieldLevelSearchDtoLineagePlatformPOSTGRES                  FieldLevelSearchDtoLineagePlatform = "POSTGRES"
	FieldLevelSearchDtoLineagePlatformPOSTHOG                   FieldLevelSearchDtoLineagePlatform = "POSTHOG"
	FieldLevelSearchDtoLineagePlatformPOWERBI                   FieldLevelSearchDtoLineagePlatform = "POWER_BI"
	FieldLevelSearchDtoLineagePlatformPOWERSCHOOL               FieldLevelSearchDtoLineagePlatform = "POWERSCHOOL"
	FieldLevelSearchDtoLineagePlatformPREFECT                   FieldLevelSearchDtoLineagePlatform = "PREFECT"
	FieldLevelSearchDtoLineagePlatformPRESTASHOP                FieldLevelSearchDtoLineagePlatform = "PRESTASHOP"
	FieldLevelSearchDtoLineagePlatformPRESTO                    FieldLevelSearchDtoLineagePlatform = "PRESTO"
	FieldLevelSearchDtoLineagePlatformPRODUCTBOARD              FieldLevelSearchDtoLineagePlatform = "PRODUCTBOARD"
	FieldLevelSearchDtoLineagePlatformPYTHON                    FieldLevelSearchDtoLineagePlatform = "PYTHON"
	FieldLevelSearchDtoLineagePlatformQLIK                      FieldLevelSearchDtoLineagePlatform = "QLIK"
	FieldLevelSearchDtoLineagePlatformQUALAROO                  FieldLevelSearchDtoLineagePlatform = "QUALAROO"
	FieldLevelSearchDtoLineagePlatformQUALTRICS                 FieldLevelSearchDtoLineagePlatform = "QUALTRICS"
	FieldLevelSearchDtoLineagePlatformQUICKBOOKS                FieldLevelSearchDtoLineagePlatform = "QUICKBOOKS"
	FieldLevelSearchDtoLineagePlatformQUICKSIGHT                FieldLevelSearchDtoLineagePlatform = "QUICKSIGHT"
	FieldLevelSearchDtoLineagePlatformRAMP                      FieldLevelSearchDtoLineagePlatform = "RAMP"
	FieldLevelSearchDtoLineagePlatformRARIBLE                   FieldLevelSearchDtoLineagePlatform = "RARIBLE"
	FieldLevelSearchDtoLineagePlatformRECHARGE                  FieldLevelSearchDtoLineagePlatform = "RECHARGE"
	FieldLevelSearchDtoLineagePlatformRECURLY                   FieldLevelSearchDtoLineagePlatform = "RECURLY"
	FieldLevelSearchDtoLineagePlatformREDDIT                    FieldLevelSearchDtoLineagePlatform = "REDDIT"
	FieldLevelSearchDtoLineagePlatformREDSHIFT                  FieldLevelSearchDtoLineagePlatform = "REDSHIFT"
	FieldLevelSearchDtoLineagePlatformRELTIO                    FieldLevelSearchDtoLineagePlatform = "RELTIO"
	FieldLevelSearchDtoLineagePlatformREPLYIO                   FieldLevelSearchDtoLineagePlatform = "REPLY_IO"
	FieldLevelSearchDtoLineagePlatformRETAILNEXT                FieldLevelSearchDtoLineagePlatform = "RETAILNEXT"
	FieldLevelSearchDtoLineagePlatformRETENTLY                  FieldLevelSearchDtoLineagePlatform = "RETENTLY"
	FieldLevelSearchDtoLineagePlatformREVELSYSTEMS              FieldLevelSearchDtoLineagePlatform = "REVEL_SYSTEMS"
	FieldLevelSearchDtoLineagePlatformRINGCENTRAL               FieldLevelSearchDtoLineagePlatform = "RINGCENTRAL"
	FieldLevelSearchDtoLineagePlatformRIPPLING                  FieldLevelSearchDtoLineagePlatform = "RIPPLING"
	FieldLevelSearchDtoLineagePlatformROLLBAR                   FieldLevelSearchDtoLineagePlatform = "ROLLBAR"
	FieldLevelSearchDtoLineagePlatformROOTLY                    FieldLevelSearchDtoLineagePlatform = "ROOTLY"
	FieldLevelSearchDtoLineagePlatformS3                        FieldLevelSearchDtoLineagePlatform = "S3"
	FieldLevelSearchDtoLineagePlatformSAGEHR                    FieldLevelSearchDtoLineagePlatform = "SAGE_HR"
	FieldLevelSearchDtoLineagePlatformSAGEINTACCT               FieldLevelSearchDtoLineagePlatform = "SAGE_INTACCT"
	FieldLevelSearchDtoLineagePlatformSAILTHRU                  FieldLevelSearchDtoLineagePlatform = "SAILTHRU"
	FieldLevelSearchDtoLineagePlatformSALESFORCE                FieldLevelSearchDtoLineagePlatform = "SALESFORCE"
	FieldLevelSearchDtoLineagePlatformSALESLOFT                 FieldLevelSearchDtoLineagePlatform = "SALESLOFT"
	FieldLevelSearchDtoLineagePlatformSALSIFY                   FieldLevelSearchDtoLineagePlatform = "SALSIFY"
	FieldLevelSearchDtoLineagePlatformSAMSARA                   FieldLevelSearchDtoLineagePlatform = "SAMSARA"
	FieldLevelSearchDtoLineagePlatformSAP                       FieldLevelSearchDtoLineagePlatform = "SAP"
	FieldLevelSearchDtoLineagePlatformSAPCONCUR                 FieldLevelSearchDtoLineagePlatform = "SAP_CONCUR"
	FieldLevelSearchDtoLineagePlatformSCORM                     FieldLevelSearchDtoLineagePlatform = "SCORM"
	FieldLevelSearchDtoLineagePlatformSECODA                    FieldLevelSearchDtoLineagePlatform = "SECODA"
	FieldLevelSearchDtoLineagePlatformSECURITYJOURNEY           FieldLevelSearchDtoLineagePlatform = "SECURITY_JOURNEY"
	FieldLevelSearchDtoLineagePlatformSEGMENT                   FieldLevelSearchDtoLineagePlatform = "SEGMENT"
	FieldLevelSearchDtoLineagePlatformSELECTSTAR                FieldLevelSearchDtoLineagePlatform = "SELECT_STAR"
	FieldLevelSearchDtoLineagePlatformSENDGRID                  FieldLevelSearchDtoLineagePlatform = "SENDGRID"
	FieldLevelSearchDtoLineagePlatformSERVICENOW                FieldLevelSearchDtoLineagePlatform = "SERVICE_NOW"
	FieldLevelSearchDtoLineagePlatformSFTP                      FieldLevelSearchDtoLineagePlatform = "SFTP"
	FieldLevelSearchDtoLineagePlatformSHAREPOINT                FieldLevelSearchDtoLineagePlatform = "SHAREPOINT"
	FieldLevelSearchDtoLineagePlatformSHARETRIBE                FieldLevelSearchDtoLineagePlatform = "SHARETRIBE"
	FieldLevelSearchDtoLineagePlatformSHIPHERO                  FieldLevelSearchDtoLineagePlatform = "SHIPHERO"
	FieldLevelSearchDtoLineagePlatformSHIPSTATION               FieldLevelSearchDtoLineagePlatform = "SHIPSTATION"
	FieldLevelSearchDtoLineagePlatformSHOPIFY                   FieldLevelSearchDtoLineagePlatform = "SHOPIFY"
	FieldLevelSearchDtoLineagePlatformSHOPWARE                  FieldLevelSearchDtoLineagePlatform = "SHOPWARE"
	FieldLevelSearchDtoLineagePlatformSHORTIO                   FieldLevelSearchDtoLineagePlatform = "SHORT_IO"
	FieldLevelSearchDtoLineagePlatformSIFFLET                   FieldLevelSearchDtoLineagePlatform = "SIFFLET"
	FieldLevelSearchDtoLineagePlatformSIGMA                     FieldLevelSearchDtoLineagePlatform = "SIGMA"
	FieldLevelSearchDtoLineagePlatformSIMPLECAST                FieldLevelSearchDtoLineagePlatform = "SIMPLECAST"
	FieldLevelSearchDtoLineagePlatformSIMPLESAT                 FieldLevelSearchDtoLineagePlatform = "SIMPLESAT"
	FieldLevelSearchDtoLineagePlatformSINGLESTORE               FieldLevelSearchDtoLineagePlatform = "SINGLESTORE"
	FieldLevelSearchDtoLineagePlatformSISENSE                   FieldLevelSearchDtoLineagePlatform = "SISENSE"
	FieldLevelSearchDtoLineagePlatformSIXSENSE                  FieldLevelSearchDtoLineagePlatform = "SIXSENSE"
	FieldLevelSearchDtoLineagePlatformSKILLJAR                  FieldLevelSearchDtoLineagePlatform = "SKILLJAR"
	FieldLevelSearchDtoLineagePlatformSKUVAULT                  FieldLevelSearchDtoLineagePlatform = "SKUVAULT"
	FieldLevelSearchDtoLineagePlatformSLAB                      FieldLevelSearchDtoLineagePlatform = "SLAB"
	FieldLevelSearchDtoLineagePlatformSLACK                     FieldLevelSearchDtoLineagePlatform = "SLACK"
	FieldLevelSearchDtoLineagePlatformSMADEX                    FieldLevelSearchDtoLineagePlatform = "SMADEX"
	FieldLevelSearchDtoLineagePlatformSNAPCHAT                  FieldLevelSearchDtoLineagePlatform = "SNAPCHAT"
	FieldLevelSearchDtoLineagePlatformSNOWFLAKE                 FieldLevelSearchDtoLineagePlatform = "SNOWFLAKE"
	FieldLevelSearchDtoLineagePlatformSNOWPLOW                  FieldLevelSearchDtoLineagePlatform = "SNOWPLOW"
	FieldLevelSearchDtoLineagePlatformSODA                      FieldLevelSearchDtoLineagePlatform = "SODA"
	FieldLevelSearchDtoLineagePlatformSONARQUBE                 FieldLevelSearchDtoLineagePlatform = "SONARQUBE"
	FieldLevelSearchDtoLineagePlatformSPARKPROCESS              FieldLevelSearchDtoLineagePlatform = "SPARK_PROCESS"
	FieldLevelSearchDtoLineagePlatformSPLITIO                   FieldLevelSearchDtoLineagePlatform = "SPLIT_IO"
	FieldLevelSearchDtoLineagePlatformSPLUNK                    FieldLevelSearchDtoLineagePlatform = "SPLUNK"
	FieldLevelSearchDtoLineagePlatformSPOTIFY                   FieldLevelSearchDtoLineagePlatform = "SPOTIFY"
	FieldLevelSearchDtoLineagePlatformSPREECOMMERCE             FieldLevelSearchDtoLineagePlatform = "SPREE_COMMERCE"
	FieldLevelSearchDtoLineagePlatformSPROUTSOCIAL              FieldLevelSearchDtoLineagePlatform = "SPROUT_SOCIAL"
	FieldLevelSearchDtoLineagePlatformSQUARE                    FieldLevelSearchDtoLineagePlatform = "SQUARE"
	FieldLevelSearchDtoLineagePlatformSQUARESPACE               FieldLevelSearchDtoLineagePlatform = "SQUARESPACE"
	FieldLevelSearchDtoLineagePlatformSTACKADAPT                FieldLevelSearchDtoLineagePlatform = "STACK_ADAPT"
	FieldLevelSearchDtoLineagePlatformSTATSIG                   FieldLevelSearchDtoLineagePlatform = "STATSIG"
	FieldLevelSearchDtoLineagePlatformSTITCH                    FieldLevelSearchDtoLineagePlatform = "STITCH"
	FieldLevelSearchDtoLineagePlatformSTRIPE                    FieldLevelSearchDtoLineagePlatform = "STRIPE"
	FieldLevelSearchDtoLineagePlatformSTYLIGHT                  FieldLevelSearchDtoLineagePlatform = "STYLIGHT"
	FieldLevelSearchDtoLineagePlatformSUBSCRIPT                 FieldLevelSearchDtoLineagePlatform = "SUBSCRIPT"
	FieldLevelSearchDtoLineagePlatformSYNAPSE                   FieldLevelSearchDtoLineagePlatform = "SYNAPSE"
	FieldLevelSearchDtoLineagePlatformTABLEAU                   FieldLevelSearchDtoLineagePlatform = "TABLEAU"
	FieldLevelSearchDtoLineagePlatformTABOOLA                   FieldLevelSearchDtoLineagePlatform = "TABOOLA"
	FieldLevelSearchDtoLineagePlatformTALEND                    FieldLevelSearchDtoLineagePlatform = "TALEND"
	FieldLevelSearchDtoLineagePlatformTALKDESK                  FieldLevelSearchDtoLineagePlatform = "TALKDESK"
	FieldLevelSearchDtoLineagePlatformTALKWALKER                FieldLevelSearchDtoLineagePlatform = "TALKWALKER"
	FieldLevelSearchDtoLineagePlatformTEAMWORKCOM               FieldLevelSearchDtoLineagePlatform = "TEAMWORK_COM"
	FieldLevelSearchDtoLineagePlatformTEMPOIO                   FieldLevelSearchDtoLineagePlatform = "TEMPO_IO"
	FieldLevelSearchDtoLineagePlatformTERADATA                  FieldLevelSearchDtoLineagePlatform = "TERADATA"
	FieldLevelSearchDtoLineagePlatformTERRAFORM                 FieldLevelSearchDtoLineagePlatform = "TERRAFORM"
	FieldLevelSearchDtoLineagePlatformTHETRADEDESK              FieldLevelSearchDtoLineagePlatform = "THE_TRADE_DESK"
	FieldLevelSearchDtoLineagePlatformTHOUGHTSPOT               FieldLevelSearchDtoLineagePlatform = "THOUGHT_SPOT"
	FieldLevelSearchDtoLineagePlatformTHREESIXTYLEARNING        FieldLevelSearchDtoLineagePlatform = "THREESIXTYLEARNING"
	FieldLevelSearchDtoLineagePlatformTIKTOK                    FieldLevelSearchDtoLineagePlatform = "TIKTOK"
	FieldLevelSearchDtoLineagePlatformTOGGL                     FieldLevelSearchDtoLineagePlatform = "TOGGL"
	FieldLevelSearchDtoLineagePlatformTRANSCEND                 FieldLevelSearchDtoLineagePlatform = "TRANSCEND"
	FieldLevelSearchDtoLineagePlatformTRELLO                    FieldLevelSearchDtoLineagePlatform = "TRELLO"
	FieldLevelSearchDtoLineagePlatformTRINET                    FieldLevelSearchDtoLineagePlatform = "TRINET"
	FieldLevelSearchDtoLineagePlatformTRISOLUTE                 FieldLevelSearchDtoLineagePlatform = "TRISOLUTE"
	FieldLevelSearchDtoLineagePlatformTWILIO                    FieldLevelSearchDtoLineagePlatform = "TWILIO"
	FieldLevelSearchDtoLineagePlatformTYPEFORM                  FieldLevelSearchDtoLineagePlatform = "TYPEFORM"
	FieldLevelSearchDtoLineagePlatformUNKNOWN                   FieldLevelSearchDtoLineagePlatform = "UNKNOWN"
	FieldLevelSearchDtoLineagePlatformUPLAND                    FieldLevelSearchDtoLineagePlatform = "UPLAND"
	FieldLevelSearchDtoLineagePlatformUSERVOICE                 FieldLevelSearchDtoLineagePlatform = "USERVOICE"
	FieldLevelSearchDtoLineagePlatformVALIDIO                   FieldLevelSearchDtoLineagePlatform = "VALIDIO"
	FieldLevelSearchDtoLineagePlatformVEEVA                     FieldLevelSearchDtoLineagePlatform = "VEEVA"
	FieldLevelSearchDtoLineagePlatformVERIZONMEDIA              FieldLevelSearchDtoLineagePlatform = "VERIZON_MEDIA"
	FieldLevelSearchDtoLineagePlatformVITALLY                   FieldLevelSearchDtoLineagePlatform = "VITALLY"
	FieldLevelSearchDtoLineagePlatformVONAGE                    FieldLevelSearchDtoLineagePlatform = "VONAGE"
	FieldLevelSearchDtoLineagePlatformVUETIFY                   FieldLevelSearchDtoLineagePlatform = "VUETIFY"
	FieldLevelSearchDtoLineagePlatformWEBHOOKS                  FieldLevelSearchDtoLineagePlatform = "WEBHOOKS"
	FieldLevelSearchDtoLineagePlatformWEBSCRAPER                FieldLevelSearchDtoLineagePlatform = "WEB_SCRAPER"
	FieldLevelSearchDtoLineagePlatformWHENIWORK                 FieldLevelSearchDtoLineagePlatform = "WHEN_I_WORK"
	FieldLevelSearchDtoLineagePlatformWHEREFOUR                 FieldLevelSearchDtoLineagePlatform = "WHEREFOUR"
	FieldLevelSearchDtoLineagePlatformWIKIPEDIA                 FieldLevelSearchDtoLineagePlatform = "WIKIPEDIA"
	FieldLevelSearchDtoLineagePlatformWOOCOMMERCE               FieldLevelSearchDtoLineagePlatform = "WOOCOMMERCE"
	FieldLevelSearchDtoLineagePlatformWORDPRESS                 FieldLevelSearchDtoLineagePlatform = "WORDPRESS"
	FieldLevelSearchDtoLineagePlatformWORKABLE                  FieldLevelSearchDtoLineagePlatform = "WORKABLE"
	FieldLevelSearchDtoLineagePlatformWORKDAY                   FieldLevelSearchDtoLineagePlatform = "WORKDAY"
	FieldLevelSearchDtoLineagePlatformWORKFLOWMAX               FieldLevelSearchDtoLineagePlatform = "WORKFLOW_MAX"
	FieldLevelSearchDtoLineagePlatformWRIKE                     FieldLevelSearchDtoLineagePlatform = "WRIKE"
	FieldLevelSearchDtoLineagePlatformX                         FieldLevelSearchDtoLineagePlatform = "X"
	FieldLevelSearchDtoLineagePlatformXERO                      FieldLevelSearchDtoLineagePlatform = "XERO"
	FieldLevelSearchDtoLineagePlatformXRAY                      FieldLevelSearchDtoLineagePlatform = "XRAY"
	FieldLevelSearchDtoLineagePlatformYAHOO                     FieldLevelSearchDtoLineagePlatform = "YAHOO"
	FieldLevelSearchDtoLineagePlatformYOTPO                     FieldLevelSearchDtoLineagePlatform = "YOTPO"
	FieldLevelSearchDtoLineagePlatformYOUTUBE                   FieldLevelSearchDtoLineagePlatform = "YOUTUBE"
	FieldLevelSearchDtoLineagePlatformZEENEA                    FieldLevelSearchDtoLineagePlatform = "ZEENEA"
	FieldLevelSearchDtoLineagePlatformZENCART                   FieldLevelSearchDtoLineagePlatform = "ZEN_CART"
	FieldLevelSearchDtoLineagePlatformZENDESKCHAT               FieldLevelSearchDtoLineagePlatform = "ZENDESK_CHAT"
	FieldLevelSearchDtoLineagePlatformZENDESKSELL               FieldLevelSearchDtoLineagePlatform = "ZENDESK_SELL"
	FieldLevelSearchDtoLineagePlatformZENDESKSUNSHINE           FieldLevelSearchDtoLineagePlatform = "ZENDESK_SUNSHINE"
	FieldLevelSearchDtoLineagePlatformZENDESKSUPPORT            FieldLevelSearchDtoLineagePlatform = "ZENDESK_SUPPORT"
	FieldLevelSearchDtoLineagePlatformZINGTREE                  FieldLevelSearchDtoLineagePlatform = "ZINGTREE"
	FieldLevelSearchDtoLineagePlatformZOHOBOOKS                 FieldLevelSearchDtoLineagePlatform = "ZOHO_BOOKS"
	FieldLevelSearchDtoLineagePlatformZOHOCAMPAIGNS             FieldLevelSearchDtoLineagePlatform = "ZOHO_CAMPAIGNS"
	FieldLevelSearchDtoLineagePlatformZOHOCRM                   FieldLevelSearchDtoLineagePlatform = "ZOHO_CRM"
	FieldLevelSearchDtoLineagePlatformZOOM                      FieldLevelSearchDtoLineagePlatform = "ZOOM"
	FieldLevelSearchDtoLineagePlatformZUORA                     FieldLevelSearchDtoLineagePlatform = "ZUORA"
)

// Defines values for FieldLevelSearchDtoUsage.
const (
	FieldLevelSearchDtoUsageHIGH        FieldLevelSearchDtoUsage = "HIGH"
	FieldLevelSearchDtoUsageLOW         FieldLevelSearchDtoUsage = "LOW"
	FieldLevelSearchDtoUsageMEDIUM      FieldLevelSearchDtoUsage = "MEDIUM"
	FieldLevelSearchDtoUsageUNSUPPORTED FieldLevelSearchDtoUsage = "UNSUPPORTED"
)

// Defines values for FieldLevelSearchFieldDtoEntityType.
const (
	FieldLevelSearchFieldDtoEntityTypeACCESSTOKEN                  FieldLevelSearchFieldDtoEntityType = "ACCESS_TOKEN"
	FieldLevelSearchFieldDtoEntityTypeALERTINGHOOK                 FieldLevelSearchFieldDtoEntityType = "ALERTING_HOOK"
	FieldLevelSearchFieldDtoEntityTypeCHART                        FieldLevelSearchFieldDtoEntityType = "CHART"
	FieldLevelSearchFieldDtoEntityTypeCOLLECTION                   FieldLevelSearchFieldDtoEntityType = "COLLECTION"
	FieldLevelSearchFieldDtoEntityTypeCONFIG                       FieldLevelSearchFieldDtoEntityType = "CONFIG"
	FieldLevelSearchFieldDtoEntityTypeDAG                          FieldLevelSearchFieldDtoEntityType = "DAG"
	FieldLevelSearchFieldDtoEntityTypeDASHBOARD                    FieldLevelSearchFieldDtoEntityType = "DASHBOARD"
	FieldLevelSearchFieldDtoEntityTypeDATAPOINTQUALIFICATION       FieldLevelSearchFieldDtoEntityType = "DATAPOINT_QUALIFICATION"
	FieldLevelSearchFieldDtoEntityTypeDATASET                      FieldLevelSearchFieldDtoEntityType = "DATASET"
	FieldLevelSearchFieldDtoEntityTypeDATASETFIELD                 FieldLevelSearchFieldDtoEntityType = "DATASET_FIELD"
	FieldLevelSearchFieldDtoEntityTypeDATASOURCE                   FieldLevelSearchFieldDtoEntityType = "DATASOURCE"
	FieldLevelSearchFieldDtoEntityTypeDATASOURCEINGESTIONRUN       FieldLevelSearchFieldDtoEntityType = "DATASOURCE_INGESTION_RUN"
	FieldLevelSearchFieldDtoEntityTypeDECLAREDASSET                FieldLevelSearchFieldDtoEntityType = "DECLARED_ASSET"
	FieldLevelSearchFieldDtoEntityTypeDOMAIN                       FieldLevelSearchFieldDtoEntityType = "DOMAIN"
	FieldLevelSearchFieldDtoEntityTypeINCIDENT                     FieldLevelSearchFieldDtoEntityType = "INCIDENT"
	FieldLevelSearchFieldDtoEntityTypeRULEMONITORINGRECOMMENDATION FieldLevelSearchFieldDtoEntityType = "RULE_MONITORING_RECOMMENDATION"
	FieldLevelSearchFieldDtoEntityTypeRULERUN                      FieldLevelSearchFieldDtoEntityType = "RULE_RUN"
	FieldLevelSearchFieldDtoEntityTypeSIFFLETAGENT                 FieldLevelSearchFieldDtoEntityType = "SIFFLET_AGENT"
	FieldLevelSearchFieldDtoEntityTypeSIFFLETRULE                  FieldLevelSearchFieldDtoEntityType = "SIFFLET_RULE"
	FieldLevelSearchFieldDtoEntityTypeTAG                          FieldLevelSearchFieldDtoEntityType = "TAG"
	FieldLevelSearchFieldDtoEntityTypeTRANSFORMATION               FieldLevelSearchFieldDtoEntityType = "TRANSFORMATION"
	FieldLevelSearchFieldDtoEntityTypeUSER                         FieldLevelSearchFieldDtoEntityType = "USER"
	FieldLevelSearchFieldDtoEntityTypeWEBHOOK                      FieldLevelSearchFieldDtoEntityType = "WEBHOOK"
)

// Defines values for GenericProviderDtoType.
const (
	GenericProviderDtoTypeACCESSTOKEN GenericProviderDtoType = "ACCESS_TOKEN"
	GenericProviderDtoTypeDATASOURCE  GenericProviderDtoType = "DATASOURCE"
	GenericProviderDtoTypeGENERIC     GenericProviderDtoType = "GENERIC"
	GenericProviderDtoTypeUSER        GenericProviderDtoType = "USER"
)

// Defines values for GetCollaborationToolItemDtoType.
const (
	JIRA GetCollaborationToolItemDtoType = "JIRA"
)

// Defines values for GetDashboardWithIncidentsRequestDtoSourceType.
const (
	GetDashboardWithIncidentsRequestDtoSourceTypeAIRFLOW           GetDashboardWithIncidentsRequestDtoSourceType = "AIRFLOW"
	GetDashboardWithIncidentsRequestDtoSourceTypeATHENA            GetDashboardWithIncidentsRequestDtoSourceType = "ATHENA"
	GetDashboardWithIncidentsRequestDtoSourceTypeBIGQUERY          GetDashboardWithIncidentsRequestDtoSourceType = "BIGQUERY"
	GetDashboardWithIncidentsRequestDtoSourceTypeCOMPOSER          GetDashboardWithIncidentsRequestDtoSourceType = "COMPOSER"
	GetDashboardWithIncidentsRequestDtoSourceTypeDATABRICKS        GetDashboardWithIncidentsRequestDtoSourceType = "DATABRICKS"
	GetDashboardWithIncidentsRequestDtoSourceTypeDBT               GetDashboardWithIncidentsRequestDtoSourceType = "DBT"
	GetDashboardWithIncidentsRequestDtoSourceTypeDBTCLOUD          GetDashboardWithIncidentsRequestDtoSourceType = "DBTCLOUD"
	GetDashboardWithIncidentsRequestDtoSourceTypeDECLARATIVE       GetDashboardWithIncidentsRequestDtoSourceType = "DECLARATIVE"
	GetDashboardWithIncidentsRequestDtoSourceTypeFIVETRAN          GetDashboardWithIncidentsRequestDtoSourceType = "FIVETRAN"
	GetDashboardWithIncidentsRequestDtoSourceTypeHIVE              GetDashboardWithIncidentsRequestDtoSourceType = "HIVE"
	GetDashboardWithIncidentsRequestDtoSourceTypeLOOKER            GetDashboardWithIncidentsRequestDtoSourceType = "LOOKER"
	GetDashboardWithIncidentsRequestDtoSourceTypeMICROSTRATEGY     GetDashboardWithIncidentsRequestDtoSourceType = "MICROSTRATEGY"
	GetDashboardWithIncidentsRequestDtoSourceTypeMSSQL             GetDashboardWithIncidentsRequestDtoSourceType = "MSSQL"
	GetDashboardWithIncidentsRequestDtoSourceTypeMWAA              GetDashboardWithIncidentsRequestDtoSourceType = "MWAA"
	GetDashboardWithIncidentsRequestDtoSourceTypeMYSQL             GetDashboardWithIncidentsRequestDtoSourceType = "MYSQL"
	GetDashboardWithIncidentsRequestDtoSourceTypeORACLE            GetDashboardWithIncidentsRequestDtoSourceType = "ORACLE"
	GetDashboardWithIncidentsRequestDtoSourceTypePOSTGRES          GetDashboardWithIncidentsRequestDtoSourceType = "POSTGRES"
	GetDashboardWithIncidentsRequestDtoSourceTypePOWERBI           GetDashboardWithIncidentsRequestDtoSourceType = "POWER_BI"
	GetDashboardWithIncidentsRequestDtoSourceTypeQUICKSIGHT        GetDashboardWithIncidentsRequestDtoSourceType = "QUICKSIGHT"
	GetDashboardWithIncidentsRequestDtoSourceTypeREDSHIFT          GetDashboardWithIncidentsRequestDtoSourceType = "REDSHIFT"
	GetDashboardWithIncidentsRequestDtoSourceTypeSNOWFLAKE         GetDashboardWithIncidentsRequestDtoSourceType = "SNOWFLAKE"
	GetDashboardWithIncidentsRequestDtoSourceTypeSYNAPSE           GetDashboardWithIncidentsRequestDtoSourceType = "SYNAPSE"
	GetDashboardWithIncidentsRequestDtoSourceTypeTABLEAU           GetDashboardWithIncidentsRequestDtoSourceType = "TABLEAU"
	GetDashboardWithIncidentsRequestDtoSourceTypeUnderscoreUNKNOWN GetDashboardWithIncidentsRequestDtoSourceType = "_UNKNOWN_"
)

// Defines values for GitConnectionAuthType.
const (
	HTTPAUTHORIZATIONHEADER GitConnectionAuthType = "HTTP_AUTHORIZATION_HEADER"
	SSH                     GitConnectionAuthType = "SSH"
	USERPASSWORD            GitConnectionAuthType = "USER_PASSWORD"
)

// Defines values for HealthStatusSearchFilterElementDtoId.
const (
	HealthStatusSearchFilterElementDtoIdATRISK       HealthStatusSearchFilterElementDtoId = "AT_RISK"
	HealthStatusSearchFilterElementDtoIdCRITICAL     HealthStatusSearchFilterElementDtoId = "CRITICAL"
	HealthStatusSearchFilterElementDtoIdHEALTHY      HealthStatusSearchFilterElementDtoId = "HEALTHY"
	HealthStatusSearchFilterElementDtoIdNOTSUPPORTED HealthStatusSearchFilterElementDtoId = "NOT_SUPPORTED"
	HealthStatusSearchFilterElementDtoIdUNMONITORED  HealthStatusSearchFilterElementDtoId = "UNMONITORED"
)

// Defines values for ImpactedAssetDtoDatasourceType.
const (
	ImpactedAssetDtoDatasourceTypeAIRFLOW           ImpactedAssetDtoDatasourceType = "AIRFLOW"
	ImpactedAssetDtoDatasourceTypeATHENA            ImpactedAssetDtoDatasourceType = "ATHENA"
	ImpactedAssetDtoDatasourceTypeBIGQUERY          ImpactedAssetDtoDatasourceType = "BIGQUERY"
	ImpactedAssetDtoDatasourceTypeCOMPOSER          ImpactedAssetDtoDatasourceType = "COMPOSER"
	ImpactedAssetDtoDatasourceTypeDATABRICKS        ImpactedAssetDtoDatasourceType = "DATABRICKS"
	ImpactedAssetDtoDatasourceTypeDBT               ImpactedAssetDtoDatasourceType = "DBT"
	ImpactedAssetDtoDatasourceTypeDBTCLOUD          ImpactedAssetDtoDatasourceType = "DBTCLOUD"
	ImpactedAssetDtoDatasourceTypeDECLARATIVE       ImpactedAssetDtoDatasourceType = "DECLARATIVE"
	ImpactedAssetDtoDatasourceTypeFIVETRAN          ImpactedAssetDtoDatasourceType = "FIVETRAN"
	ImpactedAssetDtoDatasourceTypeHIVE              ImpactedAssetDtoDatasourceType = "HIVE"
	ImpactedAssetDtoDatasourceTypeLOOKER            ImpactedAssetDtoDatasourceType = "LOOKER"
	ImpactedAssetDtoDatasourceTypeMICROSTRATEGY     ImpactedAssetDtoDatasourceType = "MICROSTRATEGY"
	ImpactedAssetDtoDatasourceTypeMSSQL             ImpactedAssetDtoDatasourceType = "MSSQL"
	ImpactedAssetDtoDatasourceTypeMWAA              ImpactedAssetDtoDatasourceType = "MWAA"
	ImpactedAssetDtoDatasourceTypeMYSQL             ImpactedAssetDtoDatasourceType = "MYSQL"
	ImpactedAssetDtoDatasourceTypeORACLE            ImpactedAssetDtoDatasourceType = "ORACLE"
	ImpactedAssetDtoDatasourceTypePOSTGRES          ImpactedAssetDtoDatasourceType = "POSTGRES"
	ImpactedAssetDtoDatasourceTypePOWERBI           ImpactedAssetDtoDatasourceType = "POWER_BI"
	ImpactedAssetDtoDatasourceTypeQUICKSIGHT        ImpactedAssetDtoDatasourceType = "QUICKSIGHT"
	ImpactedAssetDtoDatasourceTypeREDSHIFT          ImpactedAssetDtoDatasourceType = "REDSHIFT"
	ImpactedAssetDtoDatasourceTypeSNOWFLAKE         ImpactedAssetDtoDatasourceType = "SNOWFLAKE"
	ImpactedAssetDtoDatasourceTypeSYNAPSE           ImpactedAssetDtoDatasourceType = "SYNAPSE"
	ImpactedAssetDtoDatasourceTypeTABLEAU           ImpactedAssetDtoDatasourceType = "TABLEAU"
	ImpactedAssetDtoDatasourceTypeUnderscoreUNKNOWN ImpactedAssetDtoDatasourceType = "_UNKNOWN_"
)

// Defines values for IncidentEventDtoType.
const (
	IncidentEventDtoTypeASSIGNEESCHANGE               IncidentEventDtoType = "ASSIGNEES_CHANGE"
	IncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED IncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	IncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   IncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	IncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED IncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	IncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE IncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	IncidentEventDtoTypeCOMMENT                       IncidentEventDtoType = "COMMENT"
	IncidentEventDtoTypeCREATIONBYRULERUN             IncidentEventDtoType = "CREATION_BY_RULE_RUN"
	IncidentEventDtoTypeCREATIONBYUSER                IncidentEventDtoType = "CREATION_BY_USER"
	IncidentEventDtoTypeNAMECHANGE                    IncidentEventDtoType = "NAME_CHANGE"
	IncidentEventDtoTypeNEWFAILURES                   IncidentEventDtoType = "NEW_FAILURES"
	IncidentEventDtoTypeRULESADDED                    IncidentEventDtoType = "RULES_ADDED"
	IncidentEventDtoTypeRULESMOVEDFROM                IncidentEventDtoType = "RULES_MOVED_FROM"
	IncidentEventDtoTypeRULESMOVEDTO                  IncidentEventDtoType = "RULES_MOVED_TO"
	IncidentEventDtoTypeSEVERITYCHANGE                IncidentEventDtoType = "SEVERITY_CHANGE"
	IncidentEventDtoTypeSTATUSCHANGE                  IncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for IncidentExternalDtoQualification.
const (
	IncidentExternalDtoQualificationDUPLICATE     IncidentExternalDtoQualification = "DUPLICATE"
	IncidentExternalDtoQualificationEXPECTED      IncidentExternalDtoQualification = "EXPECTED"
	IncidentExternalDtoQualificationFALSEPOSITIVE IncidentExternalDtoQualification = "FALSE_POSITIVE"
	IncidentExternalDtoQualificationFIXED         IncidentExternalDtoQualification = "FIXED"
	IncidentExternalDtoQualificationKNOWNERROR    IncidentExternalDtoQualification = "KNOWN_ERROR"
)

// Defines values for IncidentExternalDtoStatus.
const (
	IncidentExternalDtoStatusCLOSED     IncidentExternalDtoStatus = "CLOSED"
	IncidentExternalDtoStatusINPROGRESS IncidentExternalDtoStatus = "IN_PROGRESS"
	IncidentExternalDtoStatusOPEN       IncidentExternalDtoStatus = "OPEN"
)

// Defines values for IncidentLightDtoQualification.
const (
	IncidentLightDtoQualificationDUPLICATE     IncidentLightDtoQualification = "DUPLICATE"
	IncidentLightDtoQualificationEXPECTED      IncidentLightDtoQualification = "EXPECTED"
	IncidentLightDtoQualificationFALSEPOSITIVE IncidentLightDtoQualification = "FALSE_POSITIVE"
	IncidentLightDtoQualificationFIXED         IncidentLightDtoQualification = "FIXED"
	IncidentLightDtoQualificationKNOWNERROR    IncidentLightDtoQualification = "KNOWN_ERROR"
)

// Defines values for IncidentLightDtoStatus.
const (
	IncidentLightDtoStatusCLOSED     IncidentLightDtoStatus = "CLOSED"
	IncidentLightDtoStatusINPROGRESS IncidentLightDtoStatus = "IN_PROGRESS"
	IncidentLightDtoStatusOPEN       IncidentLightDtoStatus = "OPEN"
)

// Defines values for IncidentSearchCriteriaStatus.
const (
	IncidentSearchCriteriaStatusCLOSED     IncidentSearchCriteriaStatus = "CLOSED"
	IncidentSearchCriteriaStatusINPROGRESS IncidentSearchCriteriaStatus = "IN_PROGRESS"
	IncidentSearchCriteriaStatusOPEN       IncidentSearchCriteriaStatus = "OPEN"
)

// Defines values for IssueDetailsDtoCriticality.
const (
	IssueDetailsDtoCriticalityCRITICAL IssueDetailsDtoCriticality = "CRITICAL"
	IssueDetailsDtoCriticalityHIGH     IssueDetailsDtoCriticality = "HIGH"
	IssueDetailsDtoCriticalityLOW      IssueDetailsDtoCriticality = "LOW"
	IssueDetailsDtoCriticalityMODERATE IssueDetailsDtoCriticality = "MODERATE"
)

// Defines values for IssueDetailsDtoQualification.
const (
	IssueDetailsDtoQualificationDUPLICATE     IssueDetailsDtoQualification = "DUPLICATE"
	IssueDetailsDtoQualificationEXPECTED      IssueDetailsDtoQualification = "EXPECTED"
	IssueDetailsDtoQualificationFALSEPOSITIVE IssueDetailsDtoQualification = "FALSE_POSITIVE"
	IssueDetailsDtoQualificationFIXED         IssueDetailsDtoQualification = "FIXED"
	IssueDetailsDtoQualificationKNOWNERROR    IssueDetailsDtoQualification = "KNOWN_ERROR"
)

// Defines values for IssueDetailsDtoStatus.
const (
	IssueDetailsDtoStatusCLOSED     IssueDetailsDtoStatus = "CLOSED"
	IssueDetailsDtoStatusINPROGRESS IssueDetailsDtoStatus = "IN_PROGRESS"
	IssueDetailsDtoStatusOPEN       IssueDetailsDtoStatus = "OPEN"
)

// Defines values for LastIngestionStatusDtoStatus.
const (
	LastIngestionStatusDtoStatusFAILURE                         LastIngestionStatusDtoStatus = "FAILURE"
	LastIngestionStatusDtoStatusPENDING                         LastIngestionStatusDtoStatus = "PENDING"
	LastIngestionStatusDtoStatusRUNNING                         LastIngestionStatusDtoStatus = "RUNNING"
	LastIngestionStatusDtoStatusSKIPPEDDATASOURCEALREADYRUNNING LastIngestionStatusDtoStatus = "SKIPPED_DATASOURCE_ALREADY_RUNNING"
	LastIngestionStatusDtoStatusSUCCESS                         LastIngestionStatusDtoStatus = "SUCCESS"
)

// Defines values for LastRunStatusDtoStatus.
const (
	LastRunStatusDtoStatusFAILED                LastRunStatusDtoStatus = "FAILED"
	LastRunStatusDtoStatusPENDING               LastRunStatusDtoStatus = "PENDING"
	LastRunStatusDtoStatusREQUIRESYOURATTENTION LastRunStatusDtoStatus = "REQUIRES_YOUR_ATTENTION"
	LastRunStatusDtoStatusRUNNING               LastRunStatusDtoStatus = "RUNNING"
	LastRunStatusDtoStatusSUCCESS               LastRunStatusDtoStatus = "SUCCESS"
	LastRunStatusDtoStatusTECHNICALERROR        LastRunStatusDtoStatus = "TECHNICAL_ERROR"
)

// Defines values for LineageAttachedEntityDatasourceType.
const (
	LineageAttachedEntityDatasourceTypeAIRFLOW           LineageAttachedEntityDatasourceType = "AIRFLOW"
	LineageAttachedEntityDatasourceTypeATHENA            LineageAttachedEntityDatasourceType = "ATHENA"
	LineageAttachedEntityDatasourceTypeBIGQUERY          LineageAttachedEntityDatasourceType = "BIGQUERY"
	LineageAttachedEntityDatasourceTypeCOMPOSER          LineageAttachedEntityDatasourceType = "COMPOSER"
	LineageAttachedEntityDatasourceTypeDATABRICKS        LineageAttachedEntityDatasourceType = "DATABRICKS"
	LineageAttachedEntityDatasourceTypeDBT               LineageAttachedEntityDatasourceType = "DBT"
	LineageAttachedEntityDatasourceTypeDBTCLOUD          LineageAttachedEntityDatasourceType = "DBTCLOUD"
	LineageAttachedEntityDatasourceTypeDECLARATIVE       LineageAttachedEntityDatasourceType = "DECLARATIVE"
	LineageAttachedEntityDatasourceTypeFIVETRAN          LineageAttachedEntityDatasourceType = "FIVETRAN"
	LineageAttachedEntityDatasourceTypeHIVE              LineageAttachedEntityDatasourceType = "HIVE"
	LineageAttachedEntityDatasourceTypeLOOKER            LineageAttachedEntityDatasourceType = "LOOKER"
	LineageAttachedEntityDatasourceTypeMICROSTRATEGY     LineageAttachedEntityDatasourceType = "MICROSTRATEGY"
	LineageAttachedEntityDatasourceTypeMSSQL             LineageAttachedEntityDatasourceType = "MSSQL"
	LineageAttachedEntityDatasourceTypeMWAA              LineageAttachedEntityDatasourceType = "MWAA"
	LineageAttachedEntityDatasourceTypeMYSQL             LineageAttachedEntityDatasourceType = "MYSQL"
	LineageAttachedEntityDatasourceTypeORACLE            LineageAttachedEntityDatasourceType = "ORACLE"
	LineageAttachedEntityDatasourceTypePOSTGRES          LineageAttachedEntityDatasourceType = "POSTGRES"
	LineageAttachedEntityDatasourceTypePOWERBI           LineageAttachedEntityDatasourceType = "POWER_BI"
	LineageAttachedEntityDatasourceTypeQUICKSIGHT        LineageAttachedEntityDatasourceType = "QUICKSIGHT"
	LineageAttachedEntityDatasourceTypeREDSHIFT          LineageAttachedEntityDatasourceType = "REDSHIFT"
	LineageAttachedEntityDatasourceTypeSNOWFLAKE         LineageAttachedEntityDatasourceType = "SNOWFLAKE"
	LineageAttachedEntityDatasourceTypeSYNAPSE           LineageAttachedEntityDatasourceType = "SYNAPSE"
	LineageAttachedEntityDatasourceTypeTABLEAU           LineageAttachedEntityDatasourceType = "TABLEAU"
	LineageAttachedEntityDatasourceTypeUnderscoreUNKNOWN LineageAttachedEntityDatasourceType = "_UNKNOWN_"
)

// Defines values for LineageAttachedEntityType.
const (
	LineageAttachedEntityTypeCONNECTOR        LineageAttachedEntityType = "CONNECTOR"
	LineageAttachedEntityTypeDAG              LineageAttachedEntityType = "DAG"
	LineageAttachedEntityTypeDASHBOARD        LineageAttachedEntityType = "DASHBOARD"
	LineageAttachedEntityTypeDATABASE         LineageAttachedEntityType = "DATABASE"
	LineageAttachedEntityTypeDECLAREDASSET    LineageAttachedEntityType = "DECLARED_ASSET"
	LineageAttachedEntityTypeEXTERNALTABLE    LineageAttachedEntityType = "EXTERNAL_TABLE"
	LineageAttachedEntityTypeFIELD            LineageAttachedEntityType = "FIELD"
	LineageAttachedEntityTypeMATERIALIZEDVIEW LineageAttachedEntityType = "MATERIALIZED_VIEW"
	LineageAttachedEntityTypeMLMODEL          LineageAttachedEntityType = "ML_MODEL"
	LineageAttachedEntityTypeMODEL            LineageAttachedEntityType = "MODEL"
	LineageAttachedEntityTypeMONITOR          LineageAttachedEntityType = "MONITOR"
	LineageAttachedEntityTypeNONE             LineageAttachedEntityType = "NONE"
	LineageAttachedEntityTypeORCHESTRATOR     LineageAttachedEntityType = "ORCHESTRATOR"
	LineageAttachedEntityTypePIPELINE         LineageAttachedEntityType = "PIPELINE"
	LineageAttachedEntityTypeREPORT           LineageAttachedEntityType = "REPORT"
	LineageAttachedEntityTypeSCHEMA           LineageAttachedEntityType = "SCHEMA"
	LineageAttachedEntityTypeSNOWFLAKESTREAM  LineageAttachedEntityType = "SNOWFLAKE_STREAM"
	LineageAttachedEntityTypeTABLE            LineageAttachedEntityType = "TABLE"
	LineageAttachedEntityTypeTRANSFORMATION   LineageAttachedEntityType = "TRANSFORMATION"
	LineageAttachedEntityTypeVIEW             LineageAttachedEntityType = "VIEW"
)

// Defines values for LineageEntityDtoEntityType.
const (
	LineageEntityDtoEntityTypeACCESSTOKEN                  LineageEntityDtoEntityType = "ACCESS_TOKEN"
	LineageEntityDtoEntityTypeALERTINGHOOK                 LineageEntityDtoEntityType = "ALERTING_HOOK"
	LineageEntityDtoEntityTypeCHART                        LineageEntityDtoEntityType = "CHART"
	LineageEntityDtoEntityTypeCOLLECTION                   LineageEntityDtoEntityType = "COLLECTION"
	LineageEntityDtoEntityTypeCONFIG                       LineageEntityDtoEntityType = "CONFIG"
	LineageEntityDtoEntityTypeDAG                          LineageEntityDtoEntityType = "DAG"
	LineageEntityDtoEntityTypeDASHBOARD                    LineageEntityDtoEntityType = "DASHBOARD"
	LineageEntityDtoEntityTypeDATAPOINTQUALIFICATION       LineageEntityDtoEntityType = "DATAPOINT_QUALIFICATION"
	LineageEntityDtoEntityTypeDATASET                      LineageEntityDtoEntityType = "DATASET"
	LineageEntityDtoEntityTypeDATASETFIELD                 LineageEntityDtoEntityType = "DATASET_FIELD"
	LineageEntityDtoEntityTypeDATASOURCE                   LineageEntityDtoEntityType = "DATASOURCE"
	LineageEntityDtoEntityTypeDATASOURCEINGESTIONRUN       LineageEntityDtoEntityType = "DATASOURCE_INGESTION_RUN"
	LineageEntityDtoEntityTypeDECLAREDASSET                LineageEntityDtoEntityType = "DECLARED_ASSET"
	LineageEntityDtoEntityTypeDOMAIN                       LineageEntityDtoEntityType = "DOMAIN"
	LineageEntityDtoEntityTypeINCIDENT                     LineageEntityDtoEntityType = "INCIDENT"
	LineageEntityDtoEntityTypeRULEMONITORINGRECOMMENDATION LineageEntityDtoEntityType = "RULE_MONITORING_RECOMMENDATION"
	LineageEntityDtoEntityTypeRULERUN                      LineageEntityDtoEntityType = "RULE_RUN"
	LineageEntityDtoEntityTypeSIFFLETAGENT                 LineageEntityDtoEntityType = "SIFFLET_AGENT"
	LineageEntityDtoEntityTypeSIFFLETRULE                  LineageEntityDtoEntityType = "SIFFLET_RULE"
	LineageEntityDtoEntityTypeTAG                          LineageEntityDtoEntityType = "TAG"
	LineageEntityDtoEntityTypeTRANSFORMATION               LineageEntityDtoEntityType = "TRANSFORMATION"
	LineageEntityDtoEntityTypeUSER                         LineageEntityDtoEntityType = "USER"
	LineageEntityDtoEntityTypeWEBHOOK                      LineageEntityDtoEntityType = "WEBHOOK"
)

// Defines values for LineageEntityDtoHealth.
const (
	LineageEntityDtoHealthATRISK       LineageEntityDtoHealth = "AT_RISK"
	LineageEntityDtoHealthCRITICAL     LineageEntityDtoHealth = "CRITICAL"
	LineageEntityDtoHealthHEALTHY      LineageEntityDtoHealth = "HEALTHY"
	LineageEntityDtoHealthNOTSUPPORTED LineageEntityDtoHealth = "NOT_SUPPORTED"
	LineageEntityDtoHealthUNMONITORED  LineageEntityDtoHealth = "UNMONITORED"
)

// Defines values for LineageEntityDtoPlatformEnum.
const (
	LineageEntityDtoPlatformEnumACCELDATA                 LineageEntityDtoPlatformEnum = "ACCELDATA"
	LineageEntityDtoPlatformEnumACRYLDATA                 LineageEntityDtoPlatformEnum = "ACRYL_DATA"
	LineageEntityDtoPlatformEnumACTIANVECTOR              LineageEntityDtoPlatformEnum = "ACTIAN_VECTOR"
	LineageEntityDtoPlatformEnumACTIVECAMPAIGN            LineageEntityDtoPlatformEnum = "ACTIVE_CAMPAIGN"
	LineageEntityDtoPlatformEnumADA                       LineageEntityDtoPlatformEnum = "ADA"
	LineageEntityDtoPlatformEnumADJUST                    LineageEntityDtoPlatformEnum = "ADJUST"
	LineageEntityDtoPlatformEnumADOBE                     LineageEntityDtoPlatformEnum = "ADOBE"
	LineageEntityDtoPlatformEnumADPWFN                    LineageEntityDtoPlatformEnum = "ADP_WFN"
	LineageEntityDtoPlatformEnumADROLL                    LineageEntityDtoPlatformEnum = "ADROLL"
	LineageEntityDtoPlatformEnumAFFINITY                  LineageEntityDtoPlatformEnum = "AFFINITY"
	LineageEntityDtoPlatformEnumAIRBYTE                   LineageEntityDtoPlatformEnum = "AIRBYTE"
	LineageEntityDtoPlatformEnumAIRCALL                   LineageEntityDtoPlatformEnum = "AIRCALL"
	LineageEntityDtoPlatformEnumAIRFLOW                   LineageEntityDtoPlatformEnum = "AIRFLOW"
	LineageEntityDtoPlatformEnumAIRTABLE                  LineageEntityDtoPlatformEnum = "AIRTABLE"
	LineageEntityDtoPlatformEnumALATION                   LineageEntityDtoPlatformEnum = "ALATION"
	LineageEntityDtoPlatformEnumALCHEMER                  LineageEntityDtoPlatformEnum = "ALCHEMER"
	LineageEntityDtoPlatformEnumALVINAI                   LineageEntityDtoPlatformEnum = "ALVIN_AI"
	LineageEntityDtoPlatformEnumAMAZON                    LineageEntityDtoPlatformEnum = "AMAZON"
	LineageEntityDtoPlatformEnumAMAZONCLOUDFRONT          LineageEntityDtoPlatformEnum = "AMAZON_CLOUDFRONT"
	LineageEntityDtoPlatformEnumAMAZONDOCUMENTDB          LineageEntityDtoPlatformEnum = "AMAZON_DOCUMENTDB"
	LineageEntityDtoPlatformEnumAMAZONDYNAMODB            LineageEntityDtoPlatformEnum = "AMAZON_DYNAMODB"
	LineageEntityDtoPlatformEnumAMAZONFIREHOSE            LineageEntityDtoPlatformEnum = "AMAZON_FIREHOSE"
	LineageEntityDtoPlatformEnumAMAZONSAGEMAKER           LineageEntityDtoPlatformEnum = "AMAZON_SAGEMAKER"
	LineageEntityDtoPlatformEnumAMAZONSELLINGPARTNER      LineageEntityDtoPlatformEnum = "AMAZON_SELLING_PARTNER"
	LineageEntityDtoPlatformEnumAMPLITUDE                 LineageEntityDtoPlatformEnum = "AMPLITUDE"
	LineageEntityDtoPlatformEnumANAPLAN                   LineageEntityDtoPlatformEnum = "ANAPLAN"
	LineageEntityDtoPlatformEnumANOMALO                   LineageEntityDtoPlatformEnum = "ANOMALO"
	LineageEntityDtoPlatformEnumAPACHEKAFKA               LineageEntityDtoPlatformEnum = "APACHE_KAFKA"
	LineageEntityDtoPlatformEnumAPACHESPARK               LineageEntityDtoPlatformEnum = "APACHE_SPARK"
	LineageEntityDtoPlatformEnumAPPCUES                   LineageEntityDtoPlatformEnum = "APPCUES"
	LineageEntityDtoPlatformEnumAPPFIGURES                LineageEntityDtoPlatformEnum = "APPFIGURES"
	LineageEntityDtoPlatformEnumAPPLE                     LineageEntityDtoPlatformEnum = "APPLE"
	LineageEntityDtoPlatformEnumAPPLEAPPSTORE             LineageEntityDtoPlatformEnum = "APPLE_APP_STORE"
	LineageEntityDtoPlatformEnumAPPSFLYER                 LineageEntityDtoPlatformEnum = "APPSFLYER"
	LineageEntityDtoPlatformEnumASANA                     LineageEntityDtoPlatformEnum = "ASANA"
	LineageEntityDtoPlatformEnumASSEMBLED                 LineageEntityDtoPlatformEnum = "ASSEMBLED"
	LineageEntityDtoPlatformEnumATHENA                    LineageEntityDtoPlatformEnum = "ATHENA"
	LineageEntityDtoPlatformEnumATLAN                     LineageEntityDtoPlatformEnum = "ATLAN"
	LineageEntityDtoPlatformEnumATLASSIANCONFLUENCE       LineageEntityDtoPlatformEnum = "ATLASSIAN_CONFLUENCE"
	LineageEntityDtoPlatformEnumATLASSIANJIRA             LineageEntityDtoPlatformEnum = "ATLASSIAN_JIRA"
	LineageEntityDtoPlatformEnumATLASSIANOPSGENIE         LineageEntityDtoPlatformEnum = "ATLASSIAN_OPSGENIE"
	LineageEntityDtoPlatformEnumAUTH0                     LineageEntityDtoPlatformEnum = "AUTH0"
	LineageEntityDtoPlatformEnumAUTODESKBIM360            LineageEntityDtoPlatformEnum = "AUTODESK_BIM_360"
	LineageEntityDtoPlatformEnumAWIN                      LineageEntityDtoPlatformEnum = "AWIN"
	LineageEntityDtoPlatformEnumAWSCLOUDTRAIL             LineageEntityDtoPlatformEnum = "AWS_CLOUDTRAIL"
	LineageEntityDtoPlatformEnumAWSCOSTEXPLORER           LineageEntityDtoPlatformEnum = "AWS_COST_EXPLORER"
	LineageEntityDtoPlatformEnumAWSINVENTORY              LineageEntityDtoPlatformEnum = "AWS_INVENTORY"
	LineageEntityDtoPlatformEnumAWSLAMBDA                 LineageEntityDtoPlatformEnum = "AWS_LAMBDA"
	LineageEntityDtoPlatformEnumAZURE                     LineageEntityDtoPlatformEnum = "AZURE"
	LineageEntityDtoPlatformEnumBALLOTREADY               LineageEntityDtoPlatformEnum = "BALLOT_READY"
	LineageEntityDtoPlatformEnumBAMBOOHR                  LineageEntityDtoPlatformEnum = "BAMBOOHR"
	LineageEntityDtoPlatformEnumBIGCOMMERCE               LineageEntityDtoPlatformEnum = "BIGCOMMERCE"
	LineageEntityDtoPlatformEnumBIGEYE                    LineageEntityDtoPlatformEnum = "BIGEYE"
	LineageEntityDtoPlatformEnumBIGQUERY                  LineageEntityDtoPlatformEnum = "BIGQUERY"
	LineageEntityDtoPlatformEnumBILLINGPLATFORM           LineageEntityDtoPlatformEnum = "BILLINGPLATFORM"
	LineageEntityDtoPlatformEnumBIRDEYE                   LineageEntityDtoPlatformEnum = "BIRDEYE"
	LineageEntityDtoPlatformEnumBLACKBOARD                LineageEntityDtoPlatformEnum = "BLACKBOARD"
	LineageEntityDtoPlatformEnumBOX                       LineageEntityDtoPlatformEnum = "BOX"
	LineageEntityDtoPlatformEnumBRAINTREE                 LineageEntityDtoPlatformEnum = "BRAINTREE"
	LineageEntityDtoPlatformEnumBRAZE                     LineageEntityDtoPlatformEnum = "BRAZE"
	LineageEntityDtoPlatformEnumBREVO                     LineageEntityDtoPlatformEnum = "BREVO"
	LineageEntityDtoPlatformEnumBREX                      LineageEntityDtoPlatformEnum = "BREX"
	LineageEntityDtoPlatformEnumBUILDKITE                 LineageEntityDtoPlatformEnum = "BUILDKITE"
	LineageEntityDtoPlatformEnumBUZZSPROUT                LineageEntityDtoPlatformEnum = "BUZZSPROUT"
	LineageEntityDtoPlatformEnumCALENDLY                  LineageEntityDtoPlatformEnum = "CALENDLY"
	LineageEntityDtoPlatformEnumCAMPAIGNMONITOR           LineageEntityDtoPlatformEnum = "CAMPAIGN_MONITOR"
	LineageEntityDtoPlatformEnumCANNY                     LineageEntityDtoPlatformEnum = "CANNY"
	LineageEntityDtoPlatformEnumCANVAS                    LineageEntityDtoPlatformEnum = "CANVAS"
	LineageEntityDtoPlatformEnumCAPTERRA                  LineageEntityDtoPlatformEnum = "CAPTERRA"
	LineageEntityDtoPlatformEnumCASTORDOC                 LineageEntityDtoPlatformEnum = "CASTOR_DOC"
	LineageEntityDtoPlatformEnumCENSUS                    LineageEntityDtoPlatformEnum = "CENSUS"
	LineageEntityDtoPlatformEnumCERTINIA                  LineageEntityDtoPlatformEnum = "CERTINIA"
	LineageEntityDtoPlatformEnumCHAMELEON                 LineageEntityDtoPlatformEnum = "CHAMELEON"
	LineageEntityDtoPlatformEnumCHANNELADVISOR            LineageEntityDtoPlatformEnum = "CHANNEL_ADVISOR"
	LineageEntityDtoPlatformEnumCHARGEBEE                 LineageEntityDtoPlatformEnum = "CHARGEBEE"
	LineageEntityDtoPlatformEnumCHARGEDESK                LineageEntityDtoPlatformEnum = "CHARGEDESK"
	LineageEntityDtoPlatformEnumCHARTMOGUL                LineageEntityDtoPlatformEnum = "CHARTMOGUL"
	LineageEntityDtoPlatformEnumCHORUSAI                  LineageEntityDtoPlatformEnum = "CHORUS_AI"
	LineageEntityDtoPlatformEnumCHURNKEY                  LineageEntityDtoPlatformEnum = "CHURNKEY"
	LineageEntityDtoPlatformEnumCHURNZERO                 LineageEntityDtoPlatformEnum = "CHURNZERO"
	LineageEntityDtoPlatformEnumCIMIS                     LineageEntityDtoPlatformEnum = "CIMIS"
	LineageEntityDtoPlatformEnumCIN7                      LineageEntityDtoPlatformEnum = "CIN7"
	LineageEntityDtoPlatformEnumCIRCLECI                  LineageEntityDtoPlatformEnum = "CIRCLE_CI"
	LineageEntityDtoPlatformEnumCLARI                     LineageEntityDtoPlatformEnum = "CLARI"
	LineageEntityDtoPlatformEnumCLICKUP                   LineageEntityDtoPlatformEnum = "CLICKUP"
	LineageEntityDtoPlatformEnumCLIFFAI                   LineageEntityDtoPlatformEnum = "CLIFF_AI"
	LineageEntityDtoPlatformEnumCLOSE                     LineageEntityDtoPlatformEnum = "CLOSE"
	LineageEntityDtoPlatformEnumCOLLIBRA                  LineageEntityDtoPlatformEnum = "COLLIBRA"
	LineageEntityDtoPlatformEnumCOMMERCETOOLS             LineageEntityDtoPlatformEnum = "COMMERCETOOLS"
	LineageEntityDtoPlatformEnumCOMPOSER                  LineageEntityDtoPlatformEnum = "COMPOSER"
	LineageEntityDtoPlatformEnumCONFLUENTCLOUD            LineageEntityDtoPlatformEnum = "CONFLUENT_CLOUD"
	LineageEntityDtoPlatformEnumCONTRASTSECURITY          LineageEntityDtoPlatformEnum = "CONTRAST_SECURITY"
	LineageEntityDtoPlatformEnumCOUPA                     LineageEntityDtoPlatformEnum = "COUPA"
	LineageEntityDtoPlatformEnumCRITEO                    LineageEntityDtoPlatformEnum = "CRITEO"
	LineageEntityDtoPlatformEnumCROSSBEAM                 LineageEntityDtoPlatformEnum = "CROSSBEAM"
	LineageEntityDtoPlatformEnumCRUNCHBASE                LineageEntityDtoPlatformEnum = "CRUNCHBASE"
	LineageEntityDtoPlatformEnumCUSTOMERIO                LineageEntityDtoPlatformEnum = "CUSTOMER_IO"
	LineageEntityDtoPlatformEnumD2LBRIGHTSPACE            LineageEntityDtoPlatformEnum = "D2L_BRIGHTSPACE"
	LineageEntityDtoPlatformEnumDAGSTER                   LineageEntityDtoPlatformEnum = "DAGSTER"
	LineageEntityDtoPlatformEnumDATABAND                  LineageEntityDtoPlatformEnum = "DATABAND"
	LineageEntityDtoPlatformEnumDATABRICKS                LineageEntityDtoPlatformEnum = "DATABRICKS"
	LineageEntityDtoPlatformEnumDATADOG                   LineageEntityDtoPlatformEnum = "DATADOG"
	LineageEntityDtoPlatformEnumDATAEDO                   LineageEntityDtoPlatformEnum = "DATAEDO"
	LineageEntityDtoPlatformEnumDATAFOLD                  LineageEntityDtoPlatformEnum = "DATAFOLD"
	LineageEntityDtoPlatformEnumDATAGALAXY                LineageEntityDtoPlatformEnum = "DATAGALAXY"
	LineageEntityDtoPlatformEnumDATAHUB                   LineageEntityDtoPlatformEnum = "DATAHUB"
	LineageEntityDtoPlatformEnumDATAIKU                   LineageEntityDtoPlatformEnum = "DATAIKU"
	LineageEntityDtoPlatformEnumDATAWORLD                 LineageEntityDtoPlatformEnum = "DATA_WORLD"
	LineageEntityDtoPlatformEnumDB2                       LineageEntityDtoPlatformEnum = "DB2"
	LineageEntityDtoPlatformEnumDBT                       LineageEntityDtoPlatformEnum = "DBT"
	LineageEntityDtoPlatformEnumDBTCLOUD                  LineageEntityDtoPlatformEnum = "DBTCLOUD"
	LineageEntityDtoPlatformEnumDCLLOGISTICS              LineageEntityDtoPlatformEnum = "DCL_LOGISTICS"
	LineageEntityDtoPlatformEnumDEAR                      LineageEntityDtoPlatformEnum = "DEAR"
	LineageEntityDtoPlatformEnumDECUBE                    LineageEntityDtoPlatformEnum = "DECUBE"
	LineageEntityDtoPlatformEnumDELIGHTED                 LineageEntityDtoPlatformEnum = "DELIGHTED"
	LineageEntityDtoPlatformEnumDEPUTY                    LineageEntityDtoPlatformEnum = "DEPUTY"
	LineageEntityDtoPlatformEnumDESTINI                   LineageEntityDtoPlatformEnum = "DESTINI"
	LineageEntityDtoPlatformEnumDIXA                      LineageEntityDtoPlatformEnum = "DIXA"
	LineageEntityDtoPlatformEnumDOCEBO                    LineageEntityDtoPlatformEnum = "DOCEBO"
	LineageEntityDtoPlatformEnumDRATA                     LineageEntityDtoPlatformEnum = "DRATA"
	LineageEntityDtoPlatformEnumDRIFT                     LineageEntityDtoPlatformEnum = "DRIFT"
	LineageEntityDtoPlatformEnumDRIP                      LineageEntityDtoPlatformEnum = "DRIP"
	LineageEntityDtoPlatformEnumDROPBOX                   LineageEntityDtoPlatformEnum = "DROPBOX"
	LineageEntityDtoPlatformEnumDUOPLANE                  LineageEntityDtoPlatformEnum = "DUOPLANE"
	LineageEntityDtoPlatformEnumEASYPOST                  LineageEntityDtoPlatformEnum = "EASY_POST"
	LineageEntityDtoPlatformEnumECONOMIC                  LineageEntityDtoPlatformEnum = "E_CONOMIC"
	LineageEntityDtoPlatformEnumELASTICSEARCH             LineageEntityDtoPlatformEnum = "ELASTICSEARCH"
	LineageEntityDtoPlatformEnumELEMENTARY                LineageEntityDtoPlatformEnum = "ELEMENTARY"
	LineageEntityDtoPlatformEnumELLUCIAN                  LineageEntityDtoPlatformEnum = "ELLUCIAN"
	LineageEntityDtoPlatformEnumELOQUA                    LineageEntityDtoPlatformEnum = "ELOQUA"
	LineageEntityDtoPlatformEnumEMAIL                     LineageEntityDtoPlatformEnum = "EMAIL"
	LineageEntityDtoPlatformEnumEMPLOYMENTHERO            LineageEntityDtoPlatformEnum = "EMPLOYMENT_HERO"
	LineageEntityDtoPlatformEnumEPICORPROPHET21           LineageEntityDtoPlatformEnum = "EPICOR_PROPHET_21"
	LineageEntityDtoPlatformEnumEVENTBRITE                LineageEntityDtoPlatformEnum = "EVENTBRITE"
	LineageEntityDtoPlatformEnumEVERHOUR                  LineageEntityDtoPlatformEnum = "EVERHOUR"
	LineageEntityDtoPlatformEnumEXCEL                     LineageEntityDtoPlatformEnum = "EXCEL"
	LineageEntityDtoPlatformEnumEXPENSIFY                 LineageEntityDtoPlatformEnum = "EXPENSIFY"
	LineageEntityDtoPlatformEnumFACEBOOK                  LineageEntityDtoPlatformEnum = "FACEBOOK"
	LineageEntityDtoPlatformEnumFIFTEENFIVE               LineageEntityDtoPlatformEnum = "FIFTEENFIVE"
	LineageEntityDtoPlatformEnumFIGMA                     LineageEntityDtoPlatformEnum = "FIGMA"
	LineageEntityDtoPlatformEnumFIREBASE                  LineageEntityDtoPlatformEnum = "FIREBASE"
	LineageEntityDtoPlatformEnumFIREBOLT                  LineageEntityDtoPlatformEnum = "FIREBOLT"
	LineageEntityDtoPlatformEnumFIVETRAN                  LineageEntityDtoPlatformEnum = "FIVETRAN"
	LineageEntityDtoPlatformEnumFLEXPORT                  LineageEntityDtoPlatformEnum = "FLEXPORT"
	LineageEntityDtoPlatformEnumFORJ                      LineageEntityDtoPlatformEnum = "FORJ"
	LineageEntityDtoPlatformEnumFOUNTAIN                  LineageEntityDtoPlatformEnum = "FOUNTAIN"
	LineageEntityDtoPlatformEnumFREIGHTVIEW               LineageEntityDtoPlatformEnum = "FREIGHTVIEW"
	LineageEntityDtoPlatformEnumFRESHBOOKS                LineageEntityDtoPlatformEnum = "FRESHBOOKS"
	LineageEntityDtoPlatformEnumFRESHCHAT                 LineageEntityDtoPlatformEnum = "FRESHCHAT"
	LineageEntityDtoPlatformEnumFRESHDESK                 LineageEntityDtoPlatformEnum = "FRESHDESK"
	LineageEntityDtoPlatformEnumFRESHDESKCONTACTCENTER    LineageEntityDtoPlatformEnum = "FRESHDESK_CONTACT_CENTER"
	LineageEntityDtoPlatformEnumFRESHSERVICE              LineageEntityDtoPlatformEnum = "FRESHSERVICE"
	LineageEntityDtoPlatformEnumFRESHSUCCESS              LineageEntityDtoPlatformEnum = "FRESHSUCCESS"
	LineageEntityDtoPlatformEnumFRESHTEAM                 LineageEntityDtoPlatformEnum = "FRESHTEAM"
	LineageEntityDtoPlatformEnumFRIENDBUY                 LineageEntityDtoPlatformEnum = "FRIENDBUY"
	LineageEntityDtoPlatformEnumFRONT                     LineageEntityDtoPlatformEnum = "FRONT"
	LineageEntityDtoPlatformEnumFTP                       LineageEntityDtoPlatformEnum = "FTP"
	LineageEntityDtoPlatformEnumFULLSTORY                 LineageEntityDtoPlatformEnum = "FULLSTORY"
	LineageEntityDtoPlatformEnumG2                        LineageEntityDtoPlatformEnum = "G2"
	LineageEntityDtoPlatformEnumGAINSIGHT                 LineageEntityDtoPlatformEnum = "GAINSIGHT"
	LineageEntityDtoPlatformEnumGEM                       LineageEntityDtoPlatformEnum = "GEM"
	LineageEntityDtoPlatformEnumGIT                       LineageEntityDtoPlatformEnum = "GIT"
	LineageEntityDtoPlatformEnumGITHUB                    LineageEntityDtoPlatformEnum = "GITHUB"
	LineageEntityDtoPlatformEnumGITLAB                    LineageEntityDtoPlatformEnum = "GITLAB"
	LineageEntityDtoPlatformEnumGLADLY                    LineageEntityDtoPlatformEnum = "GLADLY"
	LineageEntityDtoPlatformEnumGOCARDLESS                LineageEntityDtoPlatformEnum = "GOCARDLESS"
	LineageEntityDtoPlatformEnumGONG                      LineageEntityDtoPlatformEnum = "GONG"
	LineageEntityDtoPlatformEnumGOOGLE                    LineageEntityDtoPlatformEnum = "GOOGLE"
	LineageEntityDtoPlatformEnumGOOGLEADMANAGER           LineageEntityDtoPlatformEnum = "GOOGLE_AD_MANAGER"
	LineageEntityDtoPlatformEnumGOOGLEADS                 LineageEntityDtoPlatformEnum = "GOOGLE_ADS"
	LineageEntityDtoPlatformEnumGOOGLEANALYTICS           LineageEntityDtoPlatformEnum = "GOOGLE_ANALYTICS"
	LineageEntityDtoPlatformEnumGOOGLECALENDAR            LineageEntityDtoPlatformEnum = "GOOGLE_CALENDAR"
	LineageEntityDtoPlatformEnumGOOGLECAMPAIGNMANAGER     LineageEntityDtoPlatformEnum = "GOOGLE_CAMPAIGN_MANAGER"
	LineageEntityDtoPlatformEnumGOOGLECHROME              LineageEntityDtoPlatformEnum = "GOOGLE_CHROME"
	LineageEntityDtoPlatformEnumGOOGLECLOUD               LineageEntityDtoPlatformEnum = "GOOGLE_CLOUD"
	LineageEntityDtoPlatformEnumGOOGLECLOUDSTORAGE        LineageEntityDtoPlatformEnum = "GOOGLE_CLOUD_STORAGE"
	LineageEntityDtoPlatformEnumGOOGLEDISPLAY             LineageEntityDtoPlatformEnum = "GOOGLE_DISPLAY"
	LineageEntityDtoPlatformEnumGOOGLEDRIVE               LineageEntityDtoPlatformEnum = "GOOGLE_DRIVE"
	LineageEntityDtoPlatformEnumGOOGLEPLAY                LineageEntityDtoPlatformEnum = "GOOGLE_PLAY"
	LineageEntityDtoPlatformEnumGOOGLESEARCHADS360        LineageEntityDtoPlatformEnum = "GOOGLE_SEARCH_ADS_360"
	LineageEntityDtoPlatformEnumGOOGLESEARCHCONSOLE       LineageEntityDtoPlatformEnum = "GOOGLE_SEARCH_CONSOLE"
	LineageEntityDtoPlatformEnumGOOGLESHEETS              LineageEntityDtoPlatformEnum = "GOOGLE_SHEETS"
	LineageEntityDtoPlatformEnumGOOGLETASKS               LineageEntityDtoPlatformEnum = "GOOGLE_TASKS"
	LineageEntityDtoPlatformEnumGORGIAS                   LineageEntityDtoPlatformEnum = "GORGIAS"
	LineageEntityDtoPlatformEnumGREENHOUSE                LineageEntityDtoPlatformEnum = "GREENHOUSE"
	LineageEntityDtoPlatformEnumGREENPLUM                 LineageEntityDtoPlatformEnum = "GREENPLUM"
	LineageEntityDtoPlatformEnumGREENPOWERMONITOR         LineageEntityDtoPlatformEnum = "GREEN_POWER_MONITOR"
	LineageEntityDtoPlatformEnumGREPSR                    LineageEntityDtoPlatformEnum = "GREPSR"
	LineageEntityDtoPlatformEnumGRIN                      LineageEntityDtoPlatformEnum = "GRIN"
	LineageEntityDtoPlatformEnumGURU                      LineageEntityDtoPlatformEnum = "GURU"
	LineageEntityDtoPlatformEnumH2                        LineageEntityDtoPlatformEnum = "H2"
	LineageEntityDtoPlatformEnumHARVEST                   LineageEntityDtoPlatformEnum = "HARVEST"
	LineageEntityDtoPlatformEnumHDFS                      LineageEntityDtoPlatformEnum = "HDFS"
	LineageEntityDtoPlatformEnumHDFSSTORAGE               LineageEntityDtoPlatformEnum = "HDFS_STORAGE"
	LineageEntityDtoPlatformEnumHEAP                      LineageEntityDtoPlatformEnum = "HEAP"
	LineageEntityDtoPlatformEnumHEIGHT                    LineageEntityDtoPlatformEnum = "HEIGHT"
	LineageEntityDtoPlatformEnumHELPSCOUT                 LineageEntityDtoPlatformEnum = "HELP_SCOUT"
	LineageEntityDtoPlatformEnumHELPSHIFT                 LineageEntityDtoPlatformEnum = "HELPSHIFT"
	LineageEntityDtoPlatformEnumHEROKUKAFKA               LineageEntityDtoPlatformEnum = "HEROKU_KAFKA"
	LineageEntityDtoPlatformEnumHIBOB                     LineageEntityDtoPlatformEnum = "HIBOB"
	LineageEntityDtoPlatformEnumHIGHTOUCH                 LineageEntityDtoPlatformEnum = "HIGH_TOUCH"
	LineageEntityDtoPlatformEnumHIVE                      LineageEntityDtoPlatformEnum = "HIVE"
	LineageEntityDtoPlatformEnumHIVEPROCESS               LineageEntityDtoPlatformEnum = "HIVE_PROCESS"
	LineageEntityDtoPlatformEnumHOPIN                     LineageEntityDtoPlatformEnum = "HOPIN"
	LineageEntityDtoPlatformEnumHUBSPOT                   LineageEntityDtoPlatformEnum = "HUBSPOT"
	LineageEntityDtoPlatformEnumIMPACT                    LineageEntityDtoPlatformEnum = "IMPACT"
	LineageEntityDtoPlatformEnumINCIDENTIO                LineageEntityDtoPlatformEnum = "INCIDENT_IO"
	LineageEntityDtoPlatformEnumINFOBIP                   LineageEntityDtoPlatformEnum = "INFOBIP"
	LineageEntityDtoPlatformEnumINFORMATICA               LineageEntityDtoPlatformEnum = "INFORMATICA"
	LineageEntityDtoPlatformEnumINSIGHTLY                 LineageEntityDtoPlatformEnum = "INSIGHTLY"
	LineageEntityDtoPlatformEnumINSTAGRAM                 LineageEntityDtoPlatformEnum = "INSTAGRAM"
	LineageEntityDtoPlatformEnumINTERCOM                  LineageEntityDtoPlatformEnum = "INTERCOM"
	LineageEntityDtoPlatformEnumINVESTOPEDIA              LineageEntityDtoPlatformEnum = "INVESTOPEDIA"
	LineageEntityDtoPlatformEnumIRONCLAD                  LineageEntityDtoPlatformEnum = "IRONCLAD"
	LineageEntityDtoPlatformEnumIRONSOURCE                LineageEntityDtoPlatformEnum = "IRONSOURCE"
	LineageEntityDtoPlatformEnumITERABLE                  LineageEntityDtoPlatformEnum = "ITERABLE"
	LineageEntityDtoPlatformEnumJAVA                      LineageEntityDtoPlatformEnum = "JAVA"
	LineageEntityDtoPlatformEnumJENKINS                   LineageEntityDtoPlatformEnum = "JENKINS"
	LineageEntityDtoPlatformEnumJUSTCALL                  LineageEntityDtoPlatformEnum = "JUSTCALL"
	LineageEntityDtoPlatformEnumKANDJI                    LineageEntityDtoPlatformEnum = "KANDJI"
	LineageEntityDtoPlatformEnumKENSU                     LineageEntityDtoPlatformEnum = "KENSU"
	LineageEntityDtoPlatformEnumKHOROSCARE                LineageEntityDtoPlatformEnum = "KHOROS_CARE"
	LineageEntityDtoPlatformEnumKISSMETRICS               LineageEntityDtoPlatformEnum = "KISSMETRICS"
	LineageEntityDtoPlatformEnumKLAVIYO                   LineageEntityDtoPlatformEnum = "KLAVIYO"
	LineageEntityDtoPlatformEnumKNOWBE4                   LineageEntityDtoPlatformEnum = "KNOWBE4"
	LineageEntityDtoPlatformEnumKONNECTINSIGHTS           LineageEntityDtoPlatformEnum = "KONNECT_INSIGHTS"
	LineageEntityDtoPlatformEnumKUSTOMER                  LineageEntityDtoPlatformEnum = "KUSTOMER"
	LineageEntityDtoPlatformEnumLARIATDATA                LineageEntityDtoPlatformEnum = "LARIAT_DATA"
	LineageEntityDtoPlatformEnumLATTICE                   LineageEntityDtoPlatformEnum = "LATTICE"
	LineageEntityDtoPlatformEnumLAUNCHDARKLY              LineageEntityDtoPlatformEnum = "LAUNCH_DARKLY"
	LineageEntityDtoPlatformEnumLEARNUPON                 LineageEntityDtoPlatformEnum = "LEARN_UPON"
	LineageEntityDtoPlatformEnumLESSONLY                  LineageEntityDtoPlatformEnum = "LESSONLY"
	LineageEntityDtoPlatformEnumLEVER                     LineageEntityDtoPlatformEnum = "LEVER"
	LineageEntityDtoPlatformEnumLIFTOFF                   LineageEntityDtoPlatformEnum = "LIFTOFF"
	LineageEntityDtoPlatformEnumLIGHTDASH                 LineageEntityDtoPlatformEnum = "LIGHTDASH"
	LineageEntityDtoPlatformEnumLIGHTSPEED                LineageEntityDtoPlatformEnum = "LIGHTSPEED"
	LineageEntityDtoPlatformEnumLIGHTSUP                  LineageEntityDtoPlatformEnum = "LIGHTSUP"
	LineageEntityDtoPlatformEnumLINEAR                    LineageEntityDtoPlatformEnum = "LINEAR"
	LineageEntityDtoPlatformEnumLINKEDIN                  LineageEntityDtoPlatformEnum = "LINKEDIN"
	LineageEntityDtoPlatformEnumLIVECHAT                  LineageEntityDtoPlatformEnum = "LIVECHAT"
	LineageEntityDtoPlatformEnumLOADEDCOMMERCE            LineageEntityDtoPlatformEnum = "LOADED_COMMERCE"
	LineageEntityDtoPlatformEnumLOB                       LineageEntityDtoPlatformEnum = "LOB"
	LineageEntityDtoPlatformEnumLOOKER                    LineageEntityDtoPlatformEnum = "LOOKER"
	LineageEntityDtoPlatformEnumLOOP                      LineageEntityDtoPlatformEnum = "LOOP"
	LineageEntityDtoPlatformEnumLOOPIO                    LineageEntityDtoPlatformEnum = "LOOPIO"
	LineageEntityDtoPlatformEnumLUMA                      LineageEntityDtoPlatformEnum = "LUMA"
	LineageEntityDtoPlatformEnumMAGENTO                   LineageEntityDtoPlatformEnum = "MAGENTO"
	LineageEntityDtoPlatformEnumMAILCHIMP                 LineageEntityDtoPlatformEnum = "MAILCHIMP"
	LineageEntityDtoPlatformEnumMAILGUN                   LineageEntityDtoPlatformEnum = "MAILGUN"
	LineageEntityDtoPlatformEnumMANDRILL                  LineageEntityDtoPlatformEnum = "MANDRILL"
	LineageEntityDtoPlatformEnumMANTA                     LineageEntityDtoPlatformEnum = "MANTA"
	LineageEntityDtoPlatformEnumMARIADB                   LineageEntityDtoPlatformEnum = "MARIADB"
	LineageEntityDtoPlatformEnumMARINSOFTWARE             LineageEntityDtoPlatformEnum = "MARIN_SOFTWARE"
	LineageEntityDtoPlatformEnumMARKETO                   LineageEntityDtoPlatformEnum = "MARKETO"
	LineageEntityDtoPlatformEnumMATTERMOST                LineageEntityDtoPlatformEnum = "MATTERMOST"
	LineageEntityDtoPlatformEnumMAVENLINK                 LineageEntityDtoPlatformEnum = "MAVENLINK"
	LineageEntityDtoPlatformEnumMAXIO                     LineageEntityDtoPlatformEnum = "MAXIO"
	LineageEntityDtoPlatformEnumMEDALLIA                  LineageEntityDtoPlatformEnum = "MEDALLIA"
	LineageEntityDtoPlatformEnumMETA                      LineageEntityDtoPlatformEnum = "META"
	LineageEntityDtoPlatformEnumMETABASE                  LineageEntityDtoPlatformEnum = "METABASE"
	LineageEntityDtoPlatformEnumMETAPHOR                  LineageEntityDtoPlatformEnum = "METAPHOR"
	LineageEntityDtoPlatformEnumMETAPLANE                 LineageEntityDtoPlatformEnum = "METAPLANE"
	LineageEntityDtoPlatformEnumMICROSOFT                 LineageEntityDtoPlatformEnum = "MICROSOFT"
	LineageEntityDtoPlatformEnumMICROSOFTAZUREBLOBSTORAGE LineageEntityDtoPlatformEnum = "MICROSOFT_AZURE_BLOB_STORAGE"
	LineageEntityDtoPlatformEnumMICROSOFTAZUREML          LineageEntityDtoPlatformEnum = "MICROSOFT_AZURE_ML"
	LineageEntityDtoPlatformEnumMICROSOFTDYNAMICS         LineageEntityDtoPlatformEnum = "MICROSOFT_DYNAMICS"
	LineageEntityDtoPlatformEnumMICROSOFTONEDRIVE         LineageEntityDtoPlatformEnum = "MICROSOFT_ONEDRIVE"
	LineageEntityDtoPlatformEnumMICROSOFTPURVIEW          LineageEntityDtoPlatformEnum = "MICROSOFT_PURVIEW"
	LineageEntityDtoPlatformEnumMICROSOFTTEAMS            LineageEntityDtoPlatformEnum = "MICROSOFT_TEAMS"
	LineageEntityDtoPlatformEnumMICROSTRATEGY             LineageEntityDtoPlatformEnum = "MICROSTRATEGY"
	LineageEntityDtoPlatformEnumMIXMAX                    LineageEntityDtoPlatformEnum = "MIXMAX"
	LineageEntityDtoPlatformEnumMIXPANEL                  LineageEntityDtoPlatformEnum = "MIXPANEL"
	LineageEntityDtoPlatformEnumMONDAYCOM                 LineageEntityDtoPlatformEnum = "MONDAY_COM"
	LineageEntityDtoPlatformEnumMONGODB                   LineageEntityDtoPlatformEnum = "MONGODB"
	LineageEntityDtoPlatformEnumMONTECARLO                LineageEntityDtoPlatformEnum = "MONTE_CARLO"
	LineageEntityDtoPlatformEnumMOUNTAIN                  LineageEntityDtoPlatformEnum = "MOUNTAIN"
	LineageEntityDtoPlatformEnumMSSQL                     LineageEntityDtoPlatformEnum = "MSSQL"
	LineageEntityDtoPlatformEnumMULESOFT                  LineageEntityDtoPlatformEnum = "MULESOFT"
	LineageEntityDtoPlatformEnumMUX                       LineageEntityDtoPlatformEnum = "MUX"
	LineageEntityDtoPlatformEnumMWAA                      LineageEntityDtoPlatformEnum = "MWAA"
	LineageEntityDtoPlatformEnumMYSQL                     LineageEntityDtoPlatformEnum = "MYSQL"
	LineageEntityDtoPlatformEnumNAMELY                    LineageEntityDtoPlatformEnum = "NAMELY"
	LineageEntityDtoPlatformEnumNCINO                     LineageEntityDtoPlatformEnum = "NCINO"
	LineageEntityDtoPlatformEnumNETSUITEANALYTICS         LineageEntityDtoPlatformEnum = "NETSUITE_ANALYTICS"
	LineageEntityDtoPlatformEnumNEWRELIC                  LineageEntityDtoPlatformEnum = "NEW_RELIC"
	LineageEntityDtoPlatformEnumNOTION                    LineageEntityDtoPlatformEnum = "NOTION"
	LineageEntityDtoPlatformEnumNYLAS                     LineageEntityDtoPlatformEnum = "NYLAS"
	LineageEntityDtoPlatformEnumOBSERVE                   LineageEntityDtoPlatformEnum = "OBSERVE"
	LineageEntityDtoPlatformEnumOCTOPAI                   LineageEntityDtoPlatformEnum = "OCTOPAI"
	LineageEntityDtoPlatformEnumOKTA                      LineageEntityDtoPlatformEnum = "OKTA"
	LineageEntityDtoPlatformEnumOPENAI                    LineageEntityDtoPlatformEnum = "OPEN_AI"
	LineageEntityDtoPlatformEnumOPENDATADC                LineageEntityDtoPlatformEnum = "OPEN_DATA_DC"
	LineageEntityDtoPlatformEnumOPENEXCHANGESRATES        LineageEntityDtoPlatformEnum = "OPEN_EXCHANGES_RATES"
	LineageEntityDtoPlatformEnumOPENSEARCH                LineageEntityDtoPlatformEnum = "OPEN_SEARCH"
	LineageEntityDtoPlatformEnumOPTIMIZELY                LineageEntityDtoPlatformEnum = "OPTIMIZELY"
	LineageEntityDtoPlatformEnumORACLE                    LineageEntityDtoPlatformEnum = "ORACLE"
	LineageEntityDtoPlatformEnumORBITCOMMUNITYPLATFORM    LineageEntityDtoPlatformEnum = "ORBIT_COMMUNITY_PLATFORM"
	LineageEntityDtoPlatformEnumORDWAY                    LineageEntityDtoPlatformEnum = "ORDWAY"
	LineageEntityDtoPlatformEnumORTTO                     LineageEntityDtoPlatformEnum = "ORTTO"
	LineageEntityDtoPlatformEnumOSCOMMERCE                LineageEntityDtoPlatformEnum = "OS_COMMERCE"
	LineageEntityDtoPlatformEnumOUTBRAIN                  LineageEntityDtoPlatformEnum = "OUTBRAIN"
	LineageEntityDtoPlatformEnumOUTREACH                  LineageEntityDtoPlatformEnum = "OUTREACH"
	LineageEntityDtoPlatformEnumOVALEDGE                  LineageEntityDtoPlatformEnum = "OVALEDGE"
	LineageEntityDtoPlatformEnumPAGERDUTY                 LineageEntityDtoPlatformEnum = "PAGERDUTY"
	LineageEntityDtoPlatformEnumPAGERSHIFT                LineageEntityDtoPlatformEnum = "PAGERSHIFT"
	LineageEntityDtoPlatformEnumPAYPAL                    LineageEntityDtoPlatformEnum = "PAYPAL"
	LineageEntityDtoPlatformEnumPENDO                     LineageEntityDtoPlatformEnum = "PENDO"
	LineageEntityDtoPlatformEnumPINGDOM                   LineageEntityDtoPlatformEnum = "PINGDOM"
	LineageEntityDtoPlatformEnumPINTEREST                 LineageEntityDtoPlatformEnum = "PINTEREST"
	LineageEntityDtoPlatformEnumPIPE17                    LineageEntityDtoPlatformEnum = "PIPE17"
	LineageEntityDtoPlatformEnumPIPEDRIVE                 LineageEntityDtoPlatformEnum = "PIPEDRIVE"
	LineageEntityDtoPlatformEnumPIVOTALTRACKER            LineageEntityDtoPlatformEnum = "PIVOTAL_TRACKER"
	LineageEntityDtoPlatformEnumPLAYVOX                   LineageEntityDtoPlatformEnum = "PLAYVOX"
	LineageEntityDtoPlatformEnumPOSTGRES                  LineageEntityDtoPlatformEnum = "POSTGRES"
	LineageEntityDtoPlatformEnumPOSTHOG                   LineageEntityDtoPlatformEnum = "POSTHOG"
	LineageEntityDtoPlatformEnumPOWERBI                   LineageEntityDtoPlatformEnum = "POWER_BI"
	LineageEntityDtoPlatformEnumPOWERSCHOOL               LineageEntityDtoPlatformEnum = "POWERSCHOOL"
	LineageEntityDtoPlatformEnumPREFECT                   LineageEntityDtoPlatformEnum = "PREFECT"
	LineageEntityDtoPlatformEnumPRESTASHOP                LineageEntityDtoPlatformEnum = "PRESTASHOP"
	LineageEntityDtoPlatformEnumPRESTO                    LineageEntityDtoPlatformEnum = "PRESTO"
	LineageEntityDtoPlatformEnumPRODUCTBOARD              LineageEntityDtoPlatformEnum = "PRODUCTBOARD"
	LineageEntityDtoPlatformEnumPYTHON                    LineageEntityDtoPlatformEnum = "PYTHON"
	LineageEntityDtoPlatformEnumQLIK                      LineageEntityDtoPlatformEnum = "QLIK"
	LineageEntityDtoPlatformEnumQUALAROO                  LineageEntityDtoPlatformEnum = "QUALAROO"
	LineageEntityDtoPlatformEnumQUALTRICS                 LineageEntityDtoPlatformEnum = "QUALTRICS"
	LineageEntityDtoPlatformEnumQUICKBOOKS                LineageEntityDtoPlatformEnum = "QUICKBOOKS"
	LineageEntityDtoPlatformEnumQUICKSIGHT                LineageEntityDtoPlatformEnum = "QUICKSIGHT"
	LineageEntityDtoPlatformEnumRAMP                      LineageEntityDtoPlatformEnum = "RAMP"
	LineageEntityDtoPlatformEnumRARIBLE                   LineageEntityDtoPlatformEnum = "RARIBLE"
	LineageEntityDtoPlatformEnumRECHARGE                  LineageEntityDtoPlatformEnum = "RECHARGE"
	LineageEntityDtoPlatformEnumRECURLY                   LineageEntityDtoPlatformEnum = "RECURLY"
	LineageEntityDtoPlatformEnumREDDIT                    LineageEntityDtoPlatformEnum = "REDDIT"
	LineageEntityDtoPlatformEnumREDSHIFT                  LineageEntityDtoPlatformEnum = "REDSHIFT"
	LineageEntityDtoPlatformEnumRELTIO                    LineageEntityDtoPlatformEnum = "RELTIO"
	LineageEntityDtoPlatformEnumREPLYIO                   LineageEntityDtoPlatformEnum = "REPLY_IO"
	LineageEntityDtoPlatformEnumRETAILNEXT                LineageEntityDtoPlatformEnum = "RETAILNEXT"
	LineageEntityDtoPlatformEnumRETENTLY                  LineageEntityDtoPlatformEnum = "RETENTLY"
	LineageEntityDtoPlatformEnumREVELSYSTEMS              LineageEntityDtoPlatformEnum = "REVEL_SYSTEMS"
	LineageEntityDtoPlatformEnumRINGCENTRAL               LineageEntityDtoPlatformEnum = "RINGCENTRAL"
	LineageEntityDtoPlatformEnumRIPPLING                  LineageEntityDtoPlatformEnum = "RIPPLING"
	LineageEntityDtoPlatformEnumROLLBAR                   LineageEntityDtoPlatformEnum = "ROLLBAR"
	LineageEntityDtoPlatformEnumROOTLY                    LineageEntityDtoPlatformEnum = "ROOTLY"
	LineageEntityDtoPlatformEnumS3                        LineageEntityDtoPlatformEnum = "S3"
	LineageEntityDtoPlatformEnumSAGEHR                    LineageEntityDtoPlatformEnum = "SAGE_HR"
	LineageEntityDtoPlatformEnumSAGEINTACCT               LineageEntityDtoPlatformEnum = "SAGE_INTACCT"
	LineageEntityDtoPlatformEnumSAILTHRU                  LineageEntityDtoPlatformEnum = "SAILTHRU"
	LineageEntityDtoPlatformEnumSALESFORCE                LineageEntityDtoPlatformEnum = "SALESFORCE"
	LineageEntityDtoPlatformEnumSALESLOFT                 LineageEntityDtoPlatformEnum = "SALESLOFT"
	LineageEntityDtoPlatformEnumSALSIFY                   LineageEntityDtoPlatformEnum = "SALSIFY"
	LineageEntityDtoPlatformEnumSAMSARA                   LineageEntityDtoPlatformEnum = "SAMSARA"
	LineageEntityDtoPlatformEnumSAP                       LineageEntityDtoPlatformEnum = "SAP"
	LineageEntityDtoPlatformEnumSAPCONCUR                 LineageEntityDtoPlatformEnum = "SAP_CONCUR"
	LineageEntityDtoPlatformEnumSCORM                     LineageEntityDtoPlatformEnum = "SCORM"
	LineageEntityDtoPlatformEnumSECODA                    LineageEntityDtoPlatformEnum = "SECODA"
	LineageEntityDtoPlatformEnumSECURITYJOURNEY           LineageEntityDtoPlatformEnum = "SECURITY_JOURNEY"
	LineageEntityDtoPlatformEnumSEGMENT                   LineageEntityDtoPlatformEnum = "SEGMENT"
	LineageEntityDtoPlatformEnumSELECTSTAR                LineageEntityDtoPlatformEnum = "SELECT_STAR"
	LineageEntityDtoPlatformEnumSENDGRID                  LineageEntityDtoPlatformEnum = "SENDGRID"
	LineageEntityDtoPlatformEnumSERVICENOW                LineageEntityDtoPlatformEnum = "SERVICE_NOW"
	LineageEntityDtoPlatformEnumSFTP                      LineageEntityDtoPlatformEnum = "SFTP"
	LineageEntityDtoPlatformEnumSHAREPOINT                LineageEntityDtoPlatformEnum = "SHAREPOINT"
	LineageEntityDtoPlatformEnumSHARETRIBE                LineageEntityDtoPlatformEnum = "SHARETRIBE"
	LineageEntityDtoPlatformEnumSHIPHERO                  LineageEntityDtoPlatformEnum = "SHIPHERO"
	LineageEntityDtoPlatformEnumSHIPSTATION               LineageEntityDtoPlatformEnum = "SHIPSTATION"
	LineageEntityDtoPlatformEnumSHOPIFY                   LineageEntityDtoPlatformEnum = "SHOPIFY"
	LineageEntityDtoPlatformEnumSHOPWARE                  LineageEntityDtoPlatformEnum = "SHOPWARE"
	LineageEntityDtoPlatformEnumSHORTIO                   LineageEntityDtoPlatformEnum = "SHORT_IO"
	LineageEntityDtoPlatformEnumSIFFLET                   LineageEntityDtoPlatformEnum = "SIFFLET"
	LineageEntityDtoPlatformEnumSIGMA                     LineageEntityDtoPlatformEnum = "SIGMA"
	LineageEntityDtoPlatformEnumSIMPLECAST                LineageEntityDtoPlatformEnum = "SIMPLECAST"
	LineageEntityDtoPlatformEnumSIMPLESAT                 LineageEntityDtoPlatformEnum = "SIMPLESAT"
	LineageEntityDtoPlatformEnumSINGLESTORE               LineageEntityDtoPlatformEnum = "SINGLESTORE"
	LineageEntityDtoPlatformEnumSISENSE                   LineageEntityDtoPlatformEnum = "SISENSE"
	LineageEntityDtoPlatformEnumSIXSENSE                  LineageEntityDtoPlatformEnum = "SIXSENSE"
	LineageEntityDtoPlatformEnumSKILLJAR                  LineageEntityDtoPlatformEnum = "SKILLJAR"
	LineageEntityDtoPlatformEnumSKUVAULT                  LineageEntityDtoPlatformEnum = "SKUVAULT"
	LineageEntityDtoPlatformEnumSLAB                      LineageEntityDtoPlatformEnum = "SLAB"
	LineageEntityDtoPlatformEnumSLACK                     LineageEntityDtoPlatformEnum = "SLACK"
	LineageEntityDtoPlatformEnumSMADEX                    LineageEntityDtoPlatformEnum = "SMADEX"
	LineageEntityDtoPlatformEnumSNAPCHAT                  LineageEntityDtoPlatformEnum = "SNAPCHAT"
	LineageEntityDtoPlatformEnumSNOWFLAKE                 LineageEntityDtoPlatformEnum = "SNOWFLAKE"
	LineageEntityDtoPlatformEnumSNOWPLOW                  LineageEntityDtoPlatformEnum = "SNOWPLOW"
	LineageEntityDtoPlatformEnumSODA                      LineageEntityDtoPlatformEnum = "SODA"
	LineageEntityDtoPlatformEnumSONARQUBE                 LineageEntityDtoPlatformEnum = "SONARQUBE"
	LineageEntityDtoPlatformEnumSPARKPROCESS              LineageEntityDtoPlatformEnum = "SPARK_PROCESS"
	LineageEntityDtoPlatformEnumSPLITIO                   LineageEntityDtoPlatformEnum = "SPLIT_IO"
	LineageEntityDtoPlatformEnumSPLUNK                    LineageEntityDtoPlatformEnum = "SPLUNK"
	LineageEntityDtoPlatformEnumSPOTIFY                   LineageEntityDtoPlatformEnum = "SPOTIFY"
	LineageEntityDtoPlatformEnumSPREECOMMERCE             LineageEntityDtoPlatformEnum = "SPREE_COMMERCE"
	LineageEntityDtoPlatformEnumSPROUTSOCIAL              LineageEntityDtoPlatformEnum = "SPROUT_SOCIAL"
	LineageEntityDtoPlatformEnumSQUARE                    LineageEntityDtoPlatformEnum = "SQUARE"
	LineageEntityDtoPlatformEnumSQUARESPACE               LineageEntityDtoPlatformEnum = "SQUARESPACE"
	LineageEntityDtoPlatformEnumSTACKADAPT                LineageEntityDtoPlatformEnum = "STACK_ADAPT"
	LineageEntityDtoPlatformEnumSTATSIG                   LineageEntityDtoPlatformEnum = "STATSIG"
	LineageEntityDtoPlatformEnumSTITCH                    LineageEntityDtoPlatformEnum = "STITCH"
	LineageEntityDtoPlatformEnumSTRIPE                    LineageEntityDtoPlatformEnum = "STRIPE"
	LineageEntityDtoPlatformEnumSTYLIGHT                  LineageEntityDtoPlatformEnum = "STYLIGHT"
	LineageEntityDtoPlatformEnumSUBSCRIPT                 LineageEntityDtoPlatformEnum = "SUBSCRIPT"
	LineageEntityDtoPlatformEnumSYNAPSE                   LineageEntityDtoPlatformEnum = "SYNAPSE"
	LineageEntityDtoPlatformEnumTABLEAU                   LineageEntityDtoPlatformEnum = "TABLEAU"
	LineageEntityDtoPlatformEnumTABOOLA                   LineageEntityDtoPlatformEnum = "TABOOLA"
	LineageEntityDtoPlatformEnumTALEND                    LineageEntityDtoPlatformEnum = "TALEND"
	LineageEntityDtoPlatformEnumTALKDESK                  LineageEntityDtoPlatformEnum = "TALKDESK"
	LineageEntityDtoPlatformEnumTALKWALKER                LineageEntityDtoPlatformEnum = "TALKWALKER"
	LineageEntityDtoPlatformEnumTEAMWORKCOM               LineageEntityDtoPlatformEnum = "TEAMWORK_COM"
	LineageEntityDtoPlatformEnumTEMPOIO                   LineageEntityDtoPlatformEnum = "TEMPO_IO"
	LineageEntityDtoPlatformEnumTERADATA                  LineageEntityDtoPlatformEnum = "TERADATA"
	LineageEntityDtoPlatformEnumTERRAFORM                 LineageEntityDtoPlatformEnum = "TERRAFORM"
	LineageEntityDtoPlatformEnumTHETRADEDESK              LineageEntityDtoPlatformEnum = "THE_TRADE_DESK"
	LineageEntityDtoPlatformEnumTHOUGHTSPOT               LineageEntityDtoPlatformEnum = "THOUGHT_SPOT"
	LineageEntityDtoPlatformEnumTHREESIXTYLEARNING        LineageEntityDtoPlatformEnum = "THREESIXTYLEARNING"
	LineageEntityDtoPlatformEnumTIKTOK                    LineageEntityDtoPlatformEnum = "TIKTOK"
	LineageEntityDtoPlatformEnumTOGGL                     LineageEntityDtoPlatformEnum = "TOGGL"
	LineageEntityDtoPlatformEnumTRANSCEND                 LineageEntityDtoPlatformEnum = "TRANSCEND"
	LineageEntityDtoPlatformEnumTRELLO                    LineageEntityDtoPlatformEnum = "TRELLO"
	LineageEntityDtoPlatformEnumTRINET                    LineageEntityDtoPlatformEnum = "TRINET"
	LineageEntityDtoPlatformEnumTRISOLUTE                 LineageEntityDtoPlatformEnum = "TRISOLUTE"
	LineageEntityDtoPlatformEnumTWILIO                    LineageEntityDtoPlatformEnum = "TWILIO"
	LineageEntityDtoPlatformEnumTYPEFORM                  LineageEntityDtoPlatformEnum = "TYPEFORM"
	LineageEntityDtoPlatformEnumUNKNOWN                   LineageEntityDtoPlatformEnum = "UNKNOWN"
	LineageEntityDtoPlatformEnumUPLAND                    LineageEntityDtoPlatformEnum = "UPLAND"
	LineageEntityDtoPlatformEnumUSERVOICE                 LineageEntityDtoPlatformEnum = "USERVOICE"
	LineageEntityDtoPlatformEnumVALIDIO                   LineageEntityDtoPlatformEnum = "VALIDIO"
	LineageEntityDtoPlatformEnumVEEVA                     LineageEntityDtoPlatformEnum = "VEEVA"
	LineageEntityDtoPlatformEnumVERIZONMEDIA              LineageEntityDtoPlatformEnum = "VERIZON_MEDIA"
	LineageEntityDtoPlatformEnumVITALLY                   LineageEntityDtoPlatformEnum = "VITALLY"
	LineageEntityDtoPlatformEnumVONAGE                    LineageEntityDtoPlatformEnum = "VONAGE"
	LineageEntityDtoPlatformEnumVUETIFY                   LineageEntityDtoPlatformEnum = "VUETIFY"
	LineageEntityDtoPlatformEnumWEBHOOKS                  LineageEntityDtoPlatformEnum = "WEBHOOKS"
	LineageEntityDtoPlatformEnumWEBSCRAPER                LineageEntityDtoPlatformEnum = "WEB_SCRAPER"
	LineageEntityDtoPlatformEnumWHENIWORK                 LineageEntityDtoPlatformEnum = "WHEN_I_WORK"
	LineageEntityDtoPlatformEnumWHEREFOUR                 LineageEntityDtoPlatformEnum = "WHEREFOUR"
	LineageEntityDtoPlatformEnumWIKIPEDIA                 LineageEntityDtoPlatformEnum = "WIKIPEDIA"
	LineageEntityDtoPlatformEnumWOOCOMMERCE               LineageEntityDtoPlatformEnum = "WOOCOMMERCE"
	LineageEntityDtoPlatformEnumWORDPRESS                 LineageEntityDtoPlatformEnum = "WORDPRESS"
	LineageEntityDtoPlatformEnumWORKABLE                  LineageEntityDtoPlatformEnum = "WORKABLE"
	LineageEntityDtoPlatformEnumWORKDAY                   LineageEntityDtoPlatformEnum = "WORKDAY"
	LineageEntityDtoPlatformEnumWORKFLOWMAX               LineageEntityDtoPlatformEnum = "WORKFLOW_MAX"
	LineageEntityDtoPlatformEnumWRIKE                     LineageEntityDtoPlatformEnum = "WRIKE"
	LineageEntityDtoPlatformEnumX                         LineageEntityDtoPlatformEnum = "X"
	LineageEntityDtoPlatformEnumXERO                      LineageEntityDtoPlatformEnum = "XERO"
	LineageEntityDtoPlatformEnumXRAY                      LineageEntityDtoPlatformEnum = "XRAY"
	LineageEntityDtoPlatformEnumYAHOO                     LineageEntityDtoPlatformEnum = "YAHOO"
	LineageEntityDtoPlatformEnumYOTPO                     LineageEntityDtoPlatformEnum = "YOTPO"
	LineageEntityDtoPlatformEnumYOUTUBE                   LineageEntityDtoPlatformEnum = "YOUTUBE"
	LineageEntityDtoPlatformEnumZEENEA                    LineageEntityDtoPlatformEnum = "ZEENEA"
	LineageEntityDtoPlatformEnumZENCART                   LineageEntityDtoPlatformEnum = "ZEN_CART"
	LineageEntityDtoPlatformEnumZENDESKCHAT               LineageEntityDtoPlatformEnum = "ZENDESK_CHAT"
	LineageEntityDtoPlatformEnumZENDESKSELL               LineageEntityDtoPlatformEnum = "ZENDESK_SELL"
	LineageEntityDtoPlatformEnumZENDESKSUNSHINE           LineageEntityDtoPlatformEnum = "ZENDESK_SUNSHINE"
	LineageEntityDtoPlatformEnumZENDESKSUPPORT            LineageEntityDtoPlatformEnum = "ZENDESK_SUPPORT"
	LineageEntityDtoPlatformEnumZINGTREE                  LineageEntityDtoPlatformEnum = "ZINGTREE"
	LineageEntityDtoPlatformEnumZOHOBOOKS                 LineageEntityDtoPlatformEnum = "ZOHO_BOOKS"
	LineageEntityDtoPlatformEnumZOHOCAMPAIGNS             LineageEntityDtoPlatformEnum = "ZOHO_CAMPAIGNS"
	LineageEntityDtoPlatformEnumZOHOCRM                   LineageEntityDtoPlatformEnum = "ZOHO_CRM"
	LineageEntityDtoPlatformEnumZOOM                      LineageEntityDtoPlatformEnum = "ZOOM"
	LineageEntityDtoPlatformEnumZUORA                     LineageEntityDtoPlatformEnum = "ZUORA"
)

// Defines values for LineageUrnDtoCreationMethod.
const (
	BARRACUDALINEAGEEXTRACTION LineageUrnDtoCreationMethod = "BARRACUDA_LINEAGE_EXTRACTION"
	DECLARATIVELINEAGEAPI      LineageUrnDtoCreationMethod = "DECLARATIVE_LINEAGE_API"
)

// Defines values for ModelAssetOverviewType.
const (
	ModelAssetOverviewTypeBIGQUERYDATASETREF       ModelAssetOverviewType = "BIGQUERY_DATASET_REF"
	ModelAssetOverviewTypeBIGQUERYEXTERNALTABLE    ModelAssetOverviewType = "BIGQUERY_EXTERNAL_TABLE"
	ModelAssetOverviewTypeBIGQUERYMATERIALIZEDVIEW ModelAssetOverviewType = "BIGQUERY_MATERIALIZED_VIEW"
	ModelAssetOverviewTypeBIGQUERYTABLE            ModelAssetOverviewType = "BIGQUERY_TABLE"
	ModelAssetOverviewTypeBIGQUERYVIEW             ModelAssetOverviewType = "BIGQUERY_VIEW"
	ModelAssetOverviewTypeDATABRICKSSTREAMINGTABLE ModelAssetOverviewType = "DATABRICKS_STREAMING_TABLE"
	ModelAssetOverviewTypeDATABRICKSUNKNOWN        ModelAssetOverviewType = "DATABRICKS_UNKNOWN"
	ModelAssetOverviewTypeDBTEPHEMERALREF          ModelAssetOverviewType = "DBT_EPHEMERAL_REF"
	ModelAssetOverviewTypeDBTMODEL                 ModelAssetOverviewType = "DBT_MODEL"
	ModelAssetOverviewTypeDBTSEED                  ModelAssetOverviewType = "DBT_SEED"
	ModelAssetOverviewTypeDBTSOURCEDATASETREF      ModelAssetOverviewType = "DBT_SOURCE_DATASET_REF"
	ModelAssetOverviewTypeDBTTABLEREF              ModelAssetOverviewType = "DBT_TABLE_REF"
	ModelAssetOverviewTypeDBTUNKNOWN               ModelAssetOverviewType = "DBT_UNKNOWN"
	ModelAssetOverviewTypeDBTVIEWREF               ModelAssetOverviewType = "DBT_VIEW_REF"
	ModelAssetOverviewTypeFIVETRANDATASETREF       ModelAssetOverviewType = "FIVETRAN_DATASET_REF"
	ModelAssetOverviewTypeGENERICDROPPEDTABLE      ModelAssetOverviewType = "GENERIC_DROPPED_TABLE"
	ModelAssetOverviewTypeGENERICTEMPTABLE         ModelAssetOverviewType = "GENERIC_TEMP_TABLE"
	ModelAssetOverviewTypeHIVEDATASETREF           ModelAssetOverviewType = "HIVE_DATASET_REF"
	ModelAssetOverviewTypeHIVEEXTERNALTABLE        ModelAssetOverviewType = "HIVE_EXTERNAL_TABLE"
	ModelAssetOverviewTypeHIVEHDFSSTORAGE          ModelAssetOverviewType = "HIVE_HDFS_STORAGE"
	ModelAssetOverviewTypeHIVEHIVEPROCESS          ModelAssetOverviewType = "HIVE_HIVE_PROCESS"
	ModelAssetOverviewTypeHIVEMANAGEDTABLE         ModelAssetOverviewType = "HIVE_MANAGED_TABLE"
	ModelAssetOverviewTypeHIVESPARKPROCESS         ModelAssetOverviewType = "HIVE_SPARK_PROCESS"
	ModelAssetOverviewTypeHIVEUNKNOWN              ModelAssetOverviewType = "HIVE_UNKNOWN"
	ModelAssetOverviewTypeHIVEUNKNOWNPROCESS       ModelAssetOverviewType = "HIVE_UNKNOWN_PROCESS"
	ModelAssetOverviewTypeHIVEVIRTUALVIEW          ModelAssetOverviewType = "HIVE_VIRTUAL_VIEW"
	ModelAssetOverviewTypeJDBCDATASET              ModelAssetOverviewType = "JDBC_DATASET"
	ModelAssetOverviewTypeJDBCDATASETREF           ModelAssetOverviewType = "JDBC_DATASET_REF"
	ModelAssetOverviewTypeJDBCEXTERNALTABLE        ModelAssetOverviewType = "JDBC_EXTERNAL_TABLE"
	ModelAssetOverviewTypeJDBCSNOWFLAKESTREAM      ModelAssetOverviewType = "JDBC_SNOWFLAKE_STREAM"
	ModelAssetOverviewTypeJDBCTABLE                ModelAssetOverviewType = "JDBC_TABLE"
	ModelAssetOverviewTypeJDBCVIEW                 ModelAssetOverviewType = "JDBC_VIEW"
	ModelAssetOverviewTypeLOOKERQUERY              ModelAssetOverviewType = "LOOKER_QUERY"
	ModelAssetOverviewTypeLOOKERSQLTABLE           ModelAssetOverviewType = "LOOKER_SQL_TABLE"
	ModelAssetOverviewTypeLOOKERVIEW               ModelAssetOverviewType = "LOOKER_VIEW"
	ModelAssetOverviewTypeMICROSTRATEGYDATASETREF  ModelAssetOverviewType = "MICROSTRATEGY_DATASET_REF"
	ModelAssetOverviewTypePOWERBISEMANTICMODEL     ModelAssetOverviewType = "POWERBI_SEMANTIC_MODEL"
	ModelAssetOverviewTypePOWERBITABLEREF          ModelAssetOverviewType = "POWERBI_TABLE_REF"
	ModelAssetOverviewTypeQUICKSIGHTTABLEREF       ModelAssetOverviewType = "QUICKSIGHT_TABLE_REF"
	ModelAssetOverviewTypeSTORAGEBUCKETGCP         ModelAssetOverviewType = "STORAGE_BUCKET_GCP"
	ModelAssetOverviewTypeSTORAGEBUCKETS3          ModelAssetOverviewType = "STORAGE_BUCKET_S3"
	ModelAssetOverviewTypeSTORAGEGOOGLEDRIVE       ModelAssetOverviewType = "STORAGE_GOOGLE_DRIVE"
	ModelAssetOverviewTypeTABLEAUDATABASETABLE     ModelAssetOverviewType = "TABLEAU_DATABASE_TABLE"
	ModelAssetOverviewTypeTABLEAUQUERY             ModelAssetOverviewType = "TABLEAU_QUERY"
)

// Defines values for MysqlParamsMysqlTlsVersion.
const (
	MysqlParamsMysqlTlsVersionTLSV12 MysqlParamsMysqlTlsVersion = "TLS_V_1_2"
	MysqlParamsMysqlTlsVersionTLSV13 MysqlParamsMysqlTlsVersion = "TLS_V_1_3"
)

// Defines values for NameChangeIncidentEventDtoType.
const (
	NameChangeIncidentEventDtoTypeASSIGNEESCHANGE               NameChangeIncidentEventDtoType = "ASSIGNEES_CHANGE"
	NameChangeIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED NameChangeIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	NameChangeIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   NameChangeIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	NameChangeIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED NameChangeIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	NameChangeIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE NameChangeIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	NameChangeIncidentEventDtoTypeCOMMENT                       NameChangeIncidentEventDtoType = "COMMENT"
	NameChangeIncidentEventDtoTypeCREATIONBYRULERUN             NameChangeIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	NameChangeIncidentEventDtoTypeCREATIONBYUSER                NameChangeIncidentEventDtoType = "CREATION_BY_USER"
	NameChangeIncidentEventDtoTypeNAMECHANGE                    NameChangeIncidentEventDtoType = "NAME_CHANGE"
	NameChangeIncidentEventDtoTypeNEWFAILURES                   NameChangeIncidentEventDtoType = "NEW_FAILURES"
	NameChangeIncidentEventDtoTypeRULESADDED                    NameChangeIncidentEventDtoType = "RULES_ADDED"
	NameChangeIncidentEventDtoTypeRULESMOVEDFROM                NameChangeIncidentEventDtoType = "RULES_MOVED_FROM"
	NameChangeIncidentEventDtoTypeRULESMOVEDTO                  NameChangeIncidentEventDtoType = "RULES_MOVED_TO"
	NameChangeIncidentEventDtoTypeSEVERITYCHANGE                NameChangeIncidentEventDtoType = "SEVERITY_CHANGE"
	NameChangeIncidentEventDtoTypeSTATUSCHANGE                  NameChangeIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for NewFailuresIncidentEventDtoType.
const (
	NewFailuresIncidentEventDtoTypeASSIGNEESCHANGE               NewFailuresIncidentEventDtoType = "ASSIGNEES_CHANGE"
	NewFailuresIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED NewFailuresIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	NewFailuresIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   NewFailuresIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	NewFailuresIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED NewFailuresIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	NewFailuresIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE NewFailuresIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	NewFailuresIncidentEventDtoTypeCOMMENT                       NewFailuresIncidentEventDtoType = "COMMENT"
	NewFailuresIncidentEventDtoTypeCREATIONBYRULERUN             NewFailuresIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	NewFailuresIncidentEventDtoTypeCREATIONBYUSER                NewFailuresIncidentEventDtoType = "CREATION_BY_USER"
	NewFailuresIncidentEventDtoTypeNAMECHANGE                    NewFailuresIncidentEventDtoType = "NAME_CHANGE"
	NewFailuresIncidentEventDtoTypeNEWFAILURES                   NewFailuresIncidentEventDtoType = "NEW_FAILURES"
	NewFailuresIncidentEventDtoTypeRULESADDED                    NewFailuresIncidentEventDtoType = "RULES_ADDED"
	NewFailuresIncidentEventDtoTypeRULESMOVEDFROM                NewFailuresIncidentEventDtoType = "RULES_MOVED_FROM"
	NewFailuresIncidentEventDtoTypeRULESMOVEDTO                  NewFailuresIncidentEventDtoType = "RULES_MOVED_TO"
	NewFailuresIncidentEventDtoTypeSEVERITYCHANGE                NewFailuresIncidentEventDtoType = "SEVERITY_CHANGE"
	NewFailuresIncidentEventDtoTypeSTATUSCHANGE                  NewFailuresIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for PlatformSearchFilterElementDtoIcon.
const (
	PlatformSearchFilterElementDtoIconACCELDATA                 PlatformSearchFilterElementDtoIcon = "ACCELDATA"
	PlatformSearchFilterElementDtoIconACRYLDATA                 PlatformSearchFilterElementDtoIcon = "ACRYL_DATA"
	PlatformSearchFilterElementDtoIconACTIANVECTOR              PlatformSearchFilterElementDtoIcon = "ACTIAN_VECTOR"
	PlatformSearchFilterElementDtoIconACTIVECAMPAIGN            PlatformSearchFilterElementDtoIcon = "ACTIVE_CAMPAIGN"
	PlatformSearchFilterElementDtoIconADA                       PlatformSearchFilterElementDtoIcon = "ADA"
	PlatformSearchFilterElementDtoIconADJUST                    PlatformSearchFilterElementDtoIcon = "ADJUST"
	PlatformSearchFilterElementDtoIconADOBE                     PlatformSearchFilterElementDtoIcon = "ADOBE"
	PlatformSearchFilterElementDtoIconADPWFN                    PlatformSearchFilterElementDtoIcon = "ADP_WFN"
	PlatformSearchFilterElementDtoIconADROLL                    PlatformSearchFilterElementDtoIcon = "ADROLL"
	PlatformSearchFilterElementDtoIconAFFINITY                  PlatformSearchFilterElementDtoIcon = "AFFINITY"
	PlatformSearchFilterElementDtoIconAIRBYTE                   PlatformSearchFilterElementDtoIcon = "AIRBYTE"
	PlatformSearchFilterElementDtoIconAIRCALL                   PlatformSearchFilterElementDtoIcon = "AIRCALL"
	PlatformSearchFilterElementDtoIconAIRFLOW                   PlatformSearchFilterElementDtoIcon = "AIRFLOW"
	PlatformSearchFilterElementDtoIconAIRTABLE                  PlatformSearchFilterElementDtoIcon = "AIRTABLE"
	PlatformSearchFilterElementDtoIconALATION                   PlatformSearchFilterElementDtoIcon = "ALATION"
	PlatformSearchFilterElementDtoIconALCHEMER                  PlatformSearchFilterElementDtoIcon = "ALCHEMER"
	PlatformSearchFilterElementDtoIconALVINAI                   PlatformSearchFilterElementDtoIcon = "ALVIN_AI"
	PlatformSearchFilterElementDtoIconAMAZON                    PlatformSearchFilterElementDtoIcon = "AMAZON"
	PlatformSearchFilterElementDtoIconAMAZONCLOUDFRONT          PlatformSearchFilterElementDtoIcon = "AMAZON_CLOUDFRONT"
	PlatformSearchFilterElementDtoIconAMAZONDOCUMENTDB          PlatformSearchFilterElementDtoIcon = "AMAZON_DOCUMENTDB"
	PlatformSearchFilterElementDtoIconAMAZONDYNAMODB            PlatformSearchFilterElementDtoIcon = "AMAZON_DYNAMODB"
	PlatformSearchFilterElementDtoIconAMAZONFIREHOSE            PlatformSearchFilterElementDtoIcon = "AMAZON_FIREHOSE"
	PlatformSearchFilterElementDtoIconAMAZONSAGEMAKER           PlatformSearchFilterElementDtoIcon = "AMAZON_SAGEMAKER"
	PlatformSearchFilterElementDtoIconAMAZONSELLINGPARTNER      PlatformSearchFilterElementDtoIcon = "AMAZON_SELLING_PARTNER"
	PlatformSearchFilterElementDtoIconAMPLITUDE                 PlatformSearchFilterElementDtoIcon = "AMPLITUDE"
	PlatformSearchFilterElementDtoIconANAPLAN                   PlatformSearchFilterElementDtoIcon = "ANAPLAN"
	PlatformSearchFilterElementDtoIconANOMALO                   PlatformSearchFilterElementDtoIcon = "ANOMALO"
	PlatformSearchFilterElementDtoIconAPACHEKAFKA               PlatformSearchFilterElementDtoIcon = "APACHE_KAFKA"
	PlatformSearchFilterElementDtoIconAPACHESPARK               PlatformSearchFilterElementDtoIcon = "APACHE_SPARK"
	PlatformSearchFilterElementDtoIconAPPCUES                   PlatformSearchFilterElementDtoIcon = "APPCUES"
	PlatformSearchFilterElementDtoIconAPPFIGURES                PlatformSearchFilterElementDtoIcon = "APPFIGURES"
	PlatformSearchFilterElementDtoIconAPPLE                     PlatformSearchFilterElementDtoIcon = "APPLE"
	PlatformSearchFilterElementDtoIconAPPLEAPPSTORE             PlatformSearchFilterElementDtoIcon = "APPLE_APP_STORE"
	PlatformSearchFilterElementDtoIconAPPSFLYER                 PlatformSearchFilterElementDtoIcon = "APPSFLYER"
	PlatformSearchFilterElementDtoIconASANA                     PlatformSearchFilterElementDtoIcon = "ASANA"
	PlatformSearchFilterElementDtoIconASSEMBLED                 PlatformSearchFilterElementDtoIcon = "ASSEMBLED"
	PlatformSearchFilterElementDtoIconATHENA                    PlatformSearchFilterElementDtoIcon = "ATHENA"
	PlatformSearchFilterElementDtoIconATLAN                     PlatformSearchFilterElementDtoIcon = "ATLAN"
	PlatformSearchFilterElementDtoIconATLASSIANCONFLUENCE       PlatformSearchFilterElementDtoIcon = "ATLASSIAN_CONFLUENCE"
	PlatformSearchFilterElementDtoIconATLASSIANJIRA             PlatformSearchFilterElementDtoIcon = "ATLASSIAN_JIRA"
	PlatformSearchFilterElementDtoIconATLASSIANOPSGENIE         PlatformSearchFilterElementDtoIcon = "ATLASSIAN_OPSGENIE"
	PlatformSearchFilterElementDtoIconAUTH0                     PlatformSearchFilterElementDtoIcon = "AUTH0"
	PlatformSearchFilterElementDtoIconAUTODESKBIM360            PlatformSearchFilterElementDtoIcon = "AUTODESK_BIM_360"
	PlatformSearchFilterElementDtoIconAWIN                      PlatformSearchFilterElementDtoIcon = "AWIN"
	PlatformSearchFilterElementDtoIconAWSCLOUDTRAIL             PlatformSearchFilterElementDtoIcon = "AWS_CLOUDTRAIL"
	PlatformSearchFilterElementDtoIconAWSCOSTEXPLORER           PlatformSearchFilterElementDtoIcon = "AWS_COST_EXPLORER"
	PlatformSearchFilterElementDtoIconAWSINVENTORY              PlatformSearchFilterElementDtoIcon = "AWS_INVENTORY"
	PlatformSearchFilterElementDtoIconAWSLAMBDA                 PlatformSearchFilterElementDtoIcon = "AWS_LAMBDA"
	PlatformSearchFilterElementDtoIconAZURE                     PlatformSearchFilterElementDtoIcon = "AZURE"
	PlatformSearchFilterElementDtoIconBALLOTREADY               PlatformSearchFilterElementDtoIcon = "BALLOT_READY"
	PlatformSearchFilterElementDtoIconBAMBOOHR                  PlatformSearchFilterElementDtoIcon = "BAMBOOHR"
	PlatformSearchFilterElementDtoIconBIGCOMMERCE               PlatformSearchFilterElementDtoIcon = "BIGCOMMERCE"
	PlatformSearchFilterElementDtoIconBIGEYE                    PlatformSearchFilterElementDtoIcon = "BIGEYE"
	PlatformSearchFilterElementDtoIconBIGQUERY                  PlatformSearchFilterElementDtoIcon = "BIGQUERY"
	PlatformSearchFilterElementDtoIconBILLINGPLATFORM           PlatformSearchFilterElementDtoIcon = "BILLINGPLATFORM"
	PlatformSearchFilterElementDtoIconBIRDEYE                   PlatformSearchFilterElementDtoIcon = "BIRDEYE"
	PlatformSearchFilterElementDtoIconBLACKBOARD                PlatformSearchFilterElementDtoIcon = "BLACKBOARD"
	PlatformSearchFilterElementDtoIconBOX                       PlatformSearchFilterElementDtoIcon = "BOX"
	PlatformSearchFilterElementDtoIconBRAINTREE                 PlatformSearchFilterElementDtoIcon = "BRAINTREE"
	PlatformSearchFilterElementDtoIconBRAZE                     PlatformSearchFilterElementDtoIcon = "BRAZE"
	PlatformSearchFilterElementDtoIconBREVO                     PlatformSearchFilterElementDtoIcon = "BREVO"
	PlatformSearchFilterElementDtoIconBREX                      PlatformSearchFilterElementDtoIcon = "BREX"
	PlatformSearchFilterElementDtoIconBUILDKITE                 PlatformSearchFilterElementDtoIcon = "BUILDKITE"
	PlatformSearchFilterElementDtoIconBUZZSPROUT                PlatformSearchFilterElementDtoIcon = "BUZZSPROUT"
	PlatformSearchFilterElementDtoIconCALENDLY                  PlatformSearchFilterElementDtoIcon = "CALENDLY"
	PlatformSearchFilterElementDtoIconCAMPAIGNMONITOR           PlatformSearchFilterElementDtoIcon = "CAMPAIGN_MONITOR"
	PlatformSearchFilterElementDtoIconCANNY                     PlatformSearchFilterElementDtoIcon = "CANNY"
	PlatformSearchFilterElementDtoIconCANVAS                    PlatformSearchFilterElementDtoIcon = "CANVAS"
	PlatformSearchFilterElementDtoIconCAPTERRA                  PlatformSearchFilterElementDtoIcon = "CAPTERRA"
	PlatformSearchFilterElementDtoIconCASTORDOC                 PlatformSearchFilterElementDtoIcon = "CASTOR_DOC"
	PlatformSearchFilterElementDtoIconCENSUS                    PlatformSearchFilterElementDtoIcon = "CENSUS"
	PlatformSearchFilterElementDtoIconCERTINIA                  PlatformSearchFilterElementDtoIcon = "CERTINIA"
	PlatformSearchFilterElementDtoIconCHAMELEON                 PlatformSearchFilterElementDtoIcon = "CHAMELEON"
	PlatformSearchFilterElementDtoIconCHANNELADVISOR            PlatformSearchFilterElementDtoIcon = "CHANNEL_ADVISOR"
	PlatformSearchFilterElementDtoIconCHARGEBEE                 PlatformSearchFilterElementDtoIcon = "CHARGEBEE"
	PlatformSearchFilterElementDtoIconCHARGEDESK                PlatformSearchFilterElementDtoIcon = "CHARGEDESK"
	PlatformSearchFilterElementDtoIconCHARTMOGUL                PlatformSearchFilterElementDtoIcon = "CHARTMOGUL"
	PlatformSearchFilterElementDtoIconCHORUSAI                  PlatformSearchFilterElementDtoIcon = "CHORUS_AI"
	PlatformSearchFilterElementDtoIconCHURNKEY                  PlatformSearchFilterElementDtoIcon = "CHURNKEY"
	PlatformSearchFilterElementDtoIconCHURNZERO                 PlatformSearchFilterElementDtoIcon = "CHURNZERO"
	PlatformSearchFilterElementDtoIconCIMIS                     PlatformSearchFilterElementDtoIcon = "CIMIS"
	PlatformSearchFilterElementDtoIconCIN7                      PlatformSearchFilterElementDtoIcon = "CIN7"
	PlatformSearchFilterElementDtoIconCIRCLECI                  PlatformSearchFilterElementDtoIcon = "CIRCLE_CI"
	PlatformSearchFilterElementDtoIconCLARI                     PlatformSearchFilterElementDtoIcon = "CLARI"
	PlatformSearchFilterElementDtoIconCLICKUP                   PlatformSearchFilterElementDtoIcon = "CLICKUP"
	PlatformSearchFilterElementDtoIconCLIFFAI                   PlatformSearchFilterElementDtoIcon = "CLIFF_AI"
	PlatformSearchFilterElementDtoIconCLOSE                     PlatformSearchFilterElementDtoIcon = "CLOSE"
	PlatformSearchFilterElementDtoIconCOLLIBRA                  PlatformSearchFilterElementDtoIcon = "COLLIBRA"
	PlatformSearchFilterElementDtoIconCOMMERCETOOLS             PlatformSearchFilterElementDtoIcon = "COMMERCETOOLS"
	PlatformSearchFilterElementDtoIconCOMPOSER                  PlatformSearchFilterElementDtoIcon = "COMPOSER"
	PlatformSearchFilterElementDtoIconCONFLUENTCLOUD            PlatformSearchFilterElementDtoIcon = "CONFLUENT_CLOUD"
	PlatformSearchFilterElementDtoIconCONTRASTSECURITY          PlatformSearchFilterElementDtoIcon = "CONTRAST_SECURITY"
	PlatformSearchFilterElementDtoIconCOUPA                     PlatformSearchFilterElementDtoIcon = "COUPA"
	PlatformSearchFilterElementDtoIconCRITEO                    PlatformSearchFilterElementDtoIcon = "CRITEO"
	PlatformSearchFilterElementDtoIconCROSSBEAM                 PlatformSearchFilterElementDtoIcon = "CROSSBEAM"
	PlatformSearchFilterElementDtoIconCRUNCHBASE                PlatformSearchFilterElementDtoIcon = "CRUNCHBASE"
	PlatformSearchFilterElementDtoIconCUSTOMERIO                PlatformSearchFilterElementDtoIcon = "CUSTOMER_IO"
	PlatformSearchFilterElementDtoIconD2LBRIGHTSPACE            PlatformSearchFilterElementDtoIcon = "D2L_BRIGHTSPACE"
	PlatformSearchFilterElementDtoIconDAGSTER                   PlatformSearchFilterElementDtoIcon = "DAGSTER"
	PlatformSearchFilterElementDtoIconDATABAND                  PlatformSearchFilterElementDtoIcon = "DATABAND"
	PlatformSearchFilterElementDtoIconDATABRICKS                PlatformSearchFilterElementDtoIcon = "DATABRICKS"
	PlatformSearchFilterElementDtoIconDATADOG                   PlatformSearchFilterElementDtoIcon = "DATADOG"
	PlatformSearchFilterElementDtoIconDATAEDO                   PlatformSearchFilterElementDtoIcon = "DATAEDO"
	PlatformSearchFilterElementDtoIconDATAFOLD                  PlatformSearchFilterElementDtoIcon = "DATAFOLD"
	PlatformSearchFilterElementDtoIconDATAGALAXY                PlatformSearchFilterElementDtoIcon = "DATAGALAXY"
	PlatformSearchFilterElementDtoIconDATAHUB                   PlatformSearchFilterElementDtoIcon = "DATAHUB"
	PlatformSearchFilterElementDtoIconDATAIKU                   PlatformSearchFilterElementDtoIcon = "DATAIKU"
	PlatformSearchFilterElementDtoIconDATAWORLD                 PlatformSearchFilterElementDtoIcon = "DATA_WORLD"
	PlatformSearchFilterElementDtoIconDB2                       PlatformSearchFilterElementDtoIcon = "DB2"
	PlatformSearchFilterElementDtoIconDBT                       PlatformSearchFilterElementDtoIcon = "DBT"
	PlatformSearchFilterElementDtoIconDBTCLOUD                  PlatformSearchFilterElementDtoIcon = "DBTCLOUD"
	PlatformSearchFilterElementDtoIconDCLLOGISTICS              PlatformSearchFilterElementDtoIcon = "DCL_LOGISTICS"
	PlatformSearchFilterElementDtoIconDEAR                      PlatformSearchFilterElementDtoIcon = "DEAR"
	PlatformSearchFilterElementDtoIconDECUBE                    PlatformSearchFilterElementDtoIcon = "DECUBE"
	PlatformSearchFilterElementDtoIconDELIGHTED                 PlatformSearchFilterElementDtoIcon = "DELIGHTED"
	PlatformSearchFilterElementDtoIconDEPUTY                    PlatformSearchFilterElementDtoIcon = "DEPUTY"
	PlatformSearchFilterElementDtoIconDESTINI                   PlatformSearchFilterElementDtoIcon = "DESTINI"
	PlatformSearchFilterElementDtoIconDIXA                      PlatformSearchFilterElementDtoIcon = "DIXA"
	PlatformSearchFilterElementDtoIconDOCEBO                    PlatformSearchFilterElementDtoIcon = "DOCEBO"
	PlatformSearchFilterElementDtoIconDRATA                     PlatformSearchFilterElementDtoIcon = "DRATA"
	PlatformSearchFilterElementDtoIconDRIFT                     PlatformSearchFilterElementDtoIcon = "DRIFT"
	PlatformSearchFilterElementDtoIconDRIP                      PlatformSearchFilterElementDtoIcon = "DRIP"
	PlatformSearchFilterElementDtoIconDROPBOX                   PlatformSearchFilterElementDtoIcon = "DROPBOX"
	PlatformSearchFilterElementDtoIconDUOPLANE                  PlatformSearchFilterElementDtoIcon = "DUOPLANE"
	PlatformSearchFilterElementDtoIconEASYPOST                  PlatformSearchFilterElementDtoIcon = "EASY_POST"
	PlatformSearchFilterElementDtoIconECONOMIC                  PlatformSearchFilterElementDtoIcon = "E_CONOMIC"
	PlatformSearchFilterElementDtoIconELASTICSEARCH             PlatformSearchFilterElementDtoIcon = "ELASTICSEARCH"
	PlatformSearchFilterElementDtoIconELEMENTARY                PlatformSearchFilterElementDtoIcon = "ELEMENTARY"
	PlatformSearchFilterElementDtoIconELLUCIAN                  PlatformSearchFilterElementDtoIcon = "ELLUCIAN"
	PlatformSearchFilterElementDtoIconELOQUA                    PlatformSearchFilterElementDtoIcon = "ELOQUA"
	PlatformSearchFilterElementDtoIconEMAIL                     PlatformSearchFilterElementDtoIcon = "EMAIL"
	PlatformSearchFilterElementDtoIconEMPLOYMENTHERO            PlatformSearchFilterElementDtoIcon = "EMPLOYMENT_HERO"
	PlatformSearchFilterElementDtoIconEPICORPROPHET21           PlatformSearchFilterElementDtoIcon = "EPICOR_PROPHET_21"
	PlatformSearchFilterElementDtoIconEVENTBRITE                PlatformSearchFilterElementDtoIcon = "EVENTBRITE"
	PlatformSearchFilterElementDtoIconEVERHOUR                  PlatformSearchFilterElementDtoIcon = "EVERHOUR"
	PlatformSearchFilterElementDtoIconEXCEL                     PlatformSearchFilterElementDtoIcon = "EXCEL"
	PlatformSearchFilterElementDtoIconEXPENSIFY                 PlatformSearchFilterElementDtoIcon = "EXPENSIFY"
	PlatformSearchFilterElementDtoIconFACEBOOK                  PlatformSearchFilterElementDtoIcon = "FACEBOOK"
	PlatformSearchFilterElementDtoIconFIFTEENFIVE               PlatformSearchFilterElementDtoIcon = "FIFTEENFIVE"
	PlatformSearchFilterElementDtoIconFIGMA                     PlatformSearchFilterElementDtoIcon = "FIGMA"
	PlatformSearchFilterElementDtoIconFIREBASE                  PlatformSearchFilterElementDtoIcon = "FIREBASE"
	PlatformSearchFilterElementDtoIconFIREBOLT                  PlatformSearchFilterElementDtoIcon = "FIREBOLT"
	PlatformSearchFilterElementDtoIconFIVETRAN                  PlatformSearchFilterElementDtoIcon = "FIVETRAN"
	PlatformSearchFilterElementDtoIconFLEXPORT                  PlatformSearchFilterElementDtoIcon = "FLEXPORT"
	PlatformSearchFilterElementDtoIconFORJ                      PlatformSearchFilterElementDtoIcon = "FORJ"
	PlatformSearchFilterElementDtoIconFOUNTAIN                  PlatformSearchFilterElementDtoIcon = "FOUNTAIN"
	PlatformSearchFilterElementDtoIconFREIGHTVIEW               PlatformSearchFilterElementDtoIcon = "FREIGHTVIEW"
	PlatformSearchFilterElementDtoIconFRESHBOOKS                PlatformSearchFilterElementDtoIcon = "FRESHBOOKS"
	PlatformSearchFilterElementDtoIconFRESHCHAT                 PlatformSearchFilterElementDtoIcon = "FRESHCHAT"
	PlatformSearchFilterElementDtoIconFRESHDESK                 PlatformSearchFilterElementDtoIcon = "FRESHDESK"
	PlatformSearchFilterElementDtoIconFRESHDESKCONTACTCENTER    PlatformSearchFilterElementDtoIcon = "FRESHDESK_CONTACT_CENTER"
	PlatformSearchFilterElementDtoIconFRESHSERVICE              PlatformSearchFilterElementDtoIcon = "FRESHSERVICE"
	PlatformSearchFilterElementDtoIconFRESHSUCCESS              PlatformSearchFilterElementDtoIcon = "FRESHSUCCESS"
	PlatformSearchFilterElementDtoIconFRESHTEAM                 PlatformSearchFilterElementDtoIcon = "FRESHTEAM"
	PlatformSearchFilterElementDtoIconFRIENDBUY                 PlatformSearchFilterElementDtoIcon = "FRIENDBUY"
	PlatformSearchFilterElementDtoIconFRONT                     PlatformSearchFilterElementDtoIcon = "FRONT"
	PlatformSearchFilterElementDtoIconFTP                       PlatformSearchFilterElementDtoIcon = "FTP"
	PlatformSearchFilterElementDtoIconFULLSTORY                 PlatformSearchFilterElementDtoIcon = "FULLSTORY"
	PlatformSearchFilterElementDtoIconG2                        PlatformSearchFilterElementDtoIcon = "G2"
	PlatformSearchFilterElementDtoIconGAINSIGHT                 PlatformSearchFilterElementDtoIcon = "GAINSIGHT"
	PlatformSearchFilterElementDtoIconGEM                       PlatformSearchFilterElementDtoIcon = "GEM"
	PlatformSearchFilterElementDtoIconGIT                       PlatformSearchFilterElementDtoIcon = "GIT"
	PlatformSearchFilterElementDtoIconGITHUB                    PlatformSearchFilterElementDtoIcon = "GITHUB"
	PlatformSearchFilterElementDtoIconGITLAB                    PlatformSearchFilterElementDtoIcon = "GITLAB"
	PlatformSearchFilterElementDtoIconGLADLY                    PlatformSearchFilterElementDtoIcon = "GLADLY"
	PlatformSearchFilterElementDtoIconGOCARDLESS                PlatformSearchFilterElementDtoIcon = "GOCARDLESS"
	PlatformSearchFilterElementDtoIconGONG                      PlatformSearchFilterElementDtoIcon = "GONG"
	PlatformSearchFilterElementDtoIconGOOGLE                    PlatformSearchFilterElementDtoIcon = "GOOGLE"
	PlatformSearchFilterElementDtoIconGOOGLEADMANAGER           PlatformSearchFilterElementDtoIcon = "GOOGLE_AD_MANAGER"
	PlatformSearchFilterElementDtoIconGOOGLEADS                 PlatformSearchFilterElementDtoIcon = "GOOGLE_ADS"
	PlatformSearchFilterElementDtoIconGOOGLEANALYTICS           PlatformSearchFilterElementDtoIcon = "GOOGLE_ANALYTICS"
	PlatformSearchFilterElementDtoIconGOOGLECALENDAR            PlatformSearchFilterElementDtoIcon = "GOOGLE_CALENDAR"
	PlatformSearchFilterElementDtoIconGOOGLECAMPAIGNMANAGER     PlatformSearchFilterElementDtoIcon = "GOOGLE_CAMPAIGN_MANAGER"
	PlatformSearchFilterElementDtoIconGOOGLECHROME              PlatformSearchFilterElementDtoIcon = "GOOGLE_CHROME"
	PlatformSearchFilterElementDtoIconGOOGLECLOUD               PlatformSearchFilterElementDtoIcon = "GOOGLE_CLOUD"
	PlatformSearchFilterElementDtoIconGOOGLECLOUDSTORAGE        PlatformSearchFilterElementDtoIcon = "GOOGLE_CLOUD_STORAGE"
	PlatformSearchFilterElementDtoIconGOOGLEDISPLAY             PlatformSearchFilterElementDtoIcon = "GOOGLE_DISPLAY"
	PlatformSearchFilterElementDtoIconGOOGLEDRIVE               PlatformSearchFilterElementDtoIcon = "GOOGLE_DRIVE"
	PlatformSearchFilterElementDtoIconGOOGLEPLAY                PlatformSearchFilterElementDtoIcon = "GOOGLE_PLAY"
	PlatformSearchFilterElementDtoIconGOOGLESEARCHADS360        PlatformSearchFilterElementDtoIcon = "GOOGLE_SEARCH_ADS_360"
	PlatformSearchFilterElementDtoIconGOOGLESEARCHCONSOLE       PlatformSearchFilterElementDtoIcon = "GOOGLE_SEARCH_CONSOLE"
	PlatformSearchFilterElementDtoIconGOOGLESHEETS              PlatformSearchFilterElementDtoIcon = "GOOGLE_SHEETS"
	PlatformSearchFilterElementDtoIconGOOGLETASKS               PlatformSearchFilterElementDtoIcon = "GOOGLE_TASKS"
	PlatformSearchFilterElementDtoIconGORGIAS                   PlatformSearchFilterElementDtoIcon = "GORGIAS"
	PlatformSearchFilterElementDtoIconGREENHOUSE                PlatformSearchFilterElementDtoIcon = "GREENHOUSE"
	PlatformSearchFilterElementDtoIconGREENPLUM                 PlatformSearchFilterElementDtoIcon = "GREENPLUM"
	PlatformSearchFilterElementDtoIconGREENPOWERMONITOR         PlatformSearchFilterElementDtoIcon = "GREEN_POWER_MONITOR"
	PlatformSearchFilterElementDtoIconGREPSR                    PlatformSearchFilterElementDtoIcon = "GREPSR"
	PlatformSearchFilterElementDtoIconGRIN                      PlatformSearchFilterElementDtoIcon = "GRIN"
	PlatformSearchFilterElementDtoIconGURU                      PlatformSearchFilterElementDtoIcon = "GURU"
	PlatformSearchFilterElementDtoIconH2                        PlatformSearchFilterElementDtoIcon = "H2"
	PlatformSearchFilterElementDtoIconHARVEST                   PlatformSearchFilterElementDtoIcon = "HARVEST"
	PlatformSearchFilterElementDtoIconHDFS                      PlatformSearchFilterElementDtoIcon = "HDFS"
	PlatformSearchFilterElementDtoIconHDFSSTORAGE               PlatformSearchFilterElementDtoIcon = "HDFS_STORAGE"
	PlatformSearchFilterElementDtoIconHEAP                      PlatformSearchFilterElementDtoIcon = "HEAP"
	PlatformSearchFilterElementDtoIconHEIGHT                    PlatformSearchFilterElementDtoIcon = "HEIGHT"
	PlatformSearchFilterElementDtoIconHELPSCOUT                 PlatformSearchFilterElementDtoIcon = "HELP_SCOUT"
	PlatformSearchFilterElementDtoIconHELPSHIFT                 PlatformSearchFilterElementDtoIcon = "HELPSHIFT"
	PlatformSearchFilterElementDtoIconHEROKUKAFKA               PlatformSearchFilterElementDtoIcon = "HEROKU_KAFKA"
	PlatformSearchFilterElementDtoIconHIBOB                     PlatformSearchFilterElementDtoIcon = "HIBOB"
	PlatformSearchFilterElementDtoIconHIGHTOUCH                 PlatformSearchFilterElementDtoIcon = "HIGH_TOUCH"
	PlatformSearchFilterElementDtoIconHIVE                      PlatformSearchFilterElementDtoIcon = "HIVE"
	PlatformSearchFilterElementDtoIconHIVEPROCESS               PlatformSearchFilterElementDtoIcon = "HIVE_PROCESS"
	PlatformSearchFilterElementDtoIconHOPIN                     PlatformSearchFilterElementDtoIcon = "HOPIN"
	PlatformSearchFilterElementDtoIconHUBSPOT                   PlatformSearchFilterElementDtoIcon = "HUBSPOT"
	PlatformSearchFilterElementDtoIconIMPACT                    PlatformSearchFilterElementDtoIcon = "IMPACT"
	PlatformSearchFilterElementDtoIconINCIDENTIO                PlatformSearchFilterElementDtoIcon = "INCIDENT_IO"
	PlatformSearchFilterElementDtoIconINFOBIP                   PlatformSearchFilterElementDtoIcon = "INFOBIP"
	PlatformSearchFilterElementDtoIconINFORMATICA               PlatformSearchFilterElementDtoIcon = "INFORMATICA"
	PlatformSearchFilterElementDtoIconINSIGHTLY                 PlatformSearchFilterElementDtoIcon = "INSIGHTLY"
	PlatformSearchFilterElementDtoIconINSTAGRAM                 PlatformSearchFilterElementDtoIcon = "INSTAGRAM"
	PlatformSearchFilterElementDtoIconINTERCOM                  PlatformSearchFilterElementDtoIcon = "INTERCOM"
	PlatformSearchFilterElementDtoIconINVESTOPEDIA              PlatformSearchFilterElementDtoIcon = "INVESTOPEDIA"
	PlatformSearchFilterElementDtoIconIRONCLAD                  PlatformSearchFilterElementDtoIcon = "IRONCLAD"
	PlatformSearchFilterElementDtoIconIRONSOURCE                PlatformSearchFilterElementDtoIcon = "IRONSOURCE"
	PlatformSearchFilterElementDtoIconITERABLE                  PlatformSearchFilterElementDtoIcon = "ITERABLE"
	PlatformSearchFilterElementDtoIconJAVA                      PlatformSearchFilterElementDtoIcon = "JAVA"
	PlatformSearchFilterElementDtoIconJENKINS                   PlatformSearchFilterElementDtoIcon = "JENKINS"
	PlatformSearchFilterElementDtoIconJUSTCALL                  PlatformSearchFilterElementDtoIcon = "JUSTCALL"
	PlatformSearchFilterElementDtoIconKANDJI                    PlatformSearchFilterElementDtoIcon = "KANDJI"
	PlatformSearchFilterElementDtoIconKENSU                     PlatformSearchFilterElementDtoIcon = "KENSU"
	PlatformSearchFilterElementDtoIconKHOROSCARE                PlatformSearchFilterElementDtoIcon = "KHOROS_CARE"
	PlatformSearchFilterElementDtoIconKISSMETRICS               PlatformSearchFilterElementDtoIcon = "KISSMETRICS"
	PlatformSearchFilterElementDtoIconKLAVIYO                   PlatformSearchFilterElementDtoIcon = "KLAVIYO"
	PlatformSearchFilterElementDtoIconKNOWBE4                   PlatformSearchFilterElementDtoIcon = "KNOWBE4"
	PlatformSearchFilterElementDtoIconKONNECTINSIGHTS           PlatformSearchFilterElementDtoIcon = "KONNECT_INSIGHTS"
	PlatformSearchFilterElementDtoIconKUSTOMER                  PlatformSearchFilterElementDtoIcon = "KUSTOMER"
	PlatformSearchFilterElementDtoIconLARIATDATA                PlatformSearchFilterElementDtoIcon = "LARIAT_DATA"
	PlatformSearchFilterElementDtoIconLATTICE                   PlatformSearchFilterElementDtoIcon = "LATTICE"
	PlatformSearchFilterElementDtoIconLAUNCHDARKLY              PlatformSearchFilterElementDtoIcon = "LAUNCH_DARKLY"
	PlatformSearchFilterElementDtoIconLEARNUPON                 PlatformSearchFilterElementDtoIcon = "LEARN_UPON"
	PlatformSearchFilterElementDtoIconLESSONLY                  PlatformSearchFilterElementDtoIcon = "LESSONLY"
	PlatformSearchFilterElementDtoIconLEVER                     PlatformSearchFilterElementDtoIcon = "LEVER"
	PlatformSearchFilterElementDtoIconLIFTOFF                   PlatformSearchFilterElementDtoIcon = "LIFTOFF"
	PlatformSearchFilterElementDtoIconLIGHTDASH                 PlatformSearchFilterElementDtoIcon = "LIGHTDASH"
	PlatformSearchFilterElementDtoIconLIGHTSPEED                PlatformSearchFilterElementDtoIcon = "LIGHTSPEED"
	PlatformSearchFilterElementDtoIconLIGHTSUP                  PlatformSearchFilterElementDtoIcon = "LIGHTSUP"
	PlatformSearchFilterElementDtoIconLINEAR                    PlatformSearchFilterElementDtoIcon = "LINEAR"
	PlatformSearchFilterElementDtoIconLINKEDIN                  PlatformSearchFilterElementDtoIcon = "LINKEDIN"
	PlatformSearchFilterElementDtoIconLIVECHAT                  PlatformSearchFilterElementDtoIcon = "LIVECHAT"
	PlatformSearchFilterElementDtoIconLOADEDCOMMERCE            PlatformSearchFilterElementDtoIcon = "LOADED_COMMERCE"
	PlatformSearchFilterElementDtoIconLOB                       PlatformSearchFilterElementDtoIcon = "LOB"
	PlatformSearchFilterElementDtoIconLOOKER                    PlatformSearchFilterElementDtoIcon = "LOOKER"
	PlatformSearchFilterElementDtoIconLOOP                      PlatformSearchFilterElementDtoIcon = "LOOP"
	PlatformSearchFilterElementDtoIconLOOPIO                    PlatformSearchFilterElementDtoIcon = "LOOPIO"
	PlatformSearchFilterElementDtoIconLUMA                      PlatformSearchFilterElementDtoIcon = "LUMA"
	PlatformSearchFilterElementDtoIconMAGENTO                   PlatformSearchFilterElementDtoIcon = "MAGENTO"
	PlatformSearchFilterElementDtoIconMAILCHIMP                 PlatformSearchFilterElementDtoIcon = "MAILCHIMP"
	PlatformSearchFilterElementDtoIconMAILGUN                   PlatformSearchFilterElementDtoIcon = "MAILGUN"
	PlatformSearchFilterElementDtoIconMANDRILL                  PlatformSearchFilterElementDtoIcon = "MANDRILL"
	PlatformSearchFilterElementDtoIconMANTA                     PlatformSearchFilterElementDtoIcon = "MANTA"
	PlatformSearchFilterElementDtoIconMARIADB                   PlatformSearchFilterElementDtoIcon = "MARIADB"
	PlatformSearchFilterElementDtoIconMARINSOFTWARE             PlatformSearchFilterElementDtoIcon = "MARIN_SOFTWARE"
	PlatformSearchFilterElementDtoIconMARKETO                   PlatformSearchFilterElementDtoIcon = "MARKETO"
	PlatformSearchFilterElementDtoIconMATTERMOST                PlatformSearchFilterElementDtoIcon = "MATTERMOST"
	PlatformSearchFilterElementDtoIconMAVENLINK                 PlatformSearchFilterElementDtoIcon = "MAVENLINK"
	PlatformSearchFilterElementDtoIconMAXIO                     PlatformSearchFilterElementDtoIcon = "MAXIO"
	PlatformSearchFilterElementDtoIconMEDALLIA                  PlatformSearchFilterElementDtoIcon = "MEDALLIA"
	PlatformSearchFilterElementDtoIconMETA                      PlatformSearchFilterElementDtoIcon = "META"
	PlatformSearchFilterElementDtoIconMETABASE                  PlatformSearchFilterElementDtoIcon = "METABASE"
	PlatformSearchFilterElementDtoIconMETAPHOR                  PlatformSearchFilterElementDtoIcon = "METAPHOR"
	PlatformSearchFilterElementDtoIconMETAPLANE                 PlatformSearchFilterElementDtoIcon = "METAPLANE"
	PlatformSearchFilterElementDtoIconMICROSOFT                 PlatformSearchFilterElementDtoIcon = "MICROSOFT"
	PlatformSearchFilterElementDtoIconMICROSOFTAZUREBLOBSTORAGE PlatformSearchFilterElementDtoIcon = "MICROSOFT_AZURE_BLOB_STORAGE"
	PlatformSearchFilterElementDtoIconMICROSOFTAZUREML          PlatformSearchFilterElementDtoIcon = "MICROSOFT_AZURE_ML"
	PlatformSearchFilterElementDtoIconMICROSOFTDYNAMICS         PlatformSearchFilterElementDtoIcon = "MICROSOFT_DYNAMICS"
	PlatformSearchFilterElementDtoIconMICROSOFTONEDRIVE         PlatformSearchFilterElementDtoIcon = "MICROSOFT_ONEDRIVE"
	PlatformSearchFilterElementDtoIconMICROSOFTPURVIEW          PlatformSearchFilterElementDtoIcon = "MICROSOFT_PURVIEW"
	PlatformSearchFilterElementDtoIconMICROSOFTTEAMS            PlatformSearchFilterElementDtoIcon = "MICROSOFT_TEAMS"
	PlatformSearchFilterElementDtoIconMICROSTRATEGY             PlatformSearchFilterElementDtoIcon = "MICROSTRATEGY"
	PlatformSearchFilterElementDtoIconMIXMAX                    PlatformSearchFilterElementDtoIcon = "MIXMAX"
	PlatformSearchFilterElementDtoIconMIXPANEL                  PlatformSearchFilterElementDtoIcon = "MIXPANEL"
	PlatformSearchFilterElementDtoIconMONDAYCOM                 PlatformSearchFilterElementDtoIcon = "MONDAY_COM"
	PlatformSearchFilterElementDtoIconMONGODB                   PlatformSearchFilterElementDtoIcon = "MONGODB"
	PlatformSearchFilterElementDtoIconMONTECARLO                PlatformSearchFilterElementDtoIcon = "MONTE_CARLO"
	PlatformSearchFilterElementDtoIconMOUNTAIN                  PlatformSearchFilterElementDtoIcon = "MOUNTAIN"
	PlatformSearchFilterElementDtoIconMSSQL                     PlatformSearchFilterElementDtoIcon = "MSSQL"
	PlatformSearchFilterElementDtoIconMULESOFT                  PlatformSearchFilterElementDtoIcon = "MULESOFT"
	PlatformSearchFilterElementDtoIconMUX                       PlatformSearchFilterElementDtoIcon = "MUX"
	PlatformSearchFilterElementDtoIconMWAA                      PlatformSearchFilterElementDtoIcon = "MWAA"
	PlatformSearchFilterElementDtoIconMYSQL                     PlatformSearchFilterElementDtoIcon = "MYSQL"
	PlatformSearchFilterElementDtoIconNAMELY                    PlatformSearchFilterElementDtoIcon = "NAMELY"
	PlatformSearchFilterElementDtoIconNCINO                     PlatformSearchFilterElementDtoIcon = "NCINO"
	PlatformSearchFilterElementDtoIconNETSUITEANALYTICS         PlatformSearchFilterElementDtoIcon = "NETSUITE_ANALYTICS"
	PlatformSearchFilterElementDtoIconNEWRELIC                  PlatformSearchFilterElementDtoIcon = "NEW_RELIC"
	PlatformSearchFilterElementDtoIconNOTION                    PlatformSearchFilterElementDtoIcon = "NOTION"
	PlatformSearchFilterElementDtoIconNYLAS                     PlatformSearchFilterElementDtoIcon = "NYLAS"
	PlatformSearchFilterElementDtoIconOBSERVE                   PlatformSearchFilterElementDtoIcon = "OBSERVE"
	PlatformSearchFilterElementDtoIconOCTOPAI                   PlatformSearchFilterElementDtoIcon = "OCTOPAI"
	PlatformSearchFilterElementDtoIconOKTA                      PlatformSearchFilterElementDtoIcon = "OKTA"
	PlatformSearchFilterElementDtoIconOPENAI                    PlatformSearchFilterElementDtoIcon = "OPEN_AI"
	PlatformSearchFilterElementDtoIconOPENDATADC                PlatformSearchFilterElementDtoIcon = "OPEN_DATA_DC"
	PlatformSearchFilterElementDtoIconOPENEXCHANGESRATES        PlatformSearchFilterElementDtoIcon = "OPEN_EXCHANGES_RATES"
	PlatformSearchFilterElementDtoIconOPENSEARCH                PlatformSearchFilterElementDtoIcon = "OPEN_SEARCH"
	PlatformSearchFilterElementDtoIconOPTIMIZELY                PlatformSearchFilterElementDtoIcon = "OPTIMIZELY"
	PlatformSearchFilterElementDtoIconORACLE                    PlatformSearchFilterElementDtoIcon = "ORACLE"
	PlatformSearchFilterElementDtoIconORBITCOMMUNITYPLATFORM    PlatformSearchFilterElementDtoIcon = "ORBIT_COMMUNITY_PLATFORM"
	PlatformSearchFilterElementDtoIconORDWAY                    PlatformSearchFilterElementDtoIcon = "ORDWAY"
	PlatformSearchFilterElementDtoIconORTTO                     PlatformSearchFilterElementDtoIcon = "ORTTO"
	PlatformSearchFilterElementDtoIconOSCOMMERCE                PlatformSearchFilterElementDtoIcon = "OS_COMMERCE"
	PlatformSearchFilterElementDtoIconOUTBRAIN                  PlatformSearchFilterElementDtoIcon = "OUTBRAIN"
	PlatformSearchFilterElementDtoIconOUTREACH                  PlatformSearchFilterElementDtoIcon = "OUTREACH"
	PlatformSearchFilterElementDtoIconOVALEDGE                  PlatformSearchFilterElementDtoIcon = "OVALEDGE"
	PlatformSearchFilterElementDtoIconPAGERDUTY                 PlatformSearchFilterElementDtoIcon = "PAGERDUTY"
	PlatformSearchFilterElementDtoIconPAGERSHIFT                PlatformSearchFilterElementDtoIcon = "PAGERSHIFT"
	PlatformSearchFilterElementDtoIconPAYPAL                    PlatformSearchFilterElementDtoIcon = "PAYPAL"
	PlatformSearchFilterElementDtoIconPENDO                     PlatformSearchFilterElementDtoIcon = "PENDO"
	PlatformSearchFilterElementDtoIconPINGDOM                   PlatformSearchFilterElementDtoIcon = "PINGDOM"
	PlatformSearchFilterElementDtoIconPINTEREST                 PlatformSearchFilterElementDtoIcon = "PINTEREST"
	PlatformSearchFilterElementDtoIconPIPE17                    PlatformSearchFilterElementDtoIcon = "PIPE17"
	PlatformSearchFilterElementDtoIconPIPEDRIVE                 PlatformSearchFilterElementDtoIcon = "PIPEDRIVE"
	PlatformSearchFilterElementDtoIconPIVOTALTRACKER            PlatformSearchFilterElementDtoIcon = "PIVOTAL_TRACKER"
	PlatformSearchFilterElementDtoIconPLAYVOX                   PlatformSearchFilterElementDtoIcon = "PLAYVOX"
	PlatformSearchFilterElementDtoIconPOSTGRES                  PlatformSearchFilterElementDtoIcon = "POSTGRES"
	PlatformSearchFilterElementDtoIconPOSTHOG                   PlatformSearchFilterElementDtoIcon = "POSTHOG"
	PlatformSearchFilterElementDtoIconPOWERBI                   PlatformSearchFilterElementDtoIcon = "POWER_BI"
	PlatformSearchFilterElementDtoIconPOWERSCHOOL               PlatformSearchFilterElementDtoIcon = "POWERSCHOOL"
	PlatformSearchFilterElementDtoIconPREFECT                   PlatformSearchFilterElementDtoIcon = "PREFECT"
	PlatformSearchFilterElementDtoIconPRESTASHOP                PlatformSearchFilterElementDtoIcon = "PRESTASHOP"
	PlatformSearchFilterElementDtoIconPRESTO                    PlatformSearchFilterElementDtoIcon = "PRESTO"
	PlatformSearchFilterElementDtoIconPRODUCTBOARD              PlatformSearchFilterElementDtoIcon = "PRODUCTBOARD"
	PlatformSearchFilterElementDtoIconPYTHON                    PlatformSearchFilterElementDtoIcon = "PYTHON"
	PlatformSearchFilterElementDtoIconQLIK                      PlatformSearchFilterElementDtoIcon = "QLIK"
	PlatformSearchFilterElementDtoIconQUALAROO                  PlatformSearchFilterElementDtoIcon = "QUALAROO"
	PlatformSearchFilterElementDtoIconQUALTRICS                 PlatformSearchFilterElementDtoIcon = "QUALTRICS"
	PlatformSearchFilterElementDtoIconQUICKBOOKS                PlatformSearchFilterElementDtoIcon = "QUICKBOOKS"
	PlatformSearchFilterElementDtoIconQUICKSIGHT                PlatformSearchFilterElementDtoIcon = "QUICKSIGHT"
	PlatformSearchFilterElementDtoIconRAMP                      PlatformSearchFilterElementDtoIcon = "RAMP"
	PlatformSearchFilterElementDtoIconRARIBLE                   PlatformSearchFilterElementDtoIcon = "RARIBLE"
	PlatformSearchFilterElementDtoIconRECHARGE                  PlatformSearchFilterElementDtoIcon = "RECHARGE"
	PlatformSearchFilterElementDtoIconRECURLY                   PlatformSearchFilterElementDtoIcon = "RECURLY"
	PlatformSearchFilterElementDtoIconREDDIT                    PlatformSearchFilterElementDtoIcon = "REDDIT"
	PlatformSearchFilterElementDtoIconREDSHIFT                  PlatformSearchFilterElementDtoIcon = "REDSHIFT"
	PlatformSearchFilterElementDtoIconRELTIO                    PlatformSearchFilterElementDtoIcon = "RELTIO"
	PlatformSearchFilterElementDtoIconREPLYIO                   PlatformSearchFilterElementDtoIcon = "REPLY_IO"
	PlatformSearchFilterElementDtoIconRETAILNEXT                PlatformSearchFilterElementDtoIcon = "RETAILNEXT"
	PlatformSearchFilterElementDtoIconRETENTLY                  PlatformSearchFilterElementDtoIcon = "RETENTLY"
	PlatformSearchFilterElementDtoIconREVELSYSTEMS              PlatformSearchFilterElementDtoIcon = "REVEL_SYSTEMS"
	PlatformSearchFilterElementDtoIconRINGCENTRAL               PlatformSearchFilterElementDtoIcon = "RINGCENTRAL"
	PlatformSearchFilterElementDtoIconRIPPLING                  PlatformSearchFilterElementDtoIcon = "RIPPLING"
	PlatformSearchFilterElementDtoIconROLLBAR                   PlatformSearchFilterElementDtoIcon = "ROLLBAR"
	PlatformSearchFilterElementDtoIconROOTLY                    PlatformSearchFilterElementDtoIcon = "ROOTLY"
	PlatformSearchFilterElementDtoIconS3                        PlatformSearchFilterElementDtoIcon = "S3"
	PlatformSearchFilterElementDtoIconSAGEHR                    PlatformSearchFilterElementDtoIcon = "SAGE_HR"
	PlatformSearchFilterElementDtoIconSAGEINTACCT               PlatformSearchFilterElementDtoIcon = "SAGE_INTACCT"
	PlatformSearchFilterElementDtoIconSAILTHRU                  PlatformSearchFilterElementDtoIcon = "SAILTHRU"
	PlatformSearchFilterElementDtoIconSALESFORCE                PlatformSearchFilterElementDtoIcon = "SALESFORCE"
	PlatformSearchFilterElementDtoIconSALESLOFT                 PlatformSearchFilterElementDtoIcon = "SALESLOFT"
	PlatformSearchFilterElementDtoIconSALSIFY                   PlatformSearchFilterElementDtoIcon = "SALSIFY"
	PlatformSearchFilterElementDtoIconSAMSARA                   PlatformSearchFilterElementDtoIcon = "SAMSARA"
	PlatformSearchFilterElementDtoIconSAP                       PlatformSearchFilterElementDtoIcon = "SAP"
	PlatformSearchFilterElementDtoIconSAPCONCUR                 PlatformSearchFilterElementDtoIcon = "SAP_CONCUR"
	PlatformSearchFilterElementDtoIconSCORM                     PlatformSearchFilterElementDtoIcon = "SCORM"
	PlatformSearchFilterElementDtoIconSECODA                    PlatformSearchFilterElementDtoIcon = "SECODA"
	PlatformSearchFilterElementDtoIconSECURITYJOURNEY           PlatformSearchFilterElementDtoIcon = "SECURITY_JOURNEY"
	PlatformSearchFilterElementDtoIconSEGMENT                   PlatformSearchFilterElementDtoIcon = "SEGMENT"
	PlatformSearchFilterElementDtoIconSELECTSTAR                PlatformSearchFilterElementDtoIcon = "SELECT_STAR"
	PlatformSearchFilterElementDtoIconSENDGRID                  PlatformSearchFilterElementDtoIcon = "SENDGRID"
	PlatformSearchFilterElementDtoIconSERVICENOW                PlatformSearchFilterElementDtoIcon = "SERVICE_NOW"
	PlatformSearchFilterElementDtoIconSFTP                      PlatformSearchFilterElementDtoIcon = "SFTP"
	PlatformSearchFilterElementDtoIconSHAREPOINT                PlatformSearchFilterElementDtoIcon = "SHAREPOINT"
	PlatformSearchFilterElementDtoIconSHARETRIBE                PlatformSearchFilterElementDtoIcon = "SHARETRIBE"
	PlatformSearchFilterElementDtoIconSHIPHERO                  PlatformSearchFilterElementDtoIcon = "SHIPHERO"
	PlatformSearchFilterElementDtoIconSHIPSTATION               PlatformSearchFilterElementDtoIcon = "SHIPSTATION"
	PlatformSearchFilterElementDtoIconSHOPIFY                   PlatformSearchFilterElementDtoIcon = "SHOPIFY"
	PlatformSearchFilterElementDtoIconSHOPWARE                  PlatformSearchFilterElementDtoIcon = "SHOPWARE"
	PlatformSearchFilterElementDtoIconSHORTIO                   PlatformSearchFilterElementDtoIcon = "SHORT_IO"
	PlatformSearchFilterElementDtoIconSIFFLET                   PlatformSearchFilterElementDtoIcon = "SIFFLET"
	PlatformSearchFilterElementDtoIconSIGMA                     PlatformSearchFilterElementDtoIcon = "SIGMA"
	PlatformSearchFilterElementDtoIconSIMPLECAST                PlatformSearchFilterElementDtoIcon = "SIMPLECAST"
	PlatformSearchFilterElementDtoIconSIMPLESAT                 PlatformSearchFilterElementDtoIcon = "SIMPLESAT"
	PlatformSearchFilterElementDtoIconSINGLESTORE               PlatformSearchFilterElementDtoIcon = "SINGLESTORE"
	PlatformSearchFilterElementDtoIconSISENSE                   PlatformSearchFilterElementDtoIcon = "SISENSE"
	PlatformSearchFilterElementDtoIconSIXSENSE                  PlatformSearchFilterElementDtoIcon = "SIXSENSE"
	PlatformSearchFilterElementDtoIconSKILLJAR                  PlatformSearchFilterElementDtoIcon = "SKILLJAR"
	PlatformSearchFilterElementDtoIconSKUVAULT                  PlatformSearchFilterElementDtoIcon = "SKUVAULT"
	PlatformSearchFilterElementDtoIconSLAB                      PlatformSearchFilterElementDtoIcon = "SLAB"
	PlatformSearchFilterElementDtoIconSLACK                     PlatformSearchFilterElementDtoIcon = "SLACK"
	PlatformSearchFilterElementDtoIconSMADEX                    PlatformSearchFilterElementDtoIcon = "SMADEX"
	PlatformSearchFilterElementDtoIconSNAPCHAT                  PlatformSearchFilterElementDtoIcon = "SNAPCHAT"
	PlatformSearchFilterElementDtoIconSNOWFLAKE                 PlatformSearchFilterElementDtoIcon = "SNOWFLAKE"
	PlatformSearchFilterElementDtoIconSNOWPLOW                  PlatformSearchFilterElementDtoIcon = "SNOWPLOW"
	PlatformSearchFilterElementDtoIconSODA                      PlatformSearchFilterElementDtoIcon = "SODA"
	PlatformSearchFilterElementDtoIconSONARQUBE                 PlatformSearchFilterElementDtoIcon = "SONARQUBE"
	PlatformSearchFilterElementDtoIconSPARKPROCESS              PlatformSearchFilterElementDtoIcon = "SPARK_PROCESS"
	PlatformSearchFilterElementDtoIconSPLITIO                   PlatformSearchFilterElementDtoIcon = "SPLIT_IO"
	PlatformSearchFilterElementDtoIconSPLUNK                    PlatformSearchFilterElementDtoIcon = "SPLUNK"
	PlatformSearchFilterElementDtoIconSPOTIFY                   PlatformSearchFilterElementDtoIcon = "SPOTIFY"
	PlatformSearchFilterElementDtoIconSPREECOMMERCE             PlatformSearchFilterElementDtoIcon = "SPREE_COMMERCE"
	PlatformSearchFilterElementDtoIconSPROUTSOCIAL              PlatformSearchFilterElementDtoIcon = "SPROUT_SOCIAL"
	PlatformSearchFilterElementDtoIconSQUARE                    PlatformSearchFilterElementDtoIcon = "SQUARE"
	PlatformSearchFilterElementDtoIconSQUARESPACE               PlatformSearchFilterElementDtoIcon = "SQUARESPACE"
	PlatformSearchFilterElementDtoIconSTACKADAPT                PlatformSearchFilterElementDtoIcon = "STACK_ADAPT"
	PlatformSearchFilterElementDtoIconSTATSIG                   PlatformSearchFilterElementDtoIcon = "STATSIG"
	PlatformSearchFilterElementDtoIconSTITCH                    PlatformSearchFilterElementDtoIcon = "STITCH"
	PlatformSearchFilterElementDtoIconSTRIPE                    PlatformSearchFilterElementDtoIcon = "STRIPE"
	PlatformSearchFilterElementDtoIconSTYLIGHT                  PlatformSearchFilterElementDtoIcon = "STYLIGHT"
	PlatformSearchFilterElementDtoIconSUBSCRIPT                 PlatformSearchFilterElementDtoIcon = "SUBSCRIPT"
	PlatformSearchFilterElementDtoIconSYNAPSE                   PlatformSearchFilterElementDtoIcon = "SYNAPSE"
	PlatformSearchFilterElementDtoIconTABLEAU                   PlatformSearchFilterElementDtoIcon = "TABLEAU"
	PlatformSearchFilterElementDtoIconTABOOLA                   PlatformSearchFilterElementDtoIcon = "TABOOLA"
	PlatformSearchFilterElementDtoIconTALEND                    PlatformSearchFilterElementDtoIcon = "TALEND"
	PlatformSearchFilterElementDtoIconTALKDESK                  PlatformSearchFilterElementDtoIcon = "TALKDESK"
	PlatformSearchFilterElementDtoIconTALKWALKER                PlatformSearchFilterElementDtoIcon = "TALKWALKER"
	PlatformSearchFilterElementDtoIconTEAMWORKCOM               PlatformSearchFilterElementDtoIcon = "TEAMWORK_COM"
	PlatformSearchFilterElementDtoIconTEMPOIO                   PlatformSearchFilterElementDtoIcon = "TEMPO_IO"
	PlatformSearchFilterElementDtoIconTERADATA                  PlatformSearchFilterElementDtoIcon = "TERADATA"
	PlatformSearchFilterElementDtoIconTERRAFORM                 PlatformSearchFilterElementDtoIcon = "TERRAFORM"
	PlatformSearchFilterElementDtoIconTHETRADEDESK              PlatformSearchFilterElementDtoIcon = "THE_TRADE_DESK"
	PlatformSearchFilterElementDtoIconTHOUGHTSPOT               PlatformSearchFilterElementDtoIcon = "THOUGHT_SPOT"
	PlatformSearchFilterElementDtoIconTHREESIXTYLEARNING        PlatformSearchFilterElementDtoIcon = "THREESIXTYLEARNING"
	PlatformSearchFilterElementDtoIconTIKTOK                    PlatformSearchFilterElementDtoIcon = "TIKTOK"
	PlatformSearchFilterElementDtoIconTOGGL                     PlatformSearchFilterElementDtoIcon = "TOGGL"
	PlatformSearchFilterElementDtoIconTRANSCEND                 PlatformSearchFilterElementDtoIcon = "TRANSCEND"
	PlatformSearchFilterElementDtoIconTRELLO                    PlatformSearchFilterElementDtoIcon = "TRELLO"
	PlatformSearchFilterElementDtoIconTRINET                    PlatformSearchFilterElementDtoIcon = "TRINET"
	PlatformSearchFilterElementDtoIconTRISOLUTE                 PlatformSearchFilterElementDtoIcon = "TRISOLUTE"
	PlatformSearchFilterElementDtoIconTWILIO                    PlatformSearchFilterElementDtoIcon = "TWILIO"
	PlatformSearchFilterElementDtoIconTYPEFORM                  PlatformSearchFilterElementDtoIcon = "TYPEFORM"
	PlatformSearchFilterElementDtoIconUNKNOWN                   PlatformSearchFilterElementDtoIcon = "UNKNOWN"
	PlatformSearchFilterElementDtoIconUPLAND                    PlatformSearchFilterElementDtoIcon = "UPLAND"
	PlatformSearchFilterElementDtoIconUSERVOICE                 PlatformSearchFilterElementDtoIcon = "USERVOICE"
	PlatformSearchFilterElementDtoIconVALIDIO                   PlatformSearchFilterElementDtoIcon = "VALIDIO"
	PlatformSearchFilterElementDtoIconVEEVA                     PlatformSearchFilterElementDtoIcon = "VEEVA"
	PlatformSearchFilterElementDtoIconVERIZONMEDIA              PlatformSearchFilterElementDtoIcon = "VERIZON_MEDIA"
	PlatformSearchFilterElementDtoIconVITALLY                   PlatformSearchFilterElementDtoIcon = "VITALLY"
	PlatformSearchFilterElementDtoIconVONAGE                    PlatformSearchFilterElementDtoIcon = "VONAGE"
	PlatformSearchFilterElementDtoIconVUETIFY                   PlatformSearchFilterElementDtoIcon = "VUETIFY"
	PlatformSearchFilterElementDtoIconWEBHOOKS                  PlatformSearchFilterElementDtoIcon = "WEBHOOKS"
	PlatformSearchFilterElementDtoIconWEBSCRAPER                PlatformSearchFilterElementDtoIcon = "WEB_SCRAPER"
	PlatformSearchFilterElementDtoIconWHENIWORK                 PlatformSearchFilterElementDtoIcon = "WHEN_I_WORK"
	PlatformSearchFilterElementDtoIconWHEREFOUR                 PlatformSearchFilterElementDtoIcon = "WHEREFOUR"
	PlatformSearchFilterElementDtoIconWIKIPEDIA                 PlatformSearchFilterElementDtoIcon = "WIKIPEDIA"
	PlatformSearchFilterElementDtoIconWOOCOMMERCE               PlatformSearchFilterElementDtoIcon = "WOOCOMMERCE"
	PlatformSearchFilterElementDtoIconWORDPRESS                 PlatformSearchFilterElementDtoIcon = "WORDPRESS"
	PlatformSearchFilterElementDtoIconWORKABLE                  PlatformSearchFilterElementDtoIcon = "WORKABLE"
	PlatformSearchFilterElementDtoIconWORKDAY                   PlatformSearchFilterElementDtoIcon = "WORKDAY"
	PlatformSearchFilterElementDtoIconWORKFLOWMAX               PlatformSearchFilterElementDtoIcon = "WORKFLOW_MAX"
	PlatformSearchFilterElementDtoIconWRIKE                     PlatformSearchFilterElementDtoIcon = "WRIKE"
	PlatformSearchFilterElementDtoIconX                         PlatformSearchFilterElementDtoIcon = "X"
	PlatformSearchFilterElementDtoIconXERO                      PlatformSearchFilterElementDtoIcon = "XERO"
	PlatformSearchFilterElementDtoIconXRAY                      PlatformSearchFilterElementDtoIcon = "XRAY"
	PlatformSearchFilterElementDtoIconYAHOO                     PlatformSearchFilterElementDtoIcon = "YAHOO"
	PlatformSearchFilterElementDtoIconYOTPO                     PlatformSearchFilterElementDtoIcon = "YOTPO"
	PlatformSearchFilterElementDtoIconYOUTUBE                   PlatformSearchFilterElementDtoIcon = "YOUTUBE"
	PlatformSearchFilterElementDtoIconZEENEA                    PlatformSearchFilterElementDtoIcon = "ZEENEA"
	PlatformSearchFilterElementDtoIconZENCART                   PlatformSearchFilterElementDtoIcon = "ZEN_CART"
	PlatformSearchFilterElementDtoIconZENDESKCHAT               PlatformSearchFilterElementDtoIcon = "ZENDESK_CHAT"
	PlatformSearchFilterElementDtoIconZENDESKSELL               PlatformSearchFilterElementDtoIcon = "ZENDESK_SELL"
	PlatformSearchFilterElementDtoIconZENDESKSUNSHINE           PlatformSearchFilterElementDtoIcon = "ZENDESK_SUNSHINE"
	PlatformSearchFilterElementDtoIconZENDESKSUPPORT            PlatformSearchFilterElementDtoIcon = "ZENDESK_SUPPORT"
	PlatformSearchFilterElementDtoIconZINGTREE                  PlatformSearchFilterElementDtoIcon = "ZINGTREE"
	PlatformSearchFilterElementDtoIconZOHOBOOKS                 PlatformSearchFilterElementDtoIcon = "ZOHO_BOOKS"
	PlatformSearchFilterElementDtoIconZOHOCAMPAIGNS             PlatformSearchFilterElementDtoIcon = "ZOHO_CAMPAIGNS"
	PlatformSearchFilterElementDtoIconZOHOCRM                   PlatformSearchFilterElementDtoIcon = "ZOHO_CRM"
	PlatformSearchFilterElementDtoIconZOOM                      PlatformSearchFilterElementDtoIcon = "ZOOM"
	PlatformSearchFilterElementDtoIconZUORA                     PlatformSearchFilterElementDtoIcon = "ZUORA"
)

// Defines values for PlatformTypeSearchFilterElementDtoIcon.
const (
	PlatformTypeSearchFilterElementDtoIconACCELDATA                 PlatformTypeSearchFilterElementDtoIcon = "ACCELDATA"
	PlatformTypeSearchFilterElementDtoIconACRYLDATA                 PlatformTypeSearchFilterElementDtoIcon = "ACRYL_DATA"
	PlatformTypeSearchFilterElementDtoIconACTIANVECTOR              PlatformTypeSearchFilterElementDtoIcon = "ACTIAN_VECTOR"
	PlatformTypeSearchFilterElementDtoIconACTIVECAMPAIGN            PlatformTypeSearchFilterElementDtoIcon = "ACTIVE_CAMPAIGN"
	PlatformTypeSearchFilterElementDtoIconADA                       PlatformTypeSearchFilterElementDtoIcon = "ADA"
	PlatformTypeSearchFilterElementDtoIconADJUST                    PlatformTypeSearchFilterElementDtoIcon = "ADJUST"
	PlatformTypeSearchFilterElementDtoIconADOBE                     PlatformTypeSearchFilterElementDtoIcon = "ADOBE"
	PlatformTypeSearchFilterElementDtoIconADPWFN                    PlatformTypeSearchFilterElementDtoIcon = "ADP_WFN"
	PlatformTypeSearchFilterElementDtoIconADROLL                    PlatformTypeSearchFilterElementDtoIcon = "ADROLL"
	PlatformTypeSearchFilterElementDtoIconAFFINITY                  PlatformTypeSearchFilterElementDtoIcon = "AFFINITY"
	PlatformTypeSearchFilterElementDtoIconAIRBYTE                   PlatformTypeSearchFilterElementDtoIcon = "AIRBYTE"
	PlatformTypeSearchFilterElementDtoIconAIRCALL                   PlatformTypeSearchFilterElementDtoIcon = "AIRCALL"
	PlatformTypeSearchFilterElementDtoIconAIRFLOW                   PlatformTypeSearchFilterElementDtoIcon = "AIRFLOW"
	PlatformTypeSearchFilterElementDtoIconAIRTABLE                  PlatformTypeSearchFilterElementDtoIcon = "AIRTABLE"
	PlatformTypeSearchFilterElementDtoIconALATION                   PlatformTypeSearchFilterElementDtoIcon = "ALATION"
	PlatformTypeSearchFilterElementDtoIconALCHEMER                  PlatformTypeSearchFilterElementDtoIcon = "ALCHEMER"
	PlatformTypeSearchFilterElementDtoIconALVINAI                   PlatformTypeSearchFilterElementDtoIcon = "ALVIN_AI"
	PlatformTypeSearchFilterElementDtoIconAMAZON                    PlatformTypeSearchFilterElementDtoIcon = "AMAZON"
	PlatformTypeSearchFilterElementDtoIconAMAZONCLOUDFRONT          PlatformTypeSearchFilterElementDtoIcon = "AMAZON_CLOUDFRONT"
	PlatformTypeSearchFilterElementDtoIconAMAZONDOCUMENTDB          PlatformTypeSearchFilterElementDtoIcon = "AMAZON_DOCUMENTDB"
	PlatformTypeSearchFilterElementDtoIconAMAZONDYNAMODB            PlatformTypeSearchFilterElementDtoIcon = "AMAZON_DYNAMODB"
	PlatformTypeSearchFilterElementDtoIconAMAZONFIREHOSE            PlatformTypeSearchFilterElementDtoIcon = "AMAZON_FIREHOSE"
	PlatformTypeSearchFilterElementDtoIconAMAZONSAGEMAKER           PlatformTypeSearchFilterElementDtoIcon = "AMAZON_SAGEMAKER"
	PlatformTypeSearchFilterElementDtoIconAMAZONSELLINGPARTNER      PlatformTypeSearchFilterElementDtoIcon = "AMAZON_SELLING_PARTNER"
	PlatformTypeSearchFilterElementDtoIconAMPLITUDE                 PlatformTypeSearchFilterElementDtoIcon = "AMPLITUDE"
	PlatformTypeSearchFilterElementDtoIconANAPLAN                   PlatformTypeSearchFilterElementDtoIcon = "ANAPLAN"
	PlatformTypeSearchFilterElementDtoIconANOMALO                   PlatformTypeSearchFilterElementDtoIcon = "ANOMALO"
	PlatformTypeSearchFilterElementDtoIconAPACHEKAFKA               PlatformTypeSearchFilterElementDtoIcon = "APACHE_KAFKA"
	PlatformTypeSearchFilterElementDtoIconAPACHESPARK               PlatformTypeSearchFilterElementDtoIcon = "APACHE_SPARK"
	PlatformTypeSearchFilterElementDtoIconAPPCUES                   PlatformTypeSearchFilterElementDtoIcon = "APPCUES"
	PlatformTypeSearchFilterElementDtoIconAPPFIGURES                PlatformTypeSearchFilterElementDtoIcon = "APPFIGURES"
	PlatformTypeSearchFilterElementDtoIconAPPLE                     PlatformTypeSearchFilterElementDtoIcon = "APPLE"
	PlatformTypeSearchFilterElementDtoIconAPPLEAPPSTORE             PlatformTypeSearchFilterElementDtoIcon = "APPLE_APP_STORE"
	PlatformTypeSearchFilterElementDtoIconAPPSFLYER                 PlatformTypeSearchFilterElementDtoIcon = "APPSFLYER"
	PlatformTypeSearchFilterElementDtoIconASANA                     PlatformTypeSearchFilterElementDtoIcon = "ASANA"
	PlatformTypeSearchFilterElementDtoIconASSEMBLED                 PlatformTypeSearchFilterElementDtoIcon = "ASSEMBLED"
	PlatformTypeSearchFilterElementDtoIconATHENA                    PlatformTypeSearchFilterElementDtoIcon = "ATHENA"
	PlatformTypeSearchFilterElementDtoIconATLAN                     PlatformTypeSearchFilterElementDtoIcon = "ATLAN"
	PlatformTypeSearchFilterElementDtoIconATLASSIANCONFLUENCE       PlatformTypeSearchFilterElementDtoIcon = "ATLASSIAN_CONFLUENCE"
	PlatformTypeSearchFilterElementDtoIconATLASSIANJIRA             PlatformTypeSearchFilterElementDtoIcon = "ATLASSIAN_JIRA"
	PlatformTypeSearchFilterElementDtoIconATLASSIANOPSGENIE         PlatformTypeSearchFilterElementDtoIcon = "ATLASSIAN_OPSGENIE"
	PlatformTypeSearchFilterElementDtoIconAUTH0                     PlatformTypeSearchFilterElementDtoIcon = "AUTH0"
	PlatformTypeSearchFilterElementDtoIconAUTODESKBIM360            PlatformTypeSearchFilterElementDtoIcon = "AUTODESK_BIM_360"
	PlatformTypeSearchFilterElementDtoIconAWIN                      PlatformTypeSearchFilterElementDtoIcon = "AWIN"
	PlatformTypeSearchFilterElementDtoIconAWSCLOUDTRAIL             PlatformTypeSearchFilterElementDtoIcon = "AWS_CLOUDTRAIL"
	PlatformTypeSearchFilterElementDtoIconAWSCOSTEXPLORER           PlatformTypeSearchFilterElementDtoIcon = "AWS_COST_EXPLORER"
	PlatformTypeSearchFilterElementDtoIconAWSINVENTORY              PlatformTypeSearchFilterElementDtoIcon = "AWS_INVENTORY"
	PlatformTypeSearchFilterElementDtoIconAWSLAMBDA                 PlatformTypeSearchFilterElementDtoIcon = "AWS_LAMBDA"
	PlatformTypeSearchFilterElementDtoIconAZURE                     PlatformTypeSearchFilterElementDtoIcon = "AZURE"
	PlatformTypeSearchFilterElementDtoIconBALLOTREADY               PlatformTypeSearchFilterElementDtoIcon = "BALLOT_READY"
	PlatformTypeSearchFilterElementDtoIconBAMBOOHR                  PlatformTypeSearchFilterElementDtoIcon = "BAMBOOHR"
	PlatformTypeSearchFilterElementDtoIconBIGCOMMERCE               PlatformTypeSearchFilterElementDtoIcon = "BIGCOMMERCE"
	PlatformTypeSearchFilterElementDtoIconBIGEYE                    PlatformTypeSearchFilterElementDtoIcon = "BIGEYE"
	PlatformTypeSearchFilterElementDtoIconBIGQUERY                  PlatformTypeSearchFilterElementDtoIcon = "BIGQUERY"
	PlatformTypeSearchFilterElementDtoIconBILLINGPLATFORM           PlatformTypeSearchFilterElementDtoIcon = "BILLINGPLATFORM"
	PlatformTypeSearchFilterElementDtoIconBIRDEYE                   PlatformTypeSearchFilterElementDtoIcon = "BIRDEYE"
	PlatformTypeSearchFilterElementDtoIconBLACKBOARD                PlatformTypeSearchFilterElementDtoIcon = "BLACKBOARD"
	PlatformTypeSearchFilterElementDtoIconBOX                       PlatformTypeSearchFilterElementDtoIcon = "BOX"
	PlatformTypeSearchFilterElementDtoIconBRAINTREE                 PlatformTypeSearchFilterElementDtoIcon = "BRAINTREE"
	PlatformTypeSearchFilterElementDtoIconBRAZE                     PlatformTypeSearchFilterElementDtoIcon = "BRAZE"
	PlatformTypeSearchFilterElementDtoIconBREVO                     PlatformTypeSearchFilterElementDtoIcon = "BREVO"
	PlatformTypeSearchFilterElementDtoIconBREX                      PlatformTypeSearchFilterElementDtoIcon = "BREX"
	PlatformTypeSearchFilterElementDtoIconBUILDKITE                 PlatformTypeSearchFilterElementDtoIcon = "BUILDKITE"
	PlatformTypeSearchFilterElementDtoIconBUZZSPROUT                PlatformTypeSearchFilterElementDtoIcon = "BUZZSPROUT"
	PlatformTypeSearchFilterElementDtoIconCALENDLY                  PlatformTypeSearchFilterElementDtoIcon = "CALENDLY"
	PlatformTypeSearchFilterElementDtoIconCAMPAIGNMONITOR           PlatformTypeSearchFilterElementDtoIcon = "CAMPAIGN_MONITOR"
	PlatformTypeSearchFilterElementDtoIconCANNY                     PlatformTypeSearchFilterElementDtoIcon = "CANNY"
	PlatformTypeSearchFilterElementDtoIconCANVAS                    PlatformTypeSearchFilterElementDtoIcon = "CANVAS"
	PlatformTypeSearchFilterElementDtoIconCAPTERRA                  PlatformTypeSearchFilterElementDtoIcon = "CAPTERRA"
	PlatformTypeSearchFilterElementDtoIconCASTORDOC                 PlatformTypeSearchFilterElementDtoIcon = "CASTOR_DOC"
	PlatformTypeSearchFilterElementDtoIconCENSUS                    PlatformTypeSearchFilterElementDtoIcon = "CENSUS"
	PlatformTypeSearchFilterElementDtoIconCERTINIA                  PlatformTypeSearchFilterElementDtoIcon = "CERTINIA"
	PlatformTypeSearchFilterElementDtoIconCHAMELEON                 PlatformTypeSearchFilterElementDtoIcon = "CHAMELEON"
	PlatformTypeSearchFilterElementDtoIconCHANNELADVISOR            PlatformTypeSearchFilterElementDtoIcon = "CHANNEL_ADVISOR"
	PlatformTypeSearchFilterElementDtoIconCHARGEBEE                 PlatformTypeSearchFilterElementDtoIcon = "CHARGEBEE"
	PlatformTypeSearchFilterElementDtoIconCHARGEDESK                PlatformTypeSearchFilterElementDtoIcon = "CHARGEDESK"
	PlatformTypeSearchFilterElementDtoIconCHARTMOGUL                PlatformTypeSearchFilterElementDtoIcon = "CHARTMOGUL"
	PlatformTypeSearchFilterElementDtoIconCHORUSAI                  PlatformTypeSearchFilterElementDtoIcon = "CHORUS_AI"
	PlatformTypeSearchFilterElementDtoIconCHURNKEY                  PlatformTypeSearchFilterElementDtoIcon = "CHURNKEY"
	PlatformTypeSearchFilterElementDtoIconCHURNZERO                 PlatformTypeSearchFilterElementDtoIcon = "CHURNZERO"
	PlatformTypeSearchFilterElementDtoIconCIMIS                     PlatformTypeSearchFilterElementDtoIcon = "CIMIS"
	PlatformTypeSearchFilterElementDtoIconCIN7                      PlatformTypeSearchFilterElementDtoIcon = "CIN7"
	PlatformTypeSearchFilterElementDtoIconCIRCLECI                  PlatformTypeSearchFilterElementDtoIcon = "CIRCLE_CI"
	PlatformTypeSearchFilterElementDtoIconCLARI                     PlatformTypeSearchFilterElementDtoIcon = "CLARI"
	PlatformTypeSearchFilterElementDtoIconCLICKUP                   PlatformTypeSearchFilterElementDtoIcon = "CLICKUP"
	PlatformTypeSearchFilterElementDtoIconCLIFFAI                   PlatformTypeSearchFilterElementDtoIcon = "CLIFF_AI"
	PlatformTypeSearchFilterElementDtoIconCLOSE                     PlatformTypeSearchFilterElementDtoIcon = "CLOSE"
	PlatformTypeSearchFilterElementDtoIconCOLLIBRA                  PlatformTypeSearchFilterElementDtoIcon = "COLLIBRA"
	PlatformTypeSearchFilterElementDtoIconCOMMERCETOOLS             PlatformTypeSearchFilterElementDtoIcon = "COMMERCETOOLS"
	PlatformTypeSearchFilterElementDtoIconCOMPOSER                  PlatformTypeSearchFilterElementDtoIcon = "COMPOSER"
	PlatformTypeSearchFilterElementDtoIconCONFLUENTCLOUD            PlatformTypeSearchFilterElementDtoIcon = "CONFLUENT_CLOUD"
	PlatformTypeSearchFilterElementDtoIconCONTRASTSECURITY          PlatformTypeSearchFilterElementDtoIcon = "CONTRAST_SECURITY"
	PlatformTypeSearchFilterElementDtoIconCOUPA                     PlatformTypeSearchFilterElementDtoIcon = "COUPA"
	PlatformTypeSearchFilterElementDtoIconCRITEO                    PlatformTypeSearchFilterElementDtoIcon = "CRITEO"
	PlatformTypeSearchFilterElementDtoIconCROSSBEAM                 PlatformTypeSearchFilterElementDtoIcon = "CROSSBEAM"
	PlatformTypeSearchFilterElementDtoIconCRUNCHBASE                PlatformTypeSearchFilterElementDtoIcon = "CRUNCHBASE"
	PlatformTypeSearchFilterElementDtoIconCUSTOMERIO                PlatformTypeSearchFilterElementDtoIcon = "CUSTOMER_IO"
	PlatformTypeSearchFilterElementDtoIconD2LBRIGHTSPACE            PlatformTypeSearchFilterElementDtoIcon = "D2L_BRIGHTSPACE"
	PlatformTypeSearchFilterElementDtoIconDAGSTER                   PlatformTypeSearchFilterElementDtoIcon = "DAGSTER"
	PlatformTypeSearchFilterElementDtoIconDATABAND                  PlatformTypeSearchFilterElementDtoIcon = "DATABAND"
	PlatformTypeSearchFilterElementDtoIconDATABRICKS                PlatformTypeSearchFilterElementDtoIcon = "DATABRICKS"
	PlatformTypeSearchFilterElementDtoIconDATADOG                   PlatformTypeSearchFilterElementDtoIcon = "DATADOG"
	PlatformTypeSearchFilterElementDtoIconDATAEDO                   PlatformTypeSearchFilterElementDtoIcon = "DATAEDO"
	PlatformTypeSearchFilterElementDtoIconDATAFOLD                  PlatformTypeSearchFilterElementDtoIcon = "DATAFOLD"
	PlatformTypeSearchFilterElementDtoIconDATAGALAXY                PlatformTypeSearchFilterElementDtoIcon = "DATAGALAXY"
	PlatformTypeSearchFilterElementDtoIconDATAHUB                   PlatformTypeSearchFilterElementDtoIcon = "DATAHUB"
	PlatformTypeSearchFilterElementDtoIconDATAIKU                   PlatformTypeSearchFilterElementDtoIcon = "DATAIKU"
	PlatformTypeSearchFilterElementDtoIconDATAWORLD                 PlatformTypeSearchFilterElementDtoIcon = "DATA_WORLD"
	PlatformTypeSearchFilterElementDtoIconDB2                       PlatformTypeSearchFilterElementDtoIcon = "DB2"
	PlatformTypeSearchFilterElementDtoIconDBT                       PlatformTypeSearchFilterElementDtoIcon = "DBT"
	PlatformTypeSearchFilterElementDtoIconDBTCLOUD                  PlatformTypeSearchFilterElementDtoIcon = "DBTCLOUD"
	PlatformTypeSearchFilterElementDtoIconDCLLOGISTICS              PlatformTypeSearchFilterElementDtoIcon = "DCL_LOGISTICS"
	PlatformTypeSearchFilterElementDtoIconDEAR                      PlatformTypeSearchFilterElementDtoIcon = "DEAR"
	PlatformTypeSearchFilterElementDtoIconDECUBE                    PlatformTypeSearchFilterElementDtoIcon = "DECUBE"
	PlatformTypeSearchFilterElementDtoIconDELIGHTED                 PlatformTypeSearchFilterElementDtoIcon = "DELIGHTED"
	PlatformTypeSearchFilterElementDtoIconDEPUTY                    PlatformTypeSearchFilterElementDtoIcon = "DEPUTY"
	PlatformTypeSearchFilterElementDtoIconDESTINI                   PlatformTypeSearchFilterElementDtoIcon = "DESTINI"
	PlatformTypeSearchFilterElementDtoIconDIXA                      PlatformTypeSearchFilterElementDtoIcon = "DIXA"
	PlatformTypeSearchFilterElementDtoIconDOCEBO                    PlatformTypeSearchFilterElementDtoIcon = "DOCEBO"
	PlatformTypeSearchFilterElementDtoIconDRATA                     PlatformTypeSearchFilterElementDtoIcon = "DRATA"
	PlatformTypeSearchFilterElementDtoIconDRIFT                     PlatformTypeSearchFilterElementDtoIcon = "DRIFT"
	PlatformTypeSearchFilterElementDtoIconDRIP                      PlatformTypeSearchFilterElementDtoIcon = "DRIP"
	PlatformTypeSearchFilterElementDtoIconDROPBOX                   PlatformTypeSearchFilterElementDtoIcon = "DROPBOX"
	PlatformTypeSearchFilterElementDtoIconDUOPLANE                  PlatformTypeSearchFilterElementDtoIcon = "DUOPLANE"
	PlatformTypeSearchFilterElementDtoIconEASYPOST                  PlatformTypeSearchFilterElementDtoIcon = "EASY_POST"
	PlatformTypeSearchFilterElementDtoIconECONOMIC                  PlatformTypeSearchFilterElementDtoIcon = "E_CONOMIC"
	PlatformTypeSearchFilterElementDtoIconELASTICSEARCH             PlatformTypeSearchFilterElementDtoIcon = "ELASTICSEARCH"
	PlatformTypeSearchFilterElementDtoIconELEMENTARY                PlatformTypeSearchFilterElementDtoIcon = "ELEMENTARY"
	PlatformTypeSearchFilterElementDtoIconELLUCIAN                  PlatformTypeSearchFilterElementDtoIcon = "ELLUCIAN"
	PlatformTypeSearchFilterElementDtoIconELOQUA                    PlatformTypeSearchFilterElementDtoIcon = "ELOQUA"
	PlatformTypeSearchFilterElementDtoIconEMAIL                     PlatformTypeSearchFilterElementDtoIcon = "EMAIL"
	PlatformTypeSearchFilterElementDtoIconEMPLOYMENTHERO            PlatformTypeSearchFilterElementDtoIcon = "EMPLOYMENT_HERO"
	PlatformTypeSearchFilterElementDtoIconEPICORPROPHET21           PlatformTypeSearchFilterElementDtoIcon = "EPICOR_PROPHET_21"
	PlatformTypeSearchFilterElementDtoIconEVENTBRITE                PlatformTypeSearchFilterElementDtoIcon = "EVENTBRITE"
	PlatformTypeSearchFilterElementDtoIconEVERHOUR                  PlatformTypeSearchFilterElementDtoIcon = "EVERHOUR"
	PlatformTypeSearchFilterElementDtoIconEXCEL                     PlatformTypeSearchFilterElementDtoIcon = "EXCEL"
	PlatformTypeSearchFilterElementDtoIconEXPENSIFY                 PlatformTypeSearchFilterElementDtoIcon = "EXPENSIFY"
	PlatformTypeSearchFilterElementDtoIconFACEBOOK                  PlatformTypeSearchFilterElementDtoIcon = "FACEBOOK"
	PlatformTypeSearchFilterElementDtoIconFIFTEENFIVE               PlatformTypeSearchFilterElementDtoIcon = "FIFTEENFIVE"
	PlatformTypeSearchFilterElementDtoIconFIGMA                     PlatformTypeSearchFilterElementDtoIcon = "FIGMA"
	PlatformTypeSearchFilterElementDtoIconFIREBASE                  PlatformTypeSearchFilterElementDtoIcon = "FIREBASE"
	PlatformTypeSearchFilterElementDtoIconFIREBOLT                  PlatformTypeSearchFilterElementDtoIcon = "FIREBOLT"
	PlatformTypeSearchFilterElementDtoIconFIVETRAN                  PlatformTypeSearchFilterElementDtoIcon = "FIVETRAN"
	PlatformTypeSearchFilterElementDtoIconFLEXPORT                  PlatformTypeSearchFilterElementDtoIcon = "FLEXPORT"
	PlatformTypeSearchFilterElementDtoIconFORJ                      PlatformTypeSearchFilterElementDtoIcon = "FORJ"
	PlatformTypeSearchFilterElementDtoIconFOUNTAIN                  PlatformTypeSearchFilterElementDtoIcon = "FOUNTAIN"
	PlatformTypeSearchFilterElementDtoIconFREIGHTVIEW               PlatformTypeSearchFilterElementDtoIcon = "FREIGHTVIEW"
	PlatformTypeSearchFilterElementDtoIconFRESHBOOKS                PlatformTypeSearchFilterElementDtoIcon = "FRESHBOOKS"
	PlatformTypeSearchFilterElementDtoIconFRESHCHAT                 PlatformTypeSearchFilterElementDtoIcon = "FRESHCHAT"
	PlatformTypeSearchFilterElementDtoIconFRESHDESK                 PlatformTypeSearchFilterElementDtoIcon = "FRESHDESK"
	PlatformTypeSearchFilterElementDtoIconFRESHDESKCONTACTCENTER    PlatformTypeSearchFilterElementDtoIcon = "FRESHDESK_CONTACT_CENTER"
	PlatformTypeSearchFilterElementDtoIconFRESHSERVICE              PlatformTypeSearchFilterElementDtoIcon = "FRESHSERVICE"
	PlatformTypeSearchFilterElementDtoIconFRESHSUCCESS              PlatformTypeSearchFilterElementDtoIcon = "FRESHSUCCESS"
	PlatformTypeSearchFilterElementDtoIconFRESHTEAM                 PlatformTypeSearchFilterElementDtoIcon = "FRESHTEAM"
	PlatformTypeSearchFilterElementDtoIconFRIENDBUY                 PlatformTypeSearchFilterElementDtoIcon = "FRIENDBUY"
	PlatformTypeSearchFilterElementDtoIconFRONT                     PlatformTypeSearchFilterElementDtoIcon = "FRONT"
	PlatformTypeSearchFilterElementDtoIconFTP                       PlatformTypeSearchFilterElementDtoIcon = "FTP"
	PlatformTypeSearchFilterElementDtoIconFULLSTORY                 PlatformTypeSearchFilterElementDtoIcon = "FULLSTORY"
	PlatformTypeSearchFilterElementDtoIconG2                        PlatformTypeSearchFilterElementDtoIcon = "G2"
	PlatformTypeSearchFilterElementDtoIconGAINSIGHT                 PlatformTypeSearchFilterElementDtoIcon = "GAINSIGHT"
	PlatformTypeSearchFilterElementDtoIconGEM                       PlatformTypeSearchFilterElementDtoIcon = "GEM"
	PlatformTypeSearchFilterElementDtoIconGIT                       PlatformTypeSearchFilterElementDtoIcon = "GIT"
	PlatformTypeSearchFilterElementDtoIconGITHUB                    PlatformTypeSearchFilterElementDtoIcon = "GITHUB"
	PlatformTypeSearchFilterElementDtoIconGITLAB                    PlatformTypeSearchFilterElementDtoIcon = "GITLAB"
	PlatformTypeSearchFilterElementDtoIconGLADLY                    PlatformTypeSearchFilterElementDtoIcon = "GLADLY"
	PlatformTypeSearchFilterElementDtoIconGOCARDLESS                PlatformTypeSearchFilterElementDtoIcon = "GOCARDLESS"
	PlatformTypeSearchFilterElementDtoIconGONG                      PlatformTypeSearchFilterElementDtoIcon = "GONG"
	PlatformTypeSearchFilterElementDtoIconGOOGLE                    PlatformTypeSearchFilterElementDtoIcon = "GOOGLE"
	PlatformTypeSearchFilterElementDtoIconGOOGLEADMANAGER           PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_AD_MANAGER"
	PlatformTypeSearchFilterElementDtoIconGOOGLEADS                 PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_ADS"
	PlatformTypeSearchFilterElementDtoIconGOOGLEANALYTICS           PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_ANALYTICS"
	PlatformTypeSearchFilterElementDtoIconGOOGLECALENDAR            PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_CALENDAR"
	PlatformTypeSearchFilterElementDtoIconGOOGLECAMPAIGNMANAGER     PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_CAMPAIGN_MANAGER"
	PlatformTypeSearchFilterElementDtoIconGOOGLECHROME              PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_CHROME"
	PlatformTypeSearchFilterElementDtoIconGOOGLECLOUD               PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_CLOUD"
	PlatformTypeSearchFilterElementDtoIconGOOGLECLOUDSTORAGE        PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_CLOUD_STORAGE"
	PlatformTypeSearchFilterElementDtoIconGOOGLEDISPLAY             PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_DISPLAY"
	PlatformTypeSearchFilterElementDtoIconGOOGLEDRIVE               PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_DRIVE"
	PlatformTypeSearchFilterElementDtoIconGOOGLEPLAY                PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_PLAY"
	PlatformTypeSearchFilterElementDtoIconGOOGLESEARCHADS360        PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_SEARCH_ADS_360"
	PlatformTypeSearchFilterElementDtoIconGOOGLESEARCHCONSOLE       PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_SEARCH_CONSOLE"
	PlatformTypeSearchFilterElementDtoIconGOOGLESHEETS              PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_SHEETS"
	PlatformTypeSearchFilterElementDtoIconGOOGLETASKS               PlatformTypeSearchFilterElementDtoIcon = "GOOGLE_TASKS"
	PlatformTypeSearchFilterElementDtoIconGORGIAS                   PlatformTypeSearchFilterElementDtoIcon = "GORGIAS"
	PlatformTypeSearchFilterElementDtoIconGREENHOUSE                PlatformTypeSearchFilterElementDtoIcon = "GREENHOUSE"
	PlatformTypeSearchFilterElementDtoIconGREENPLUM                 PlatformTypeSearchFilterElementDtoIcon = "GREENPLUM"
	PlatformTypeSearchFilterElementDtoIconGREENPOWERMONITOR         PlatformTypeSearchFilterElementDtoIcon = "GREEN_POWER_MONITOR"
	PlatformTypeSearchFilterElementDtoIconGREPSR                    PlatformTypeSearchFilterElementDtoIcon = "GREPSR"
	PlatformTypeSearchFilterElementDtoIconGRIN                      PlatformTypeSearchFilterElementDtoIcon = "GRIN"
	PlatformTypeSearchFilterElementDtoIconGURU                      PlatformTypeSearchFilterElementDtoIcon = "GURU"
	PlatformTypeSearchFilterElementDtoIconH2                        PlatformTypeSearchFilterElementDtoIcon = "H2"
	PlatformTypeSearchFilterElementDtoIconHARVEST                   PlatformTypeSearchFilterElementDtoIcon = "HARVEST"
	PlatformTypeSearchFilterElementDtoIconHDFS                      PlatformTypeSearchFilterElementDtoIcon = "HDFS"
	PlatformTypeSearchFilterElementDtoIconHDFSSTORAGE               PlatformTypeSearchFilterElementDtoIcon = "HDFS_STORAGE"
	PlatformTypeSearchFilterElementDtoIconHEAP                      PlatformTypeSearchFilterElementDtoIcon = "HEAP"
	PlatformTypeSearchFilterElementDtoIconHEIGHT                    PlatformTypeSearchFilterElementDtoIcon = "HEIGHT"
	PlatformTypeSearchFilterElementDtoIconHELPSCOUT                 PlatformTypeSearchFilterElementDtoIcon = "HELP_SCOUT"
	PlatformTypeSearchFilterElementDtoIconHELPSHIFT                 PlatformTypeSearchFilterElementDtoIcon = "HELPSHIFT"
	PlatformTypeSearchFilterElementDtoIconHEROKUKAFKA               PlatformTypeSearchFilterElementDtoIcon = "HEROKU_KAFKA"
	PlatformTypeSearchFilterElementDtoIconHIBOB                     PlatformTypeSearchFilterElementDtoIcon = "HIBOB"
	PlatformTypeSearchFilterElementDtoIconHIGHTOUCH                 PlatformTypeSearchFilterElementDtoIcon = "HIGH_TOUCH"
	PlatformTypeSearchFilterElementDtoIconHIVE                      PlatformTypeSearchFilterElementDtoIcon = "HIVE"
	PlatformTypeSearchFilterElementDtoIconHIVEPROCESS               PlatformTypeSearchFilterElementDtoIcon = "HIVE_PROCESS"
	PlatformTypeSearchFilterElementDtoIconHOPIN                     PlatformTypeSearchFilterElementDtoIcon = "HOPIN"
	PlatformTypeSearchFilterElementDtoIconHUBSPOT                   PlatformTypeSearchFilterElementDtoIcon = "HUBSPOT"
	PlatformTypeSearchFilterElementDtoIconIMPACT                    PlatformTypeSearchFilterElementDtoIcon = "IMPACT"
	PlatformTypeSearchFilterElementDtoIconINCIDENTIO                PlatformTypeSearchFilterElementDtoIcon = "INCIDENT_IO"
	PlatformTypeSearchFilterElementDtoIconINFOBIP                   PlatformTypeSearchFilterElementDtoIcon = "INFOBIP"
	PlatformTypeSearchFilterElementDtoIconINFORMATICA               PlatformTypeSearchFilterElementDtoIcon = "INFORMATICA"
	PlatformTypeSearchFilterElementDtoIconINSIGHTLY                 PlatformTypeSearchFilterElementDtoIcon = "INSIGHTLY"
	PlatformTypeSearchFilterElementDtoIconINSTAGRAM                 PlatformTypeSearchFilterElementDtoIcon = "INSTAGRAM"
	PlatformTypeSearchFilterElementDtoIconINTERCOM                  PlatformTypeSearchFilterElementDtoIcon = "INTERCOM"
	PlatformTypeSearchFilterElementDtoIconINVESTOPEDIA              PlatformTypeSearchFilterElementDtoIcon = "INVESTOPEDIA"
	PlatformTypeSearchFilterElementDtoIconIRONCLAD                  PlatformTypeSearchFilterElementDtoIcon = "IRONCLAD"
	PlatformTypeSearchFilterElementDtoIconIRONSOURCE                PlatformTypeSearchFilterElementDtoIcon = "IRONSOURCE"
	PlatformTypeSearchFilterElementDtoIconITERABLE                  PlatformTypeSearchFilterElementDtoIcon = "ITERABLE"
	PlatformTypeSearchFilterElementDtoIconJAVA                      PlatformTypeSearchFilterElementDtoIcon = "JAVA"
	PlatformTypeSearchFilterElementDtoIconJENKINS                   PlatformTypeSearchFilterElementDtoIcon = "JENKINS"
	PlatformTypeSearchFilterElementDtoIconJUSTCALL                  PlatformTypeSearchFilterElementDtoIcon = "JUSTCALL"
	PlatformTypeSearchFilterElementDtoIconKANDJI                    PlatformTypeSearchFilterElementDtoIcon = "KANDJI"
	PlatformTypeSearchFilterElementDtoIconKENSU                     PlatformTypeSearchFilterElementDtoIcon = "KENSU"
	PlatformTypeSearchFilterElementDtoIconKHOROSCARE                PlatformTypeSearchFilterElementDtoIcon = "KHOROS_CARE"
	PlatformTypeSearchFilterElementDtoIconKISSMETRICS               PlatformTypeSearchFilterElementDtoIcon = "KISSMETRICS"
	PlatformTypeSearchFilterElementDtoIconKLAVIYO                   PlatformTypeSearchFilterElementDtoIcon = "KLAVIYO"
	PlatformTypeSearchFilterElementDtoIconKNOWBE4                   PlatformTypeSearchFilterElementDtoIcon = "KNOWBE4"
	PlatformTypeSearchFilterElementDtoIconKONNECTINSIGHTS           PlatformTypeSearchFilterElementDtoIcon = "KONNECT_INSIGHTS"
	PlatformTypeSearchFilterElementDtoIconKUSTOMER                  PlatformTypeSearchFilterElementDtoIcon = "KUSTOMER"
	PlatformTypeSearchFilterElementDtoIconLARIATDATA                PlatformTypeSearchFilterElementDtoIcon = "LARIAT_DATA"
	PlatformTypeSearchFilterElementDtoIconLATTICE                   PlatformTypeSearchFilterElementDtoIcon = "LATTICE"
	PlatformTypeSearchFilterElementDtoIconLAUNCHDARKLY              PlatformTypeSearchFilterElementDtoIcon = "LAUNCH_DARKLY"
	PlatformTypeSearchFilterElementDtoIconLEARNUPON                 PlatformTypeSearchFilterElementDtoIcon = "LEARN_UPON"
	PlatformTypeSearchFilterElementDtoIconLESSONLY                  PlatformTypeSearchFilterElementDtoIcon = "LESSONLY"
	PlatformTypeSearchFilterElementDtoIconLEVER                     PlatformTypeSearchFilterElementDtoIcon = "LEVER"
	PlatformTypeSearchFilterElementDtoIconLIFTOFF                   PlatformTypeSearchFilterElementDtoIcon = "LIFTOFF"
	PlatformTypeSearchFilterElementDtoIconLIGHTDASH                 PlatformTypeSearchFilterElementDtoIcon = "LIGHTDASH"
	PlatformTypeSearchFilterElementDtoIconLIGHTSPEED                PlatformTypeSearchFilterElementDtoIcon = "LIGHTSPEED"
	PlatformTypeSearchFilterElementDtoIconLIGHTSUP                  PlatformTypeSearchFilterElementDtoIcon = "LIGHTSUP"
	PlatformTypeSearchFilterElementDtoIconLINEAR                    PlatformTypeSearchFilterElementDtoIcon = "LINEAR"
	PlatformTypeSearchFilterElementDtoIconLINKEDIN                  PlatformTypeSearchFilterElementDtoIcon = "LINKEDIN"
	PlatformTypeSearchFilterElementDtoIconLIVECHAT                  PlatformTypeSearchFilterElementDtoIcon = "LIVECHAT"
	PlatformTypeSearchFilterElementDtoIconLOADEDCOMMERCE            PlatformTypeSearchFilterElementDtoIcon = "LOADED_COMMERCE"
	PlatformTypeSearchFilterElementDtoIconLOB                       PlatformTypeSearchFilterElementDtoIcon = "LOB"
	PlatformTypeSearchFilterElementDtoIconLOOKER                    PlatformTypeSearchFilterElementDtoIcon = "LOOKER"
	PlatformTypeSearchFilterElementDtoIconLOOP                      PlatformTypeSearchFilterElementDtoIcon = "LOOP"
	PlatformTypeSearchFilterElementDtoIconLOOPIO                    PlatformTypeSearchFilterElementDtoIcon = "LOOPIO"
	PlatformTypeSearchFilterElementDtoIconLUMA                      PlatformTypeSearchFilterElementDtoIcon = "LUMA"
	PlatformTypeSearchFilterElementDtoIconMAGENTO                   PlatformTypeSearchFilterElementDtoIcon = "MAGENTO"
	PlatformTypeSearchFilterElementDtoIconMAILCHIMP                 PlatformTypeSearchFilterElementDtoIcon = "MAILCHIMP"
	PlatformTypeSearchFilterElementDtoIconMAILGUN                   PlatformTypeSearchFilterElementDtoIcon = "MAILGUN"
	PlatformTypeSearchFilterElementDtoIconMANDRILL                  PlatformTypeSearchFilterElementDtoIcon = "MANDRILL"
	PlatformTypeSearchFilterElementDtoIconMANTA                     PlatformTypeSearchFilterElementDtoIcon = "MANTA"
	PlatformTypeSearchFilterElementDtoIconMARIADB                   PlatformTypeSearchFilterElementDtoIcon = "MARIADB"
	PlatformTypeSearchFilterElementDtoIconMARINSOFTWARE             PlatformTypeSearchFilterElementDtoIcon = "MARIN_SOFTWARE"
	PlatformTypeSearchFilterElementDtoIconMARKETO                   PlatformTypeSearchFilterElementDtoIcon = "MARKETO"
	PlatformTypeSearchFilterElementDtoIconMATTERMOST                PlatformTypeSearchFilterElementDtoIcon = "MATTERMOST"
	PlatformTypeSearchFilterElementDtoIconMAVENLINK                 PlatformTypeSearchFilterElementDtoIcon = "MAVENLINK"
	PlatformTypeSearchFilterElementDtoIconMAXIO                     PlatformTypeSearchFilterElementDtoIcon = "MAXIO"
	PlatformTypeSearchFilterElementDtoIconMEDALLIA                  PlatformTypeSearchFilterElementDtoIcon = "MEDALLIA"
	PlatformTypeSearchFilterElementDtoIconMETA                      PlatformTypeSearchFilterElementDtoIcon = "META"
	PlatformTypeSearchFilterElementDtoIconMETABASE                  PlatformTypeSearchFilterElementDtoIcon = "METABASE"
	PlatformTypeSearchFilterElementDtoIconMETAPHOR                  PlatformTypeSearchFilterElementDtoIcon = "METAPHOR"
	PlatformTypeSearchFilterElementDtoIconMETAPLANE                 PlatformTypeSearchFilterElementDtoIcon = "METAPLANE"
	PlatformTypeSearchFilterElementDtoIconMICROSOFT                 PlatformTypeSearchFilterElementDtoIcon = "MICROSOFT"
	PlatformTypeSearchFilterElementDtoIconMICROSOFTAZUREBLOBSTORAGE PlatformTypeSearchFilterElementDtoIcon = "MICROSOFT_AZURE_BLOB_STORAGE"
	PlatformTypeSearchFilterElementDtoIconMICROSOFTAZUREML          PlatformTypeSearchFilterElementDtoIcon = "MICROSOFT_AZURE_ML"
	PlatformTypeSearchFilterElementDtoIconMICROSOFTDYNAMICS         PlatformTypeSearchFilterElementDtoIcon = "MICROSOFT_DYNAMICS"
	PlatformTypeSearchFilterElementDtoIconMICROSOFTONEDRIVE         PlatformTypeSearchFilterElementDtoIcon = "MICROSOFT_ONEDRIVE"
	PlatformTypeSearchFilterElementDtoIconMICROSOFTPURVIEW          PlatformTypeSearchFilterElementDtoIcon = "MICROSOFT_PURVIEW"
	PlatformTypeSearchFilterElementDtoIconMICROSOFTTEAMS            PlatformTypeSearchFilterElementDtoIcon = "MICROSOFT_TEAMS"
	PlatformTypeSearchFilterElementDtoIconMICROSTRATEGY             PlatformTypeSearchFilterElementDtoIcon = "MICROSTRATEGY"
	PlatformTypeSearchFilterElementDtoIconMIXMAX                    PlatformTypeSearchFilterElementDtoIcon = "MIXMAX"
	PlatformTypeSearchFilterElementDtoIconMIXPANEL                  PlatformTypeSearchFilterElementDtoIcon = "MIXPANEL"
	PlatformTypeSearchFilterElementDtoIconMONDAYCOM                 PlatformTypeSearchFilterElementDtoIcon = "MONDAY_COM"
	PlatformTypeSearchFilterElementDtoIconMONGODB                   PlatformTypeSearchFilterElementDtoIcon = "MONGODB"
	PlatformTypeSearchFilterElementDtoIconMONTECARLO                PlatformTypeSearchFilterElementDtoIcon = "MONTE_CARLO"
	PlatformTypeSearchFilterElementDtoIconMOUNTAIN                  PlatformTypeSearchFilterElementDtoIcon = "MOUNTAIN"
	PlatformTypeSearchFilterElementDtoIconMSSQL                     PlatformTypeSearchFilterElementDtoIcon = "MSSQL"
	PlatformTypeSearchFilterElementDtoIconMULESOFT                  PlatformTypeSearchFilterElementDtoIcon = "MULESOFT"
	PlatformTypeSearchFilterElementDtoIconMUX                       PlatformTypeSearchFilterElementDtoIcon = "MUX"
	PlatformTypeSearchFilterElementDtoIconMWAA                      PlatformTypeSearchFilterElementDtoIcon = "MWAA"
	PlatformTypeSearchFilterElementDtoIconMYSQL                     PlatformTypeSearchFilterElementDtoIcon = "MYSQL"
	PlatformTypeSearchFilterElementDtoIconNAMELY                    PlatformTypeSearchFilterElementDtoIcon = "NAMELY"
	PlatformTypeSearchFilterElementDtoIconNCINO                     PlatformTypeSearchFilterElementDtoIcon = "NCINO"
	PlatformTypeSearchFilterElementDtoIconNETSUITEANALYTICS         PlatformTypeSearchFilterElementDtoIcon = "NETSUITE_ANALYTICS"
	PlatformTypeSearchFilterElementDtoIconNEWRELIC                  PlatformTypeSearchFilterElementDtoIcon = "NEW_RELIC"
	PlatformTypeSearchFilterElementDtoIconNOTION                    PlatformTypeSearchFilterElementDtoIcon = "NOTION"
	PlatformTypeSearchFilterElementDtoIconNYLAS                     PlatformTypeSearchFilterElementDtoIcon = "NYLAS"
	PlatformTypeSearchFilterElementDtoIconOBSERVE                   PlatformTypeSearchFilterElementDtoIcon = "OBSERVE"
	PlatformTypeSearchFilterElementDtoIconOCTOPAI                   PlatformTypeSearchFilterElementDtoIcon = "OCTOPAI"
	PlatformTypeSearchFilterElementDtoIconOKTA                      PlatformTypeSearchFilterElementDtoIcon = "OKTA"
	PlatformTypeSearchFilterElementDtoIconOPENAI                    PlatformTypeSearchFilterElementDtoIcon = "OPEN_AI"
	PlatformTypeSearchFilterElementDtoIconOPENDATADC                PlatformTypeSearchFilterElementDtoIcon = "OPEN_DATA_DC"
	PlatformTypeSearchFilterElementDtoIconOPENEXCHANGESRATES        PlatformTypeSearchFilterElementDtoIcon = "OPEN_EXCHANGES_RATES"
	PlatformTypeSearchFilterElementDtoIconOPENSEARCH                PlatformTypeSearchFilterElementDtoIcon = "OPEN_SEARCH"
	PlatformTypeSearchFilterElementDtoIconOPTIMIZELY                PlatformTypeSearchFilterElementDtoIcon = "OPTIMIZELY"
	PlatformTypeSearchFilterElementDtoIconORACLE                    PlatformTypeSearchFilterElementDtoIcon = "ORACLE"
	PlatformTypeSearchFilterElementDtoIconORBITCOMMUNITYPLATFORM    PlatformTypeSearchFilterElementDtoIcon = "ORBIT_COMMUNITY_PLATFORM"
	PlatformTypeSearchFilterElementDtoIconORDWAY                    PlatformTypeSearchFilterElementDtoIcon = "ORDWAY"
	PlatformTypeSearchFilterElementDtoIconORTTO                     PlatformTypeSearchFilterElementDtoIcon = "ORTTO"
	PlatformTypeSearchFilterElementDtoIconOSCOMMERCE                PlatformTypeSearchFilterElementDtoIcon = "OS_COMMERCE"
	PlatformTypeSearchFilterElementDtoIconOUTBRAIN                  PlatformTypeSearchFilterElementDtoIcon = "OUTBRAIN"
	PlatformTypeSearchFilterElementDtoIconOUTREACH                  PlatformTypeSearchFilterElementDtoIcon = "OUTREACH"
	PlatformTypeSearchFilterElementDtoIconOVALEDGE                  PlatformTypeSearchFilterElementDtoIcon = "OVALEDGE"
	PlatformTypeSearchFilterElementDtoIconPAGERDUTY                 PlatformTypeSearchFilterElementDtoIcon = "PAGERDUTY"
	PlatformTypeSearchFilterElementDtoIconPAGERSHIFT                PlatformTypeSearchFilterElementDtoIcon = "PAGERSHIFT"
	PlatformTypeSearchFilterElementDtoIconPAYPAL                    PlatformTypeSearchFilterElementDtoIcon = "PAYPAL"
	PlatformTypeSearchFilterElementDtoIconPENDO                     PlatformTypeSearchFilterElementDtoIcon = "PENDO"
	PlatformTypeSearchFilterElementDtoIconPINGDOM                   PlatformTypeSearchFilterElementDtoIcon = "PINGDOM"
	PlatformTypeSearchFilterElementDtoIconPINTEREST                 PlatformTypeSearchFilterElementDtoIcon = "PINTEREST"
	PlatformTypeSearchFilterElementDtoIconPIPE17                    PlatformTypeSearchFilterElementDtoIcon = "PIPE17"
	PlatformTypeSearchFilterElementDtoIconPIPEDRIVE                 PlatformTypeSearchFilterElementDtoIcon = "PIPEDRIVE"
	PlatformTypeSearchFilterElementDtoIconPIVOTALTRACKER            PlatformTypeSearchFilterElementDtoIcon = "PIVOTAL_TRACKER"
	PlatformTypeSearchFilterElementDtoIconPLAYVOX                   PlatformTypeSearchFilterElementDtoIcon = "PLAYVOX"
	PlatformTypeSearchFilterElementDtoIconPOSTGRES                  PlatformTypeSearchFilterElementDtoIcon = "POSTGRES"
	PlatformTypeSearchFilterElementDtoIconPOSTHOG                   PlatformTypeSearchFilterElementDtoIcon = "POSTHOG"
	PlatformTypeSearchFilterElementDtoIconPOWERBI                   PlatformTypeSearchFilterElementDtoIcon = "POWER_BI"
	PlatformTypeSearchFilterElementDtoIconPOWERSCHOOL               PlatformTypeSearchFilterElementDtoIcon = "POWERSCHOOL"
	PlatformTypeSearchFilterElementDtoIconPREFECT                   PlatformTypeSearchFilterElementDtoIcon = "PREFECT"
	PlatformTypeSearchFilterElementDtoIconPRESTASHOP                PlatformTypeSearchFilterElementDtoIcon = "PRESTASHOP"
	PlatformTypeSearchFilterElementDtoIconPRESTO                    PlatformTypeSearchFilterElementDtoIcon = "PRESTO"
	PlatformTypeSearchFilterElementDtoIconPRODUCTBOARD              PlatformTypeSearchFilterElementDtoIcon = "PRODUCTBOARD"
	PlatformTypeSearchFilterElementDtoIconPYTHON                    PlatformTypeSearchFilterElementDtoIcon = "PYTHON"
	PlatformTypeSearchFilterElementDtoIconQLIK                      PlatformTypeSearchFilterElementDtoIcon = "QLIK"
	PlatformTypeSearchFilterElementDtoIconQUALAROO                  PlatformTypeSearchFilterElementDtoIcon = "QUALAROO"
	PlatformTypeSearchFilterElementDtoIconQUALTRICS                 PlatformTypeSearchFilterElementDtoIcon = "QUALTRICS"
	PlatformTypeSearchFilterElementDtoIconQUICKBOOKS                PlatformTypeSearchFilterElementDtoIcon = "QUICKBOOKS"
	PlatformTypeSearchFilterElementDtoIconQUICKSIGHT                PlatformTypeSearchFilterElementDtoIcon = "QUICKSIGHT"
	PlatformTypeSearchFilterElementDtoIconRAMP                      PlatformTypeSearchFilterElementDtoIcon = "RAMP"
	PlatformTypeSearchFilterElementDtoIconRARIBLE                   PlatformTypeSearchFilterElementDtoIcon = "RARIBLE"
	PlatformTypeSearchFilterElementDtoIconRECHARGE                  PlatformTypeSearchFilterElementDtoIcon = "RECHARGE"
	PlatformTypeSearchFilterElementDtoIconRECURLY                   PlatformTypeSearchFilterElementDtoIcon = "RECURLY"
	PlatformTypeSearchFilterElementDtoIconREDDIT                    PlatformTypeSearchFilterElementDtoIcon = "REDDIT"
	PlatformTypeSearchFilterElementDtoIconREDSHIFT                  PlatformTypeSearchFilterElementDtoIcon = "REDSHIFT"
	PlatformTypeSearchFilterElementDtoIconRELTIO                    PlatformTypeSearchFilterElementDtoIcon = "RELTIO"
	PlatformTypeSearchFilterElementDtoIconREPLYIO                   PlatformTypeSearchFilterElementDtoIcon = "REPLY_IO"
	PlatformTypeSearchFilterElementDtoIconRETAILNEXT                PlatformTypeSearchFilterElementDtoIcon = "RETAILNEXT"
	PlatformTypeSearchFilterElementDtoIconRETENTLY                  PlatformTypeSearchFilterElementDtoIcon = "RETENTLY"
	PlatformTypeSearchFilterElementDtoIconREVELSYSTEMS              PlatformTypeSearchFilterElementDtoIcon = "REVEL_SYSTEMS"
	PlatformTypeSearchFilterElementDtoIconRINGCENTRAL               PlatformTypeSearchFilterElementDtoIcon = "RINGCENTRAL"
	PlatformTypeSearchFilterElementDtoIconRIPPLING                  PlatformTypeSearchFilterElementDtoIcon = "RIPPLING"
	PlatformTypeSearchFilterElementDtoIconROLLBAR                   PlatformTypeSearchFilterElementDtoIcon = "ROLLBAR"
	PlatformTypeSearchFilterElementDtoIconROOTLY                    PlatformTypeSearchFilterElementDtoIcon = "ROOTLY"
	PlatformTypeSearchFilterElementDtoIconS3                        PlatformTypeSearchFilterElementDtoIcon = "S3"
	PlatformTypeSearchFilterElementDtoIconSAGEHR                    PlatformTypeSearchFilterElementDtoIcon = "SAGE_HR"
	PlatformTypeSearchFilterElementDtoIconSAGEINTACCT               PlatformTypeSearchFilterElementDtoIcon = "SAGE_INTACCT"
	PlatformTypeSearchFilterElementDtoIconSAILTHRU                  PlatformTypeSearchFilterElementDtoIcon = "SAILTHRU"
	PlatformTypeSearchFilterElementDtoIconSALESFORCE                PlatformTypeSearchFilterElementDtoIcon = "SALESFORCE"
	PlatformTypeSearchFilterElementDtoIconSALESLOFT                 PlatformTypeSearchFilterElementDtoIcon = "SALESLOFT"
	PlatformTypeSearchFilterElementDtoIconSALSIFY                   PlatformTypeSearchFilterElementDtoIcon = "SALSIFY"
	PlatformTypeSearchFilterElementDtoIconSAMSARA                   PlatformTypeSearchFilterElementDtoIcon = "SAMSARA"
	PlatformTypeSearchFilterElementDtoIconSAP                       PlatformTypeSearchFilterElementDtoIcon = "SAP"
	PlatformTypeSearchFilterElementDtoIconSAPCONCUR                 PlatformTypeSearchFilterElementDtoIcon = "SAP_CONCUR"
	PlatformTypeSearchFilterElementDtoIconSCORM                     PlatformTypeSearchFilterElementDtoIcon = "SCORM"
	PlatformTypeSearchFilterElementDtoIconSECODA                    PlatformTypeSearchFilterElementDtoIcon = "SECODA"
	PlatformTypeSearchFilterElementDtoIconSECURITYJOURNEY           PlatformTypeSearchFilterElementDtoIcon = "SECURITY_JOURNEY"
	PlatformTypeSearchFilterElementDtoIconSEGMENT                   PlatformTypeSearchFilterElementDtoIcon = "SEGMENT"
	PlatformTypeSearchFilterElementDtoIconSELECTSTAR                PlatformTypeSearchFilterElementDtoIcon = "SELECT_STAR"
	PlatformTypeSearchFilterElementDtoIconSENDGRID                  PlatformTypeSearchFilterElementDtoIcon = "SENDGRID"
	PlatformTypeSearchFilterElementDtoIconSERVICENOW                PlatformTypeSearchFilterElementDtoIcon = "SERVICE_NOW"
	PlatformTypeSearchFilterElementDtoIconSFTP                      PlatformTypeSearchFilterElementDtoIcon = "SFTP"
	PlatformTypeSearchFilterElementDtoIconSHAREPOINT                PlatformTypeSearchFilterElementDtoIcon = "SHAREPOINT"
	PlatformTypeSearchFilterElementDtoIconSHARETRIBE                PlatformTypeSearchFilterElementDtoIcon = "SHARETRIBE"
	PlatformTypeSearchFilterElementDtoIconSHIPHERO                  PlatformTypeSearchFilterElementDtoIcon = "SHIPHERO"
	PlatformTypeSearchFilterElementDtoIconSHIPSTATION               PlatformTypeSearchFilterElementDtoIcon = "SHIPSTATION"
	PlatformTypeSearchFilterElementDtoIconSHOPIFY                   PlatformTypeSearchFilterElementDtoIcon = "SHOPIFY"
	PlatformTypeSearchFilterElementDtoIconSHOPWARE                  PlatformTypeSearchFilterElementDtoIcon = "SHOPWARE"
	PlatformTypeSearchFilterElementDtoIconSHORTIO                   PlatformTypeSearchFilterElementDtoIcon = "SHORT_IO"
	PlatformTypeSearchFilterElementDtoIconSIFFLET                   PlatformTypeSearchFilterElementDtoIcon = "SIFFLET"
	PlatformTypeSearchFilterElementDtoIconSIGMA                     PlatformTypeSearchFilterElementDtoIcon = "SIGMA"
	PlatformTypeSearchFilterElementDtoIconSIMPLECAST                PlatformTypeSearchFilterElementDtoIcon = "SIMPLECAST"
	PlatformTypeSearchFilterElementDtoIconSIMPLESAT                 PlatformTypeSearchFilterElementDtoIcon = "SIMPLESAT"
	PlatformTypeSearchFilterElementDtoIconSINGLESTORE               PlatformTypeSearchFilterElementDtoIcon = "SINGLESTORE"
	PlatformTypeSearchFilterElementDtoIconSISENSE                   PlatformTypeSearchFilterElementDtoIcon = "SISENSE"
	PlatformTypeSearchFilterElementDtoIconSIXSENSE                  PlatformTypeSearchFilterElementDtoIcon = "SIXSENSE"
	PlatformTypeSearchFilterElementDtoIconSKILLJAR                  PlatformTypeSearchFilterElementDtoIcon = "SKILLJAR"
	PlatformTypeSearchFilterElementDtoIconSKUVAULT                  PlatformTypeSearchFilterElementDtoIcon = "SKUVAULT"
	PlatformTypeSearchFilterElementDtoIconSLAB                      PlatformTypeSearchFilterElementDtoIcon = "SLAB"
	PlatformTypeSearchFilterElementDtoIconSLACK                     PlatformTypeSearchFilterElementDtoIcon = "SLACK"
	PlatformTypeSearchFilterElementDtoIconSMADEX                    PlatformTypeSearchFilterElementDtoIcon = "SMADEX"
	PlatformTypeSearchFilterElementDtoIconSNAPCHAT                  PlatformTypeSearchFilterElementDtoIcon = "SNAPCHAT"
	PlatformTypeSearchFilterElementDtoIconSNOWFLAKE                 PlatformTypeSearchFilterElementDtoIcon = "SNOWFLAKE"
	PlatformTypeSearchFilterElementDtoIconSNOWPLOW                  PlatformTypeSearchFilterElementDtoIcon = "SNOWPLOW"
	PlatformTypeSearchFilterElementDtoIconSODA                      PlatformTypeSearchFilterElementDtoIcon = "SODA"
	PlatformTypeSearchFilterElementDtoIconSONARQUBE                 PlatformTypeSearchFilterElementDtoIcon = "SONARQUBE"
	PlatformTypeSearchFilterElementDtoIconSPARKPROCESS              PlatformTypeSearchFilterElementDtoIcon = "SPARK_PROCESS"
	PlatformTypeSearchFilterElementDtoIconSPLITIO                   PlatformTypeSearchFilterElementDtoIcon = "SPLIT_IO"
	PlatformTypeSearchFilterElementDtoIconSPLUNK                    PlatformTypeSearchFilterElementDtoIcon = "SPLUNK"
	PlatformTypeSearchFilterElementDtoIconSPOTIFY                   PlatformTypeSearchFilterElementDtoIcon = "SPOTIFY"
	PlatformTypeSearchFilterElementDtoIconSPREECOMMERCE             PlatformTypeSearchFilterElementDtoIcon = "SPREE_COMMERCE"
	PlatformTypeSearchFilterElementDtoIconSPROUTSOCIAL              PlatformTypeSearchFilterElementDtoIcon = "SPROUT_SOCIAL"
	PlatformTypeSearchFilterElementDtoIconSQUARE                    PlatformTypeSearchFilterElementDtoIcon = "SQUARE"
	PlatformTypeSearchFilterElementDtoIconSQUARESPACE               PlatformTypeSearchFilterElementDtoIcon = "SQUARESPACE"
	PlatformTypeSearchFilterElementDtoIconSTACKADAPT                PlatformTypeSearchFilterElementDtoIcon = "STACK_ADAPT"
	PlatformTypeSearchFilterElementDtoIconSTATSIG                   PlatformTypeSearchFilterElementDtoIcon = "STATSIG"
	PlatformTypeSearchFilterElementDtoIconSTITCH                    PlatformTypeSearchFilterElementDtoIcon = "STITCH"
	PlatformTypeSearchFilterElementDtoIconSTRIPE                    PlatformTypeSearchFilterElementDtoIcon = "STRIPE"
	PlatformTypeSearchFilterElementDtoIconSTYLIGHT                  PlatformTypeSearchFilterElementDtoIcon = "STYLIGHT"
	PlatformTypeSearchFilterElementDtoIconSUBSCRIPT                 PlatformTypeSearchFilterElementDtoIcon = "SUBSCRIPT"
	PlatformTypeSearchFilterElementDtoIconSYNAPSE                   PlatformTypeSearchFilterElementDtoIcon = "SYNAPSE"
	PlatformTypeSearchFilterElementDtoIconTABLEAU                   PlatformTypeSearchFilterElementDtoIcon = "TABLEAU"
	PlatformTypeSearchFilterElementDtoIconTABOOLA                   PlatformTypeSearchFilterElementDtoIcon = "TABOOLA"
	PlatformTypeSearchFilterElementDtoIconTALEND                    PlatformTypeSearchFilterElementDtoIcon = "TALEND"
	PlatformTypeSearchFilterElementDtoIconTALKDESK                  PlatformTypeSearchFilterElementDtoIcon = "TALKDESK"
	PlatformTypeSearchFilterElementDtoIconTALKWALKER                PlatformTypeSearchFilterElementDtoIcon = "TALKWALKER"
	PlatformTypeSearchFilterElementDtoIconTEAMWORKCOM               PlatformTypeSearchFilterElementDtoIcon = "TEAMWORK_COM"
	PlatformTypeSearchFilterElementDtoIconTEMPOIO                   PlatformTypeSearchFilterElementDtoIcon = "TEMPO_IO"
	PlatformTypeSearchFilterElementDtoIconTERADATA                  PlatformTypeSearchFilterElementDtoIcon = "TERADATA"
	PlatformTypeSearchFilterElementDtoIconTERRAFORM                 PlatformTypeSearchFilterElementDtoIcon = "TERRAFORM"
	PlatformTypeSearchFilterElementDtoIconTHETRADEDESK              PlatformTypeSearchFilterElementDtoIcon = "THE_TRADE_DESK"
	PlatformTypeSearchFilterElementDtoIconTHOUGHTSPOT               PlatformTypeSearchFilterElementDtoIcon = "THOUGHT_SPOT"
	PlatformTypeSearchFilterElementDtoIconTHREESIXTYLEARNING        PlatformTypeSearchFilterElementDtoIcon = "THREESIXTYLEARNING"
	PlatformTypeSearchFilterElementDtoIconTIKTOK                    PlatformTypeSearchFilterElementDtoIcon = "TIKTOK"
	PlatformTypeSearchFilterElementDtoIconTOGGL                     PlatformTypeSearchFilterElementDtoIcon = "TOGGL"
	PlatformTypeSearchFilterElementDtoIconTRANSCEND                 PlatformTypeSearchFilterElementDtoIcon = "TRANSCEND"
	PlatformTypeSearchFilterElementDtoIconTRELLO                    PlatformTypeSearchFilterElementDtoIcon = "TRELLO"
	PlatformTypeSearchFilterElementDtoIconTRINET                    PlatformTypeSearchFilterElementDtoIcon = "TRINET"
	PlatformTypeSearchFilterElementDtoIconTRISOLUTE                 PlatformTypeSearchFilterElementDtoIcon = "TRISOLUTE"
	PlatformTypeSearchFilterElementDtoIconTWILIO                    PlatformTypeSearchFilterElementDtoIcon = "TWILIO"
	PlatformTypeSearchFilterElementDtoIconTYPEFORM                  PlatformTypeSearchFilterElementDtoIcon = "TYPEFORM"
	PlatformTypeSearchFilterElementDtoIconUNKNOWN                   PlatformTypeSearchFilterElementDtoIcon = "UNKNOWN"
	PlatformTypeSearchFilterElementDtoIconUPLAND                    PlatformTypeSearchFilterElementDtoIcon = "UPLAND"
	PlatformTypeSearchFilterElementDtoIconUSERVOICE                 PlatformTypeSearchFilterElementDtoIcon = "USERVOICE"
	PlatformTypeSearchFilterElementDtoIconVALIDIO                   PlatformTypeSearchFilterElementDtoIcon = "VALIDIO"
	PlatformTypeSearchFilterElementDtoIconVEEVA                     PlatformTypeSearchFilterElementDtoIcon = "VEEVA"
	PlatformTypeSearchFilterElementDtoIconVERIZONMEDIA              PlatformTypeSearchFilterElementDtoIcon = "VERIZON_MEDIA"
	PlatformTypeSearchFilterElementDtoIconVITALLY                   PlatformTypeSearchFilterElementDtoIcon = "VITALLY"
	PlatformTypeSearchFilterElementDtoIconVONAGE                    PlatformTypeSearchFilterElementDtoIcon = "VONAGE"
	PlatformTypeSearchFilterElementDtoIconVUETIFY                   PlatformTypeSearchFilterElementDtoIcon = "VUETIFY"
	PlatformTypeSearchFilterElementDtoIconWEBHOOKS                  PlatformTypeSearchFilterElementDtoIcon = "WEBHOOKS"
	PlatformTypeSearchFilterElementDtoIconWEBSCRAPER                PlatformTypeSearchFilterElementDtoIcon = "WEB_SCRAPER"
	PlatformTypeSearchFilterElementDtoIconWHENIWORK                 PlatformTypeSearchFilterElementDtoIcon = "WHEN_I_WORK"
	PlatformTypeSearchFilterElementDtoIconWHEREFOUR                 PlatformTypeSearchFilterElementDtoIcon = "WHEREFOUR"
	PlatformTypeSearchFilterElementDtoIconWIKIPEDIA                 PlatformTypeSearchFilterElementDtoIcon = "WIKIPEDIA"
	PlatformTypeSearchFilterElementDtoIconWOOCOMMERCE               PlatformTypeSearchFilterElementDtoIcon = "WOOCOMMERCE"
	PlatformTypeSearchFilterElementDtoIconWORDPRESS                 PlatformTypeSearchFilterElementDtoIcon = "WORDPRESS"
	PlatformTypeSearchFilterElementDtoIconWORKABLE                  PlatformTypeSearchFilterElementDtoIcon = "WORKABLE"
	PlatformTypeSearchFilterElementDtoIconWORKDAY                   PlatformTypeSearchFilterElementDtoIcon = "WORKDAY"
	PlatformTypeSearchFilterElementDtoIconWORKFLOWMAX               PlatformTypeSearchFilterElementDtoIcon = "WORKFLOW_MAX"
	PlatformTypeSearchFilterElementDtoIconWRIKE                     PlatformTypeSearchFilterElementDtoIcon = "WRIKE"
	PlatformTypeSearchFilterElementDtoIconX                         PlatformTypeSearchFilterElementDtoIcon = "X"
	PlatformTypeSearchFilterElementDtoIconXERO                      PlatformTypeSearchFilterElementDtoIcon = "XERO"
	PlatformTypeSearchFilterElementDtoIconXRAY                      PlatformTypeSearchFilterElementDtoIcon = "XRAY"
	PlatformTypeSearchFilterElementDtoIconYAHOO                     PlatformTypeSearchFilterElementDtoIcon = "YAHOO"
	PlatformTypeSearchFilterElementDtoIconYOTPO                     PlatformTypeSearchFilterElementDtoIcon = "YOTPO"
	PlatformTypeSearchFilterElementDtoIconYOUTUBE                   PlatformTypeSearchFilterElementDtoIcon = "YOUTUBE"
	PlatformTypeSearchFilterElementDtoIconZEENEA                    PlatformTypeSearchFilterElementDtoIcon = "ZEENEA"
	PlatformTypeSearchFilterElementDtoIconZENCART                   PlatformTypeSearchFilterElementDtoIcon = "ZEN_CART"
	PlatformTypeSearchFilterElementDtoIconZENDESKCHAT               PlatformTypeSearchFilterElementDtoIcon = "ZENDESK_CHAT"
	PlatformTypeSearchFilterElementDtoIconZENDESKSELL               PlatformTypeSearchFilterElementDtoIcon = "ZENDESK_SELL"
	PlatformTypeSearchFilterElementDtoIconZENDESKSUNSHINE           PlatformTypeSearchFilterElementDtoIcon = "ZENDESK_SUNSHINE"
	PlatformTypeSearchFilterElementDtoIconZENDESKSUPPORT            PlatformTypeSearchFilterElementDtoIcon = "ZENDESK_SUPPORT"
	PlatformTypeSearchFilterElementDtoIconZINGTREE                  PlatformTypeSearchFilterElementDtoIcon = "ZINGTREE"
	PlatformTypeSearchFilterElementDtoIconZOHOBOOKS                 PlatformTypeSearchFilterElementDtoIcon = "ZOHO_BOOKS"
	PlatformTypeSearchFilterElementDtoIconZOHOCAMPAIGNS             PlatformTypeSearchFilterElementDtoIcon = "ZOHO_CAMPAIGNS"
	PlatformTypeSearchFilterElementDtoIconZOHOCRM                   PlatformTypeSearchFilterElementDtoIcon = "ZOHO_CRM"
	PlatformTypeSearchFilterElementDtoIconZOOM                      PlatformTypeSearchFilterElementDtoIcon = "ZOOM"
	PlatformTypeSearchFilterElementDtoIconZUORA                     PlatformTypeSearchFilterElementDtoIcon = "ZUORA"
)

// Defines values for ProviderDtoType.
const (
	ProviderDtoTypeACCESSTOKEN ProviderDtoType = "ACCESS_TOKEN"
	ProviderDtoTypeDATASOURCE  ProviderDtoType = "DATASOURCE"
	ProviderDtoTypeGENERIC     ProviderDtoType = "GENERIC"
	ProviderDtoTypeUSER        ProviderDtoType = "USER"
)

// Defines values for PublicAirflowParametersDtoType.
const (
	PublicAirflowParametersDtoTypeAIRFLOW           PublicAirflowParametersDtoType = "AIRFLOW"
	PublicAirflowParametersDtoTypeATHENA            PublicAirflowParametersDtoType = "ATHENA"
	PublicAirflowParametersDtoTypeBIGQUERY          PublicAirflowParametersDtoType = "BIGQUERY"
	PublicAirflowParametersDtoTypeDATABRICKS        PublicAirflowParametersDtoType = "DATABRICKS"
	PublicAirflowParametersDtoTypeDBT               PublicAirflowParametersDtoType = "DBT"
	PublicAirflowParametersDtoTypeDBTCLOUD          PublicAirflowParametersDtoType = "DBT_CLOUD"
	PublicAirflowParametersDtoTypeDECLARATIVE       PublicAirflowParametersDtoType = "DECLARATIVE"
	PublicAirflowParametersDtoTypeFIVETRAN          PublicAirflowParametersDtoType = "FIVETRAN"
	PublicAirflowParametersDtoTypeHIVE              PublicAirflowParametersDtoType = "HIVE"
	PublicAirflowParametersDtoTypeLOOKER            PublicAirflowParametersDtoType = "LOOKER"
	PublicAirflowParametersDtoTypeMSSQL             PublicAirflowParametersDtoType = "MSSQL"
	PublicAirflowParametersDtoTypeMYSQL             PublicAirflowParametersDtoType = "MYSQL"
	PublicAirflowParametersDtoTypeORACLE            PublicAirflowParametersDtoType = "ORACLE"
	PublicAirflowParametersDtoTypePOSTGRESQL        PublicAirflowParametersDtoType = "POSTGRESQL"
	PublicAirflowParametersDtoTypePOWERBI           PublicAirflowParametersDtoType = "POWER_BI"
	PublicAirflowParametersDtoTypeQUICKSIGHT        PublicAirflowParametersDtoType = "QUICKSIGHT"
	PublicAirflowParametersDtoTypeREDSHIFT          PublicAirflowParametersDtoType = "REDSHIFT"
	PublicAirflowParametersDtoTypeSNOWFLAKE         PublicAirflowParametersDtoType = "SNOWFLAKE"
	PublicAirflowParametersDtoTypeSYNAPSE           PublicAirflowParametersDtoType = "SYNAPSE"
	PublicAirflowParametersDtoTypeTABLEAU           PublicAirflowParametersDtoType = "TABLEAU"
	PublicAirflowParametersDtoTypeUnderscoreUNKNOWN PublicAirflowParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicAthenaParametersDtoType.
const (
	PublicAthenaParametersDtoTypeAIRFLOW           PublicAthenaParametersDtoType = "AIRFLOW"
	PublicAthenaParametersDtoTypeATHENA            PublicAthenaParametersDtoType = "ATHENA"
	PublicAthenaParametersDtoTypeBIGQUERY          PublicAthenaParametersDtoType = "BIGQUERY"
	PublicAthenaParametersDtoTypeDATABRICKS        PublicAthenaParametersDtoType = "DATABRICKS"
	PublicAthenaParametersDtoTypeDBT               PublicAthenaParametersDtoType = "DBT"
	PublicAthenaParametersDtoTypeDBTCLOUD          PublicAthenaParametersDtoType = "DBT_CLOUD"
	PublicAthenaParametersDtoTypeDECLARATIVE       PublicAthenaParametersDtoType = "DECLARATIVE"
	PublicAthenaParametersDtoTypeFIVETRAN          PublicAthenaParametersDtoType = "FIVETRAN"
	PublicAthenaParametersDtoTypeHIVE              PublicAthenaParametersDtoType = "HIVE"
	PublicAthenaParametersDtoTypeLOOKER            PublicAthenaParametersDtoType = "LOOKER"
	PublicAthenaParametersDtoTypeMSSQL             PublicAthenaParametersDtoType = "MSSQL"
	PublicAthenaParametersDtoTypeMYSQL             PublicAthenaParametersDtoType = "MYSQL"
	PublicAthenaParametersDtoTypeORACLE            PublicAthenaParametersDtoType = "ORACLE"
	PublicAthenaParametersDtoTypePOSTGRESQL        PublicAthenaParametersDtoType = "POSTGRESQL"
	PublicAthenaParametersDtoTypePOWERBI           PublicAthenaParametersDtoType = "POWER_BI"
	PublicAthenaParametersDtoTypeQUICKSIGHT        PublicAthenaParametersDtoType = "QUICKSIGHT"
	PublicAthenaParametersDtoTypeREDSHIFT          PublicAthenaParametersDtoType = "REDSHIFT"
	PublicAthenaParametersDtoTypeSNOWFLAKE         PublicAthenaParametersDtoType = "SNOWFLAKE"
	PublicAthenaParametersDtoTypeSYNAPSE           PublicAthenaParametersDtoType = "SYNAPSE"
	PublicAthenaParametersDtoTypeTABLEAU           PublicAthenaParametersDtoType = "TABLEAU"
	PublicAthenaParametersDtoTypeUnderscoreUNKNOWN PublicAthenaParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicBigQueryParametersDtoType.
const (
	PublicBigQueryParametersDtoTypeAIRFLOW           PublicBigQueryParametersDtoType = "AIRFLOW"
	PublicBigQueryParametersDtoTypeATHENA            PublicBigQueryParametersDtoType = "ATHENA"
	PublicBigQueryParametersDtoTypeBIGQUERY          PublicBigQueryParametersDtoType = "BIGQUERY"
	PublicBigQueryParametersDtoTypeDATABRICKS        PublicBigQueryParametersDtoType = "DATABRICKS"
	PublicBigQueryParametersDtoTypeDBT               PublicBigQueryParametersDtoType = "DBT"
	PublicBigQueryParametersDtoTypeDBTCLOUD          PublicBigQueryParametersDtoType = "DBT_CLOUD"
	PublicBigQueryParametersDtoTypeDECLARATIVE       PublicBigQueryParametersDtoType = "DECLARATIVE"
	PublicBigQueryParametersDtoTypeFIVETRAN          PublicBigQueryParametersDtoType = "FIVETRAN"
	PublicBigQueryParametersDtoTypeHIVE              PublicBigQueryParametersDtoType = "HIVE"
	PublicBigQueryParametersDtoTypeLOOKER            PublicBigQueryParametersDtoType = "LOOKER"
	PublicBigQueryParametersDtoTypeMSSQL             PublicBigQueryParametersDtoType = "MSSQL"
	PublicBigQueryParametersDtoTypeMYSQL             PublicBigQueryParametersDtoType = "MYSQL"
	PublicBigQueryParametersDtoTypeORACLE            PublicBigQueryParametersDtoType = "ORACLE"
	PublicBigQueryParametersDtoTypePOSTGRESQL        PublicBigQueryParametersDtoType = "POSTGRESQL"
	PublicBigQueryParametersDtoTypePOWERBI           PublicBigQueryParametersDtoType = "POWER_BI"
	PublicBigQueryParametersDtoTypeQUICKSIGHT        PublicBigQueryParametersDtoType = "QUICKSIGHT"
	PublicBigQueryParametersDtoTypeREDSHIFT          PublicBigQueryParametersDtoType = "REDSHIFT"
	PublicBigQueryParametersDtoTypeSNOWFLAKE         PublicBigQueryParametersDtoType = "SNOWFLAKE"
	PublicBigQueryParametersDtoTypeSYNAPSE           PublicBigQueryParametersDtoType = "SYNAPSE"
	PublicBigQueryParametersDtoTypeTABLEAU           PublicBigQueryParametersDtoType = "TABLEAU"
	PublicBigQueryParametersDtoTypeUnderscoreUNKNOWN PublicBigQueryParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicDatabricksParametersDtoType.
const (
	PublicDatabricksParametersDtoTypeAIRFLOW           PublicDatabricksParametersDtoType = "AIRFLOW"
	PublicDatabricksParametersDtoTypeATHENA            PublicDatabricksParametersDtoType = "ATHENA"
	PublicDatabricksParametersDtoTypeBIGQUERY          PublicDatabricksParametersDtoType = "BIGQUERY"
	PublicDatabricksParametersDtoTypeDATABRICKS        PublicDatabricksParametersDtoType = "DATABRICKS"
	PublicDatabricksParametersDtoTypeDBT               PublicDatabricksParametersDtoType = "DBT"
	PublicDatabricksParametersDtoTypeDBTCLOUD          PublicDatabricksParametersDtoType = "DBT_CLOUD"
	PublicDatabricksParametersDtoTypeDECLARATIVE       PublicDatabricksParametersDtoType = "DECLARATIVE"
	PublicDatabricksParametersDtoTypeFIVETRAN          PublicDatabricksParametersDtoType = "FIVETRAN"
	PublicDatabricksParametersDtoTypeHIVE              PublicDatabricksParametersDtoType = "HIVE"
	PublicDatabricksParametersDtoTypeLOOKER            PublicDatabricksParametersDtoType = "LOOKER"
	PublicDatabricksParametersDtoTypeMSSQL             PublicDatabricksParametersDtoType = "MSSQL"
	PublicDatabricksParametersDtoTypeMYSQL             PublicDatabricksParametersDtoType = "MYSQL"
	PublicDatabricksParametersDtoTypeORACLE            PublicDatabricksParametersDtoType = "ORACLE"
	PublicDatabricksParametersDtoTypePOSTGRESQL        PublicDatabricksParametersDtoType = "POSTGRESQL"
	PublicDatabricksParametersDtoTypePOWERBI           PublicDatabricksParametersDtoType = "POWER_BI"
	PublicDatabricksParametersDtoTypeQUICKSIGHT        PublicDatabricksParametersDtoType = "QUICKSIGHT"
	PublicDatabricksParametersDtoTypeREDSHIFT          PublicDatabricksParametersDtoType = "REDSHIFT"
	PublicDatabricksParametersDtoTypeSNOWFLAKE         PublicDatabricksParametersDtoType = "SNOWFLAKE"
	PublicDatabricksParametersDtoTypeSYNAPSE           PublicDatabricksParametersDtoType = "SYNAPSE"
	PublicDatabricksParametersDtoTypeTABLEAU           PublicDatabricksParametersDtoType = "TABLEAU"
	PublicDatabricksParametersDtoTypeUnderscoreUNKNOWN PublicDatabricksParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicDbtCloudParametersDtoType.
const (
	PublicDbtCloudParametersDtoTypeAIRFLOW           PublicDbtCloudParametersDtoType = "AIRFLOW"
	PublicDbtCloudParametersDtoTypeATHENA            PublicDbtCloudParametersDtoType = "ATHENA"
	PublicDbtCloudParametersDtoTypeBIGQUERY          PublicDbtCloudParametersDtoType = "BIGQUERY"
	PublicDbtCloudParametersDtoTypeDATABRICKS        PublicDbtCloudParametersDtoType = "DATABRICKS"
	PublicDbtCloudParametersDtoTypeDBT               PublicDbtCloudParametersDtoType = "DBT"
	PublicDbtCloudParametersDtoTypeDBTCLOUD          PublicDbtCloudParametersDtoType = "DBT_CLOUD"
	PublicDbtCloudParametersDtoTypeDECLARATIVE       PublicDbtCloudParametersDtoType = "DECLARATIVE"
	PublicDbtCloudParametersDtoTypeFIVETRAN          PublicDbtCloudParametersDtoType = "FIVETRAN"
	PublicDbtCloudParametersDtoTypeHIVE              PublicDbtCloudParametersDtoType = "HIVE"
	PublicDbtCloudParametersDtoTypeLOOKER            PublicDbtCloudParametersDtoType = "LOOKER"
	PublicDbtCloudParametersDtoTypeMSSQL             PublicDbtCloudParametersDtoType = "MSSQL"
	PublicDbtCloudParametersDtoTypeMYSQL             PublicDbtCloudParametersDtoType = "MYSQL"
	PublicDbtCloudParametersDtoTypeORACLE            PublicDbtCloudParametersDtoType = "ORACLE"
	PublicDbtCloudParametersDtoTypePOSTGRESQL        PublicDbtCloudParametersDtoType = "POSTGRESQL"
	PublicDbtCloudParametersDtoTypePOWERBI           PublicDbtCloudParametersDtoType = "POWER_BI"
	PublicDbtCloudParametersDtoTypeQUICKSIGHT        PublicDbtCloudParametersDtoType = "QUICKSIGHT"
	PublicDbtCloudParametersDtoTypeREDSHIFT          PublicDbtCloudParametersDtoType = "REDSHIFT"
	PublicDbtCloudParametersDtoTypeSNOWFLAKE         PublicDbtCloudParametersDtoType = "SNOWFLAKE"
	PublicDbtCloudParametersDtoTypeSYNAPSE           PublicDbtCloudParametersDtoType = "SYNAPSE"
	PublicDbtCloudParametersDtoTypeTABLEAU           PublicDbtCloudParametersDtoType = "TABLEAU"
	PublicDbtCloudParametersDtoTypeUnderscoreUNKNOWN PublicDbtCloudParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicDbtParametersDtoType.
const (
	PublicDbtParametersDtoTypeAIRFLOW           PublicDbtParametersDtoType = "AIRFLOW"
	PublicDbtParametersDtoTypeATHENA            PublicDbtParametersDtoType = "ATHENA"
	PublicDbtParametersDtoTypeBIGQUERY          PublicDbtParametersDtoType = "BIGQUERY"
	PublicDbtParametersDtoTypeDATABRICKS        PublicDbtParametersDtoType = "DATABRICKS"
	PublicDbtParametersDtoTypeDBT               PublicDbtParametersDtoType = "DBT"
	PublicDbtParametersDtoTypeDBTCLOUD          PublicDbtParametersDtoType = "DBT_CLOUD"
	PublicDbtParametersDtoTypeDECLARATIVE       PublicDbtParametersDtoType = "DECLARATIVE"
	PublicDbtParametersDtoTypeFIVETRAN          PublicDbtParametersDtoType = "FIVETRAN"
	PublicDbtParametersDtoTypeHIVE              PublicDbtParametersDtoType = "HIVE"
	PublicDbtParametersDtoTypeLOOKER            PublicDbtParametersDtoType = "LOOKER"
	PublicDbtParametersDtoTypeMSSQL             PublicDbtParametersDtoType = "MSSQL"
	PublicDbtParametersDtoTypeMYSQL             PublicDbtParametersDtoType = "MYSQL"
	PublicDbtParametersDtoTypeORACLE            PublicDbtParametersDtoType = "ORACLE"
	PublicDbtParametersDtoTypePOSTGRESQL        PublicDbtParametersDtoType = "POSTGRESQL"
	PublicDbtParametersDtoTypePOWERBI           PublicDbtParametersDtoType = "POWER_BI"
	PublicDbtParametersDtoTypeQUICKSIGHT        PublicDbtParametersDtoType = "QUICKSIGHT"
	PublicDbtParametersDtoTypeREDSHIFT          PublicDbtParametersDtoType = "REDSHIFT"
	PublicDbtParametersDtoTypeSNOWFLAKE         PublicDbtParametersDtoType = "SNOWFLAKE"
	PublicDbtParametersDtoTypeSYNAPSE           PublicDbtParametersDtoType = "SYNAPSE"
	PublicDbtParametersDtoTypeTABLEAU           PublicDbtParametersDtoType = "TABLEAU"
	PublicDbtParametersDtoTypeUnderscoreUNKNOWN PublicDbtParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicFivetranParametersDtoType.
const (
	PublicFivetranParametersDtoTypeAIRFLOW           PublicFivetranParametersDtoType = "AIRFLOW"
	PublicFivetranParametersDtoTypeATHENA            PublicFivetranParametersDtoType = "ATHENA"
	PublicFivetranParametersDtoTypeBIGQUERY          PublicFivetranParametersDtoType = "BIGQUERY"
	PublicFivetranParametersDtoTypeDATABRICKS        PublicFivetranParametersDtoType = "DATABRICKS"
	PublicFivetranParametersDtoTypeDBT               PublicFivetranParametersDtoType = "DBT"
	PublicFivetranParametersDtoTypeDBTCLOUD          PublicFivetranParametersDtoType = "DBT_CLOUD"
	PublicFivetranParametersDtoTypeDECLARATIVE       PublicFivetranParametersDtoType = "DECLARATIVE"
	PublicFivetranParametersDtoTypeFIVETRAN          PublicFivetranParametersDtoType = "FIVETRAN"
	PublicFivetranParametersDtoTypeHIVE              PublicFivetranParametersDtoType = "HIVE"
	PublicFivetranParametersDtoTypeLOOKER            PublicFivetranParametersDtoType = "LOOKER"
	PublicFivetranParametersDtoTypeMSSQL             PublicFivetranParametersDtoType = "MSSQL"
	PublicFivetranParametersDtoTypeMYSQL             PublicFivetranParametersDtoType = "MYSQL"
	PublicFivetranParametersDtoTypeORACLE            PublicFivetranParametersDtoType = "ORACLE"
	PublicFivetranParametersDtoTypePOSTGRESQL        PublicFivetranParametersDtoType = "POSTGRESQL"
	PublicFivetranParametersDtoTypePOWERBI           PublicFivetranParametersDtoType = "POWER_BI"
	PublicFivetranParametersDtoTypeQUICKSIGHT        PublicFivetranParametersDtoType = "QUICKSIGHT"
	PublicFivetranParametersDtoTypeREDSHIFT          PublicFivetranParametersDtoType = "REDSHIFT"
	PublicFivetranParametersDtoTypeSNOWFLAKE         PublicFivetranParametersDtoType = "SNOWFLAKE"
	PublicFivetranParametersDtoTypeSYNAPSE           PublicFivetranParametersDtoType = "SYNAPSE"
	PublicFivetranParametersDtoTypeTABLEAU           PublicFivetranParametersDtoType = "TABLEAU"
	PublicFivetranParametersDtoTypeUnderscoreUNKNOWN PublicFivetranParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicHiveParametersDtoType.
const (
	PublicHiveParametersDtoTypeAIRFLOW           PublicHiveParametersDtoType = "AIRFLOW"
	PublicHiveParametersDtoTypeATHENA            PublicHiveParametersDtoType = "ATHENA"
	PublicHiveParametersDtoTypeBIGQUERY          PublicHiveParametersDtoType = "BIGQUERY"
	PublicHiveParametersDtoTypeDATABRICKS        PublicHiveParametersDtoType = "DATABRICKS"
	PublicHiveParametersDtoTypeDBT               PublicHiveParametersDtoType = "DBT"
	PublicHiveParametersDtoTypeDBTCLOUD          PublicHiveParametersDtoType = "DBT_CLOUD"
	PublicHiveParametersDtoTypeDECLARATIVE       PublicHiveParametersDtoType = "DECLARATIVE"
	PublicHiveParametersDtoTypeFIVETRAN          PublicHiveParametersDtoType = "FIVETRAN"
	PublicHiveParametersDtoTypeHIVE              PublicHiveParametersDtoType = "HIVE"
	PublicHiveParametersDtoTypeLOOKER            PublicHiveParametersDtoType = "LOOKER"
	PublicHiveParametersDtoTypeMSSQL             PublicHiveParametersDtoType = "MSSQL"
	PublicHiveParametersDtoTypeMYSQL             PublicHiveParametersDtoType = "MYSQL"
	PublicHiveParametersDtoTypeORACLE            PublicHiveParametersDtoType = "ORACLE"
	PublicHiveParametersDtoTypePOSTGRESQL        PublicHiveParametersDtoType = "POSTGRESQL"
	PublicHiveParametersDtoTypePOWERBI           PublicHiveParametersDtoType = "POWER_BI"
	PublicHiveParametersDtoTypeQUICKSIGHT        PublicHiveParametersDtoType = "QUICKSIGHT"
	PublicHiveParametersDtoTypeREDSHIFT          PublicHiveParametersDtoType = "REDSHIFT"
	PublicHiveParametersDtoTypeSNOWFLAKE         PublicHiveParametersDtoType = "SNOWFLAKE"
	PublicHiveParametersDtoTypeSYNAPSE           PublicHiveParametersDtoType = "SYNAPSE"
	PublicHiveParametersDtoTypeTABLEAU           PublicHiveParametersDtoType = "TABLEAU"
	PublicHiveParametersDtoTypeUnderscoreUNKNOWN PublicHiveParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicLookerParametersDtoType.
const (
	PublicLookerParametersDtoTypeAIRFLOW           PublicLookerParametersDtoType = "AIRFLOW"
	PublicLookerParametersDtoTypeATHENA            PublicLookerParametersDtoType = "ATHENA"
	PublicLookerParametersDtoTypeBIGQUERY          PublicLookerParametersDtoType = "BIGQUERY"
	PublicLookerParametersDtoTypeDATABRICKS        PublicLookerParametersDtoType = "DATABRICKS"
	PublicLookerParametersDtoTypeDBT               PublicLookerParametersDtoType = "DBT"
	PublicLookerParametersDtoTypeDBTCLOUD          PublicLookerParametersDtoType = "DBT_CLOUD"
	PublicLookerParametersDtoTypeDECLARATIVE       PublicLookerParametersDtoType = "DECLARATIVE"
	PublicLookerParametersDtoTypeFIVETRAN          PublicLookerParametersDtoType = "FIVETRAN"
	PublicLookerParametersDtoTypeHIVE              PublicLookerParametersDtoType = "HIVE"
	PublicLookerParametersDtoTypeLOOKER            PublicLookerParametersDtoType = "LOOKER"
	PublicLookerParametersDtoTypeMSSQL             PublicLookerParametersDtoType = "MSSQL"
	PublicLookerParametersDtoTypeMYSQL             PublicLookerParametersDtoType = "MYSQL"
	PublicLookerParametersDtoTypeORACLE            PublicLookerParametersDtoType = "ORACLE"
	PublicLookerParametersDtoTypePOSTGRESQL        PublicLookerParametersDtoType = "POSTGRESQL"
	PublicLookerParametersDtoTypePOWERBI           PublicLookerParametersDtoType = "POWER_BI"
	PublicLookerParametersDtoTypeQUICKSIGHT        PublicLookerParametersDtoType = "QUICKSIGHT"
	PublicLookerParametersDtoTypeREDSHIFT          PublicLookerParametersDtoType = "REDSHIFT"
	PublicLookerParametersDtoTypeSNOWFLAKE         PublicLookerParametersDtoType = "SNOWFLAKE"
	PublicLookerParametersDtoTypeSYNAPSE           PublicLookerParametersDtoType = "SYNAPSE"
	PublicLookerParametersDtoTypeTABLEAU           PublicLookerParametersDtoType = "TABLEAU"
	PublicLookerParametersDtoTypeUnderscoreUNKNOWN PublicLookerParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicMssqlParametersDtoType.
const (
	PublicMssqlParametersDtoTypeAIRFLOW           PublicMssqlParametersDtoType = "AIRFLOW"
	PublicMssqlParametersDtoTypeATHENA            PublicMssqlParametersDtoType = "ATHENA"
	PublicMssqlParametersDtoTypeBIGQUERY          PublicMssqlParametersDtoType = "BIGQUERY"
	PublicMssqlParametersDtoTypeDATABRICKS        PublicMssqlParametersDtoType = "DATABRICKS"
	PublicMssqlParametersDtoTypeDBT               PublicMssqlParametersDtoType = "DBT"
	PublicMssqlParametersDtoTypeDBTCLOUD          PublicMssqlParametersDtoType = "DBT_CLOUD"
	PublicMssqlParametersDtoTypeDECLARATIVE       PublicMssqlParametersDtoType = "DECLARATIVE"
	PublicMssqlParametersDtoTypeFIVETRAN          PublicMssqlParametersDtoType = "FIVETRAN"
	PublicMssqlParametersDtoTypeHIVE              PublicMssqlParametersDtoType = "HIVE"
	PublicMssqlParametersDtoTypeLOOKER            PublicMssqlParametersDtoType = "LOOKER"
	PublicMssqlParametersDtoTypeMSSQL             PublicMssqlParametersDtoType = "MSSQL"
	PublicMssqlParametersDtoTypeMYSQL             PublicMssqlParametersDtoType = "MYSQL"
	PublicMssqlParametersDtoTypeORACLE            PublicMssqlParametersDtoType = "ORACLE"
	PublicMssqlParametersDtoTypePOSTGRESQL        PublicMssqlParametersDtoType = "POSTGRESQL"
	PublicMssqlParametersDtoTypePOWERBI           PublicMssqlParametersDtoType = "POWER_BI"
	PublicMssqlParametersDtoTypeQUICKSIGHT        PublicMssqlParametersDtoType = "QUICKSIGHT"
	PublicMssqlParametersDtoTypeREDSHIFT          PublicMssqlParametersDtoType = "REDSHIFT"
	PublicMssqlParametersDtoTypeSNOWFLAKE         PublicMssqlParametersDtoType = "SNOWFLAKE"
	PublicMssqlParametersDtoTypeSYNAPSE           PublicMssqlParametersDtoType = "SYNAPSE"
	PublicMssqlParametersDtoTypeTABLEAU           PublicMssqlParametersDtoType = "TABLEAU"
	PublicMssqlParametersDtoTypeUnderscoreUNKNOWN PublicMssqlParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicMysqlParametersDtoMysqlTlsVersion.
const (
	PublicMysqlParametersDtoMysqlTlsVersionTLSV12 PublicMysqlParametersDtoMysqlTlsVersion = "TLS_V_1_2"
	PublicMysqlParametersDtoMysqlTlsVersionTLSV13 PublicMysqlParametersDtoMysqlTlsVersion = "TLS_V_1_3"
)

// Defines values for PublicMysqlParametersDtoType.
const (
	PublicMysqlParametersDtoTypeAIRFLOW           PublicMysqlParametersDtoType = "AIRFLOW"
	PublicMysqlParametersDtoTypeATHENA            PublicMysqlParametersDtoType = "ATHENA"
	PublicMysqlParametersDtoTypeBIGQUERY          PublicMysqlParametersDtoType = "BIGQUERY"
	PublicMysqlParametersDtoTypeDATABRICKS        PublicMysqlParametersDtoType = "DATABRICKS"
	PublicMysqlParametersDtoTypeDBT               PublicMysqlParametersDtoType = "DBT"
	PublicMysqlParametersDtoTypeDBTCLOUD          PublicMysqlParametersDtoType = "DBT_CLOUD"
	PublicMysqlParametersDtoTypeDECLARATIVE       PublicMysqlParametersDtoType = "DECLARATIVE"
	PublicMysqlParametersDtoTypeFIVETRAN          PublicMysqlParametersDtoType = "FIVETRAN"
	PublicMysqlParametersDtoTypeHIVE              PublicMysqlParametersDtoType = "HIVE"
	PublicMysqlParametersDtoTypeLOOKER            PublicMysqlParametersDtoType = "LOOKER"
	PublicMysqlParametersDtoTypeMSSQL             PublicMysqlParametersDtoType = "MSSQL"
	PublicMysqlParametersDtoTypeMYSQL             PublicMysqlParametersDtoType = "MYSQL"
	PublicMysqlParametersDtoTypeORACLE            PublicMysqlParametersDtoType = "ORACLE"
	PublicMysqlParametersDtoTypePOSTGRESQL        PublicMysqlParametersDtoType = "POSTGRESQL"
	PublicMysqlParametersDtoTypePOWERBI           PublicMysqlParametersDtoType = "POWER_BI"
	PublicMysqlParametersDtoTypeQUICKSIGHT        PublicMysqlParametersDtoType = "QUICKSIGHT"
	PublicMysqlParametersDtoTypeREDSHIFT          PublicMysqlParametersDtoType = "REDSHIFT"
	PublicMysqlParametersDtoTypeSNOWFLAKE         PublicMysqlParametersDtoType = "SNOWFLAKE"
	PublicMysqlParametersDtoTypeSYNAPSE           PublicMysqlParametersDtoType = "SYNAPSE"
	PublicMysqlParametersDtoTypeTABLEAU           PublicMysqlParametersDtoType = "TABLEAU"
	PublicMysqlParametersDtoTypeUnderscoreUNKNOWN PublicMysqlParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicOracleParametersDtoType.
const (
	PublicOracleParametersDtoTypeAIRFLOW           PublicOracleParametersDtoType = "AIRFLOW"
	PublicOracleParametersDtoTypeATHENA            PublicOracleParametersDtoType = "ATHENA"
	PublicOracleParametersDtoTypeBIGQUERY          PublicOracleParametersDtoType = "BIGQUERY"
	PublicOracleParametersDtoTypeDATABRICKS        PublicOracleParametersDtoType = "DATABRICKS"
	PublicOracleParametersDtoTypeDBT               PublicOracleParametersDtoType = "DBT"
	PublicOracleParametersDtoTypeDBTCLOUD          PublicOracleParametersDtoType = "DBT_CLOUD"
	PublicOracleParametersDtoTypeDECLARATIVE       PublicOracleParametersDtoType = "DECLARATIVE"
	PublicOracleParametersDtoTypeFIVETRAN          PublicOracleParametersDtoType = "FIVETRAN"
	PublicOracleParametersDtoTypeHIVE              PublicOracleParametersDtoType = "HIVE"
	PublicOracleParametersDtoTypeLOOKER            PublicOracleParametersDtoType = "LOOKER"
	PublicOracleParametersDtoTypeMSSQL             PublicOracleParametersDtoType = "MSSQL"
	PublicOracleParametersDtoTypeMYSQL             PublicOracleParametersDtoType = "MYSQL"
	PublicOracleParametersDtoTypeORACLE            PublicOracleParametersDtoType = "ORACLE"
	PublicOracleParametersDtoTypePOSTGRESQL        PublicOracleParametersDtoType = "POSTGRESQL"
	PublicOracleParametersDtoTypePOWERBI           PublicOracleParametersDtoType = "POWER_BI"
	PublicOracleParametersDtoTypeQUICKSIGHT        PublicOracleParametersDtoType = "QUICKSIGHT"
	PublicOracleParametersDtoTypeREDSHIFT          PublicOracleParametersDtoType = "REDSHIFT"
	PublicOracleParametersDtoTypeSNOWFLAKE         PublicOracleParametersDtoType = "SNOWFLAKE"
	PublicOracleParametersDtoTypeSYNAPSE           PublicOracleParametersDtoType = "SYNAPSE"
	PublicOracleParametersDtoTypeTABLEAU           PublicOracleParametersDtoType = "TABLEAU"
	PublicOracleParametersDtoTypeUnderscoreUNKNOWN PublicOracleParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicPostgresqlParametersDtoType.
const (
	PublicPostgresqlParametersDtoTypeAIRFLOW           PublicPostgresqlParametersDtoType = "AIRFLOW"
	PublicPostgresqlParametersDtoTypeATHENA            PublicPostgresqlParametersDtoType = "ATHENA"
	PublicPostgresqlParametersDtoTypeBIGQUERY          PublicPostgresqlParametersDtoType = "BIGQUERY"
	PublicPostgresqlParametersDtoTypeDATABRICKS        PublicPostgresqlParametersDtoType = "DATABRICKS"
	PublicPostgresqlParametersDtoTypeDBT               PublicPostgresqlParametersDtoType = "DBT"
	PublicPostgresqlParametersDtoTypeDBTCLOUD          PublicPostgresqlParametersDtoType = "DBT_CLOUD"
	PublicPostgresqlParametersDtoTypeDECLARATIVE       PublicPostgresqlParametersDtoType = "DECLARATIVE"
	PublicPostgresqlParametersDtoTypeFIVETRAN          PublicPostgresqlParametersDtoType = "FIVETRAN"
	PublicPostgresqlParametersDtoTypeHIVE              PublicPostgresqlParametersDtoType = "HIVE"
	PublicPostgresqlParametersDtoTypeLOOKER            PublicPostgresqlParametersDtoType = "LOOKER"
	PublicPostgresqlParametersDtoTypeMSSQL             PublicPostgresqlParametersDtoType = "MSSQL"
	PublicPostgresqlParametersDtoTypeMYSQL             PublicPostgresqlParametersDtoType = "MYSQL"
	PublicPostgresqlParametersDtoTypeORACLE            PublicPostgresqlParametersDtoType = "ORACLE"
	PublicPostgresqlParametersDtoTypePOSTGRESQL        PublicPostgresqlParametersDtoType = "POSTGRESQL"
	PublicPostgresqlParametersDtoTypePOWERBI           PublicPostgresqlParametersDtoType = "POWER_BI"
	PublicPostgresqlParametersDtoTypeQUICKSIGHT        PublicPostgresqlParametersDtoType = "QUICKSIGHT"
	PublicPostgresqlParametersDtoTypeREDSHIFT          PublicPostgresqlParametersDtoType = "REDSHIFT"
	PublicPostgresqlParametersDtoTypeSNOWFLAKE         PublicPostgresqlParametersDtoType = "SNOWFLAKE"
	PublicPostgresqlParametersDtoTypeSYNAPSE           PublicPostgresqlParametersDtoType = "SYNAPSE"
	PublicPostgresqlParametersDtoTypeTABLEAU           PublicPostgresqlParametersDtoType = "TABLEAU"
	PublicPostgresqlParametersDtoTypeUnderscoreUNKNOWN PublicPostgresqlParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicPowerBiParametersDtoType.
const (
	PublicPowerBiParametersDtoTypeAIRFLOW           PublicPowerBiParametersDtoType = "AIRFLOW"
	PublicPowerBiParametersDtoTypeATHENA            PublicPowerBiParametersDtoType = "ATHENA"
	PublicPowerBiParametersDtoTypeBIGQUERY          PublicPowerBiParametersDtoType = "BIGQUERY"
	PublicPowerBiParametersDtoTypeDATABRICKS        PublicPowerBiParametersDtoType = "DATABRICKS"
	PublicPowerBiParametersDtoTypeDBT               PublicPowerBiParametersDtoType = "DBT"
	PublicPowerBiParametersDtoTypeDBTCLOUD          PublicPowerBiParametersDtoType = "DBT_CLOUD"
	PublicPowerBiParametersDtoTypeDECLARATIVE       PublicPowerBiParametersDtoType = "DECLARATIVE"
	PublicPowerBiParametersDtoTypeFIVETRAN          PublicPowerBiParametersDtoType = "FIVETRAN"
	PublicPowerBiParametersDtoTypeHIVE              PublicPowerBiParametersDtoType = "HIVE"
	PublicPowerBiParametersDtoTypeLOOKER            PublicPowerBiParametersDtoType = "LOOKER"
	PublicPowerBiParametersDtoTypeMSSQL             PublicPowerBiParametersDtoType = "MSSQL"
	PublicPowerBiParametersDtoTypeMYSQL             PublicPowerBiParametersDtoType = "MYSQL"
	PublicPowerBiParametersDtoTypeORACLE            PublicPowerBiParametersDtoType = "ORACLE"
	PublicPowerBiParametersDtoTypePOSTGRESQL        PublicPowerBiParametersDtoType = "POSTGRESQL"
	PublicPowerBiParametersDtoTypePOWERBI           PublicPowerBiParametersDtoType = "POWER_BI"
	PublicPowerBiParametersDtoTypeQUICKSIGHT        PublicPowerBiParametersDtoType = "QUICKSIGHT"
	PublicPowerBiParametersDtoTypeREDSHIFT          PublicPowerBiParametersDtoType = "REDSHIFT"
	PublicPowerBiParametersDtoTypeSNOWFLAKE         PublicPowerBiParametersDtoType = "SNOWFLAKE"
	PublicPowerBiParametersDtoTypeSYNAPSE           PublicPowerBiParametersDtoType = "SYNAPSE"
	PublicPowerBiParametersDtoTypeTABLEAU           PublicPowerBiParametersDtoType = "TABLEAU"
	PublicPowerBiParametersDtoTypeUnderscoreUNKNOWN PublicPowerBiParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicQuicksightParametersDtoType.
const (
	PublicQuicksightParametersDtoTypeAIRFLOW           PublicQuicksightParametersDtoType = "AIRFLOW"
	PublicQuicksightParametersDtoTypeATHENA            PublicQuicksightParametersDtoType = "ATHENA"
	PublicQuicksightParametersDtoTypeBIGQUERY          PublicQuicksightParametersDtoType = "BIGQUERY"
	PublicQuicksightParametersDtoTypeDATABRICKS        PublicQuicksightParametersDtoType = "DATABRICKS"
	PublicQuicksightParametersDtoTypeDBT               PublicQuicksightParametersDtoType = "DBT"
	PublicQuicksightParametersDtoTypeDBTCLOUD          PublicQuicksightParametersDtoType = "DBT_CLOUD"
	PublicQuicksightParametersDtoTypeDECLARATIVE       PublicQuicksightParametersDtoType = "DECLARATIVE"
	PublicQuicksightParametersDtoTypeFIVETRAN          PublicQuicksightParametersDtoType = "FIVETRAN"
	PublicQuicksightParametersDtoTypeHIVE              PublicQuicksightParametersDtoType = "HIVE"
	PublicQuicksightParametersDtoTypeLOOKER            PublicQuicksightParametersDtoType = "LOOKER"
	PublicQuicksightParametersDtoTypeMSSQL             PublicQuicksightParametersDtoType = "MSSQL"
	PublicQuicksightParametersDtoTypeMYSQL             PublicQuicksightParametersDtoType = "MYSQL"
	PublicQuicksightParametersDtoTypeORACLE            PublicQuicksightParametersDtoType = "ORACLE"
	PublicQuicksightParametersDtoTypePOSTGRESQL        PublicQuicksightParametersDtoType = "POSTGRESQL"
	PublicQuicksightParametersDtoTypePOWERBI           PublicQuicksightParametersDtoType = "POWER_BI"
	PublicQuicksightParametersDtoTypeQUICKSIGHT        PublicQuicksightParametersDtoType = "QUICKSIGHT"
	PublicQuicksightParametersDtoTypeREDSHIFT          PublicQuicksightParametersDtoType = "REDSHIFT"
	PublicQuicksightParametersDtoTypeSNOWFLAKE         PublicQuicksightParametersDtoType = "SNOWFLAKE"
	PublicQuicksightParametersDtoTypeSYNAPSE           PublicQuicksightParametersDtoType = "SYNAPSE"
	PublicQuicksightParametersDtoTypeTABLEAU           PublicQuicksightParametersDtoType = "TABLEAU"
	PublicQuicksightParametersDtoTypeUnderscoreUNKNOWN PublicQuicksightParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicRedshiftParametersDtoType.
const (
	PublicRedshiftParametersDtoTypeAIRFLOW           PublicRedshiftParametersDtoType = "AIRFLOW"
	PublicRedshiftParametersDtoTypeATHENA            PublicRedshiftParametersDtoType = "ATHENA"
	PublicRedshiftParametersDtoTypeBIGQUERY          PublicRedshiftParametersDtoType = "BIGQUERY"
	PublicRedshiftParametersDtoTypeDATABRICKS        PublicRedshiftParametersDtoType = "DATABRICKS"
	PublicRedshiftParametersDtoTypeDBT               PublicRedshiftParametersDtoType = "DBT"
	PublicRedshiftParametersDtoTypeDBTCLOUD          PublicRedshiftParametersDtoType = "DBT_CLOUD"
	PublicRedshiftParametersDtoTypeDECLARATIVE       PublicRedshiftParametersDtoType = "DECLARATIVE"
	PublicRedshiftParametersDtoTypeFIVETRAN          PublicRedshiftParametersDtoType = "FIVETRAN"
	PublicRedshiftParametersDtoTypeHIVE              PublicRedshiftParametersDtoType = "HIVE"
	PublicRedshiftParametersDtoTypeLOOKER            PublicRedshiftParametersDtoType = "LOOKER"
	PublicRedshiftParametersDtoTypeMSSQL             PublicRedshiftParametersDtoType = "MSSQL"
	PublicRedshiftParametersDtoTypeMYSQL             PublicRedshiftParametersDtoType = "MYSQL"
	PublicRedshiftParametersDtoTypeORACLE            PublicRedshiftParametersDtoType = "ORACLE"
	PublicRedshiftParametersDtoTypePOSTGRESQL        PublicRedshiftParametersDtoType = "POSTGRESQL"
	PublicRedshiftParametersDtoTypePOWERBI           PublicRedshiftParametersDtoType = "POWER_BI"
	PublicRedshiftParametersDtoTypeQUICKSIGHT        PublicRedshiftParametersDtoType = "QUICKSIGHT"
	PublicRedshiftParametersDtoTypeREDSHIFT          PublicRedshiftParametersDtoType = "REDSHIFT"
	PublicRedshiftParametersDtoTypeSNOWFLAKE         PublicRedshiftParametersDtoType = "SNOWFLAKE"
	PublicRedshiftParametersDtoTypeSYNAPSE           PublicRedshiftParametersDtoType = "SYNAPSE"
	PublicRedshiftParametersDtoTypeTABLEAU           PublicRedshiftParametersDtoType = "TABLEAU"
	PublicRedshiftParametersDtoTypeUnderscoreUNKNOWN PublicRedshiftParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicSnowflakeParametersDtoType.
const (
	PublicSnowflakeParametersDtoTypeAIRFLOW           PublicSnowflakeParametersDtoType = "AIRFLOW"
	PublicSnowflakeParametersDtoTypeATHENA            PublicSnowflakeParametersDtoType = "ATHENA"
	PublicSnowflakeParametersDtoTypeBIGQUERY          PublicSnowflakeParametersDtoType = "BIGQUERY"
	PublicSnowflakeParametersDtoTypeDATABRICKS        PublicSnowflakeParametersDtoType = "DATABRICKS"
	PublicSnowflakeParametersDtoTypeDBT               PublicSnowflakeParametersDtoType = "DBT"
	PublicSnowflakeParametersDtoTypeDBTCLOUD          PublicSnowflakeParametersDtoType = "DBT_CLOUD"
	PublicSnowflakeParametersDtoTypeDECLARATIVE       PublicSnowflakeParametersDtoType = "DECLARATIVE"
	PublicSnowflakeParametersDtoTypeFIVETRAN          PublicSnowflakeParametersDtoType = "FIVETRAN"
	PublicSnowflakeParametersDtoTypeHIVE              PublicSnowflakeParametersDtoType = "HIVE"
	PublicSnowflakeParametersDtoTypeLOOKER            PublicSnowflakeParametersDtoType = "LOOKER"
	PublicSnowflakeParametersDtoTypeMSSQL             PublicSnowflakeParametersDtoType = "MSSQL"
	PublicSnowflakeParametersDtoTypeMYSQL             PublicSnowflakeParametersDtoType = "MYSQL"
	PublicSnowflakeParametersDtoTypeORACLE            PublicSnowflakeParametersDtoType = "ORACLE"
	PublicSnowflakeParametersDtoTypePOSTGRESQL        PublicSnowflakeParametersDtoType = "POSTGRESQL"
	PublicSnowflakeParametersDtoTypePOWERBI           PublicSnowflakeParametersDtoType = "POWER_BI"
	PublicSnowflakeParametersDtoTypeQUICKSIGHT        PublicSnowflakeParametersDtoType = "QUICKSIGHT"
	PublicSnowflakeParametersDtoTypeREDSHIFT          PublicSnowflakeParametersDtoType = "REDSHIFT"
	PublicSnowflakeParametersDtoTypeSNOWFLAKE         PublicSnowflakeParametersDtoType = "SNOWFLAKE"
	PublicSnowflakeParametersDtoTypeSYNAPSE           PublicSnowflakeParametersDtoType = "SYNAPSE"
	PublicSnowflakeParametersDtoTypeTABLEAU           PublicSnowflakeParametersDtoType = "TABLEAU"
	PublicSnowflakeParametersDtoTypeUnderscoreUNKNOWN PublicSnowflakeParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicSourceParametersDtoType.
const (
	PublicSourceParametersDtoTypeAIRFLOW           PublicSourceParametersDtoType = "AIRFLOW"
	PublicSourceParametersDtoTypeATHENA            PublicSourceParametersDtoType = "ATHENA"
	PublicSourceParametersDtoTypeBIGQUERY          PublicSourceParametersDtoType = "BIGQUERY"
	PublicSourceParametersDtoTypeDATABRICKS        PublicSourceParametersDtoType = "DATABRICKS"
	PublicSourceParametersDtoTypeDBT               PublicSourceParametersDtoType = "DBT"
	PublicSourceParametersDtoTypeDBTCLOUD          PublicSourceParametersDtoType = "DBT_CLOUD"
	PublicSourceParametersDtoTypeDECLARATIVE       PublicSourceParametersDtoType = "DECLARATIVE"
	PublicSourceParametersDtoTypeFIVETRAN          PublicSourceParametersDtoType = "FIVETRAN"
	PublicSourceParametersDtoTypeHIVE              PublicSourceParametersDtoType = "HIVE"
	PublicSourceParametersDtoTypeLOOKER            PublicSourceParametersDtoType = "LOOKER"
	PublicSourceParametersDtoTypeMSSQL             PublicSourceParametersDtoType = "MSSQL"
	PublicSourceParametersDtoTypeMYSQL             PublicSourceParametersDtoType = "MYSQL"
	PublicSourceParametersDtoTypeORACLE            PublicSourceParametersDtoType = "ORACLE"
	PublicSourceParametersDtoTypePOSTGRESQL        PublicSourceParametersDtoType = "POSTGRESQL"
	PublicSourceParametersDtoTypePOWERBI           PublicSourceParametersDtoType = "POWER_BI"
	PublicSourceParametersDtoTypeQUICKSIGHT        PublicSourceParametersDtoType = "QUICKSIGHT"
	PublicSourceParametersDtoTypeREDSHIFT          PublicSourceParametersDtoType = "REDSHIFT"
	PublicSourceParametersDtoTypeSNOWFLAKE         PublicSourceParametersDtoType = "SNOWFLAKE"
	PublicSourceParametersDtoTypeSYNAPSE           PublicSourceParametersDtoType = "SYNAPSE"
	PublicSourceParametersDtoTypeTABLEAU           PublicSourceParametersDtoType = "TABLEAU"
	PublicSourceParametersDtoTypeUnderscoreUNKNOWN PublicSourceParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicSynapseParametersDtoType.
const (
	PublicSynapseParametersDtoTypeAIRFLOW           PublicSynapseParametersDtoType = "AIRFLOW"
	PublicSynapseParametersDtoTypeATHENA            PublicSynapseParametersDtoType = "ATHENA"
	PublicSynapseParametersDtoTypeBIGQUERY          PublicSynapseParametersDtoType = "BIGQUERY"
	PublicSynapseParametersDtoTypeDATABRICKS        PublicSynapseParametersDtoType = "DATABRICKS"
	PublicSynapseParametersDtoTypeDBT               PublicSynapseParametersDtoType = "DBT"
	PublicSynapseParametersDtoTypeDBTCLOUD          PublicSynapseParametersDtoType = "DBT_CLOUD"
	PublicSynapseParametersDtoTypeDECLARATIVE       PublicSynapseParametersDtoType = "DECLARATIVE"
	PublicSynapseParametersDtoTypeFIVETRAN          PublicSynapseParametersDtoType = "FIVETRAN"
	PublicSynapseParametersDtoTypeHIVE              PublicSynapseParametersDtoType = "HIVE"
	PublicSynapseParametersDtoTypeLOOKER            PublicSynapseParametersDtoType = "LOOKER"
	PublicSynapseParametersDtoTypeMSSQL             PublicSynapseParametersDtoType = "MSSQL"
	PublicSynapseParametersDtoTypeMYSQL             PublicSynapseParametersDtoType = "MYSQL"
	PublicSynapseParametersDtoTypeORACLE            PublicSynapseParametersDtoType = "ORACLE"
	PublicSynapseParametersDtoTypePOSTGRESQL        PublicSynapseParametersDtoType = "POSTGRESQL"
	PublicSynapseParametersDtoTypePOWERBI           PublicSynapseParametersDtoType = "POWER_BI"
	PublicSynapseParametersDtoTypeQUICKSIGHT        PublicSynapseParametersDtoType = "QUICKSIGHT"
	PublicSynapseParametersDtoTypeREDSHIFT          PublicSynapseParametersDtoType = "REDSHIFT"
	PublicSynapseParametersDtoTypeSNOWFLAKE         PublicSynapseParametersDtoType = "SNOWFLAKE"
	PublicSynapseParametersDtoTypeSYNAPSE           PublicSynapseParametersDtoType = "SYNAPSE"
	PublicSynapseParametersDtoTypeTABLEAU           PublicSynapseParametersDtoType = "TABLEAU"
	PublicSynapseParametersDtoTypeUnderscoreUNKNOWN PublicSynapseParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicTableauParametersDtoType.
const (
	PublicTableauParametersDtoTypeAIRFLOW           PublicTableauParametersDtoType = "AIRFLOW"
	PublicTableauParametersDtoTypeATHENA            PublicTableauParametersDtoType = "ATHENA"
	PublicTableauParametersDtoTypeBIGQUERY          PublicTableauParametersDtoType = "BIGQUERY"
	PublicTableauParametersDtoTypeDATABRICKS        PublicTableauParametersDtoType = "DATABRICKS"
	PublicTableauParametersDtoTypeDBT               PublicTableauParametersDtoType = "DBT"
	PublicTableauParametersDtoTypeDBTCLOUD          PublicTableauParametersDtoType = "DBT_CLOUD"
	PublicTableauParametersDtoTypeDECLARATIVE       PublicTableauParametersDtoType = "DECLARATIVE"
	PublicTableauParametersDtoTypeFIVETRAN          PublicTableauParametersDtoType = "FIVETRAN"
	PublicTableauParametersDtoTypeHIVE              PublicTableauParametersDtoType = "HIVE"
	PublicTableauParametersDtoTypeLOOKER            PublicTableauParametersDtoType = "LOOKER"
	PublicTableauParametersDtoTypeMSSQL             PublicTableauParametersDtoType = "MSSQL"
	PublicTableauParametersDtoTypeMYSQL             PublicTableauParametersDtoType = "MYSQL"
	PublicTableauParametersDtoTypeORACLE            PublicTableauParametersDtoType = "ORACLE"
	PublicTableauParametersDtoTypePOSTGRESQL        PublicTableauParametersDtoType = "POSTGRESQL"
	PublicTableauParametersDtoTypePOWERBI           PublicTableauParametersDtoType = "POWER_BI"
	PublicTableauParametersDtoTypeQUICKSIGHT        PublicTableauParametersDtoType = "QUICKSIGHT"
	PublicTableauParametersDtoTypeREDSHIFT          PublicTableauParametersDtoType = "REDSHIFT"
	PublicTableauParametersDtoTypeSNOWFLAKE         PublicTableauParametersDtoType = "SNOWFLAKE"
	PublicTableauParametersDtoTypeSYNAPSE           PublicTableauParametersDtoType = "SYNAPSE"
	PublicTableauParametersDtoTypeTABLEAU           PublicTableauParametersDtoType = "TABLEAU"
	PublicTableauParametersDtoTypeUnderscoreUNKNOWN PublicTableauParametersDtoType = "_UNKNOWN_"
)

// Defines values for PublicTagReferenceDtoKind.
const (
	Classification PublicTagReferenceDtoKind = "Classification"
	Tag            PublicTagReferenceDtoKind = "Tag"
)

// Defines values for RuleCatalogAssetDtoRuleType.
const (
	AUTOMATICRULE RuleCatalogAssetDtoRuleType = "AUTOMATIC_RULE"
	CUSTOMRULE    RuleCatalogAssetDtoRuleType = "CUSTOM_RULE"
	SIFFLETRULE   RuleCatalogAssetDtoRuleType = "SIFFLET_RULE"
)

// Defines values for RuleCatalogAssetDtoSourcePlatform.
const (
	RuleCatalogAssetDtoSourcePlatformDBT     RuleCatalogAssetDtoSourcePlatform = "DBT"
	RuleCatalogAssetDtoSourcePlatformSIFFLET RuleCatalogAssetDtoSourcePlatform = "SIFFLET"
)

// Defines values for RuleRunDetailsByGroupDtoStatus.
const (
	RuleRunDetailsByGroupDtoStatusFAILED                RuleRunDetailsByGroupDtoStatus = "FAILED"
	RuleRunDetailsByGroupDtoStatusPENDING               RuleRunDetailsByGroupDtoStatus = "PENDING"
	RuleRunDetailsByGroupDtoStatusREQUIRESYOURATTENTION RuleRunDetailsByGroupDtoStatus = "REQUIRES_YOUR_ATTENTION"
	RuleRunDetailsByGroupDtoStatusRUNNING               RuleRunDetailsByGroupDtoStatus = "RUNNING"
	RuleRunDetailsByGroupDtoStatusSUCCESS               RuleRunDetailsByGroupDtoStatus = "SUCCESS"
	RuleRunDetailsByGroupDtoStatusTECHNICALERROR        RuleRunDetailsByGroupDtoStatus = "TECHNICAL_ERROR"
)

// Defines values for RuleRunDtoIncidentStatus.
const (
	RuleRunDtoIncidentStatusCLOSED     RuleRunDtoIncidentStatus = "CLOSED"
	RuleRunDtoIncidentStatusINPROGRESS RuleRunDtoIncidentStatus = "IN_PROGRESS"
	RuleRunDtoIncidentStatusOPEN       RuleRunDtoIncidentStatus = "OPEN"
)

// Defines values for RuleRunDtoStatus.
const (
	FAILED                RuleRunDtoStatus = "FAILED"
	PENDING               RuleRunDtoStatus = "PENDING"
	REQUIRESYOURATTENTION RuleRunDtoStatus = "REQUIRES_YOUR_ATTENTION"
	RUNNING               RuleRunDtoStatus = "RUNNING"
	SUCCESS               RuleRunDtoStatus = "SUCCESS"
	TECHNICALERROR        RuleRunDtoStatus = "TECHNICAL_ERROR"
)

// Defines values for RuleRunDtoType.
const (
	RuleRunDtoTypeDBT       RuleRunDtoType = "DBT"
	RuleRunDtoTypeMANUAL    RuleRunDtoType = "MANUAL"
	RuleRunDtoTypeSCHEDULED RuleRunDtoType = "SCHEDULED"
)

// Defines values for RulesAddedIncidentEventDtoType.
const (
	RulesAddedIncidentEventDtoTypeASSIGNEESCHANGE               RulesAddedIncidentEventDtoType = "ASSIGNEES_CHANGE"
	RulesAddedIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED RulesAddedIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	RulesAddedIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   RulesAddedIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	RulesAddedIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED RulesAddedIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	RulesAddedIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE RulesAddedIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	RulesAddedIncidentEventDtoTypeCOMMENT                       RulesAddedIncidentEventDtoType = "COMMENT"
	RulesAddedIncidentEventDtoTypeCREATIONBYRULERUN             RulesAddedIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	RulesAddedIncidentEventDtoTypeCREATIONBYUSER                RulesAddedIncidentEventDtoType = "CREATION_BY_USER"
	RulesAddedIncidentEventDtoTypeNAMECHANGE                    RulesAddedIncidentEventDtoType = "NAME_CHANGE"
	RulesAddedIncidentEventDtoTypeNEWFAILURES                   RulesAddedIncidentEventDtoType = "NEW_FAILURES"
	RulesAddedIncidentEventDtoTypeRULESADDED                    RulesAddedIncidentEventDtoType = "RULES_ADDED"
	RulesAddedIncidentEventDtoTypeRULESMOVEDFROM                RulesAddedIncidentEventDtoType = "RULES_MOVED_FROM"
	RulesAddedIncidentEventDtoTypeRULESMOVEDTO                  RulesAddedIncidentEventDtoType = "RULES_MOVED_TO"
	RulesAddedIncidentEventDtoTypeSEVERITYCHANGE                RulesAddedIncidentEventDtoType = "SEVERITY_CHANGE"
	RulesAddedIncidentEventDtoTypeSTATUSCHANGE                  RulesAddedIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for RulesMovedFromIncidentEventDtoType.
const (
	RulesMovedFromIncidentEventDtoTypeASSIGNEESCHANGE               RulesMovedFromIncidentEventDtoType = "ASSIGNEES_CHANGE"
	RulesMovedFromIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED RulesMovedFromIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	RulesMovedFromIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   RulesMovedFromIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	RulesMovedFromIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED RulesMovedFromIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	RulesMovedFromIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE RulesMovedFromIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	RulesMovedFromIncidentEventDtoTypeCOMMENT                       RulesMovedFromIncidentEventDtoType = "COMMENT"
	RulesMovedFromIncidentEventDtoTypeCREATIONBYRULERUN             RulesMovedFromIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	RulesMovedFromIncidentEventDtoTypeCREATIONBYUSER                RulesMovedFromIncidentEventDtoType = "CREATION_BY_USER"
	RulesMovedFromIncidentEventDtoTypeNAMECHANGE                    RulesMovedFromIncidentEventDtoType = "NAME_CHANGE"
	RulesMovedFromIncidentEventDtoTypeNEWFAILURES                   RulesMovedFromIncidentEventDtoType = "NEW_FAILURES"
	RulesMovedFromIncidentEventDtoTypeRULESADDED                    RulesMovedFromIncidentEventDtoType = "RULES_ADDED"
	RulesMovedFromIncidentEventDtoTypeRULESMOVEDFROM                RulesMovedFromIncidentEventDtoType = "RULES_MOVED_FROM"
	RulesMovedFromIncidentEventDtoTypeRULESMOVEDTO                  RulesMovedFromIncidentEventDtoType = "RULES_MOVED_TO"
	RulesMovedFromIncidentEventDtoTypeSEVERITYCHANGE                RulesMovedFromIncidentEventDtoType = "SEVERITY_CHANGE"
	RulesMovedFromIncidentEventDtoTypeSTATUSCHANGE                  RulesMovedFromIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for RulesMovedToIncidentEventDtoType.
const (
	RulesMovedToIncidentEventDtoTypeASSIGNEESCHANGE               RulesMovedToIncidentEventDtoType = "ASSIGNEES_CHANGE"
	RulesMovedToIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED RulesMovedToIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	RulesMovedToIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   RulesMovedToIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	RulesMovedToIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED RulesMovedToIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	RulesMovedToIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE RulesMovedToIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	RulesMovedToIncidentEventDtoTypeCOMMENT                       RulesMovedToIncidentEventDtoType = "COMMENT"
	RulesMovedToIncidentEventDtoTypeCREATIONBYRULERUN             RulesMovedToIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	RulesMovedToIncidentEventDtoTypeCREATIONBYUSER                RulesMovedToIncidentEventDtoType = "CREATION_BY_USER"
	RulesMovedToIncidentEventDtoTypeNAMECHANGE                    RulesMovedToIncidentEventDtoType = "NAME_CHANGE"
	RulesMovedToIncidentEventDtoTypeNEWFAILURES                   RulesMovedToIncidentEventDtoType = "NEW_FAILURES"
	RulesMovedToIncidentEventDtoTypeRULESADDED                    RulesMovedToIncidentEventDtoType = "RULES_ADDED"
	RulesMovedToIncidentEventDtoTypeRULESMOVEDFROM                RulesMovedToIncidentEventDtoType = "RULES_MOVED_FROM"
	RulesMovedToIncidentEventDtoTypeRULESMOVEDTO                  RulesMovedToIncidentEventDtoType = "RULES_MOVED_TO"
	RulesMovedToIncidentEventDtoTypeSEVERITYCHANGE                RulesMovedToIncidentEventDtoType = "SEVERITY_CHANGE"
	RulesMovedToIncidentEventDtoTypeSTATUSCHANGE                  RulesMovedToIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for SeverityChangeIncidentEventDtoNewSeverity.
const (
	SeverityChangeIncidentEventDtoNewSeverityCritical SeverityChangeIncidentEventDtoNewSeverity = "Critical"
	SeverityChangeIncidentEventDtoNewSeverityHigh     SeverityChangeIncidentEventDtoNewSeverity = "High"
	SeverityChangeIncidentEventDtoNewSeverityLow      SeverityChangeIncidentEventDtoNewSeverity = "Low"
	SeverityChangeIncidentEventDtoNewSeverityModerate SeverityChangeIncidentEventDtoNewSeverity = "Moderate"
)

// Defines values for SeverityChangeIncidentEventDtoOldSeverity.
const (
	SeverityChangeIncidentEventDtoOldSeverityCritical SeverityChangeIncidentEventDtoOldSeverity = "Critical"
	SeverityChangeIncidentEventDtoOldSeverityHigh     SeverityChangeIncidentEventDtoOldSeverity = "High"
	SeverityChangeIncidentEventDtoOldSeverityLow      SeverityChangeIncidentEventDtoOldSeverity = "Low"
	SeverityChangeIncidentEventDtoOldSeverityModerate SeverityChangeIncidentEventDtoOldSeverity = "Moderate"
)

// Defines values for SeverityChangeIncidentEventDtoType.
const (
	SeverityChangeIncidentEventDtoTypeASSIGNEESCHANGE               SeverityChangeIncidentEventDtoType = "ASSIGNEES_CHANGE"
	SeverityChangeIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED SeverityChangeIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	SeverityChangeIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   SeverityChangeIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	SeverityChangeIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED SeverityChangeIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	SeverityChangeIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE SeverityChangeIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	SeverityChangeIncidentEventDtoTypeCOMMENT                       SeverityChangeIncidentEventDtoType = "COMMENT"
	SeverityChangeIncidentEventDtoTypeCREATIONBYRULERUN             SeverityChangeIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	SeverityChangeIncidentEventDtoTypeCREATIONBYUSER                SeverityChangeIncidentEventDtoType = "CREATION_BY_USER"
	SeverityChangeIncidentEventDtoTypeNAMECHANGE                    SeverityChangeIncidentEventDtoType = "NAME_CHANGE"
	SeverityChangeIncidentEventDtoTypeNEWFAILURES                   SeverityChangeIncidentEventDtoType = "NEW_FAILURES"
	SeverityChangeIncidentEventDtoTypeRULESADDED                    SeverityChangeIncidentEventDtoType = "RULES_ADDED"
	SeverityChangeIncidentEventDtoTypeRULESMOVEDFROM                SeverityChangeIncidentEventDtoType = "RULES_MOVED_FROM"
	SeverityChangeIncidentEventDtoTypeRULESMOVEDTO                  SeverityChangeIncidentEventDtoType = "RULES_MOVED_TO"
	SeverityChangeIncidentEventDtoTypeSEVERITYCHANGE                SeverityChangeIncidentEventDtoType = "SEVERITY_CHANGE"
	SeverityChangeIncidentEventDtoTypeSTATUSCHANGE                  SeverityChangeIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for StatusChangeIncidentEventDtoNewQualification.
const (
	StatusChangeIncidentEventDtoNewQualificationDUPLICATE     StatusChangeIncidentEventDtoNewQualification = "DUPLICATE"
	StatusChangeIncidentEventDtoNewQualificationEXPECTED      StatusChangeIncidentEventDtoNewQualification = "EXPECTED"
	StatusChangeIncidentEventDtoNewQualificationFALSEPOSITIVE StatusChangeIncidentEventDtoNewQualification = "FALSE_POSITIVE"
	StatusChangeIncidentEventDtoNewQualificationFIXED         StatusChangeIncidentEventDtoNewQualification = "FIXED"
	StatusChangeIncidentEventDtoNewQualificationKNOWNERROR    StatusChangeIncidentEventDtoNewQualification = "KNOWN_ERROR"
)

// Defines values for StatusChangeIncidentEventDtoNewStatus.
const (
	StatusChangeIncidentEventDtoNewStatusCLOSED     StatusChangeIncidentEventDtoNewStatus = "CLOSED"
	StatusChangeIncidentEventDtoNewStatusINPROGRESS StatusChangeIncidentEventDtoNewStatus = "IN_PROGRESS"
	StatusChangeIncidentEventDtoNewStatusOPEN       StatusChangeIncidentEventDtoNewStatus = "OPEN"
)

// Defines values for StatusChangeIncidentEventDtoOldQualification.
const (
	StatusChangeIncidentEventDtoOldQualificationDUPLICATE     StatusChangeIncidentEventDtoOldQualification = "DUPLICATE"
	StatusChangeIncidentEventDtoOldQualificationEXPECTED      StatusChangeIncidentEventDtoOldQualification = "EXPECTED"
	StatusChangeIncidentEventDtoOldQualificationFALSEPOSITIVE StatusChangeIncidentEventDtoOldQualification = "FALSE_POSITIVE"
	StatusChangeIncidentEventDtoOldQualificationFIXED         StatusChangeIncidentEventDtoOldQualification = "FIXED"
	StatusChangeIncidentEventDtoOldQualificationKNOWNERROR    StatusChangeIncidentEventDtoOldQualification = "KNOWN_ERROR"
)

// Defines values for StatusChangeIncidentEventDtoOldStatus.
const (
	StatusChangeIncidentEventDtoOldStatusCLOSED     StatusChangeIncidentEventDtoOldStatus = "CLOSED"
	StatusChangeIncidentEventDtoOldStatusINPROGRESS StatusChangeIncidentEventDtoOldStatus = "IN_PROGRESS"
	StatusChangeIncidentEventDtoOldStatusOPEN       StatusChangeIncidentEventDtoOldStatus = "OPEN"
)

// Defines values for StatusChangeIncidentEventDtoType.
const (
	StatusChangeIncidentEventDtoTypeASSIGNEESCHANGE               StatusChangeIncidentEventDtoType = "ASSIGNEES_CHANGE"
	StatusChangeIncidentEventDtoTypeCOLLABORATIONTOOLDISCONNECTED StatusChangeIncidentEventDtoType = "COLLABORATION_TOOL_DISCONNECTED"
	StatusChangeIncidentEventDtoTypeCOLLABORATIONTOOLITEMLINKED   StatusChangeIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_LINKED"
	StatusChangeIncidentEventDtoTypeCOLLABORATIONTOOLITEMUNLINKED StatusChangeIncidentEventDtoType = "COLLABORATION_TOOL_ITEM_UNLINKED"
	StatusChangeIncidentEventDtoTypeCOLLABORATIONTOOLSTATUSCHANGE StatusChangeIncidentEventDtoType = "COLLABORATION_TOOL_STATUS_CHANGE"
	StatusChangeIncidentEventDtoTypeCOMMENT                       StatusChangeIncidentEventDtoType = "COMMENT"
	StatusChangeIncidentEventDtoTypeCREATIONBYRULERUN             StatusChangeIncidentEventDtoType = "CREATION_BY_RULE_RUN"
	StatusChangeIncidentEventDtoTypeCREATIONBYUSER                StatusChangeIncidentEventDtoType = "CREATION_BY_USER"
	StatusChangeIncidentEventDtoTypeNAMECHANGE                    StatusChangeIncidentEventDtoType = "NAME_CHANGE"
	StatusChangeIncidentEventDtoTypeNEWFAILURES                   StatusChangeIncidentEventDtoType = "NEW_FAILURES"
	StatusChangeIncidentEventDtoTypeRULESADDED                    StatusChangeIncidentEventDtoType = "RULES_ADDED"
	StatusChangeIncidentEventDtoTypeRULESMOVEDFROM                StatusChangeIncidentEventDtoType = "RULES_MOVED_FROM"
	StatusChangeIncidentEventDtoTypeRULESMOVEDTO                  StatusChangeIncidentEventDtoType = "RULES_MOVED_TO"
	StatusChangeIncidentEventDtoTypeSEVERITYCHANGE                StatusChangeIncidentEventDtoType = "SEVERITY_CHANGE"
	StatusChangeIncidentEventDtoTypeSTATUSCHANGE                  StatusChangeIncidentEventDtoType = "STATUS_CHANGE"
)

// Defines values for TagCreateDtoType.
const (
	TagCreateDtoTypeBIGQUERYEXTERNAL          TagCreateDtoType = "BIGQUERY_EXTERNAL"
	TagCreateDtoTypeGENERIC                   TagCreateDtoType = "GENERIC"
	TagCreateDtoTypeHIDDENDATACLASSIFICATION  TagCreateDtoType = "HIDDEN_DATA_CLASSIFICATION"
	TagCreateDtoTypeSNOWFLAKEEXTERNAL         TagCreateDtoType = "SNOWFLAKE_EXTERNAL"
	TagCreateDtoTypeTERM                      TagCreateDtoType = "TERM"
	TagCreateDtoTypeVISIBLEDATACLASSIFICATION TagCreateDtoType = "VISIBLE_DATA_CLASSIFICATION"
)

// Defines values for TagDtoType.
const (
	TagDtoTypeBIGQUERYEXTERNAL          TagDtoType = "BIGQUERY_EXTERNAL"
	TagDtoTypeGENERIC                   TagDtoType = "GENERIC"
	TagDtoTypeHIDDENDATACLASSIFICATION  TagDtoType = "HIDDEN_DATA_CLASSIFICATION"
	TagDtoTypeSNOWFLAKEEXTERNAL         TagDtoType = "SNOWFLAKE_EXTERNAL"
	TagDtoTypeTERM                      TagDtoType = "TERM"
	TagDtoTypeVISIBLEDATACLASSIFICATION TagDtoType = "VISIBLE_DATA_CLASSIFICATION"
)

// Defines values for TagSearchFilterElementDtoType.
const (
	TagSearchFilterElementDtoTypeBIGQUERYEXTERNAL          TagSearchFilterElementDtoType = "BIGQUERY_EXTERNAL"
	TagSearchFilterElementDtoTypeGENERIC                   TagSearchFilterElementDtoType = "GENERIC"
	TagSearchFilterElementDtoTypeHIDDENDATACLASSIFICATION  TagSearchFilterElementDtoType = "HIDDEN_DATA_CLASSIFICATION"
	TagSearchFilterElementDtoTypeSNOWFLAKEEXTERNAL         TagSearchFilterElementDtoType = "SNOWFLAKE_EXTERNAL"
	TagSearchFilterElementDtoTypeTERM                      TagSearchFilterElementDtoType = "TERM"
	TagSearchFilterElementDtoTypeVISIBLEDATACLASSIFICATION TagSearchFilterElementDtoType = "VISIBLE_DATA_CLASSIFICATION"
)

// Defines values for TransformationAssetDtoDestinationPlatform.
const (
	TransformationAssetDtoDestinationPlatformACCELDATA                 TransformationAssetDtoDestinationPlatform = "ACCELDATA"
	TransformationAssetDtoDestinationPlatformACRYLDATA                 TransformationAssetDtoDestinationPlatform = "ACRYL_DATA"
	TransformationAssetDtoDestinationPlatformACTIANVECTOR              TransformationAssetDtoDestinationPlatform = "ACTIAN_VECTOR"
	TransformationAssetDtoDestinationPlatformACTIVECAMPAIGN            TransformationAssetDtoDestinationPlatform = "ACTIVE_CAMPAIGN"
	TransformationAssetDtoDestinationPlatformADA                       TransformationAssetDtoDestinationPlatform = "ADA"
	TransformationAssetDtoDestinationPlatformADJUST                    TransformationAssetDtoDestinationPlatform = "ADJUST"
	TransformationAssetDtoDestinationPlatformADOBE                     TransformationAssetDtoDestinationPlatform = "ADOBE"
	TransformationAssetDtoDestinationPlatformADPWFN                    TransformationAssetDtoDestinationPlatform = "ADP_WFN"
	TransformationAssetDtoDestinationPlatformADROLL                    TransformationAssetDtoDestinationPlatform = "ADROLL"
	TransformationAssetDtoDestinationPlatformAFFINITY                  TransformationAssetDtoDestinationPlatform = "AFFINITY"
	TransformationAssetDtoDestinationPlatformAIRBYTE                   TransformationAssetDtoDestinationPlatform = "AIRBYTE"
	TransformationAssetDtoDestinationPlatformAIRCALL                   TransformationAssetDtoDestinationPlatform = "AIRCALL"
	TransformationAssetDtoDestinationPlatformAIRFLOW                   TransformationAssetDtoDestinationPlatform = "AIRFLOW"
	TransformationAssetDtoDestinationPlatformAIRTABLE                  TransformationAssetDtoDestinationPlatform = "AIRTABLE"
	TransformationAssetDtoDestinationPlatformALATION                   TransformationAssetDtoDestinationPlatform = "ALATION"
	TransformationAssetDtoDestinationPlatformALCHEMER                  TransformationAssetDtoDestinationPlatform = "ALCHEMER"
	TransformationAssetDtoDestinationPlatformALVINAI                   TransformationAssetDtoDestinationPlatform = "ALVIN_AI"
	TransformationAssetDtoDestinationPlatformAMAZON                    TransformationAssetDtoDestinationPlatform = "AMAZON"
	TransformationAssetDtoDestinationPlatformAMAZONCLOUDFRONT          TransformationAssetDtoDestinationPlatform = "AMAZON_CLOUDFRONT"
	TransformationAssetDtoDestinationPlatformAMAZONDOCUMENTDB          TransformationAssetDtoDestinationPlatform = "AMAZON_DOCUMENTDB"
	TransformationAssetDtoDestinationPlatformAMAZONDYNAMODB            TransformationAssetDtoDestinationPlatform = "AMAZON_DYNAMODB"
	TransformationAssetDtoDestinationPlatformAMAZONFIREHOSE            TransformationAssetDtoDestinationPlatform = "AMAZON_FIREHOSE"
	TransformationAssetDtoDestinationPlatformAMAZONSAGEMAKER           TransformationAssetDtoDestinationPlatform = "AMAZON_SAGEMAKER"
	TransformationAssetDtoDestinationPlatformAMAZONSELLINGPARTNER      TransformationAssetDtoDestinationPlatform = "AMAZON_SELLING_PARTNER"
	TransformationAssetDtoDestinationPlatformAMPLITUDE                 TransformationAssetDtoDestinationPlatform = "AMPLITUDE"
	TransformationAssetDtoDestinationPlatformANAPLAN                   TransformationAssetDtoDestinationPlatform = "ANAPLAN"
	TransformationAssetDtoDestinationPlatformANOMALO                   TransformationAssetDtoDestinationPlatform = "ANOMALO"
	TransformationAssetDtoDestinationPlatformAPACHEKAFKA               TransformationAssetDtoDestinationPlatform = "APACHE_KAFKA"
	TransformationAssetDtoDestinationPlatformAPACHESPARK               TransformationAssetDtoDestinationPlatform = "APACHE_SPARK"
	TransformationAssetDtoDestinationPlatformAPPCUES                   TransformationAssetDtoDestinationPlatform = "APPCUES"
	TransformationAssetDtoDestinationPlatformAPPFIGURES                TransformationAssetDtoDestinationPlatform = "APPFIGURES"
	TransformationAssetDtoDestinationPlatformAPPLE                     TransformationAssetDtoDestinationPlatform = "APPLE"
	TransformationAssetDtoDestinationPlatformAPPLEAPPSTORE             TransformationAssetDtoDestinationPlatform = "APPLE_APP_STORE"
	TransformationAssetDtoDestinationPlatformAPPSFLYER                 TransformationAssetDtoDestinationPlatform = "APPSFLYER"
	TransformationAssetDtoDestinationPlatformASANA                     TransformationAssetDtoDestinationPlatform = "ASANA"
	TransformationAssetDtoDestinationPlatformASSEMBLED                 TransformationAssetDtoDestinationPlatform = "ASSEMBLED"
	TransformationAssetDtoDestinationPlatformATHENA                    TransformationAssetDtoDestinationPlatform = "ATHENA"
	TransformationAssetDtoDestinationPlatformATLAN                     TransformationAssetDtoDestinationPlatform = "ATLAN"
	TransformationAssetDtoDestinationPlatformATLASSIANCONFLUENCE       TransformationAssetDtoDestinationPlatform = "ATLASSIAN_CONFLUENCE"
	TransformationAssetDtoDestinationPlatformATLASSIANJIRA             TransformationAssetDtoDestinationPlatform = "ATLASSIAN_JIRA"
	TransformationAssetDtoDestinationPlatformATLASSIANOPSGENIE         TransformationAssetDtoDestinationPlatform = "ATLASSIAN_OPSGENIE"
	TransformationAssetDtoDestinationPlatformAUTH0                     TransformationAssetDtoDestinationPlatform = "AUTH0"
	TransformationAssetDtoDestinationPlatformAUTODESKBIM360            TransformationAssetDtoDestinationPlatform = "AUTODESK_BIM_360"
	TransformationAssetDtoDestinationPlatformAWIN                      TransformationAssetDtoDestinationPlatform = "AWIN"
	TransformationAssetDtoDestinationPlatformAWSCLOUDTRAIL             TransformationAssetDtoDestinationPlatform = "AWS_CLOUDTRAIL"
	TransformationAssetDtoDestinationPlatformAWSCOSTEXPLORER           TransformationAssetDtoDestinationPlatform = "AWS_COST_EXPLORER"
	TransformationAssetDtoDestinationPlatformAWSINVENTORY              TransformationAssetDtoDestinationPlatform = "AWS_INVENTORY"
	TransformationAssetDtoDestinationPlatformAWSLAMBDA                 TransformationAssetDtoDestinationPlatform = "AWS_LAMBDA"
	TransformationAssetDtoDestinationPlatformAZURE                     TransformationAssetDtoDestinationPlatform = "AZURE"
	TransformationAssetDtoDestinationPlatformBALLOTREADY               TransformationAssetDtoDestinationPlatform = "BALLOT_READY"
	TransformationAssetDtoDestinationPlatformBAMBOOHR                  TransformationAssetDtoDestinationPlatform = "BAMBOOHR"
	TransformationAssetDtoDestinationPlatformBIGCOMMERCE               TransformationAssetDtoDestinationPlatform = "BIGCOMMERCE"
	TransformationAssetDtoDestinationPlatformBIGEYE                    TransformationAssetDtoDestinationPlatform = "BIGEYE"
	TransformationAssetDtoDestinationPlatformBIGQUERY                  TransformationAssetDtoDestinationPlatform = "BIGQUERY"
	TransformationAssetDtoDestinationPlatformBILLINGPLATFORM           TransformationAssetDtoDestinationPlatform = "BILLINGPLATFORM"
	TransformationAssetDtoDestinationPlatformBIRDEYE                   TransformationAssetDtoDestinationPlatform = "BIRDEYE"
	TransformationAssetDtoDestinationPlatformBLACKBOARD                TransformationAssetDtoDestinationPlatform = "BLACKBOARD"
	TransformationAssetDtoDestinationPlatformBOX                       TransformationAssetDtoDestinationPlatform = "BOX"
	TransformationAssetDtoDestinationPlatformBRAINTREE                 TransformationAssetDtoDestinationPlatform = "BRAINTREE"
	TransformationAssetDtoDestinationPlatformBRAZE                     TransformationAssetDtoDestinationPlatform = "BRAZE"
	TransformationAssetDtoDestinationPlatformBREVO                     TransformationAssetDtoDestinationPlatform = "BREVO"
	TransformationAssetDtoDestinationPlatformBREX                      TransformationAssetDtoDestinationPlatform = "BREX"
	TransformationAssetDtoDestinationPlatformBUILDKITE                 TransformationAssetDtoDestinationPlatform = "BUILDKITE"
	TransformationAssetDtoDestinationPlatformBUZZSPROUT                TransformationAssetDtoDestinationPlatform = "BUZZSPROUT"
	TransformationAssetDtoDestinationPlatformCALENDLY                  TransformationAssetDtoDestinationPlatform = "CALENDLY"
	TransformationAssetDtoDestinationPlatformCAMPAIGNMONITOR           TransformationAssetDtoDestinationPlatform = "CAMPAIGN_MONITOR"
	TransformationAssetDtoDestinationPlatformCANNY                     TransformationAssetDtoDestinationPlatform = "CANNY"
	TransformationAssetDtoDestinationPlatformCANVAS                    TransformationAssetDtoDestinationPlatform = "CANVAS"
	TransformationAssetDtoDestinationPlatformCAPTERRA                  TransformationAssetDtoDestinationPlatform = "CAPTERRA"
	TransformationAssetDtoDestinationPlatformCASTORDOC                 TransformationAssetDtoDestinationPlatform = "CASTOR_DOC"
	TransformationAssetDtoDestinationPlatformCENSUS                    TransformationAssetDtoDestinationPlatform = "CENSUS"
	TransformationAssetDtoDestinationPlatformCERTINIA                  TransformationAssetDtoDestinationPlatform = "CERTINIA"
	TransformationAssetDtoDestinationPlatformCHAMELEON                 TransformationAssetDtoDestinationPlatform = "CHAMELEON"
	TransformationAssetDtoDestinationPlatformCHANNELADVISOR            TransformationAssetDtoDestinationPlatform = "CHANNEL_ADVISOR"
	TransformationAssetDtoDestinationPlatformCHARGEBEE                 TransformationAssetDtoDestinationPlatform = "CHARGEBEE"
	TransformationAssetDtoDestinationPlatformCHARGEDESK                TransformationAssetDtoDestinationPlatform = "CHARGEDESK"
	TransformationAssetDtoDestinationPlatformCHARTMOGUL                TransformationAssetDtoDestinationPlatform = "CHARTMOGUL"
	TransformationAssetDtoDestinationPlatformCHORUSAI                  TransformationAssetDtoDestinationPlatform = "CHORUS_AI"
	TransformationAssetDtoDestinationPlatformCHURNKEY                  TransformationAssetDtoDestinationPlatform = "CHURNKEY"
	TransformationAssetDtoDestinationPlatformCHURNZERO                 TransformationAssetDtoDestinationPlatform = "CHURNZERO"
	TransformationAssetDtoDestinationPlatformCIMIS                     TransformationAssetDtoDestinationPlatform = "CIMIS"
	TransformationAssetDtoDestinationPlatformCIN7                      TransformationAssetDtoDestinationPlatform = "CIN7"
	TransformationAssetDtoDestinationPlatformCIRCLECI                  TransformationAssetDtoDestinationPlatform = "CIRCLE_CI"
	TransformationAssetDtoDestinationPlatformCLARI                     TransformationAssetDtoDestinationPlatform = "CLARI"
	TransformationAssetDtoDestinationPlatformCLICKUP                   TransformationAssetDtoDestinationPlatform = "CLICKUP"
	TransformationAssetDtoDestinationPlatformCLIFFAI                   TransformationAssetDtoDestinationPlatform = "CLIFF_AI"
	TransformationAssetDtoDestinationPlatformCLOSE                     TransformationAssetDtoDestinationPlatform = "CLOSE"
	TransformationAssetDtoDestinationPlatformCOLLIBRA                  TransformationAssetDtoDestinationPlatform = "COLLIBRA"
	TransformationAssetDtoDestinationPlatformCOMMERCETOOLS             TransformationAssetDtoDestinationPlatform = "COMMERCETOOLS"
	TransformationAssetDtoDestinationPlatformCOMPOSER                  TransformationAssetDtoDestinationPlatform = "COMPOSER"
	TransformationAssetDtoDestinationPlatformCONFLUENTCLOUD            TransformationAssetDtoDestinationPlatform = "CONFLUENT_CLOUD"
	TransformationAssetDtoDestinationPlatformCONTRASTSECURITY          TransformationAssetDtoDestinationPlatform = "CONTRAST_SECURITY"
	TransformationAssetDtoDestinationPlatformCOUPA                     TransformationAssetDtoDestinationPlatform = "COUPA"
	TransformationAssetDtoDestinationPlatformCRITEO                    TransformationAssetDtoDestinationPlatform = "CRITEO"
	TransformationAssetDtoDestinationPlatformCROSSBEAM                 TransformationAssetDtoDestinationPlatform = "CROSSBEAM"
	TransformationAssetDtoDestinationPlatformCRUNCHBASE                TransformationAssetDtoDestinationPlatform = "CRUNCHBASE"
	TransformationAssetDtoDestinationPlatformCUSTOMERIO                TransformationAssetDtoDestinationPlatform = "CUSTOMER_IO"
	TransformationAssetDtoDestinationPlatformD2LBRIGHTSPACE            TransformationAssetDtoDestinationPlatform = "D2L_BRIGHTSPACE"
	TransformationAssetDtoDestinationPlatformDAGSTER                   TransformationAssetDtoDestinationPlatform = "DAGSTER"
	TransformationAssetDtoDestinationPlatformDATABAND                  TransformationAssetDtoDestinationPlatform = "DATABAND"
	TransformationAssetDtoDestinationPlatformDATABRICKS                TransformationAssetDtoDestinationPlatform = "DATABRICKS"
	TransformationAssetDtoDestinationPlatformDATADOG                   TransformationAssetDtoDestinationPlatform = "DATADOG"
	TransformationAssetDtoDestinationPlatformDATAEDO                   TransformationAssetDtoDestinationPlatform = "DATAEDO"
	TransformationAssetDtoDestinationPlatformDATAFOLD                  TransformationAssetDtoDestinationPlatform = "DATAFOLD"
	TransformationAssetDtoDestinationPlatformDATAGALAXY                TransformationAssetDtoDestinationPlatform = "DATAGALAXY"
	TransformationAssetDtoDestinationPlatformDATAHUB                   TransformationAssetDtoDestinationPlatform = "DATAHUB"
	TransformationAssetDtoDestinationPlatformDATAIKU                   TransformationAssetDtoDestinationPlatform = "DATAIKU"
	TransformationAssetDtoDestinationPlatformDATAWORLD                 TransformationAssetDtoDestinationPlatform = "DATA_WORLD"
	TransformationAssetDtoDestinationPlatformDB2                       TransformationAssetDtoDestinationPlatform = "DB2"
	TransformationAssetDtoDestinationPlatformDBT                       TransformationAssetDtoDestinationPlatform = "DBT"
	TransformationAssetDtoDestinationPlatformDBTCLOUD                  TransformationAssetDtoDestinationPlatform = "DBTCLOUD"
	TransformationAssetDtoDestinationPlatformDCLLOGISTICS              TransformationAssetDtoDestinationPlatform = "DCL_LOGISTICS"
	TransformationAssetDtoDestinationPlatformDEAR                      TransformationAssetDtoDestinationPlatform = "DEAR"
	TransformationAssetDtoDestinationPlatformDECUBE                    TransformationAssetDtoDestinationPlatform = "DECUBE"
	TransformationAssetDtoDestinationPlatformDELIGHTED                 TransformationAssetDtoDestinationPlatform = "DELIGHTED"
	TransformationAssetDtoDestinationPlatformDEPUTY                    TransformationAssetDtoDestinationPlatform = "DEPUTY"
	TransformationAssetDtoDestinationPlatformDESTINI                   TransformationAssetDtoDestinationPlatform = "DESTINI"
	TransformationAssetDtoDestinationPlatformDIXA                      TransformationAssetDtoDestinationPlatform = "DIXA"
	TransformationAssetDtoDestinationPlatformDOCEBO                    TransformationAssetDtoDestinationPlatform = "DOCEBO"
	TransformationAssetDtoDestinationPlatformDRATA                     TransformationAssetDtoDestinationPlatform = "DRATA"
	TransformationAssetDtoDestinationPlatformDRIFT                     TransformationAssetDtoDestinationPlatform = "DRIFT"
	TransformationAssetDtoDestinationPlatformDRIP                      TransformationAssetDtoDestinationPlatform = "DRIP"
	TransformationAssetDtoDestinationPlatformDROPBOX                   TransformationAssetDtoDestinationPlatform = "DROPBOX"
	TransformationAssetDtoDestinationPlatformDUOPLANE                  TransformationAssetDtoDestinationPlatform = "DUOPLANE"
	TransformationAssetDtoDestinationPlatformEASYPOST                  TransformationAssetDtoDestinationPlatform = "EASY_POST"
	TransformationAssetDtoDestinationPlatformECONOMIC                  TransformationAssetDtoDestinationPlatform = "E_CONOMIC"
	TransformationAssetDtoDestinationPlatformELASTICSEARCH             TransformationAssetDtoDestinationPlatform = "ELASTICSEARCH"
	TransformationAssetDtoDestinationPlatformELEMENTARY                TransformationAssetDtoDestinationPlatform = "ELEMENTARY"
	TransformationAssetDtoDestinationPlatformELLUCIAN                  TransformationAssetDtoDestinationPlatform = "ELLUCIAN"
	TransformationAssetDtoDestinationPlatformELOQUA                    TransformationAssetDtoDestinationPlatform = "ELOQUA"
	TransformationAssetDtoDestinationPlatformEMAIL                     TransformationAssetDtoDestinationPlatform = "EMAIL"
	TransformationAssetDtoDestinationPlatformEMPLOYMENTHERO            TransformationAssetDtoDestinationPlatform = "EMPLOYMENT_HERO"
	TransformationAssetDtoDestinationPlatformEPICORPROPHET21           TransformationAssetDtoDestinationPlatform = "EPICOR_PROPHET_21"
	TransformationAssetDtoDestinationPlatformEVENTBRITE                TransformationAssetDtoDestinationPlatform = "EVENTBRITE"
	TransformationAssetDtoDestinationPlatformEVERHOUR                  TransformationAssetDtoDestinationPlatform = "EVERHOUR"
	TransformationAssetDtoDestinationPlatformEXCEL                     TransformationAssetDtoDestinationPlatform = "EXCEL"
	TransformationAssetDtoDestinationPlatformEXPENSIFY                 TransformationAssetDtoDestinationPlatform = "EXPENSIFY"
	TransformationAssetDtoDestinationPlatformFACEBOOK                  TransformationAssetDtoDestinationPlatform = "FACEBOOK"
	TransformationAssetDtoDestinationPlatformFIFTEENFIVE               TransformationAssetDtoDestinationPlatform = "FIFTEENFIVE"
	TransformationAssetDtoDestinationPlatformFIGMA                     TransformationAssetDtoDestinationPlatform = "FIGMA"
	TransformationAssetDtoDestinationPlatformFIREBASE                  TransformationAssetDtoDestinationPlatform = "FIREBASE"
	TransformationAssetDtoDestinationPlatformFIREBOLT                  TransformationAssetDtoDestinationPlatform = "FIREBOLT"
	TransformationAssetDtoDestinationPlatformFIVETRAN                  TransformationAssetDtoDestinationPlatform = "FIVETRAN"
	TransformationAssetDtoDestinationPlatformFLEXPORT                  TransformationAssetDtoDestinationPlatform = "FLEXPORT"
	TransformationAssetDtoDestinationPlatformFORJ                      TransformationAssetDtoDestinationPlatform = "FORJ"
	TransformationAssetDtoDestinationPlatformFOUNTAIN                  TransformationAssetDtoDestinationPlatform = "FOUNTAIN"
	TransformationAssetDtoDestinationPlatformFREIGHTVIEW               TransformationAssetDtoDestinationPlatform = "FREIGHTVIEW"
	TransformationAssetDtoDestinationPlatformFRESHBOOKS                TransformationAssetDtoDestinationPlatform = "FRESHBOOKS"
	TransformationAssetDtoDestinationPlatformFRESHCHAT                 TransformationAssetDtoDestinationPlatform = "FRESHCHAT"
	TransformationAssetDtoDestinationPlatformFRESHDESK                 TransformationAssetDtoDestinationPlatform = "FRESHDESK"
	TransformationAssetDtoDestinationPlatformFRESHDESKCONTACTCENTER    TransformationAssetDtoDestinationPlatform = "FRESHDESK_CONTACT_CENTER"
	TransformationAssetDtoDestinationPlatformFRESHSERVICE              TransformationAssetDtoDestinationPlatform = "FRESHSERVICE"
	TransformationAssetDtoDestinationPlatformFRESHSUCCESS              TransformationAssetDtoDestinationPlatform = "FRESHSUCCESS"
	TransformationAssetDtoDestinationPlatformFRESHTEAM                 TransformationAssetDtoDestinationPlatform = "FRESHTEAM"
	TransformationAssetDtoDestinationPlatformFRIENDBUY                 TransformationAssetDtoDestinationPlatform = "FRIENDBUY"
	TransformationAssetDtoDestinationPlatformFRONT                     TransformationAssetDtoDestinationPlatform = "FRONT"
	TransformationAssetDtoDestinationPlatformFTP                       TransformationAssetDtoDestinationPlatform = "FTP"
	TransformationAssetDtoDestinationPlatformFULLSTORY                 TransformationAssetDtoDestinationPlatform = "FULLSTORY"
	TransformationAssetDtoDestinationPlatformG2                        TransformationAssetDtoDestinationPlatform = "G2"
	TransformationAssetDtoDestinationPlatformGAINSIGHT                 TransformationAssetDtoDestinationPlatform = "GAINSIGHT"
	TransformationAssetDtoDestinationPlatformGEM                       TransformationAssetDtoDestinationPlatform = "GEM"
	TransformationAssetDtoDestinationPlatformGIT                       TransformationAssetDtoDestinationPlatform = "GIT"
	TransformationAssetDtoDestinationPlatformGITHUB                    TransformationAssetDtoDestinationPlatform = "GITHUB"
	TransformationAssetDtoDestinationPlatformGITLAB                    TransformationAssetDtoDestinationPlatform = "GITLAB"
	TransformationAssetDtoDestinationPlatformGLADLY                    TransformationAssetDtoDestinationPlatform = "GLADLY"
	TransformationAssetDtoDestinationPlatformGOCARDLESS                TransformationAssetDtoDestinationPlatform = "GOCARDLESS"
	TransformationAssetDtoDestinationPlatformGONG                      TransformationAssetDtoDestinationPlatform = "GONG"
	TransformationAssetDtoDestinationPlatformGOOGLE                    TransformationAssetDtoDestinationPlatform = "GOOGLE"
	TransformationAssetDtoDestinationPlatformGOOGLEADMANAGER           TransformationAssetDtoDestinationPlatform = "GOOGLE_AD_MANAGER"
	TransformationAssetDtoDestinationPlatformGOOGLEADS                 TransformationAssetDtoDestinationPlatform = "GOOGLE_ADS"
	TransformationAssetDtoDestinationPlatformGOOGLEANALYTICS           TransformationAssetDtoDestinationPlatform = "GOOGLE_ANALYTICS"
	TransformationAssetDtoDestinationPlatformGOOGLECALENDAR            TransformationAssetDtoDestinationPlatform = "GOOGLE_CALENDAR"
	TransformationAssetDtoDestinationPlatformGOOGLECAMPAIGNMANAGER     TransformationAssetDtoDestinationPlatform = "GOOGLE_CAMPAIGN_MANAGER"
	TransformationAssetDtoDestinationPlatformGOOGLECHROME              TransformationAssetDtoDestinationPlatform = "GOOGLE_CHROME"
	TransformationAssetDtoDestinationPlatformGOOGLECLOUD               TransformationAssetDtoDestinationPlatform = "GOOGLE_CLOUD"
	TransformationAssetDtoDestinationPlatformGOOGLECLOUDSTORAGE        TransformationAssetDtoDestinationPlatform = "GOOGLE_CLOUD_STORAGE"
	TransformationAssetDtoDestinationPlatformGOOGLEDISPLAY             TransformationAssetDtoDestinationPlatform = "GOOGLE_DISPLAY"
	TransformationAssetDtoDestinationPlatformGOOGLEDRIVE               TransformationAssetDtoDestinationPlatform = "GOOGLE_DRIVE"
	TransformationAssetDtoDestinationPlatformGOOGLEPLAY                TransformationAssetDtoDestinationPlatform = "GOOGLE_PLAY"
	TransformationAssetDtoDestinationPlatformGOOGLESEARCHADS360        TransformationAssetDtoDestinationPlatform = "GOOGLE_SEARCH_ADS_360"
	TransformationAssetDtoDestinationPlatformGOOGLESEARCHCONSOLE       TransformationAssetDtoDestinationPlatform = "GOOGLE_SEARCH_CONSOLE"
	TransformationAssetDtoDestinationPlatformGOOGLESHEETS              TransformationAssetDtoDestinationPlatform = "GOOGLE_SHEETS"
	TransformationAssetDtoDestinationPlatformGOOGLETASKS               TransformationAssetDtoDestinationPlatform = "GOOGLE_TASKS"
	TransformationAssetDtoDestinationPlatformGORGIAS                   TransformationAssetDtoDestinationPlatform = "GORGIAS"
	TransformationAssetDtoDestinationPlatformGREENHOUSE                TransformationAssetDtoDestinationPlatform = "GREENHOUSE"
	TransformationAssetDtoDestinationPlatformGREENPLUM                 TransformationAssetDtoDestinationPlatform = "GREENPLUM"
	TransformationAssetDtoDestinationPlatformGREENPOWERMONITOR         TransformationAssetDtoDestinationPlatform = "GREEN_POWER_MONITOR"
	TransformationAssetDtoDestinationPlatformGREPSR                    TransformationAssetDtoDestinationPlatform = "GREPSR"
	TransformationAssetDtoDestinationPlatformGRIN                      TransformationAssetDtoDestinationPlatform = "GRIN"
	TransformationAssetDtoDestinationPlatformGURU                      TransformationAssetDtoDestinationPlatform = "GURU"
	TransformationAssetDtoDestinationPlatformH2                        TransformationAssetDtoDestinationPlatform = "H2"
	TransformationAssetDtoDestinationPlatformHARVEST                   TransformationAssetDtoDestinationPlatform = "HARVEST"
	TransformationAssetDtoDestinationPlatformHDFS                      TransformationAssetDtoDestinationPlatform = "HDFS"
	TransformationAssetDtoDestinationPlatformHDFSSTORAGE               TransformationAssetDtoDestinationPlatform = "HDFS_STORAGE"
	TransformationAssetDtoDestinationPlatformHEAP                      TransformationAssetDtoDestinationPlatform = "HEAP"
	TransformationAssetDtoDestinationPlatformHEIGHT                    TransformationAssetDtoDestinationPlatform = "HEIGHT"
	TransformationAssetDtoDestinationPlatformHELPSCOUT                 TransformationAssetDtoDestinationPlatform = "HELP_SCOUT"
	TransformationAssetDtoDestinationPlatformHELPSHIFT                 TransformationAssetDtoDestinationPlatform = "HELPSHIFT"
	TransformationAssetDtoDestinationPlatformHEROKUKAFKA               TransformationAssetDtoDestinationPlatform = "HEROKU_KAFKA"
	TransformationAssetDtoDestinationPlatformHIBOB                     TransformationAssetDtoDestinationPlatform = "HIBOB"
	TransformationAssetDtoDestinationPlatformHIGHTOUCH                 TransformationAssetDtoDestinationPlatform = "HIGH_TOUCH"
	TransformationAssetDtoDestinationPlatformHIVE                      TransformationAssetDtoDestinationPlatform = "HIVE"
	TransformationAssetDtoDestinationPlatformHIVEPROCESS               TransformationAssetDtoDestinationPlatform = "HIVE_PROCESS"
	TransformationAssetDtoDestinationPlatformHOPIN                     TransformationAssetDtoDestinationPlatform = "HOPIN"
	TransformationAssetDtoDestinationPlatformHUBSPOT                   TransformationAssetDtoDestinationPlatform = "HUBSPOT"
	TransformationAssetDtoDestinationPlatformIMPACT                    TransformationAssetDtoDestinationPlatform = "IMPACT"
	TransformationAssetDtoDestinationPlatformINCIDENTIO                TransformationAssetDtoDestinationPlatform = "INCIDENT_IO"
	TransformationAssetDtoDestinationPlatformINFOBIP                   TransformationAssetDtoDestinationPlatform = "INFOBIP"
	TransformationAssetDtoDestinationPlatformINFORMATICA               TransformationAssetDtoDestinationPlatform = "INFORMATICA"
	TransformationAssetDtoDestinationPlatformINSIGHTLY                 TransformationAssetDtoDestinationPlatform = "INSIGHTLY"
	TransformationAssetDtoDestinationPlatformINSTAGRAM                 TransformationAssetDtoDestinationPlatform = "INSTAGRAM"
	TransformationAssetDtoDestinationPlatformINTERCOM                  TransformationAssetDtoDestinationPlatform = "INTERCOM"
	TransformationAssetDtoDestinationPlatformINVESTOPEDIA              TransformationAssetDtoDestinationPlatform = "INVESTOPEDIA"
	TransformationAssetDtoDestinationPlatformIRONCLAD                  TransformationAssetDtoDestinationPlatform = "IRONCLAD"
	TransformationAssetDtoDestinationPlatformIRONSOURCE                TransformationAssetDtoDestinationPlatform = "IRONSOURCE"
	TransformationAssetDtoDestinationPlatformITERABLE                  TransformationAssetDtoDestinationPlatform = "ITERABLE"
	TransformationAssetDtoDestinationPlatformJAVA                      TransformationAssetDtoDestinationPlatform = "JAVA"
	TransformationAssetDtoDestinationPlatformJENKINS                   TransformationAssetDtoDestinationPlatform = "JENKINS"
	TransformationAssetDtoDestinationPlatformJUSTCALL                  TransformationAssetDtoDestinationPlatform = "JUSTCALL"
	TransformationAssetDtoDestinationPlatformKANDJI                    TransformationAssetDtoDestinationPlatform = "KANDJI"
	TransformationAssetDtoDestinationPlatformKENSU                     TransformationAssetDtoDestinationPlatform = "KENSU"
	TransformationAssetDtoDestinationPlatformKHOROSCARE                TransformationAssetDtoDestinationPlatform = "KHOROS_CARE"
	TransformationAssetDtoDestinationPlatformKISSMETRICS               TransformationAssetDtoDestinationPlatform = "KISSMETRICS"
	TransformationAssetDtoDestinationPlatformKLAVIYO                   TransformationAssetDtoDestinationPlatform = "KLAVIYO"
	TransformationAssetDtoDestinationPlatformKNOWBE4                   TransformationAssetDtoDestinationPlatform = "KNOWBE4"
	TransformationAssetDtoDestinationPlatformKONNECTINSIGHTS           TransformationAssetDtoDestinationPlatform = "KONNECT_INSIGHTS"
	TransformationAssetDtoDestinationPlatformKUSTOMER                  TransformationAssetDtoDestinationPlatform = "KUSTOMER"
	TransformationAssetDtoDestinationPlatformLARIATDATA                TransformationAssetDtoDestinationPlatform = "LARIAT_DATA"
	TransformationAssetDtoDestinationPlatformLATTICE                   TransformationAssetDtoDestinationPlatform = "LATTICE"
	TransformationAssetDtoDestinationPlatformLAUNCHDARKLY              TransformationAssetDtoDestinationPlatform = "LAUNCH_DARKLY"
	TransformationAssetDtoDestinationPlatformLEARNUPON                 TransformationAssetDtoDestinationPlatform = "LEARN_UPON"
	TransformationAssetDtoDestinationPlatformLESSONLY                  TransformationAssetDtoDestinationPlatform = "LESSONLY"
	TransformationAssetDtoDestinationPlatformLEVER                     TransformationAssetDtoDestinationPlatform = "LEVER"
	TransformationAssetDtoDestinationPlatformLIFTOFF                   TransformationAssetDtoDestinationPlatform = "LIFTOFF"
	TransformationAssetDtoDestinationPlatformLIGHTDASH                 TransformationAssetDtoDestinationPlatform = "LIGHTDASH"
	TransformationAssetDtoDestinationPlatformLIGHTSPEED                TransformationAssetDtoDestinationPlatform = "LIGHTSPEED"
	TransformationAssetDtoDestinationPlatformLIGHTSUP                  TransformationAssetDtoDestinationPlatform = "LIGHTSUP"
	TransformationAssetDtoDestinationPlatformLINEAR                    TransformationAssetDtoDestinationPlatform = "LINEAR"
	TransformationAssetDtoDestinationPlatformLINKEDIN                  TransformationAssetDtoDestinationPlatform = "LINKEDIN"
	TransformationAssetDtoDestinationPlatformLIVECHAT                  TransformationAssetDtoDestinationPlatform = "LIVECHAT"
	TransformationAssetDtoDestinationPlatformLOADEDCOMMERCE            TransformationAssetDtoDestinationPlatform = "LOADED_COMMERCE"
	TransformationAssetDtoDestinationPlatformLOB                       TransformationAssetDtoDestinationPlatform = "LOB"
	TransformationAssetDtoDestinationPlatformLOOKER                    TransformationAssetDtoDestinationPlatform = "LOOKER"
	TransformationAssetDtoDestinationPlatformLOOP                      TransformationAssetDtoDestinationPlatform = "LOOP"
	TransformationAssetDtoDestinationPlatformLOOPIO                    TransformationAssetDtoDestinationPlatform = "LOOPIO"
	TransformationAssetDtoDestinationPlatformLUMA                      TransformationAssetDtoDestinationPlatform = "LUMA"
	TransformationAssetDtoDestinationPlatformMAGENTO                   TransformationAssetDtoDestinationPlatform = "MAGENTO"
	TransformationAssetDtoDestinationPlatformMAILCHIMP                 TransformationAssetDtoDestinationPlatform = "MAILCHIMP"
	TransformationAssetDtoDestinationPlatformMAILGUN                   TransformationAssetDtoDestinationPlatform = "MAILGUN"
	TransformationAssetDtoDestinationPlatformMANDRILL                  TransformationAssetDtoDestinationPlatform = "MANDRILL"
	TransformationAssetDtoDestinationPlatformMANTA                     TransformationAssetDtoDestinationPlatform = "MANTA"
	TransformationAssetDtoDestinationPlatformMARIADB                   TransformationAssetDtoDestinationPlatform = "MARIADB"
	TransformationAssetDtoDestinationPlatformMARINSOFTWARE             TransformationAssetDtoDestinationPlatform = "MARIN_SOFTWARE"
	TransformationAssetDtoDestinationPlatformMARKETO                   TransformationAssetDtoDestinationPlatform = "MARKETO"
	TransformationAssetDtoDestinationPlatformMATTERMOST                TransformationAssetDtoDestinationPlatform = "MATTERMOST"
	TransformationAssetDtoDestinationPlatformMAVENLINK                 TransformationAssetDtoDestinationPlatform = "MAVENLINK"
	TransformationAssetDtoDestinationPlatformMAXIO                     TransformationAssetDtoDestinationPlatform = "MAXIO"
	TransformationAssetDtoDestinationPlatformMEDALLIA                  TransformationAssetDtoDestinationPlatform = "MEDALLIA"
	TransformationAssetDtoDestinationPlatformMETA                      TransformationAssetDtoDestinationPlatform = "META"
	TransformationAssetDtoDestinationPlatformMETABASE                  TransformationAssetDtoDestinationPlatform = "METABASE"
	TransformationAssetDtoDestinationPlatformMETAPHOR                  TransformationAssetDtoDestinationPlatform = "METAPHOR"
	TransformationAssetDtoDestinationPlatformMETAPLANE                 TransformationAssetDtoDestinationPlatform = "METAPLANE"
	TransformationAssetDtoDestinationPlatformMICROSOFT                 TransformationAssetDtoDestinationPlatform = "MICROSOFT"
	TransformationAssetDtoDestinationPlatformMICROSOFTAZUREBLOBSTORAGE TransformationAssetDtoDestinationPlatform = "MICROSOFT_AZURE_BLOB_STORAGE"
	TransformationAssetDtoDestinationPlatformMICROSOFTAZUREML          TransformationAssetDtoDestinationPlatform = "MICROSOFT_AZURE_ML"
	TransformationAssetDtoDestinationPlatformMICROSOFTDYNAMICS         TransformationAssetDtoDestinationPlatform = "MICROSOFT_DYNAMICS"
	TransformationAssetDtoDestinationPlatformMICROSOFTONEDRIVE         TransformationAssetDtoDestinationPlatform = "MICROSOFT_ONEDRIVE"
	TransformationAssetDtoDestinationPlatformMICROSOFTPURVIEW          TransformationAssetDtoDestinationPlatform = "MICROSOFT_PURVIEW"
	TransformationAssetDtoDestinationPlatformMICROSOFTTEAMS            TransformationAssetDtoDestinationPlatform = "MICROSOFT_TEAMS"
	TransformationAssetDtoDestinationPlatformMICROSTRATEGY             TransformationAssetDtoDestinationPlatform = "MICROSTRATEGY"
	TransformationAssetDtoDestinationPlatformMIXMAX                    TransformationAssetDtoDestinationPlatform = "MIXMAX"
	TransformationAssetDtoDestinationPlatformMIXPANEL                  TransformationAssetDtoDestinationPlatform = "MIXPANEL"
	TransformationAssetDtoDestinationPlatformMONDAYCOM                 TransformationAssetDtoDestinationPlatform = "MONDAY_COM"
	TransformationAssetDtoDestinationPlatformMONGODB                   TransformationAssetDtoDestinationPlatform = "MONGODB"
	TransformationAssetDtoDestinationPlatformMONTECARLO                TransformationAssetDtoDestinationPlatform = "MONTE_CARLO"
	TransformationAssetDtoDestinationPlatformMOUNTAIN                  TransformationAssetDtoDestinationPlatform = "MOUNTAIN"
	TransformationAssetDtoDestinationPlatformMSSQL                     TransformationAssetDtoDestinationPlatform = "MSSQL"
	TransformationAssetDtoDestinationPlatformMULESOFT                  TransformationAssetDtoDestinationPlatform = "MULESOFT"
	TransformationAssetDtoDestinationPlatformMUX                       TransformationAssetDtoDestinationPlatform = "MUX"
	TransformationAssetDtoDestinationPlatformMWAA                      TransformationAssetDtoDestinationPlatform = "MWAA"
	TransformationAssetDtoDestinationPlatformMYSQL                     TransformationAssetDtoDestinationPlatform = "MYSQL"
	TransformationAssetDtoDestinationPlatformNAMELY                    TransformationAssetDtoDestinationPlatform = "NAMELY"
	TransformationAssetDtoDestinationPlatformNCINO                     TransformationAssetDtoDestinationPlatform = "NCINO"
	TransformationAssetDtoDestinationPlatformNETSUITEANALYTICS         TransformationAssetDtoDestinationPlatform = "NETSUITE_ANALYTICS"
	TransformationAssetDtoDestinationPlatformNEWRELIC                  TransformationAssetDtoDestinationPlatform = "NEW_RELIC"
	TransformationAssetDtoDestinationPlatformNOTION                    TransformationAssetDtoDestinationPlatform = "NOTION"
	TransformationAssetDtoDestinationPlatformNYLAS                     TransformationAssetDtoDestinationPlatform = "NYLAS"
	TransformationAssetDtoDestinationPlatformOBSERVE                   TransformationAssetDtoDestinationPlatform = "OBSERVE"
	TransformationAssetDtoDestinationPlatformOCTOPAI                   TransformationAssetDtoDestinationPlatform = "OCTOPAI"
	TransformationAssetDtoDestinationPlatformOKTA                      TransformationAssetDtoDestinationPlatform = "OKTA"
	TransformationAssetDtoDestinationPlatformOPENAI                    TransformationAssetDtoDestinationPlatform = "OPEN_AI"
	TransformationAssetDtoDestinationPlatformOPENDATADC                TransformationAssetDtoDestinationPlatform = "OPEN_DATA_DC"
	TransformationAssetDtoDestinationPlatformOPENEXCHANGESRATES        TransformationAssetDtoDestinationPlatform = "OPEN_EXCHANGES_RATES"
	TransformationAssetDtoDestinationPlatformOPENSEARCH                TransformationAssetDtoDestinationPlatform = "OPEN_SEARCH"
	TransformationAssetDtoDestinationPlatformOPTIMIZELY                TransformationAssetDtoDestinationPlatform = "OPTIMIZELY"
	TransformationAssetDtoDestinationPlatformORACLE                    TransformationAssetDtoDestinationPlatform = "ORACLE"
	TransformationAssetDtoDestinationPlatformORBITCOMMUNITYPLATFORM    TransformationAssetDtoDestinationPlatform = "ORBIT_COMMUNITY_PLATFORM"
	TransformationAssetDtoDestinationPlatformORDWAY                    TransformationAssetDtoDestinationPlatform = "ORDWAY"
	TransformationAssetDtoDestinationPlatformORTTO                     TransformationAssetDtoDestinationPlatform = "ORTTO"
	TransformationAssetDtoDestinationPlatformOSCOMMERCE                TransformationAssetDtoDestinationPlatform = "OS_COMMERCE"
	TransformationAssetDtoDestinationPlatformOUTBRAIN                  TransformationAssetDtoDestinationPlatform = "OUTBRAIN"
	TransformationAssetDtoDestinationPlatformOUTREACH                  TransformationAssetDtoDestinationPlatform = "OUTREACH"
	TransformationAssetDtoDestinationPlatformOVALEDGE                  TransformationAssetDtoDestinationPlatform = "OVALEDGE"
	TransformationAssetDtoDestinationPlatformPAGERDUTY                 TransformationAssetDtoDestinationPlatform = "PAGERDUTY"
	TransformationAssetDtoDestinationPlatformPAGERSHIFT                TransformationAssetDtoDestinationPlatform = "PAGERSHIFT"
	TransformationAssetDtoDestinationPlatformPAYPAL                    TransformationAssetDtoDestinationPlatform = "PAYPAL"
	TransformationAssetDtoDestinationPlatformPENDO                     TransformationAssetDtoDestinationPlatform = "PENDO"
	TransformationAssetDtoDestinationPlatformPINGDOM                   TransformationAssetDtoDestinationPlatform = "PINGDOM"
	TransformationAssetDtoDestinationPlatformPINTEREST                 TransformationAssetDtoDestinationPlatform = "PINTEREST"
	TransformationAssetDtoDestinationPlatformPIPE17                    TransformationAssetDtoDestinationPlatform = "PIPE17"
	TransformationAssetDtoDestinationPlatformPIPEDRIVE                 TransformationAssetDtoDestinationPlatform = "PIPEDRIVE"
	TransformationAssetDtoDestinationPlatformPIVOTALTRACKER            TransformationAssetDtoDestinationPlatform = "PIVOTAL_TRACKER"
	TransformationAssetDtoDestinationPlatformPLAYVOX                   TransformationAssetDtoDestinationPlatform = "PLAYVOX"
	TransformationAssetDtoDestinationPlatformPOSTGRES                  TransformationAssetDtoDestinationPlatform = "POSTGRES"
	TransformationAssetDtoDestinationPlatformPOSTHOG                   TransformationAssetDtoDestinationPlatform = "POSTHOG"
	TransformationAssetDtoDestinationPlatformPOWERBI                   TransformationAssetDtoDestinationPlatform = "POWER_BI"
	TransformationAssetDtoDestinationPlatformPOWERSCHOOL               TransformationAssetDtoDestinationPlatform = "POWERSCHOOL"
	TransformationAssetDtoDestinationPlatformPREFECT                   TransformationAssetDtoDestinationPlatform = "PREFECT"
	TransformationAssetDtoDestinationPlatformPRESTASHOP                TransformationAssetDtoDestinationPlatform = "PRESTASHOP"
	TransformationAssetDtoDestinationPlatformPRESTO                    TransformationAssetDtoDestinationPlatform = "PRESTO"
	TransformationAssetDtoDestinationPlatformPRODUCTBOARD              TransformationAssetDtoDestinationPlatform = "PRODUCTBOARD"
	TransformationAssetDtoDestinationPlatformPYTHON                    TransformationAssetDtoDestinationPlatform = "PYTHON"
	TransformationAssetDtoDestinationPlatformQLIK                      TransformationAssetDtoDestinationPlatform = "QLIK"
	TransformationAssetDtoDestinationPlatformQUALAROO                  TransformationAssetDtoDestinationPlatform = "QUALAROO"
	TransformationAssetDtoDestinationPlatformQUALTRICS                 TransformationAssetDtoDestinationPlatform = "QUALTRICS"
	TransformationAssetDtoDestinationPlatformQUICKBOOKS                TransformationAssetDtoDestinationPlatform = "QUICKBOOKS"
	TransformationAssetDtoDestinationPlatformQUICKSIGHT                TransformationAssetDtoDestinationPlatform = "QUICKSIGHT"
	TransformationAssetDtoDestinationPlatformRAMP                      TransformationAssetDtoDestinationPlatform = "RAMP"
	TransformationAssetDtoDestinationPlatformRARIBLE                   TransformationAssetDtoDestinationPlatform = "RARIBLE"
	TransformationAssetDtoDestinationPlatformRECHARGE                  TransformationAssetDtoDestinationPlatform = "RECHARGE"
	TransformationAssetDtoDestinationPlatformRECURLY                   TransformationAssetDtoDestinationPlatform = "RECURLY"
	TransformationAssetDtoDestinationPlatformREDDIT                    TransformationAssetDtoDestinationPlatform = "REDDIT"
	TransformationAssetDtoDestinationPlatformREDSHIFT                  TransformationAssetDtoDestinationPlatform = "REDSHIFT"
	TransformationAssetDtoDestinationPlatformRELTIO                    TransformationAssetDtoDestinationPlatform = "RELTIO"
	TransformationAssetDtoDestinationPlatformREPLYIO                   TransformationAssetDtoDestinationPlatform = "REPLY_IO"
	TransformationAssetDtoDestinationPlatformRETAILNEXT                TransformationAssetDtoDestinationPlatform = "RETAILNEXT"
	TransformationAssetDtoDestinationPlatformRETENTLY                  TransformationAssetDtoDestinationPlatform = "RETENTLY"
	TransformationAssetDtoDestinationPlatformREVELSYSTEMS              TransformationAssetDtoDestinationPlatform = "REVEL_SYSTEMS"
	TransformationAssetDtoDestinationPlatformRINGCENTRAL               TransformationAssetDtoDestinationPlatform = "RINGCENTRAL"
	TransformationAssetDtoDestinationPlatformRIPPLING                  TransformationAssetDtoDestinationPlatform = "RIPPLING"
	TransformationAssetDtoDestinationPlatformROLLBAR                   TransformationAssetDtoDestinationPlatform = "ROLLBAR"
	TransformationAssetDtoDestinationPlatformROOTLY                    TransformationAssetDtoDestinationPlatform = "ROOTLY"
	TransformationAssetDtoDestinationPlatformS3                        TransformationAssetDtoDestinationPlatform = "S3"
	TransformationAssetDtoDestinationPlatformSAGEHR                    TransformationAssetDtoDestinationPlatform = "SAGE_HR"
	TransformationAssetDtoDestinationPlatformSAGEINTACCT               TransformationAssetDtoDestinationPlatform = "SAGE_INTACCT"
	TransformationAssetDtoDestinationPlatformSAILTHRU                  TransformationAssetDtoDestinationPlatform = "SAILTHRU"
	TransformationAssetDtoDestinationPlatformSALESFORCE                TransformationAssetDtoDestinationPlatform = "SALESFORCE"
	TransformationAssetDtoDestinationPlatformSALESLOFT                 TransformationAssetDtoDestinationPlatform = "SALESLOFT"
	TransformationAssetDtoDestinationPlatformSALSIFY                   TransformationAssetDtoDestinationPlatform = "SALSIFY"
	TransformationAssetDtoDestinationPlatformSAMSARA                   TransformationAssetDtoDestinationPlatform = "SAMSARA"
	TransformationAssetDtoDestinationPlatformSAP                       TransformationAssetDtoDestinationPlatform = "SAP"
	TransformationAssetDtoDestinationPlatformSAPCONCUR                 TransformationAssetDtoDestinationPlatform = "SAP_CONCUR"
	TransformationAssetDtoDestinationPlatformSCORM                     TransformationAssetDtoDestinationPlatform = "SCORM"
	TransformationAssetDtoDestinationPlatformSECODA                    TransformationAssetDtoDestinationPlatform = "SECODA"
	TransformationAssetDtoDestinationPlatformSECURITYJOURNEY           TransformationAssetDtoDestinationPlatform = "SECURITY_JOURNEY"
	TransformationAssetDtoDestinationPlatformSEGMENT                   TransformationAssetDtoDestinationPlatform = "SEGMENT"
	TransformationAssetDtoDestinationPlatformSELECTSTAR                TransformationAssetDtoDestinationPlatform = "SELECT_STAR"
	TransformationAssetDtoDestinationPlatformSENDGRID                  TransformationAssetDtoDestinationPlatform = "SENDGRID"
	TransformationAssetDtoDestinationPlatformSERVICENOW                TransformationAssetDtoDestinationPlatform = "SERVICE_NOW"
	TransformationAssetDtoDestinationPlatformSFTP                      TransformationAssetDtoDestinationPlatform = "SFTP"
	TransformationAssetDtoDestinationPlatformSHAREPOINT                TransformationAssetDtoDestinationPlatform = "SHAREPOINT"
	TransformationAssetDtoDestinationPlatformSHARETRIBE                TransformationAssetDtoDestinationPlatform = "SHARETRIBE"
	TransformationAssetDtoDestinationPlatformSHIPHERO                  TransformationAssetDtoDestinationPlatform = "SHIPHERO"
	TransformationAssetDtoDestinationPlatformSHIPSTATION               TransformationAssetDtoDestinationPlatform = "SHIPSTATION"
	TransformationAssetDtoDestinationPlatformSHOPIFY                   TransformationAssetDtoDestinationPlatform = "SHOPIFY"
	TransformationAssetDtoDestinationPlatformSHOPWARE                  TransformationAssetDtoDestinationPlatform = "SHOPWARE"
	TransformationAssetDtoDestinationPlatformSHORTIO                   TransformationAssetDtoDestinationPlatform = "SHORT_IO"
	TransformationAssetDtoDestinationPlatformSIFFLET                   TransformationAssetDtoDestinationPlatform = "SIFFLET"
	TransformationAssetDtoDestinationPlatformSIGMA                     TransformationAssetDtoDestinationPlatform = "SIGMA"
	TransformationAssetDtoDestinationPlatformSIMPLECAST                TransformationAssetDtoDestinationPlatform = "SIMPLECAST"
	TransformationAssetDtoDestinationPlatformSIMPLESAT                 TransformationAssetDtoDestinationPlatform = "SIMPLESAT"
	TransformationAssetDtoDestinationPlatformSINGLESTORE               TransformationAssetDtoDestinationPlatform = "SINGLESTORE"
	TransformationAssetDtoDestinationPlatformSISENSE                   TransformationAssetDtoDestinationPlatform = "SISENSE"
	TransformationAssetDtoDestinationPlatformSIXSENSE                  TransformationAssetDtoDestinationPlatform = "SIXSENSE"
	TransformationAssetDtoDestinationPlatformSKILLJAR                  TransformationAssetDtoDestinationPlatform = "SKILLJAR"
	TransformationAssetDtoDestinationPlatformSKUVAULT                  TransformationAssetDtoDestinationPlatform = "SKUVAULT"
	TransformationAssetDtoDestinationPlatformSLAB                      TransformationAssetDtoDestinationPlatform = "SLAB"
	TransformationAssetDtoDestinationPlatformSLACK                     TransformationAssetDtoDestinationPlatform = "SLACK"
	TransformationAssetDtoDestinationPlatformSMADEX                    TransformationAssetDtoDestinationPlatform = "SMADEX"
	TransformationAssetDtoDestinationPlatformSNAPCHAT                  TransformationAssetDtoDestinationPlatform = "SNAPCHAT"
	TransformationAssetDtoDestinationPlatformSNOWFLAKE                 TransformationAssetDtoDestinationPlatform = "SNOWFLAKE"
	TransformationAssetDtoDestinationPlatformSNOWPLOW                  TransformationAssetDtoDestinationPlatform = "SNOWPLOW"
	TransformationAssetDtoDestinationPlatformSODA                      TransformationAssetDtoDestinationPlatform = "SODA"
	TransformationAssetDtoDestinationPlatformSONARQUBE                 TransformationAssetDtoDestinationPlatform = "SONARQUBE"
	TransformationAssetDtoDestinationPlatformSPARKPROCESS              TransformationAssetDtoDestinationPlatform = "SPARK_PROCESS"
	TransformationAssetDtoDestinationPlatformSPLITIO                   TransformationAssetDtoDestinationPlatform = "SPLIT_IO"
	TransformationAssetDtoDestinationPlatformSPLUNK                    TransformationAssetDtoDestinationPlatform = "SPLUNK"
	TransformationAssetDtoDestinationPlatformSPOTIFY                   TransformationAssetDtoDestinationPlatform = "SPOTIFY"
	TransformationAssetDtoDestinationPlatformSPREECOMMERCE             TransformationAssetDtoDestinationPlatform = "SPREE_COMMERCE"
	TransformationAssetDtoDestinationPlatformSPROUTSOCIAL              TransformationAssetDtoDestinationPlatform = "SPROUT_SOCIAL"
	TransformationAssetDtoDestinationPlatformSQUARE                    TransformationAssetDtoDestinationPlatform = "SQUARE"
	TransformationAssetDtoDestinationPlatformSQUARESPACE               TransformationAssetDtoDestinationPlatform = "SQUARESPACE"
	TransformationAssetDtoDestinationPlatformSTACKADAPT                TransformationAssetDtoDestinationPlatform = "STACK_ADAPT"
	TransformationAssetDtoDestinationPlatformSTATSIG                   TransformationAssetDtoDestinationPlatform = "STATSIG"
	TransformationAssetDtoDestinationPlatformSTITCH                    TransformationAssetDtoDestinationPlatform = "STITCH"
	TransformationAssetDtoDestinationPlatformSTRIPE                    TransformationAssetDtoDestinationPlatform = "STRIPE"
	TransformationAssetDtoDestinationPlatformSTYLIGHT                  TransformationAssetDtoDestinationPlatform = "STYLIGHT"
	TransformationAssetDtoDestinationPlatformSUBSCRIPT                 TransformationAssetDtoDestinationPlatform = "SUBSCRIPT"
	TransformationAssetDtoDestinationPlatformSYNAPSE                   TransformationAssetDtoDestinationPlatform = "SYNAPSE"
	TransformationAssetDtoDestinationPlatformTABLEAU                   TransformationAssetDtoDestinationPlatform = "TABLEAU"
	TransformationAssetDtoDestinationPlatformTABOOLA                   TransformationAssetDtoDestinationPlatform = "TABOOLA"
	TransformationAssetDtoDestinationPlatformTALEND                    TransformationAssetDtoDestinationPlatform = "TALEND"
	TransformationAssetDtoDestinationPlatformTALKDESK                  TransformationAssetDtoDestinationPlatform = "TALKDESK"
	TransformationAssetDtoDestinationPlatformTALKWALKER                TransformationAssetDtoDestinationPlatform = "TALKWALKER"
	TransformationAssetDtoDestinationPlatformTEAMWORKCOM               TransformationAssetDtoDestinationPlatform = "TEAMWORK_COM"
	TransformationAssetDtoDestinationPlatformTEMPOIO                   TransformationAssetDtoDestinationPlatform = "TEMPO_IO"
	TransformationAssetDtoDestinationPlatformTERADATA                  TransformationAssetDtoDestinationPlatform = "TERADATA"
	TransformationAssetDtoDestinationPlatformTERRAFORM                 TransformationAssetDtoDestinationPlatform = "TERRAFORM"
	TransformationAssetDtoDestinationPlatformTHETRADEDESK              TransformationAssetDtoDestinationPlatform = "THE_TRADE_DESK"
	TransformationAssetDtoDestinationPlatformTHOUGHTSPOT               TransformationAssetDtoDestinationPlatform = "THOUGHT_SPOT"
	TransformationAssetDtoDestinationPlatformTHREESIXTYLEARNING        TransformationAssetDtoDestinationPlatform = "THREESIXTYLEARNING"
	TransformationAssetDtoDestinationPlatformTIKTOK                    TransformationAssetDtoDestinationPlatform = "TIKTOK"
	TransformationAssetDtoDestinationPlatformTOGGL                     TransformationAssetDtoDestinationPlatform = "TOGGL"
	TransformationAssetDtoDestinationPlatformTRANSCEND                 TransformationAssetDtoDestinationPlatform = "TRANSCEND"
	TransformationAssetDtoDestinationPlatformTRELLO                    TransformationAssetDtoDestinationPlatform = "TRELLO"
	TransformationAssetDtoDestinationPlatformTRINET                    TransformationAssetDtoDestinationPlatform = "TRINET"
	TransformationAssetDtoDestinationPlatformTRISOLUTE                 TransformationAssetDtoDestinationPlatform = "TRISOLUTE"
	TransformationAssetDtoDestinationPlatformTWILIO                    TransformationAssetDtoDestinationPlatform = "TWILIO"
	TransformationAssetDtoDestinationPlatformTYPEFORM                  TransformationAssetDtoDestinationPlatform = "TYPEFORM"
	TransformationAssetDtoDestinationPlatformUNKNOWN                   TransformationAssetDtoDestinationPlatform = "UNKNOWN"
	TransformationAssetDtoDestinationPlatformUPLAND                    TransformationAssetDtoDestinationPlatform = "UPLAND"
	TransformationAssetDtoDestinationPlatformUSERVOICE                 TransformationAssetDtoDestinationPlatform = "USERVOICE"
	TransformationAssetDtoDestinationPlatformVALIDIO                   TransformationAssetDtoDestinationPlatform = "VALIDIO"
	TransformationAssetDtoDestinationPlatformVEEVA                     TransformationAssetDtoDestinationPlatform = "VEEVA"
	TransformationAssetDtoDestinationPlatformVERIZONMEDIA              TransformationAssetDtoDestinationPlatform = "VERIZON_MEDIA"
	TransformationAssetDtoDestinationPlatformVITALLY                   TransformationAssetDtoDestinationPlatform = "VITALLY"
	TransformationAssetDtoDestinationPlatformVONAGE                    TransformationAssetDtoDestinationPlatform = "VONAGE"
	TransformationAssetDtoDestinationPlatformVUETIFY                   TransformationAssetDtoDestinationPlatform = "VUETIFY"
	TransformationAssetDtoDestinationPlatformWEBHOOKS                  TransformationAssetDtoDestinationPlatform = "WEBHOOKS"
	TransformationAssetDtoDestinationPlatformWEBSCRAPER                TransformationAssetDtoDestinationPlatform = "WEB_SCRAPER"
	TransformationAssetDtoDestinationPlatformWHENIWORK                 TransformationAssetDtoDestinationPlatform = "WHEN_I_WORK"
	TransformationAssetDtoDestinationPlatformWHEREFOUR                 TransformationAssetDtoDestinationPlatform = "WHEREFOUR"
	TransformationAssetDtoDestinationPlatformWIKIPEDIA                 TransformationAssetDtoDestinationPlatform = "WIKIPEDIA"
	TransformationAssetDtoDestinationPlatformWOOCOMMERCE               TransformationAssetDtoDestinationPlatform = "WOOCOMMERCE"
	TransformationAssetDtoDestinationPlatformWORDPRESS                 TransformationAssetDtoDestinationPlatform = "WORDPRESS"
	TransformationAssetDtoDestinationPlatformWORKABLE                  TransformationAssetDtoDestinationPlatform = "WORKABLE"
	TransformationAssetDtoDestinationPlatformWORKDAY                   TransformationAssetDtoDestinationPlatform = "WORKDAY"
	TransformationAssetDtoDestinationPlatformWORKFLOWMAX               TransformationAssetDtoDestinationPlatform = "WORKFLOW_MAX"
	TransformationAssetDtoDestinationPlatformWRIKE                     TransformationAssetDtoDestinationPlatform = "WRIKE"
	TransformationAssetDtoDestinationPlatformX                         TransformationAssetDtoDestinationPlatform = "X"
	TransformationAssetDtoDestinationPlatformXERO                      TransformationAssetDtoDestinationPlatform = "XERO"
	TransformationAssetDtoDestinationPlatformXRAY                      TransformationAssetDtoDestinationPlatform = "XRAY"
	TransformationAssetDtoDestinationPlatformYAHOO                     TransformationAssetDtoDestinationPlatform = "YAHOO"
	TransformationAssetDtoDestinationPlatformYOTPO                     TransformationAssetDtoDestinationPlatform = "YOTPO"
	TransformationAssetDtoDestinationPlatformYOUTUBE                   TransformationAssetDtoDestinationPlatform = "YOUTUBE"
	TransformationAssetDtoDestinationPlatformZEENEA                    TransformationAssetDtoDestinationPlatform = "ZEENEA"
	TransformationAssetDtoDestinationPlatformZENCART                   TransformationAssetDtoDestinationPlatform = "ZEN_CART"
	TransformationAssetDtoDestinationPlatformZENDESKCHAT               TransformationAssetDtoDestinationPlatform = "ZENDESK_CHAT"
	TransformationAssetDtoDestinationPlatformZENDESKSELL               TransformationAssetDtoDestinationPlatform = "ZENDESK_SELL"
	TransformationAssetDtoDestinationPlatformZENDESKSUNSHINE           TransformationAssetDtoDestinationPlatform = "ZENDESK_SUNSHINE"
	TransformationAssetDtoDestinationPlatformZENDESKSUPPORT            TransformationAssetDtoDestinationPlatform = "ZENDESK_SUPPORT"
	TransformationAssetDtoDestinationPlatformZINGTREE                  TransformationAssetDtoDestinationPlatform = "ZINGTREE"
	TransformationAssetDtoDestinationPlatformZOHOBOOKS                 TransformationAssetDtoDestinationPlatform = "ZOHO_BOOKS"
	TransformationAssetDtoDestinationPlatformZOHOCAMPAIGNS             TransformationAssetDtoDestinationPlatform = "ZOHO_CAMPAIGNS"
	TransformationAssetDtoDestinationPlatformZOHOCRM                   TransformationAssetDtoDestinationPlatform = "ZOHO_CRM"
	TransformationAssetDtoDestinationPlatformZOOM                      TransformationAssetDtoDestinationPlatform = "ZOOM"
	TransformationAssetDtoDestinationPlatformZUORA                     TransformationAssetDtoDestinationPlatform = "ZUORA"
)

// Defines values for TransformationAssetDtoSourcePlatform.
const (
	TransformationAssetDtoSourcePlatformACCELDATA                 TransformationAssetDtoSourcePlatform = "ACCELDATA"
	TransformationAssetDtoSourcePlatformACRYLDATA                 TransformationAssetDtoSourcePlatform = "ACRYL_DATA"
	TransformationAssetDtoSourcePlatformACTIANVECTOR              TransformationAssetDtoSourcePlatform = "ACTIAN_VECTOR"
	TransformationAssetDtoSourcePlatformACTIVECAMPAIGN            TransformationAssetDtoSourcePlatform = "ACTIVE_CAMPAIGN"
	TransformationAssetDtoSourcePlatformADA                       TransformationAssetDtoSourcePlatform = "ADA"
	TransformationAssetDtoSourcePlatformADJUST                    TransformationAssetDtoSourcePlatform = "ADJUST"
	TransformationAssetDtoSourcePlatformADOBE                     TransformationAssetDtoSourcePlatform = "ADOBE"
	TransformationAssetDtoSourcePlatformADPWFN                    TransformationAssetDtoSourcePlatform = "ADP_WFN"
	TransformationAssetDtoSourcePlatformADROLL                    TransformationAssetDtoSourcePlatform = "ADROLL"
	TransformationAssetDtoSourcePlatformAFFINITY                  TransformationAssetDtoSourcePlatform = "AFFINITY"
	TransformationAssetDtoSourcePlatformAIRBYTE                   TransformationAssetDtoSourcePlatform = "AIRBYTE"
	TransformationAssetDtoSourcePlatformAIRCALL                   TransformationAssetDtoSourcePlatform = "AIRCALL"
	TransformationAssetDtoSourcePlatformAIRFLOW                   TransformationAssetDtoSourcePlatform = "AIRFLOW"
	TransformationAssetDtoSourcePlatformAIRTABLE                  TransformationAssetDtoSourcePlatform = "AIRTABLE"
	TransformationAssetDtoSourcePlatformALATION                   TransformationAssetDtoSourcePlatform = "ALATION"
	TransformationAssetDtoSourcePlatformALCHEMER                  TransformationAssetDtoSourcePlatform = "ALCHEMER"
	TransformationAssetDtoSourcePlatformALVINAI                   TransformationAssetDtoSourcePlatform = "ALVIN_AI"
	TransformationAssetDtoSourcePlatformAMAZON                    TransformationAssetDtoSourcePlatform = "AMAZON"
	TransformationAssetDtoSourcePlatformAMAZONCLOUDFRONT          TransformationAssetDtoSourcePlatform = "AMAZON_CLOUDFRONT"
	TransformationAssetDtoSourcePlatformAMAZONDOCUMENTDB          TransformationAssetDtoSourcePlatform = "AMAZON_DOCUMENTDB"
	TransformationAssetDtoSourcePlatformAMAZONDYNAMODB            TransformationAssetDtoSourcePlatform = "AMAZON_DYNAMODB"
	TransformationAssetDtoSourcePlatformAMAZONFIREHOSE            TransformationAssetDtoSourcePlatform = "AMAZON_FIREHOSE"
	TransformationAssetDtoSourcePlatformAMAZONSAGEMAKER           TransformationAssetDtoSourcePlatform = "AMAZON_SAGEMAKER"
	TransformationAssetDtoSourcePlatformAMAZONSELLINGPARTNER      TransformationAssetDtoSourcePlatform = "AMAZON_SELLING_PARTNER"
	TransformationAssetDtoSourcePlatformAMPLITUDE                 TransformationAssetDtoSourcePlatform = "AMPLITUDE"
	TransformationAssetDtoSourcePlatformANAPLAN                   TransformationAssetDtoSourcePlatform = "ANAPLAN"
	TransformationAssetDtoSourcePlatformANOMALO                   TransformationAssetDtoSourcePlatform = "ANOMALO"
	TransformationAssetDtoSourcePlatformAPACHEKAFKA               TransformationAssetDtoSourcePlatform = "APACHE_KAFKA"
	TransformationAssetDtoSourcePlatformAPACHESPARK               TransformationAssetDtoSourcePlatform = "APACHE_SPARK"
	TransformationAssetDtoSourcePlatformAPPCUES                   TransformationAssetDtoSourcePlatform = "APPCUES"
	TransformationAssetDtoSourcePlatformAPPFIGURES                TransformationAssetDtoSourcePlatform = "APPFIGURES"
	TransformationAssetDtoSourcePlatformAPPLE                     TransformationAssetDtoSourcePlatform = "APPLE"
	TransformationAssetDtoSourcePlatformAPPLEAPPSTORE             TransformationAssetDtoSourcePlatform = "APPLE_APP_STORE"
	TransformationAssetDtoSourcePlatformAPPSFLYER                 TransformationAssetDtoSourcePlatform = "APPSFLYER"
	TransformationAssetDtoSourcePlatformASANA                     TransformationAssetDtoSourcePlatform = "ASANA"
	TransformationAssetDtoSourcePlatformASSEMBLED                 TransformationAssetDtoSourcePlatform = "ASSEMBLED"
	TransformationAssetDtoSourcePlatformATHENA                    TransformationAssetDtoSourcePlatform = "ATHENA"
	TransformationAssetDtoSourcePlatformATLAN                     TransformationAssetDtoSourcePlatform = "ATLAN"
	TransformationAssetDtoSourcePlatformATLASSIANCONFLUENCE       TransformationAssetDtoSourcePlatform = "ATLASSIAN_CONFLUENCE"
	TransformationAssetDtoSourcePlatformATLASSIANJIRA             TransformationAssetDtoSourcePlatform = "ATLASSIAN_JIRA"
	TransformationAssetDtoSourcePlatformATLASSIANOPSGENIE         TransformationAssetDtoSourcePlatform = "ATLASSIAN_OPSGENIE"
	TransformationAssetDtoSourcePlatformAUTH0                     TransformationAssetDtoSourcePlatform = "AUTH0"
	TransformationAssetDtoSourcePlatformAUTODESKBIM360            TransformationAssetDtoSourcePlatform = "AUTODESK_BIM_360"
	TransformationAssetDtoSourcePlatformAWIN                      TransformationAssetDtoSourcePlatform = "AWIN"
	TransformationAssetDtoSourcePlatformAWSCLOUDTRAIL             TransformationAssetDtoSourcePlatform = "AWS_CLOUDTRAIL"
	TransformationAssetDtoSourcePlatformAWSCOSTEXPLORER           TransformationAssetDtoSourcePlatform = "AWS_COST_EXPLORER"
	TransformationAssetDtoSourcePlatformAWSINVENTORY              TransformationAssetDtoSourcePlatform = "AWS_INVENTORY"
	TransformationAssetDtoSourcePlatformAWSLAMBDA                 TransformationAssetDtoSourcePlatform = "AWS_LAMBDA"
	TransformationAssetDtoSourcePlatformAZURE                     TransformationAssetDtoSourcePlatform = "AZURE"
	TransformationAssetDtoSourcePlatformBALLOTREADY               TransformationAssetDtoSourcePlatform = "BALLOT_READY"
	TransformationAssetDtoSourcePlatformBAMBOOHR                  TransformationAssetDtoSourcePlatform = "BAMBOOHR"
	TransformationAssetDtoSourcePlatformBIGCOMMERCE               TransformationAssetDtoSourcePlatform = "BIGCOMMERCE"
	TransformationAssetDtoSourcePlatformBIGEYE                    TransformationAssetDtoSourcePlatform = "BIGEYE"
	TransformationAssetDtoSourcePlatformBIGQUERY                  TransformationAssetDtoSourcePlatform = "BIGQUERY"
	TransformationAssetDtoSourcePlatformBILLINGPLATFORM           TransformationAssetDtoSourcePlatform = "BILLINGPLATFORM"
	TransformationAssetDtoSourcePlatformBIRDEYE                   TransformationAssetDtoSourcePlatform = "BIRDEYE"
	TransformationAssetDtoSourcePlatformBLACKBOARD                TransformationAssetDtoSourcePlatform = "BLACKBOARD"
	TransformationAssetDtoSourcePlatformBOX                       TransformationAssetDtoSourcePlatform = "BOX"
	TransformationAssetDtoSourcePlatformBRAINTREE                 TransformationAssetDtoSourcePlatform = "BRAINTREE"
	TransformationAssetDtoSourcePlatformBRAZE                     TransformationAssetDtoSourcePlatform = "BRAZE"
	TransformationAssetDtoSourcePlatformBREVO                     TransformationAssetDtoSourcePlatform = "BREVO"
	TransformationAssetDtoSourcePlatformBREX                      TransformationAssetDtoSourcePlatform = "BREX"
	TransformationAssetDtoSourcePlatformBUILDKITE                 TransformationAssetDtoSourcePlatform = "BUILDKITE"
	TransformationAssetDtoSourcePlatformBUZZSPROUT                TransformationAssetDtoSourcePlatform = "BUZZSPROUT"
	TransformationAssetDtoSourcePlatformCALENDLY                  TransformationAssetDtoSourcePlatform = "CALENDLY"
	TransformationAssetDtoSourcePlatformCAMPAIGNMONITOR           TransformationAssetDtoSourcePlatform = "CAMPAIGN_MONITOR"
	TransformationAssetDtoSourcePlatformCANNY                     TransformationAssetDtoSourcePlatform = "CANNY"
	TransformationAssetDtoSourcePlatformCANVAS                    TransformationAssetDtoSourcePlatform = "CANVAS"
	TransformationAssetDtoSourcePlatformCAPTERRA                  TransformationAssetDtoSourcePlatform = "CAPTERRA"
	TransformationAssetDtoSourcePlatformCASTORDOC                 TransformationAssetDtoSourcePlatform = "CASTOR_DOC"
	TransformationAssetDtoSourcePlatformCENSUS                    TransformationAssetDtoSourcePlatform = "CENSUS"
	TransformationAssetDtoSourcePlatformCERTINIA                  TransformationAssetDtoSourcePlatform = "CERTINIA"
	TransformationAssetDtoSourcePlatformCHAMELEON                 TransformationAssetDtoSourcePlatform = "CHAMELEON"
	TransformationAssetDtoSourcePlatformCHANNELADVISOR            TransformationAssetDtoSourcePlatform = "CHANNEL_ADVISOR"
	TransformationAssetDtoSourcePlatformCHARGEBEE                 TransformationAssetDtoSourcePlatform = "CHARGEBEE"
	TransformationAssetDtoSourcePlatformCHARGEDESK                TransformationAssetDtoSourcePlatform = "CHARGEDESK"
	TransformationAssetDtoSourcePlatformCHARTMOGUL                TransformationAssetDtoSourcePlatform = "CHARTMOGUL"
	TransformationAssetDtoSourcePlatformCHORUSAI                  TransformationAssetDtoSourcePlatform = "CHORUS_AI"
	TransformationAssetDtoSourcePlatformCHURNKEY                  TransformationAssetDtoSourcePlatform = "CHURNKEY"
	TransformationAssetDtoSourcePlatformCHURNZERO                 TransformationAssetDtoSourcePlatform = "CHURNZERO"
	TransformationAssetDtoSourcePlatformCIMIS                     TransformationAssetDtoSourcePlatform = "CIMIS"
	TransformationAssetDtoSourcePlatformCIN7                      TransformationAssetDtoSourcePlatform = "CIN7"
	TransformationAssetDtoSourcePlatformCIRCLECI                  TransformationAssetDtoSourcePlatform = "CIRCLE_CI"
	TransformationAssetDtoSourcePlatformCLARI                     TransformationAssetDtoSourcePlatform = "CLARI"
	TransformationAssetDtoSourcePlatformCLICKUP                   TransformationAssetDtoSourcePlatform = "CLICKUP"
	TransformationAssetDtoSourcePlatformCLIFFAI                   TransformationAssetDtoSourcePlatform = "CLIFF_AI"
	TransformationAssetDtoSourcePlatformCLOSE                     TransformationAssetDtoSourcePlatform = "CLOSE"
	TransformationAssetDtoSourcePlatformCOLLIBRA                  TransformationAssetDtoSourcePlatform = "COLLIBRA"
	TransformationAssetDtoSourcePlatformCOMMERCETOOLS             TransformationAssetDtoSourcePlatform = "COMMERCETOOLS"
	TransformationAssetDtoSourcePlatformCOMPOSER                  TransformationAssetDtoSourcePlatform = "COMPOSER"
	TransformationAssetDtoSourcePlatformCONFLUENTCLOUD            TransformationAssetDtoSourcePlatform = "CONFLUENT_CLOUD"
	TransformationAssetDtoSourcePlatformCONTRASTSECURITY          TransformationAssetDtoSourcePlatform = "CONTRAST_SECURITY"
	TransformationAssetDtoSourcePlatformCOUPA                     TransformationAssetDtoSourcePlatform = "COUPA"
	TransformationAssetDtoSourcePlatformCRITEO                    TransformationAssetDtoSourcePlatform = "CRITEO"
	TransformationAssetDtoSourcePlatformCROSSBEAM                 TransformationAssetDtoSourcePlatform = "CROSSBEAM"
	TransformationAssetDtoSourcePlatformCRUNCHBASE                TransformationAssetDtoSourcePlatform = "CRUNCHBASE"
	TransformationAssetDtoSourcePlatformCUSTOMERIO                TransformationAssetDtoSourcePlatform = "CUSTOMER_IO"
	TransformationAssetDtoSourcePlatformD2LBRIGHTSPACE            TransformationAssetDtoSourcePlatform = "D2L_BRIGHTSPACE"
	TransformationAssetDtoSourcePlatformDAGSTER                   TransformationAssetDtoSourcePlatform = "DAGSTER"
	TransformationAssetDtoSourcePlatformDATABAND                  TransformationAssetDtoSourcePlatform = "DATABAND"
	TransformationAssetDtoSourcePlatformDATABRICKS                TransformationAssetDtoSourcePlatform = "DATABRICKS"
	TransformationAssetDtoSourcePlatformDATADOG                   TransformationAssetDtoSourcePlatform = "DATADOG"
	TransformationAssetDtoSourcePlatformDATAEDO                   TransformationAssetDtoSourcePlatform = "DATAEDO"
	TransformationAssetDtoSourcePlatformDATAFOLD                  TransformationAssetDtoSourcePlatform = "DATAFOLD"
	TransformationAssetDtoSourcePlatformDATAGALAXY                TransformationAssetDtoSourcePlatform = "DATAGALAXY"
	TransformationAssetDtoSourcePlatformDATAHUB                   TransformationAssetDtoSourcePlatform = "DATAHUB"
	TransformationAssetDtoSourcePlatformDATAIKU                   TransformationAssetDtoSourcePlatform = "DATAIKU"
	TransformationAssetDtoSourcePlatformDATAWORLD                 TransformationAssetDtoSourcePlatform = "DATA_WORLD"
	TransformationAssetDtoSourcePlatformDB2                       TransformationAssetDtoSourcePlatform = "DB2"
	TransformationAssetDtoSourcePlatformDBT                       TransformationAssetDtoSourcePlatform = "DBT"
	TransformationAssetDtoSourcePlatformDBTCLOUD                  TransformationAssetDtoSourcePlatform = "DBTCLOUD"
	TransformationAssetDtoSourcePlatformDCLLOGISTICS              TransformationAssetDtoSourcePlatform = "DCL_LOGISTICS"
	TransformationAssetDtoSourcePlatformDEAR                      TransformationAssetDtoSourcePlatform = "DEAR"
	TransformationAssetDtoSourcePlatformDECUBE                    TransformationAssetDtoSourcePlatform = "DECUBE"
	TransformationAssetDtoSourcePlatformDELIGHTED                 TransformationAssetDtoSourcePlatform = "DELIGHTED"
	TransformationAssetDtoSourcePlatformDEPUTY                    TransformationAssetDtoSourcePlatform = "DEPUTY"
	TransformationAssetDtoSourcePlatformDESTINI                   TransformationAssetDtoSourcePlatform = "DESTINI"
	TransformationAssetDtoSourcePlatformDIXA                      TransformationAssetDtoSourcePlatform = "DIXA"
	TransformationAssetDtoSourcePlatformDOCEBO                    TransformationAssetDtoSourcePlatform = "DOCEBO"
	TransformationAssetDtoSourcePlatformDRATA                     TransformationAssetDtoSourcePlatform = "DRATA"
	TransformationAssetDtoSourcePlatformDRIFT                     TransformationAssetDtoSourcePlatform = "DRIFT"
	TransformationAssetDtoSourcePlatformDRIP                      TransformationAssetDtoSourcePlatform = "DRIP"
	TransformationAssetDtoSourcePlatformDROPBOX                   TransformationAssetDtoSourcePlatform = "DROPBOX"
	TransformationAssetDtoSourcePlatformDUOPLANE                  TransformationAssetDtoSourcePlatform = "DUOPLANE"
	TransformationAssetDtoSourcePlatformEASYPOST                  TransformationAssetDtoSourcePlatform = "EASY_POST"
	TransformationAssetDtoSourcePlatformECONOMIC                  TransformationAssetDtoSourcePlatform = "E_CONOMIC"
	TransformationAssetDtoSourcePlatformELASTICSEARCH             TransformationAssetDtoSourcePlatform = "ELASTICSEARCH"
	TransformationAssetDtoSourcePlatformELEMENTARY                TransformationAssetDtoSourcePlatform = "ELEMENTARY"
	TransformationAssetDtoSourcePlatformELLUCIAN                  TransformationAssetDtoSourcePlatform = "ELLUCIAN"
	TransformationAssetDtoSourcePlatformELOQUA                    TransformationAssetDtoSourcePlatform = "ELOQUA"
	TransformationAssetDtoSourcePlatformEMAIL                     TransformationAssetDtoSourcePlatform = "EMAIL"
	TransformationAssetDtoSourcePlatformEMPLOYMENTHERO            TransformationAssetDtoSourcePlatform = "EMPLOYMENT_HERO"
	TransformationAssetDtoSourcePlatformEPICORPROPHET21           TransformationAssetDtoSourcePlatform = "EPICOR_PROPHET_21"
	TransformationAssetDtoSourcePlatformEVENTBRITE                TransformationAssetDtoSourcePlatform = "EVENTBRITE"
	TransformationAssetDtoSourcePlatformEVERHOUR                  TransformationAssetDtoSourcePlatform = "EVERHOUR"
	TransformationAssetDtoSourcePlatformEXCEL                     TransformationAssetDtoSourcePlatform = "EXCEL"
	TransformationAssetDtoSourcePlatformEXPENSIFY                 TransformationAssetDtoSourcePlatform = "EXPENSIFY"
	TransformationAssetDtoSourcePlatformFACEBOOK                  TransformationAssetDtoSourcePlatform = "FACEBOOK"
	TransformationAssetDtoSourcePlatformFIFTEENFIVE               TransformationAssetDtoSourcePlatform = "FIFTEENFIVE"
	TransformationAssetDtoSourcePlatformFIGMA                     TransformationAssetDtoSourcePlatform = "FIGMA"
	TransformationAssetDtoSourcePlatformFIREBASE                  TransformationAssetDtoSourcePlatform = "FIREBASE"
	TransformationAssetDtoSourcePlatformFIREBOLT                  TransformationAssetDtoSourcePlatform = "FIREBOLT"
	TransformationAssetDtoSourcePlatformFIVETRAN                  TransformationAssetDtoSourcePlatform = "FIVETRAN"
	TransformationAssetDtoSourcePlatformFLEXPORT                  TransformationAssetDtoSourcePlatform = "FLEXPORT"
	TransformationAssetDtoSourcePlatformFORJ                      TransformationAssetDtoSourcePlatform = "FORJ"
	TransformationAssetDtoSourcePlatformFOUNTAIN                  TransformationAssetDtoSourcePlatform = "FOUNTAIN"
	TransformationAssetDtoSourcePlatformFREIGHTVIEW               TransformationAssetDtoSourcePlatform = "FREIGHTVIEW"
	TransformationAssetDtoSourcePlatformFRESHBOOKS                TransformationAssetDtoSourcePlatform = "FRESHBOOKS"
	TransformationAssetDtoSourcePlatformFRESHCHAT                 TransformationAssetDtoSourcePlatform = "FRESHCHAT"
	TransformationAssetDtoSourcePlatformFRESHDESK                 TransformationAssetDtoSourcePlatform = "FRESHDESK"
	TransformationAssetDtoSourcePlatformFRESHDESKCONTACTCENTER    TransformationAssetDtoSourcePlatform = "FRESHDESK_CONTACT_CENTER"
	TransformationAssetDtoSourcePlatformFRESHSERVICE              TransformationAssetDtoSourcePlatform = "FRESHSERVICE"
	TransformationAssetDtoSourcePlatformFRESHSUCCESS              TransformationAssetDtoSourcePlatform = "FRESHSUCCESS"
	TransformationAssetDtoSourcePlatformFRESHTEAM                 TransformationAssetDtoSourcePlatform = "FRESHTEAM"
	TransformationAssetDtoSourcePlatformFRIENDBUY                 TransformationAssetDtoSourcePlatform = "FRIENDBUY"
	TransformationAssetDtoSourcePlatformFRONT                     TransformationAssetDtoSourcePlatform = "FRONT"
	TransformationAssetDtoSourcePlatformFTP                       TransformationAssetDtoSourcePlatform = "FTP"
	TransformationAssetDtoSourcePlatformFULLSTORY                 TransformationAssetDtoSourcePlatform = "FULLSTORY"
	TransformationAssetDtoSourcePlatformG2                        TransformationAssetDtoSourcePlatform = "G2"
	TransformationAssetDtoSourcePlatformGAINSIGHT                 TransformationAssetDtoSourcePlatform = "GAINSIGHT"
	TransformationAssetDtoSourcePlatformGEM                       TransformationAssetDtoSourcePlatform = "GEM"
	TransformationAssetDtoSourcePlatformGIT                       TransformationAssetDtoSourcePlatform = "GIT"
	TransformationAssetDtoSourcePlatformGITHUB                    TransformationAssetDtoSourcePlatform = "GITHUB"
	TransformationAssetDtoSourcePlatformGITLAB                    TransformationAssetDtoSourcePlatform = "GITLAB"
	TransformationAssetDtoSourcePlatformGLADLY                    TransformationAssetDtoSourcePlatform = "GLADLY"
	TransformationAssetDtoSourcePlatformGOCARDLESS                TransformationAssetDtoSourcePlatform = "GOCARDLESS"
	TransformationAssetDtoSourcePlatformGONG                      TransformationAssetDtoSourcePlatform = "GONG"
	TransformationAssetDtoSourcePlatformGOOGLE                    TransformationAssetDtoSourcePlatform = "GOOGLE"
	TransformationAssetDtoSourcePlatformGOOGLEADMANAGER           TransformationAssetDtoSourcePlatform = "GOOGLE_AD_MANAGER"
	TransformationAssetDtoSourcePlatformGOOGLEADS                 TransformationAssetDtoSourcePlatform = "GOOGLE_ADS"
	TransformationAssetDtoSourcePlatformGOOGLEANALYTICS           TransformationAssetDtoSourcePlatform = "GOOGLE_ANALYTICS"
	TransformationAssetDtoSourcePlatformGOOGLECALENDAR            TransformationAssetDtoSourcePlatform = "GOOGLE_CALENDAR"
	TransformationAssetDtoSourcePlatformGOOGLECAMPAIGNMANAGER     TransformationAssetDtoSourcePlatform = "GOOGLE_CAMPAIGN_MANAGER"
	TransformationAssetDtoSourcePlatformGOOGLECHROME              TransformationAssetDtoSourcePlatform = "GOOGLE_CHROME"
	TransformationAssetDtoSourcePlatformGOOGLECLOUD               TransformationAssetDtoSourcePlatform = "GOOGLE_CLOUD"
	TransformationAssetDtoSourcePlatformGOOGLECLOUDSTORAGE        TransformationAssetDtoSourcePlatform = "GOOGLE_CLOUD_STORAGE"
	TransformationAssetDtoSourcePlatformGOOGLEDISPLAY             TransformationAssetDtoSourcePlatform = "GOOGLE_DISPLAY"
	TransformationAssetDtoSourcePlatformGOOGLEDRIVE               TransformationAssetDtoSourcePlatform = "GOOGLE_DRIVE"
	TransformationAssetDtoSourcePlatformGOOGLEPLAY                TransformationAssetDtoSourcePlatform = "GOOGLE_PLAY"
	TransformationAssetDtoSourcePlatformGOOGLESEARCHADS360        TransformationAssetDtoSourcePlatform = "GOOGLE_SEARCH_ADS_360"
	TransformationAssetDtoSourcePlatformGOOGLESEARCHCONSOLE       TransformationAssetDtoSourcePlatform = "GOOGLE_SEARCH_CONSOLE"
	TransformationAssetDtoSourcePlatformGOOGLESHEETS              TransformationAssetDtoSourcePlatform = "GOOGLE_SHEETS"
	TransformationAssetDtoSourcePlatformGOOGLETASKS               TransformationAssetDtoSourcePlatform = "GOOGLE_TASKS"
	TransformationAssetDtoSourcePlatformGORGIAS                   TransformationAssetDtoSourcePlatform = "GORGIAS"
	TransformationAssetDtoSourcePlatformGREENHOUSE                TransformationAssetDtoSourcePlatform = "GREENHOUSE"
	TransformationAssetDtoSourcePlatformGREENPLUM                 TransformationAssetDtoSourcePlatform = "GREENPLUM"
	TransformationAssetDtoSourcePlatformGREENPOWERMONITOR         TransformationAssetDtoSourcePlatform = "GREEN_POWER_MONITOR"
	TransformationAssetDtoSourcePlatformGREPSR                    TransformationAssetDtoSourcePlatform = "GREPSR"
	TransformationAssetDtoSourcePlatformGRIN                      TransformationAssetDtoSourcePlatform = "GRIN"
	TransformationAssetDtoSourcePlatformGURU                      TransformationAssetDtoSourcePlatform = "GURU"
	TransformationAssetDtoSourcePlatformH2                        TransformationAssetDtoSourcePlatform = "H2"
	TransformationAssetDtoSourcePlatformHARVEST                   TransformationAssetDtoSourcePlatform = "HARVEST"
	TransformationAssetDtoSourcePlatformHDFS                      TransformationAssetDtoSourcePlatform = "HDFS"
	TransformationAssetDtoSourcePlatformHDFSSTORAGE               TransformationAssetDtoSourcePlatform = "HDFS_STORAGE"
	TransformationAssetDtoSourcePlatformHEAP                      TransformationAssetDtoSourcePlatform = "HEAP"
	TransformationAssetDtoSourcePlatformHEIGHT                    TransformationAssetDtoSourcePlatform = "HEIGHT"
	TransformationAssetDtoSourcePlatformHELPSCOUT                 TransformationAssetDtoSourcePlatform = "HELP_SCOUT"
	TransformationAssetDtoSourcePlatformHELPSHIFT                 TransformationAssetDtoSourcePlatform = "HELPSHIFT"
	TransformationAssetDtoSourcePlatformHEROKUKAFKA               TransformationAssetDtoSourcePlatform = "HEROKU_KAFKA"
	TransformationAssetDtoSourcePlatformHIBOB                     TransformationAssetDtoSourcePlatform = "HIBOB"
	TransformationAssetDtoSourcePlatformHIGHTOUCH                 TransformationAssetDtoSourcePlatform = "HIGH_TOUCH"
	TransformationAssetDtoSourcePlatformHIVE                      TransformationAssetDtoSourcePlatform = "HIVE"
	TransformationAssetDtoSourcePlatformHIVEPROCESS               TransformationAssetDtoSourcePlatform = "HIVE_PROCESS"
	TransformationAssetDtoSourcePlatformHOPIN                     TransformationAssetDtoSourcePlatform = "HOPIN"
	TransformationAssetDtoSourcePlatformHUBSPOT                   TransformationAssetDtoSourcePlatform = "HUBSPOT"
	TransformationAssetDtoSourcePlatformIMPACT                    TransformationAssetDtoSourcePlatform = "IMPACT"
	TransformationAssetDtoSourcePlatformINCIDENTIO                TransformationAssetDtoSourcePlatform = "INCIDENT_IO"
	TransformationAssetDtoSourcePlatformINFOBIP                   TransformationAssetDtoSourcePlatform = "INFOBIP"
	TransformationAssetDtoSourcePlatformINFORMATICA               TransformationAssetDtoSourcePlatform = "INFORMATICA"
	TransformationAssetDtoSourcePlatformINSIGHTLY                 TransformationAssetDtoSourcePlatform = "INSIGHTLY"
	TransformationAssetDtoSourcePlatformINSTAGRAM                 TransformationAssetDtoSourcePlatform = "INSTAGRAM"
	TransformationAssetDtoSourcePlatformINTERCOM                  TransformationAssetDtoSourcePlatform = "INTERCOM"
	TransformationAssetDtoSourcePlatformINVESTOPEDIA              TransformationAssetDtoSourcePlatform = "INVESTOPEDIA"
	TransformationAssetDtoSourcePlatformIRONCLAD                  TransformationAssetDtoSourcePlatform = "IRONCLAD"
	TransformationAssetDtoSourcePlatformIRONSOURCE                TransformationAssetDtoSourcePlatform = "IRONSOURCE"
	TransformationAssetDtoSourcePlatformITERABLE                  TransformationAssetDtoSourcePlatform = "ITERABLE"
	TransformationAssetDtoSourcePlatformJAVA                      TransformationAssetDtoSourcePlatform = "JAVA"
	TransformationAssetDtoSourcePlatformJENKINS                   TransformationAssetDtoSourcePlatform = "JENKINS"
	TransformationAssetDtoSourcePlatformJUSTCALL                  TransformationAssetDtoSourcePlatform = "JUSTCALL"
	TransformationAssetDtoSourcePlatformKANDJI                    TransformationAssetDtoSourcePlatform = "KANDJI"
	TransformationAssetDtoSourcePlatformKENSU                     TransformationAssetDtoSourcePlatform = "KENSU"
	TransformationAssetDtoSourcePlatformKHOROSCARE                TransformationAssetDtoSourcePlatform = "KHOROS_CARE"
	TransformationAssetDtoSourcePlatformKISSMETRICS               TransformationAssetDtoSourcePlatform = "KISSMETRICS"
	TransformationAssetDtoSourcePlatformKLAVIYO                   TransformationAssetDtoSourcePlatform = "KLAVIYO"
	TransformationAssetDtoSourcePlatformKNOWBE4                   TransformationAssetDtoSourcePlatform = "KNOWBE4"
	TransformationAssetDtoSourcePlatformKONNECTINSIGHTS           TransformationAssetDtoSourcePlatform = "KONNECT_INSIGHTS"
	TransformationAssetDtoSourcePlatformKUSTOMER                  TransformationAssetDtoSourcePlatform = "KUSTOMER"
	TransformationAssetDtoSourcePlatformLARIATDATA                TransformationAssetDtoSourcePlatform = "LARIAT_DATA"
	TransformationAssetDtoSourcePlatformLATTICE                   TransformationAssetDtoSourcePlatform = "LATTICE"
	TransformationAssetDtoSourcePlatformLAUNCHDARKLY              TransformationAssetDtoSourcePlatform = "LAUNCH_DARKLY"
	TransformationAssetDtoSourcePlatformLEARNUPON                 TransformationAssetDtoSourcePlatform = "LEARN_UPON"
	TransformationAssetDtoSourcePlatformLESSONLY                  TransformationAssetDtoSourcePlatform = "LESSONLY"
	TransformationAssetDtoSourcePlatformLEVER                     TransformationAssetDtoSourcePlatform = "LEVER"
	TransformationAssetDtoSourcePlatformLIFTOFF                   TransformationAssetDtoSourcePlatform = "LIFTOFF"
	TransformationAssetDtoSourcePlatformLIGHTDASH                 TransformationAssetDtoSourcePlatform = "LIGHTDASH"
	TransformationAssetDtoSourcePlatformLIGHTSPEED                TransformationAssetDtoSourcePlatform = "LIGHTSPEED"
	TransformationAssetDtoSourcePlatformLIGHTSUP                  TransformationAssetDtoSourcePlatform = "LIGHTSUP"
	TransformationAssetDtoSourcePlatformLINEAR                    TransformationAssetDtoSourcePlatform = "LINEAR"
	TransformationAssetDtoSourcePlatformLINKEDIN                  TransformationAssetDtoSourcePlatform = "LINKEDIN"
	TransformationAssetDtoSourcePlatformLIVECHAT                  TransformationAssetDtoSourcePlatform = "LIVECHAT"
	TransformationAssetDtoSourcePlatformLOADEDCOMMERCE            TransformationAssetDtoSourcePlatform = "LOADED_COMMERCE"
	TransformationAssetDtoSourcePlatformLOB                       TransformationAssetDtoSourcePlatform = "LOB"
	TransformationAssetDtoSourcePlatformLOOKER                    TransformationAssetDtoSourcePlatform = "LOOKER"
	TransformationAssetDtoSourcePlatformLOOP                      TransformationAssetDtoSourcePlatform = "LOOP"
	TransformationAssetDtoSourcePlatformLOOPIO                    TransformationAssetDtoSourcePlatform = "LOOPIO"
	TransformationAssetDtoSourcePlatformLUMA                      TransformationAssetDtoSourcePlatform = "LUMA"
	TransformationAssetDtoSourcePlatformMAGENTO                   TransformationAssetDtoSourcePlatform = "MAGENTO"
	TransformationAssetDtoSourcePlatformMAILCHIMP                 TransformationAssetDtoSourcePlatform = "MAILCHIMP"
	TransformationAssetDtoSourcePlatformMAILGUN                   TransformationAssetDtoSourcePlatform = "MAILGUN"
	TransformationAssetDtoSourcePlatformMANDRILL                  TransformationAssetDtoSourcePlatform = "MANDRILL"
	TransformationAssetDtoSourcePlatformMANTA                     TransformationAssetDtoSourcePlatform = "MANTA"
	TransformationAssetDtoSourcePlatformMARIADB                   TransformationAssetDtoSourcePlatform = "MARIADB"
	TransformationAssetDtoSourcePlatformMARINSOFTWARE             TransformationAssetDtoSourcePlatform = "MARIN_SOFTWARE"
	TransformationAssetDtoSourcePlatformMARKETO                   TransformationAssetDtoSourcePlatform = "MARKETO"
	TransformationAssetDtoSourcePlatformMATTERMOST                TransformationAssetDtoSourcePlatform = "MATTERMOST"
	TransformationAssetDtoSourcePlatformMAVENLINK                 TransformationAssetDtoSourcePlatform = "MAVENLINK"
	TransformationAssetDtoSourcePlatformMAXIO                     TransformationAssetDtoSourcePlatform = "MAXIO"
	TransformationAssetDtoSourcePlatformMEDALLIA                  TransformationAssetDtoSourcePlatform = "MEDALLIA"
	TransformationAssetDtoSourcePlatformMETA                      TransformationAssetDtoSourcePlatform = "META"
	TransformationAssetDtoSourcePlatformMETABASE                  TransformationAssetDtoSourcePlatform = "METABASE"
	TransformationAssetDtoSourcePlatformMETAPHOR                  TransformationAssetDtoSourcePlatform = "METAPHOR"
	TransformationAssetDtoSourcePlatformMETAPLANE                 TransformationAssetDtoSourcePlatform = "METAPLANE"
	TransformationAssetDtoSourcePlatformMICROSOFT                 TransformationAssetDtoSourcePlatform = "MICROSOFT"
	TransformationAssetDtoSourcePlatformMICROSOFTAZUREBLOBSTORAGE TransformationAssetDtoSourcePlatform = "MICROSOFT_AZURE_BLOB_STORAGE"
	TransformationAssetDtoSourcePlatformMICROSOFTAZUREML          TransformationAssetDtoSourcePlatform = "MICROSOFT_AZURE_ML"
	TransformationAssetDtoSourcePlatformMICROSOFTDYNAMICS         TransformationAssetDtoSourcePlatform = "MICROSOFT_DYNAMICS"
	TransformationAssetDtoSourcePlatformMICROSOFTONEDRIVE         TransformationAssetDtoSourcePlatform = "MICROSOFT_ONEDRIVE"
	TransformationAssetDtoSourcePlatformMICROSOFTPURVIEW          TransformationAssetDtoSourcePlatform = "MICROSOFT_PURVIEW"
	TransformationAssetDtoSourcePlatformMICROSOFTTEAMS            TransformationAssetDtoSourcePlatform = "MICROSOFT_TEAMS"
	TransformationAssetDtoSourcePlatformMICROSTRATEGY             TransformationAssetDtoSourcePlatform = "MICROSTRATEGY"
	TransformationAssetDtoSourcePlatformMIXMAX                    TransformationAssetDtoSourcePlatform = "MIXMAX"
	TransformationAssetDtoSourcePlatformMIXPANEL                  TransformationAssetDtoSourcePlatform = "MIXPANEL"
	TransformationAssetDtoSourcePlatformMONDAYCOM                 TransformationAssetDtoSourcePlatform = "MONDAY_COM"
	TransformationAssetDtoSourcePlatformMONGODB                   TransformationAssetDtoSourcePlatform = "MONGODB"
	TransformationAssetDtoSourcePlatformMONTECARLO                TransformationAssetDtoSourcePlatform = "MONTE_CARLO"
	TransformationAssetDtoSourcePlatformMOUNTAIN                  TransformationAssetDtoSourcePlatform = "MOUNTAIN"
	TransformationAssetDtoSourcePlatformMSSQL                     TransformationAssetDtoSourcePlatform = "MSSQL"
	TransformationAssetDtoSourcePlatformMULESOFT                  TransformationAssetDtoSourcePlatform = "MULESOFT"
	TransformationAssetDtoSourcePlatformMUX                       TransformationAssetDtoSourcePlatform = "MUX"
	TransformationAssetDtoSourcePlatformMWAA                      TransformationAssetDtoSourcePlatform = "MWAA"
	TransformationAssetDtoSourcePlatformMYSQL                     TransformationAssetDtoSourcePlatform = "MYSQL"
	TransformationAssetDtoSourcePlatformNAMELY                    TransformationAssetDtoSourcePlatform = "NAMELY"
	TransformationAssetDtoSourcePlatformNCINO                     TransformationAssetDtoSourcePlatform = "NCINO"
	TransformationAssetDtoSourcePlatformNETSUITEANALYTICS         TransformationAssetDtoSourcePlatform = "NETSUITE_ANALYTICS"
	TransformationAssetDtoSourcePlatformNEWRELIC                  TransformationAssetDtoSourcePlatform = "NEW_RELIC"
	TransformationAssetDtoSourcePlatformNOTION                    TransformationAssetDtoSourcePlatform = "NOTION"
	TransformationAssetDtoSourcePlatformNYLAS                     TransformationAssetDtoSourcePlatform = "NYLAS"
	TransformationAssetDtoSourcePlatformOBSERVE                   TransformationAssetDtoSourcePlatform = "OBSERVE"
	TransformationAssetDtoSourcePlatformOCTOPAI                   TransformationAssetDtoSourcePlatform = "OCTOPAI"
	TransformationAssetDtoSourcePlatformOKTA                      TransformationAssetDtoSourcePlatform = "OKTA"
	TransformationAssetDtoSourcePlatformOPENAI                    TransformationAssetDtoSourcePlatform = "OPEN_AI"
	TransformationAssetDtoSourcePlatformOPENDATADC                TransformationAssetDtoSourcePlatform = "OPEN_DATA_DC"
	TransformationAssetDtoSourcePlatformOPENEXCHANGESRATES        TransformationAssetDtoSourcePlatform = "OPEN_EXCHANGES_RATES"
	TransformationAssetDtoSourcePlatformOPENSEARCH                TransformationAssetDtoSourcePlatform = "OPEN_SEARCH"
	TransformationAssetDtoSourcePlatformOPTIMIZELY                TransformationAssetDtoSourcePlatform = "OPTIMIZELY"
	TransformationAssetDtoSourcePlatformORACLE                    TransformationAssetDtoSourcePlatform = "ORACLE"
	TransformationAssetDtoSourcePlatformORBITCOMMUNITYPLATFORM    TransformationAssetDtoSourcePlatform = "ORBIT_COMMUNITY_PLATFORM"
	TransformationAssetDtoSourcePlatformORDWAY                    TransformationAssetDtoSourcePlatform = "ORDWAY"
	TransformationAssetDtoSourcePlatformORTTO                     TransformationAssetDtoSourcePlatform = "ORTTO"
	TransformationAssetDtoSourcePlatformOSCOMMERCE                TransformationAssetDtoSourcePlatform = "OS_COMMERCE"
	TransformationAssetDtoSourcePlatformOUTBRAIN                  TransformationAssetDtoSourcePlatform = "OUTBRAIN"
	TransformationAssetDtoSourcePlatformOUTREACH                  TransformationAssetDtoSourcePlatform = "OUTREACH"
	TransformationAssetDtoSourcePlatformOVALEDGE                  TransformationAssetDtoSourcePlatform = "OVALEDGE"
	TransformationAssetDtoSourcePlatformPAGERDUTY                 TransformationAssetDtoSourcePlatform = "PAGERDUTY"
	TransformationAssetDtoSourcePlatformPAGERSHIFT                TransformationAssetDtoSourcePlatform = "PAGERSHIFT"
	TransformationAssetDtoSourcePlatformPAYPAL                    TransformationAssetDtoSourcePlatform = "PAYPAL"
	TransformationAssetDtoSourcePlatformPENDO                     TransformationAssetDtoSourcePlatform = "PENDO"
	TransformationAssetDtoSourcePlatformPINGDOM                   TransformationAssetDtoSourcePlatform = "PINGDOM"
	TransformationAssetDtoSourcePlatformPINTEREST                 TransformationAssetDtoSourcePlatform = "PINTEREST"
	TransformationAssetDtoSourcePlatformPIPE17                    TransformationAssetDtoSourcePlatform = "PIPE17"
	TransformationAssetDtoSourcePlatformPIPEDRIVE                 TransformationAssetDtoSourcePlatform = "PIPEDRIVE"
	TransformationAssetDtoSourcePlatformPIVOTALTRACKER            TransformationAssetDtoSourcePlatform = "PIVOTAL_TRACKER"
	TransformationAssetDtoSourcePlatformPLAYVOX                   TransformationAssetDtoSourcePlatform = "PLAYVOX"
	TransformationAssetDtoSourcePlatformPOSTGRES                  TransformationAssetDtoSourcePlatform = "POSTGRES"
	TransformationAssetDtoSourcePlatformPOSTHOG                   TransformationAssetDtoSourcePlatform = "POSTHOG"
	TransformationAssetDtoSourcePlatformPOWERBI                   TransformationAssetDtoSourcePlatform = "POWER_BI"
	TransformationAssetDtoSourcePlatformPOWERSCHOOL               TransformationAssetDtoSourcePlatform = "POWERSCHOOL"
	TransformationAssetDtoSourcePlatformPREFECT                   TransformationAssetDtoSourcePlatform = "PREFECT"
	TransformationAssetDtoSourcePlatformPRESTASHOP                TransformationAssetDtoSourcePlatform = "PRESTASHOP"
	TransformationAssetDtoSourcePlatformPRESTO                    TransformationAssetDtoSourcePlatform = "PRESTO"
	TransformationAssetDtoSourcePlatformPRODUCTBOARD              TransformationAssetDtoSourcePlatform = "PRODUCTBOARD"
	TransformationAssetDtoSourcePlatformPYTHON                    TransformationAssetDtoSourcePlatform = "PYTHON"
	TransformationAssetDtoSourcePlatformQLIK                      TransformationAssetDtoSourcePlatform = "QLIK"
	TransformationAssetDtoSourcePlatformQUALAROO                  TransformationAssetDtoSourcePlatform = "QUALAROO"
	TransformationAssetDtoSourcePlatformQUALTRICS                 TransformationAssetDtoSourcePlatform = "QUALTRICS"
	TransformationAssetDtoSourcePlatformQUICKBOOKS                TransformationAssetDtoSourcePlatform = "QUICKBOOKS"
	TransformationAssetDtoSourcePlatformQUICKSIGHT                TransformationAssetDtoSourcePlatform = "QUICKSIGHT"
	TransformationAssetDtoSourcePlatformRAMP                      TransformationAssetDtoSourcePlatform = "RAMP"
	TransformationAssetDtoSourcePlatformRARIBLE                   TransformationAssetDtoSourcePlatform = "RARIBLE"
	TransformationAssetDtoSourcePlatformRECHARGE                  TransformationAssetDtoSourcePlatform = "RECHARGE"
	TransformationAssetDtoSourcePlatformRECURLY                   TransformationAssetDtoSourcePlatform = "RECURLY"
	TransformationAssetDtoSourcePlatformREDDIT                    TransformationAssetDtoSourcePlatform = "REDDIT"
	TransformationAssetDtoSourcePlatformREDSHIFT                  TransformationAssetDtoSourcePlatform = "REDSHIFT"
	TransformationAssetDtoSourcePlatformRELTIO                    TransformationAssetDtoSourcePlatform = "RELTIO"
	TransformationAssetDtoSourcePlatformREPLYIO                   TransformationAssetDtoSourcePlatform = "REPLY_IO"
	TransformationAssetDtoSourcePlatformRETAILNEXT                TransformationAssetDtoSourcePlatform = "RETAILNEXT"
	TransformationAssetDtoSourcePlatformRETENTLY                  TransformationAssetDtoSourcePlatform = "RETENTLY"
	TransformationAssetDtoSourcePlatformREVELSYSTEMS              TransformationAssetDtoSourcePlatform = "REVEL_SYSTEMS"
	TransformationAssetDtoSourcePlatformRINGCENTRAL               TransformationAssetDtoSourcePlatform = "RINGCENTRAL"
	TransformationAssetDtoSourcePlatformRIPPLING                  TransformationAssetDtoSourcePlatform = "RIPPLING"
	TransformationAssetDtoSourcePlatformROLLBAR                   TransformationAssetDtoSourcePlatform = "ROLLBAR"
	TransformationAssetDtoSourcePlatformROOTLY                    TransformationAssetDtoSourcePlatform = "ROOTLY"
	TransformationAssetDtoSourcePlatformS3                        TransformationAssetDtoSourcePlatform = "S3"
	TransformationAssetDtoSourcePlatformSAGEHR                    TransformationAssetDtoSourcePlatform = "SAGE_HR"
	TransformationAssetDtoSourcePlatformSAGEINTACCT               TransformationAssetDtoSourcePlatform = "SAGE_INTACCT"
	TransformationAssetDtoSourcePlatformSAILTHRU                  TransformationAssetDtoSourcePlatform = "SAILTHRU"
	TransformationAssetDtoSourcePlatformSALESFORCE                TransformationAssetDtoSourcePlatform = "SALESFORCE"
	TransformationAssetDtoSourcePlatformSALESLOFT                 TransformationAssetDtoSourcePlatform = "SALESLOFT"
	TransformationAssetDtoSourcePlatformSALSIFY                   TransformationAssetDtoSourcePlatform = "SALSIFY"
	TransformationAssetDtoSourcePlatformSAMSARA                   TransformationAssetDtoSourcePlatform = "SAMSARA"
	TransformationAssetDtoSourcePlatformSAP                       TransformationAssetDtoSourcePlatform = "SAP"
	TransformationAssetDtoSourcePlatformSAPCONCUR                 TransformationAssetDtoSourcePlatform = "SAP_CONCUR"
	TransformationAssetDtoSourcePlatformSCORM                     TransformationAssetDtoSourcePlatform = "SCORM"
	TransformationAssetDtoSourcePlatformSECODA                    TransformationAssetDtoSourcePlatform = "SECODA"
	TransformationAssetDtoSourcePlatformSECURITYJOURNEY           TransformationAssetDtoSourcePlatform = "SECURITY_JOURNEY"
	TransformationAssetDtoSourcePlatformSEGMENT                   TransformationAssetDtoSourcePlatform = "SEGMENT"
	TransformationAssetDtoSourcePlatformSELECTSTAR                TransformationAssetDtoSourcePlatform = "SELECT_STAR"
	TransformationAssetDtoSourcePlatformSENDGRID                  TransformationAssetDtoSourcePlatform = "SENDGRID"
	TransformationAssetDtoSourcePlatformSERVICENOW                TransformationAssetDtoSourcePlatform = "SERVICE_NOW"
	TransformationAssetDtoSourcePlatformSFTP                      TransformationAssetDtoSourcePlatform = "SFTP"
	TransformationAssetDtoSourcePlatformSHAREPOINT                TransformationAssetDtoSourcePlatform = "SHAREPOINT"
	TransformationAssetDtoSourcePlatformSHARETRIBE                TransformationAssetDtoSourcePlatform = "SHARETRIBE"
	TransformationAssetDtoSourcePlatformSHIPHERO                  TransformationAssetDtoSourcePlatform = "SHIPHERO"
	TransformationAssetDtoSourcePlatformSHIPSTATION               TransformationAssetDtoSourcePlatform = "SHIPSTATION"
	TransformationAssetDtoSourcePlatformSHOPIFY                   TransformationAssetDtoSourcePlatform = "SHOPIFY"
	TransformationAssetDtoSourcePlatformSHOPWARE                  TransformationAssetDtoSourcePlatform = "SHOPWARE"
	TransformationAssetDtoSourcePlatformSHORTIO                   TransformationAssetDtoSourcePlatform = "SHORT_IO"
	TransformationAssetDtoSourcePlatformSIFFLET                   TransformationAssetDtoSourcePlatform = "SIFFLET"
	TransformationAssetDtoSourcePlatformSIGMA                     TransformationAssetDtoSourcePlatform = "SIGMA"
	TransformationAssetDtoSourcePlatformSIMPLECAST                TransformationAssetDtoSourcePlatform = "SIMPLECAST"
	TransformationAssetDtoSourcePlatformSIMPLESAT                 TransformationAssetDtoSourcePlatform = "SIMPLESAT"
	TransformationAssetDtoSourcePlatformSINGLESTORE               TransformationAssetDtoSourcePlatform = "SINGLESTORE"
	TransformationAssetDtoSourcePlatformSISENSE                   TransformationAssetDtoSourcePlatform = "SISENSE"
	TransformationAssetDtoSourcePlatformSIXSENSE                  TransformationAssetDtoSourcePlatform = "SIXSENSE"
	TransformationAssetDtoSourcePlatformSKILLJAR                  TransformationAssetDtoSourcePlatform = "SKILLJAR"
	TransformationAssetDtoSourcePlatformSKUVAULT                  TransformationAssetDtoSourcePlatform = "SKUVAULT"
	TransformationAssetDtoSourcePlatformSLAB                      TransformationAssetDtoSourcePlatform = "SLAB"
	TransformationAssetDtoSourcePlatformSLACK                     TransformationAssetDtoSourcePlatform = "SLACK"
	TransformationAssetDtoSourcePlatformSMADEX                    TransformationAssetDtoSourcePlatform = "SMADEX"
	TransformationAssetDtoSourcePlatformSNAPCHAT                  TransformationAssetDtoSourcePlatform = "SNAPCHAT"
	TransformationAssetDtoSourcePlatformSNOWFLAKE                 TransformationAssetDtoSourcePlatform = "SNOWFLAKE"
	TransformationAssetDtoSourcePlatformSNOWPLOW                  TransformationAssetDtoSourcePlatform = "SNOWPLOW"
	TransformationAssetDtoSourcePlatformSODA                      TransformationAssetDtoSourcePlatform = "SODA"
	TransformationAssetDtoSourcePlatformSONARQUBE                 TransformationAssetDtoSourcePlatform = "SONARQUBE"
	TransformationAssetDtoSourcePlatformSPARKPROCESS              TransformationAssetDtoSourcePlatform = "SPARK_PROCESS"
	TransformationAssetDtoSourcePlatformSPLITIO                   TransformationAssetDtoSourcePlatform = "SPLIT_IO"
	TransformationAssetDtoSourcePlatformSPLUNK                    TransformationAssetDtoSourcePlatform = "SPLUNK"
	TransformationAssetDtoSourcePlatformSPOTIFY                   TransformationAssetDtoSourcePlatform = "SPOTIFY"
	TransformationAssetDtoSourcePlatformSPREECOMMERCE             TransformationAssetDtoSourcePlatform = "SPREE_COMMERCE"
	TransformationAssetDtoSourcePlatformSPROUTSOCIAL              TransformationAssetDtoSourcePlatform = "SPROUT_SOCIAL"
	TransformationAssetDtoSourcePlatformSQUARE                    TransformationAssetDtoSourcePlatform = "SQUARE"
	TransformationAssetDtoSourcePlatformSQUARESPACE               TransformationAssetDtoSourcePlatform = "SQUARESPACE"
	TransformationAssetDtoSourcePlatformSTACKADAPT                TransformationAssetDtoSourcePlatform = "STACK_ADAPT"
	TransformationAssetDtoSourcePlatformSTATSIG                   TransformationAssetDtoSourcePlatform = "STATSIG"
	TransformationAssetDtoSourcePlatformSTITCH                    TransformationAssetDtoSourcePlatform = "STITCH"
	TransformationAssetDtoSourcePlatformSTRIPE                    TransformationAssetDtoSourcePlatform = "STRIPE"
	TransformationAssetDtoSourcePlatformSTYLIGHT                  TransformationAssetDtoSourcePlatform = "STYLIGHT"
	TransformationAssetDtoSourcePlatformSUBSCRIPT                 TransformationAssetDtoSourcePlatform = "SUBSCRIPT"
	TransformationAssetDtoSourcePlatformSYNAPSE                   TransformationAssetDtoSourcePlatform = "SYNAPSE"
	TransformationAssetDtoSourcePlatformTABLEAU                   TransformationAssetDtoSourcePlatform = "TABLEAU"
	TransformationAssetDtoSourcePlatformTABOOLA                   TransformationAssetDtoSourcePlatform = "TABOOLA"
	TransformationAssetDtoSourcePlatformTALEND                    TransformationAssetDtoSourcePlatform = "TALEND"
	TransformationAssetDtoSourcePlatformTALKDESK                  TransformationAssetDtoSourcePlatform = "TALKDESK"
	TransformationAssetDtoSourcePlatformTALKWALKER                TransformationAssetDtoSourcePlatform = "TALKWALKER"
	TransformationAssetDtoSourcePlatformTEAMWORKCOM               TransformationAssetDtoSourcePlatform = "TEAMWORK_COM"
	TransformationAssetDtoSourcePlatformTEMPOIO                   TransformationAssetDtoSourcePlatform = "TEMPO_IO"
	TransformationAssetDtoSourcePlatformTERADATA                  TransformationAssetDtoSourcePlatform = "TERADATA"
	TransformationAssetDtoSourcePlatformTERRAFORM                 TransformationAssetDtoSourcePlatform = "TERRAFORM"
	TransformationAssetDtoSourcePlatformTHETRADEDESK              TransformationAssetDtoSourcePlatform = "THE_TRADE_DESK"
	TransformationAssetDtoSourcePlatformTHOUGHTSPOT               TransformationAssetDtoSourcePlatform = "THOUGHT_SPOT"
	TransformationAssetDtoSourcePlatformTHREESIXTYLEARNING        TransformationAssetDtoSourcePlatform = "THREESIXTYLEARNING"
	TransformationAssetDtoSourcePlatformTIKTOK                    TransformationAssetDtoSourcePlatform = "TIKTOK"
	TransformationAssetDtoSourcePlatformTOGGL                     TransformationAssetDtoSourcePlatform = "TOGGL"
	TransformationAssetDtoSourcePlatformTRANSCEND                 TransformationAssetDtoSourcePlatform = "TRANSCEND"
	TransformationAssetDtoSourcePlatformTRELLO                    TransformationAssetDtoSourcePlatform = "TRELLO"
	TransformationAssetDtoSourcePlatformTRINET                    TransformationAssetDtoSourcePlatform = "TRINET"
	TransformationAssetDtoSourcePlatformTRISOLUTE                 TransformationAssetDtoSourcePlatform = "TRISOLUTE"
	TransformationAssetDtoSourcePlatformTWILIO                    TransformationAssetDtoSourcePlatform = "TWILIO"
	TransformationAssetDtoSourcePlatformTYPEFORM                  TransformationAssetDtoSourcePlatform = "TYPEFORM"
	TransformationAssetDtoSourcePlatformUNKNOWN                   TransformationAssetDtoSourcePlatform = "UNKNOWN"
	TransformationAssetDtoSourcePlatformUPLAND                    TransformationAssetDtoSourcePlatform = "UPLAND"
	TransformationAssetDtoSourcePlatformUSERVOICE                 TransformationAssetDtoSourcePlatform = "USERVOICE"
	TransformationAssetDtoSourcePlatformVALIDIO                   TransformationAssetDtoSourcePlatform = "VALIDIO"
	TransformationAssetDtoSourcePlatformVEEVA                     TransformationAssetDtoSourcePlatform = "VEEVA"
	TransformationAssetDtoSourcePlatformVERIZONMEDIA              TransformationAssetDtoSourcePlatform = "VERIZON_MEDIA"
	TransformationAssetDtoSourcePlatformVITALLY                   TransformationAssetDtoSourcePlatform = "VITALLY"
	TransformationAssetDtoSourcePlatformVONAGE                    TransformationAssetDtoSourcePlatform = "VONAGE"
	TransformationAssetDtoSourcePlatformVUETIFY                   TransformationAssetDtoSourcePlatform = "VUETIFY"
	TransformationAssetDtoSourcePlatformWEBHOOKS                  TransformationAssetDtoSourcePlatform = "WEBHOOKS"
	TransformationAssetDtoSourcePlatformWEBSCRAPER                TransformationAssetDtoSourcePlatform = "WEB_SCRAPER"
	TransformationAssetDtoSourcePlatformWHENIWORK                 TransformationAssetDtoSourcePlatform = "WHEN_I_WORK"
	TransformationAssetDtoSourcePlatformWHEREFOUR                 TransformationAssetDtoSourcePlatform = "WHEREFOUR"
	TransformationAssetDtoSourcePlatformWIKIPEDIA                 TransformationAssetDtoSourcePlatform = "WIKIPEDIA"
	TransformationAssetDtoSourcePlatformWOOCOMMERCE               TransformationAssetDtoSourcePlatform = "WOOCOMMERCE"
	TransformationAssetDtoSourcePlatformWORDPRESS                 TransformationAssetDtoSourcePlatform = "WORDPRESS"
	TransformationAssetDtoSourcePlatformWORKABLE                  TransformationAssetDtoSourcePlatform = "WORKABLE"
	TransformationAssetDtoSourcePlatformWORKDAY                   TransformationAssetDtoSourcePlatform = "WORKDAY"
	TransformationAssetDtoSourcePlatformWORKFLOWMAX               TransformationAssetDtoSourcePlatform = "WORKFLOW_MAX"
	TransformationAssetDtoSourcePlatformWRIKE                     TransformationAssetDtoSourcePlatform = "WRIKE"
	TransformationAssetDtoSourcePlatformX                         TransformationAssetDtoSourcePlatform = "X"
	TransformationAssetDtoSourcePlatformXERO                      TransformationAssetDtoSourcePlatform = "XERO"
	TransformationAssetDtoSourcePlatformXRAY                      TransformationAssetDtoSourcePlatform = "XRAY"
	TransformationAssetDtoSourcePlatformYAHOO                     TransformationAssetDtoSourcePlatform = "YAHOO"
	TransformationAssetDtoSourcePlatformYOTPO                     TransformationAssetDtoSourcePlatform = "YOTPO"
	TransformationAssetDtoSourcePlatformYOUTUBE                   TransformationAssetDtoSourcePlatform = "YOUTUBE"
	TransformationAssetDtoSourcePlatformZEENEA                    TransformationAssetDtoSourcePlatform = "ZEENEA"
	TransformationAssetDtoSourcePlatformZENCART                   TransformationAssetDtoSourcePlatform = "ZEN_CART"
	TransformationAssetDtoSourcePlatformZENDESKCHAT               TransformationAssetDtoSourcePlatform = "ZENDESK_CHAT"
	TransformationAssetDtoSourcePlatformZENDESKSELL               TransformationAssetDtoSourcePlatform = "ZENDESK_SELL"
	TransformationAssetDtoSourcePlatformZENDESKSUNSHINE           TransformationAssetDtoSourcePlatform = "ZENDESK_SUNSHINE"
	TransformationAssetDtoSourcePlatformZENDESKSUPPORT            TransformationAssetDtoSourcePlatform = "ZENDESK_SUPPORT"
	TransformationAssetDtoSourcePlatformZINGTREE                  TransformationAssetDtoSourcePlatform = "ZINGTREE"
	TransformationAssetDtoSourcePlatformZOHOBOOKS                 TransformationAssetDtoSourcePlatform = "ZOHO_BOOKS"
	TransformationAssetDtoSourcePlatformZOHOCAMPAIGNS             TransformationAssetDtoSourcePlatform = "ZOHO_CAMPAIGNS"
	TransformationAssetDtoSourcePlatformZOHOCRM                   TransformationAssetDtoSourcePlatform = "ZOHO_CRM"
	TransformationAssetDtoSourcePlatformZOOM                      TransformationAssetDtoSourcePlatform = "ZOOM"
	TransformationAssetDtoSourcePlatformZUORA                     TransformationAssetDtoSourcePlatform = "ZUORA"
)

// Defines values for TransformationAssetOverviewType.
const (
	FIVETRANCONNECTOR TransformationAssetOverviewType = "FIVETRAN_CONNECTOR"
)

// Defines values for UpstreamOfFieldDtoType.
const (
	FIELD    UpstreamOfFieldDtoType = "FIELD"
	FUNCTION UpstreamOfFieldDtoType = "FUNCTION"
)

// Defines values for UsageSearchFilterElementDtoId.
const (
	UsageSearchFilterElementDtoIdHIGH        UsageSearchFilterElementDtoId = "HIGH"
	UsageSearchFilterElementDtoIdLOW         UsageSearchFilterElementDtoId = "LOW"
	UsageSearchFilterElementDtoIdMEDIUM      UsageSearchFilterElementDtoId = "MEDIUM"
	UsageSearchFilterElementDtoIdUNSUPPORTED UsageSearchFilterElementDtoId = "UNSUPPORTED"
)

// Defines values for UserProviderDtoType.
const (
	UserProviderDtoTypeACCESSTOKEN UserProviderDtoType = "ACCESS_TOKEN"
	UserProviderDtoTypeDATASOURCE  UserProviderDtoType = "DATASOURCE"
	UserProviderDtoTypeGENERIC     UserProviderDtoType = "GENERIC"
	UserProviderDtoTypeUSER        UserProviderDtoType = "USER"
)

// Defines values for ExportAssetDescriptionsParamsHealthStatus.
const (
	ExportAssetDescriptionsParamsHealthStatusATRISK       ExportAssetDescriptionsParamsHealthStatus = "AT_RISK"
	ExportAssetDescriptionsParamsHealthStatusCRITICAL     ExportAssetDescriptionsParamsHealthStatus = "CRITICAL"
	ExportAssetDescriptionsParamsHealthStatusHEALTHY      ExportAssetDescriptionsParamsHealthStatus = "HEALTHY"
	ExportAssetDescriptionsParamsHealthStatusNOTSUPPORTED ExportAssetDescriptionsParamsHealthStatus = "NOT_SUPPORTED"
	ExportAssetDescriptionsParamsHealthStatusUNMONITORED  ExportAssetDescriptionsParamsHealthStatus = "UNMONITORED"
)

// Defines values for ExportAssetDescriptionsParamsUsage.
const (
	ExportAssetDescriptionsParamsUsageHIGH        ExportAssetDescriptionsParamsUsage = "HIGH"
	ExportAssetDescriptionsParamsUsageLOW         ExportAssetDescriptionsParamsUsage = "LOW"
	ExportAssetDescriptionsParamsUsageMEDIUM      ExportAssetDescriptionsParamsUsage = "MEDIUM"
	ExportAssetDescriptionsParamsUsageUNSUPPORTED ExportAssetDescriptionsParamsUsage = "UNSUPPORTED"
)

// Defines values for ExportAssetDescriptionsParamsIngestion.
const (
	ExportAssetDescriptionsParamsIngestionDECLARATIVE    ExportAssetDescriptionsParamsIngestion = "DECLARATIVE"
	ExportAssetDescriptionsParamsIngestionSIFFLETSOURCED ExportAssetDescriptionsParamsIngestion = "SIFFLET_SOURCED"
)

// Defines values for GetAllDatasourceParamsIngestion.
const (
	GetAllDatasourceParamsIngestionDECLARATIVE    GetAllDatasourceParamsIngestion = "DECLARATIVE"
	GetAllDatasourceParamsIngestionSIFFLETSOURCED GetAllDatasourceParamsIngestion = "SIFFLET_SOURCED"
)

// Defines values for SiffletRuleRunDownloadByRunParamsExportFormat.
const (
	CSV         SiffletRuleRunDownloadByRunParamsExportFormat = "CSV"
	CSVFOREXCEL SiffletRuleRunDownloadByRunParamsExportFormat = "CSV_FOR_EXCEL"
	TSV         SiffletRuleRunDownloadByRunParamsExportFormat = "TSV"
)

// Defines values for GetAllTagParamsType.
const (
	GetAllTagParamsTypeBIGQUERYEXTERNAL          GetAllTagParamsType = "BIGQUERY_EXTERNAL"
	GetAllTagParamsTypeGENERIC                   GetAllTagParamsType = "GENERIC"
	GetAllTagParamsTypeHIDDENDATACLASSIFICATION  GetAllTagParamsType = "HIDDEN_DATA_CLASSIFICATION"
	GetAllTagParamsTypeSNOWFLAKEEXTERNAL         GetAllTagParamsType = "SNOWFLAKE_EXTERNAL"
	GetAllTagParamsTypeTERM                      GetAllTagParamsType = "TERM"
	GetAllTagParamsTypeVISIBLEDATACLASSIFICATION GetAllTagParamsType = "VISIBLE_DATA_CLASSIFICATION"
)

// AccessTokenProviderDto defines model for AccessTokenProviderDto.
type AccessTokenProviderDto struct {
	Name *string                     `json:"name,omitempty"`
	Type *AccessTokenProviderDtoType `json:"type,omitempty"`
}

// AccessTokenProviderDtoType defines model for AccessTokenProviderDto.Type.
type AccessTokenProviderDtoType string

// AirflowParams defines model for AirflowParams.
type AirflowParams struct {
	Host         *string     `json:"host,omitempty"`
	Port         *string     `json:"port,omitempty"`
	TimezoneData TimeZoneDto `json:"timezoneData"`
	Type         string      `json:"type"`
}

// AlertingHookDto defines model for AlertingHookDto.
type AlertingHookDto struct {
	CreatedBy        *string             `json:"createdBy,omitempty"`
	CreatedDate      *int64              `json:"createdDate,omitempty"`
	ExternalHook     string              `json:"externalHook"`
	Id               openapi_types.UUID  `json:"id"`
	LastModifiedDate *int64              `json:"lastModifiedDate,omitempty"`
	ModifiedBy       *string             `json:"modifiedBy,omitempty"`
	Name             string              `json:"name"`
	Type             AlertingHookDtoType `json:"type"`
}

// AlertingHookDtoType defines model for AlertingHookDto.Type.
type AlertingHookDtoType string

// ApiProblemSchema defines model for ApiProblemSchema.
type ApiProblemSchema struct {
	Detail   *string `json:"detail,omitempty"`
	Response *string `json:"response,omitempty"`
	Status   *int32  `json:"status,omitempty"`
	Title    *string `json:"title,omitempty"`
	Type     *string `json:"type,omitempty"`
}

// AsCodeWorkspaceDto defines model for AsCodeWorkspaceDto.
type AsCodeWorkspaceDto struct {
	Description *string                 `json:"description,omitempty"`
	Id          *openapi_types.UUID     `json:"id,omitempty"`
	Kind        *AsCodeWorkspaceDtoKind `json:"kind,omitempty"`
	Name        string                  `json:"name"`
	Version     *int32                  `json:"version,omitempty"`
}

// AsCodeWorkspaceDtoKind defines model for AsCodeWorkspaceDto.Kind.
type AsCodeWorkspaceDtoKind string

// AssetDataQualityDto defines model for AssetDataQualityDto.
type AssetDataQualityDto struct {
	Incidents     *map[string]int64                `json:"incidents,omitempty"`
	QualityStatus AssetDataQualityDtoQualityStatus `json:"qualityStatus"`
	Rules         *map[string]int64                `json:"rules,omitempty"`
}

// AssetDataQualityDtoQualityStatus defines model for AssetDataQualityDto.QualityStatus.
type AssetDataQualityDtoQualityStatus string

// AssetDetailsDto defines model for AssetDetailsDto.
type AssetDetailsDto struct {
	Actionable           bool                              `json:"actionable"`
	DatasourceId         openapi_types.UUID                `json:"datasourceId"`
	DatasourceName       string                            `json:"datasourceName"`
	Description          *string                           `json:"description,omitempty"`
	ExternalDescriptions *[]DescriptionDto                 `json:"externalDescriptions,omitempty"`
	HasPreview           bool                              `json:"hasPreview"`
	LastRefresh          *int64                            `json:"lastRefresh,omitempty"`
	LineagePlatform      AssetDetailsDtoLineagePlatform    `json:"lineagePlatform"`
	NextRefresh          *int64                            `json:"nextRefresh,omitempty"`
	Owners               *[]UserDto                        `json:"owners,omitempty"`
	Platform             *string                           `json:"platform,omitempty"`
	SourceCreationType   AssetDetailsDtoSourceCreationType `json:"sourceCreationType"`
	SourceUri            *string                           `json:"sourceUri,omitempty"`
	Tags                 *[]TagDto                         `json:"tags,omitempty"`
	Terms                *[]TagDto                         `json:"terms,omitempty"`
	Usage                *AssetUsageDto                    `json:"usage,omitempty"`
}

// AssetDetailsDtoLineagePlatform defines model for AssetDetailsDto.LineagePlatform.
type AssetDetailsDtoLineagePlatform string

// AssetDetailsDtoSourceCreationType defines model for AssetDetailsDto.SourceCreationType.
type AssetDetailsDtoSourceCreationType string

// AssetDto defines model for AssetDto.
type AssetDto struct {
	DatasourceName    *string                    `json:"datasourceName,omitempty"`
	DatasourceType    *string                    `json:"datasourceType,omitempty"`
	DisplayedType     *string                    `json:"displayedType,omitempty"`
	DisplayedTypeEnum *AssetDtoDisplayedTypeEnum `json:"displayedTypeEnum,omitempty"`
	Id                openapi_types.UUID         `json:"id"`
	LineagePlatform   *AssetDtoLineagePlatform   `json:"lineagePlatform,omitempty"`
	Name              string                     `json:"name"`
	Urn               string                     `json:"urn"`
}

// AssetDtoDisplayedTypeEnum defines model for AssetDto.DisplayedTypeEnum.
type AssetDtoDisplayedTypeEnum string

// AssetDtoLineagePlatform defines model for AssetDto.LineagePlatform.
type AssetDtoLineagePlatform string

// AssetIngestionSearchFilterElementDto defines model for AssetIngestionSearchFilterElementDto.
type AssetIngestionSearchFilterElementDto struct {
	Id      *AssetIngestionSearchFilterElementDtoId `json:"id,omitempty"`
	Label   *string                                 `json:"label,omitempty"`
	Results *int32                                  `json:"results,omitempty"`
}

// AssetIngestionSearchFilterElementDtoId defines model for AssetIngestionSearchFilterElementDto.Id.
type AssetIngestionSearchFilterElementDtoId string

// AssetOrchestratorDto defines model for AssetOrchestratorDto.
type AssetOrchestratorDto struct {
	DatasourceName string                             `json:"datasourceName"`
	DatasourceType AssetOrchestratorDtoDatasourceType `json:"datasourceType"`
}

// AssetOrchestratorDtoDatasourceType defines model for AssetOrchestratorDto.DatasourceType.
type AssetOrchestratorDtoDatasourceType string

// AssetOverview defines model for AssetOverview.
type AssetOverview struct {
	Details *AssetOverview_Details `json:"details,omitempty"`
	Id      *openapi_types.UUID    `json:"id,omitempty"`
	Urn     *string                `json:"urn,omitempty"`
}

// AssetOverview_Details defines model for AssetOverview.Details.
type AssetOverview_Details struct {
	union json.RawMessage
}

// AssetSchemaDto defines model for AssetSchemaDto.
type AssetSchemaDto struct {
	Fields *[]FieldNameTypeDto `json:"fields,omitempty"`
}

// AssetSearchCriteria defines model for AssetSearchCriteria.
type AssetSearchCriteria struct {
	AssetFilterType               *[]string                                `json:"assetFilterType,omitempty"`
	Datasource                    *[]openapi_types.UUID                    `json:"datasource,omitempty"`
	Domain                        *string                                  `json:"domain,omitempty"`
	HealthStatus                  *[]AssetSearchCriteriaHealthStatus       `json:"healthStatus,omitempty"`
	Ingestion                     *[]AssetSearchCriteriaIngestion          `json:"ingestion,omitempty"`
	ItemsPerPage                  *int32                                   `json:"itemsPerPage,omitempty"`
	Owner                         *[]openapi_types.UUID                    `json:"owner,omitempty"`
	Page                          *int32                                   `json:"page,omitempty"`
	SearchInFieldsAndDescriptions *bool                                    `json:"searchInFieldsAndDescriptions,omitempty"`
	Sort                          *[]string                                `json:"sort,omitempty"`
	Tag                           *[]openapi_types.UUID                    `json:"tag,omitempty"`
	Term                          *[]openapi_types.UUID                    `json:"term,omitempty"`
	TextSearch                    *string                                  `json:"textSearch,omitempty"`
	Urn                           *[]string                                `json:"urn,omitempty"`
	Usage                         *[]AssetSearchCriteriaUsage              `json:"usage,omitempty"`
	UsageQualification            *[]AssetSearchCriteriaUsageQualification `json:"usageQualification,omitempty"`
}

// AssetSearchCriteriaHealthStatus defines model for AssetSearchCriteria.HealthStatus.
type AssetSearchCriteriaHealthStatus string

// AssetSearchCriteriaIngestion defines model for AssetSearchCriteria.Ingestion.
type AssetSearchCriteriaIngestion string

// AssetSearchCriteriaUsage defines model for AssetSearchCriteria.Usage.
type AssetSearchCriteriaUsage string

// AssetSearchCriteriaUsageQualification defines model for AssetSearchCriteria.UsageQualification.
type AssetSearchCriteriaUsageQualification string

// AssetSearchFilterElementDto defines model for AssetSearchFilterElementDto.
type AssetSearchFilterElementDto struct {
	Icon    *AssetSearchFilterElementDtoIcon `json:"icon,omitempty"`
	Id      *string                          `json:"id,omitempty"`
	Name    *string                          `json:"name,omitempty"`
	Results *int32                           `json:"results,omitempty"`
}

// AssetSearchFilterElementDtoIcon defines model for AssetSearchFilterElementDto.Icon.
type AssetSearchFilterElementDtoIcon string

// AssetUsageDto defines model for AssetUsageDto.
type AssetUsageDto struct {
	AssetId                 openapi_types.UUID          `json:"assetId"`
	CalculationDate         int64                       `json:"calculationDate"`
	CountRead               int64                       `json:"countRead"`
	EndDay                  int64                       `json:"endDay"`
	Percentile              float32                     `json:"percentile"`
	Qualification           AssetUsageDtoQualification  `json:"qualification"`
	ReadType                AssetUsageDtoReadType       `json:"readType"`
	StartDay                int64                       `json:"startDay"`
	UsagePerDatasourceUsers []UsagePerDatasourceUserDto `json:"usagePerDatasourceUsers"`
}

// AssetUsageDtoQualification defines model for AssetUsageDto.Qualification.
type AssetUsageDtoQualification string

// AssetUsageDtoReadType defines model for AssetUsageDto.ReadType.
type AssetUsageDtoReadType string

// AssetsCatalogDto defines model for AssetsCatalogDto.
type AssetsCatalogDto struct {
	CatalogFilters []BaseSearchFilterDto               `json:"catalogFilters"`
	SearchAssets   SearchCollectionFieldLevelSearchDto `json:"searchAssets"`
}

// AssigneesChangeIncidentEventDto defines model for AssigneesChangeIncidentEventDto.
type AssigneesChangeIncidentEventDto struct {
	ChangedByUser *UserDto                             `json:"changedByUser,omitempty"`
	Date          int64                                `json:"date"`
	FirstDate     *int64                               `json:"firstDate,omitempty"`
	LastDate      *int64                               `json:"lastDate,omitempty"`
	NewAssignees  *[]UserDto                           `json:"newAssignees,omitempty"`
	OldAssignees  *[]UserDto                           `json:"oldAssignees,omitempty"`
	Type          *AssigneesChangeIncidentEventDtoType `json:"type,omitempty"`
}

// AssigneesChangeIncidentEventDtoType defines model for AssigneesChangeIncidentEventDto.Type.
type AssigneesChangeIncidentEventDtoType string

// AthenaParams defines model for AthenaParams.
type AthenaParams struct {
	Database         *string     `json:"database,omitempty"`
	Datasource       *string     `json:"datasource,omitempty"`
	Region           *string     `json:"region,omitempty"`
	RoleArn          *string     `json:"roleArn,omitempty"`
	S3OutputLocation *string     `json:"s3OutputLocation,omitempty"`
	TimezoneData     TimeZoneDto `json:"timezoneData"`
	Type             string      `json:"type"`
	VpcUrl           *string     `json:"vpcUrl,omitempty"`
	Workgroup        *string     `json:"workgroup,omitempty"`
}

// BaseSearchFilterDto defines model for BaseSearchFilterDto.
type BaseSearchFilterDto struct {
	Children *[]BaseSearchFilterDto_Children_Item `json:"children,omitempty"`
	Query    *string                              `json:"query,omitempty"`
	Type     *BaseSearchFilterDtoType             `json:"type,omitempty"`
}

// BaseSearchFilterDto_Children_Item defines model for BaseSearchFilterDto.children.Item.
type BaseSearchFilterDto_Children_Item struct {
	union json.RawMessage
}

// BaseSearchFilterDtoType defines model for BaseSearchFilterDto.Type.
type BaseSearchFilterDtoType string

// BaseSearchFilterElementDto defines model for BaseSearchFilterElementDto.
type BaseSearchFilterElementDto struct {
	Results *int32 `json:"results,omitempty"`
}

// BigQueryIngestionTimePartitioningProperties defines model for BigQueryIngestionTimePartitioningProperties.
type BigQueryIngestionTimePartitioningProperties struct {
	PartitioningType BigQueryIngestionTimePartitioningPropertiesPartitioningType `json:"partitioningType"`
	TimeInterval     *BigQueryIngestionTimePartitioningPropertiesTimeInterval    `json:"timeInterval,omitempty"`
}

// BigQueryIngestionTimePartitioningPropertiesPartitioningType defines model for BigQueryIngestionTimePartitioningProperties.PartitioningType.
type BigQueryIngestionTimePartitioningPropertiesPartitioningType string

// BigQueryIngestionTimePartitioningPropertiesTimeInterval defines model for BigQueryIngestionTimePartitioningProperties.TimeInterval.
type BigQueryIngestionTimePartitioningPropertiesTimeInterval string

// BigQueryIntegerRangePartitioningProperties defines model for BigQueryIntegerRangePartitioningProperties.
type BigQueryIntegerRangePartitioningProperties struct {
	EndingValue      *int64                                                     `json:"endingValue,omitempty"`
	FieldName        *string                                                    `json:"fieldName,omitempty"`
	Interval         *int64                                                     `json:"interval,omitempty"`
	PartitioningType BigQueryIntegerRangePartitioningPropertiesPartitioningType `json:"partitioningType"`
	StartingValue    *int64                                                     `json:"startingValue,omitempty"`
}

// BigQueryIntegerRangePartitioningPropertiesPartitioningType defines model for BigQueryIntegerRangePartitioningProperties.PartitioningType.
type BigQueryIntegerRangePartitioningPropertiesPartitioningType string

// BigQueryParams defines model for BigQueryParams.
type BigQueryParams struct {
	BillingProjectId *string     `json:"billingProjectId,omitempty"`
	DatasetId        *string     `json:"datasetId,omitempty"`
	ProjectId        *string     `json:"projectId,omitempty"`
	TimezoneData     TimeZoneDto `json:"timezoneData"`
	Type             string      `json:"type"`
}

// BigQueryPartitioningProperties defines model for BigQueryPartitioningProperties.
type BigQueryPartitioningProperties struct {
	PartitioningType BigQueryPartitioningPropertiesPartitioningType `json:"partitioningType"`
}

// BigQueryPartitioningPropertiesPartitioningType defines model for BigQueryPartitioningProperties.PartitioningType.
type BigQueryPartitioningPropertiesPartitioningType string

// BigQueryTimeUnitColumnPartitioningProperties defines model for BigQueryTimeUnitColumnPartitioningProperties.
type BigQueryTimeUnitColumnPartitioningProperties struct {
	FieldName        *string                                                      `json:"fieldName,omitempty"`
	PartitioningType BigQueryTimeUnitColumnPartitioningPropertiesPartitioningType `json:"partitioningType"`
	TimeInterval     *BigQueryTimeUnitColumnPartitioningPropertiesTimeInterval    `json:"timeInterval,omitempty"`
}

// BigQueryTimeUnitColumnPartitioningPropertiesPartitioningType defines model for BigQueryTimeUnitColumnPartitioningProperties.PartitioningType.
type BigQueryTimeUnitColumnPartitioningPropertiesPartitioningType string

// BigQueryTimeUnitColumnPartitioningPropertiesTimeInterval defines model for BigQueryTimeUnitColumnPartitioningProperties.TimeInterval.
type BigQueryTimeUnitColumnPartitioningPropertiesTimeInterval string

// CatalogFilterDto defines model for CatalogFilterDto.
type CatalogFilterDto struct {
	Children *[]FilterElementDto `json:"children,omitempty"`
	Id       *string             `json:"id,omitempty"`
	Name     *string             `json:"name,omitempty"`
	Query    *string             `json:"query,omitempty"`
}

// CollaborationToolDisconnectedIncidentEventDto defines model for CollaborationToolDisconnectedIncidentEventDto.
type CollaborationToolDisconnectedIncidentEventDto struct {
	CreatedByUser *UserDto                                               `json:"createdByUser,omitempty"`
	Date          int64                                                  `json:"date"`
	ItemKey       *string                                                `json:"itemKey,omitempty"`
	ItemType      *CollaborationToolDisconnectedIncidentEventDtoItemType `json:"itemType,omitempty"`
	ItemUrl       *string                                                `json:"itemUrl,omitempty"`
	Type          *CollaborationToolDisconnectedIncidentEventDtoType     `json:"type,omitempty"`
}

// CollaborationToolDisconnectedIncidentEventDtoItemType defines model for CollaborationToolDisconnectedIncidentEventDto.ItemType.
type CollaborationToolDisconnectedIncidentEventDtoItemType string

// CollaborationToolDisconnectedIncidentEventDtoType defines model for CollaborationToolDisconnectedIncidentEventDto.Type.
type CollaborationToolDisconnectedIncidentEventDtoType string

// CollaborationToolItemLinkedIncidentEventDto defines model for CollaborationToolItemLinkedIncidentEventDto.
type CollaborationToolItemLinkedIncidentEventDto struct {
	CreatedByUser *UserDto                                             `json:"createdByUser,omitempty"`
	Date          int64                                                `json:"date"`
	ItemKey       *string                                              `json:"itemKey,omitempty"`
	ItemType      *CollaborationToolItemLinkedIncidentEventDtoItemType `json:"itemType,omitempty"`
	ItemUrl       *string                                              `json:"itemUrl,omitempty"`
	Type          *CollaborationToolItemLinkedIncidentEventDtoType     `json:"type,omitempty"`
}

// CollaborationToolItemLinkedIncidentEventDtoItemType defines model for CollaborationToolItemLinkedIncidentEventDto.ItemType.
type CollaborationToolItemLinkedIncidentEventDtoItemType string

// CollaborationToolItemLinkedIncidentEventDtoType defines model for CollaborationToolItemLinkedIncidentEventDto.Type.
type CollaborationToolItemLinkedIncidentEventDtoType string

// CollaborationToolItemUnlinkedIncidentEventDto defines model for CollaborationToolItemUnlinkedIncidentEventDto.
type CollaborationToolItemUnlinkedIncidentEventDto struct {
	CreatedByUser *UserDto                                               `json:"createdByUser,omitempty"`
	Date          int64                                                  `json:"date"`
	ItemKey       *string                                                `json:"itemKey,omitempty"`
	ItemType      *CollaborationToolItemUnlinkedIncidentEventDtoItemType `json:"itemType,omitempty"`
	ItemUrl       *string                                                `json:"itemUrl,omitempty"`
	Type          *CollaborationToolItemUnlinkedIncidentEventDtoType     `json:"type,omitempty"`
}

// CollaborationToolItemUnlinkedIncidentEventDtoItemType defines model for CollaborationToolItemUnlinkedIncidentEventDto.ItemType.
type CollaborationToolItemUnlinkedIncidentEventDtoItemType string

// CollaborationToolItemUnlinkedIncidentEventDtoType defines model for CollaborationToolItemUnlinkedIncidentEventDto.Type.
type CollaborationToolItemUnlinkedIncidentEventDtoType string

// CollaborationToolStatusChangeEventDto defines model for CollaborationToolStatusChangeEventDto.
type CollaborationToolStatusChangeEventDto struct {
	Date                  int64                                                       `json:"date"`
	IncidentQualification *CollaborationToolStatusChangeEventDtoIncidentQualification `json:"incidentQualification,omitempty"`
	IncidentStatus        *CollaborationToolStatusChangeEventDtoIncidentStatus        `json:"incidentStatus,omitempty"`
	ItemKey               *string                                                     `json:"itemKey,omitempty"`
	ItemType              *CollaborationToolStatusChangeEventDtoItemType              `json:"itemType,omitempty"`
	ItemUrl               *string                                                     `json:"itemUrl,omitempty"`
	Type                  *CollaborationToolStatusChangeEventDtoType                  `json:"type,omitempty"`
}

// CollaborationToolStatusChangeEventDtoIncidentQualification defines model for CollaborationToolStatusChangeEventDto.IncidentQualification.
type CollaborationToolStatusChangeEventDtoIncidentQualification string

// CollaborationToolStatusChangeEventDtoIncidentStatus defines model for CollaborationToolStatusChangeEventDto.IncidentStatus.
type CollaborationToolStatusChangeEventDtoIncidentStatus string

// CollaborationToolStatusChangeEventDtoItemType defines model for CollaborationToolStatusChangeEventDto.ItemType.
type CollaborationToolStatusChangeEventDtoItemType string

// CollaborationToolStatusChangeEventDtoType defines model for CollaborationToolStatusChangeEventDto.Type.
type CollaborationToolStatusChangeEventDtoType string

// CommentIncidentEventDto defines model for CommentIncidentEventDto.
type CommentIncidentEventDto struct {
	Comment       *string                      `json:"comment,omitempty"`
	CommentId     *openapi_types.UUID          `json:"commentId,omitempty"`
	CreatedByUser *UserDto                     `json:"createdByUser,omitempty"`
	Date          int64                        `json:"date"`
	Type          *CommentIncidentEventDtoType `json:"type,omitempty"`
}

// CommentIncidentEventDtoType defines model for CommentIncidentEventDto.Type.
type CommentIncidentEventDtoType string

// ComposerParams defines model for ComposerParams.
type ComposerParams struct {
	EnvironmentName *string     `json:"environmentName,omitempty"`
	Region          *string     `json:"region,omitempty"`
	TimezoneData    TimeZoneDto `json:"timezoneData"`
	Type            string      `json:"type"`
}

// ConnectionTestDto defines model for ConnectionTestDto.
type ConnectionTestDto struct {
	Message *string `json:"message,omitempty"`
	Success *bool   `json:"success,omitempty"`
}

// ConnectorDto defines model for ConnectorDto.
type ConnectorDto struct {
	ConnectorStatus          *string                          `json:"connectorStatus,omitempty"`
	DestinationPlatform      *ConnectorDtoDestinationPlatform `json:"destinationPlatform,omitempty"`
	DestinationPlatformLabel *string                          `json:"destinationPlatformLabel,omitempty"`
	SourcePlatform           *ConnectorDtoSourcePlatform      `json:"sourcePlatform,omitempty"`
	SourcePlatformLabel      *string                          `json:"sourcePlatformLabel,omitempty"`
}

// ConnectorDtoDestinationPlatform defines model for ConnectorDto.DestinationPlatform.
type ConnectorDtoDestinationPlatform string

// ConnectorDtoSourcePlatform defines model for ConnectorDto.SourcePlatform.
type ConnectorDtoSourcePlatform string

// CreateDatasourceDto defines model for CreateDatasourceDto.
type CreateDatasourceDto struct {
	CronExpression *string                    `json:"cronExpression,omitempty"`
	Description    *string                    `json:"description,omitempty"`
	Name           string                     `json:"name"`
	Params         CreateDatasourceDto_Params `json:"params"`
	SecretId       *string                    `json:"secretId,omitempty"`
	Tags           *[]openapi_types.UUID      `json:"tags,omitempty"`
	Type           string                     `json:"type"`
}

// CreateDatasourceDto_Params defines model for CreateDatasourceDto.Params.
type CreateDatasourceDto_Params struct {
	union json.RawMessage
}

// CreateDomainRequestDto defines model for CreateDomainRequestDto.
type CreateDomainRequestDto struct {
	Assets      []string `json:"assets"`
	Description *string  `json:"description,omitempty"`
	Name        string   `json:"name"`
}

// CreationByRuleRunIncidentEventDto defines model for CreationByRuleRunIncidentEventDto.
type CreationByRuleRunIncidentEventDto struct {
	// CreatedByRuleRun The rule run which created the incident. Can be null if the rule run has been deleted.
	CreatedByRuleRun *RuleRunDto                            `json:"createdByRuleRun"`
	Date             int64                                  `json:"date"`
	Rule             *RuleBriefDto                          `json:"rule,omitempty"`
	Type             *CreationByRuleRunIncidentEventDtoType `json:"type,omitempty"`
}

// CreationByRuleRunIncidentEventDtoType defines model for CreationByRuleRunIncidentEventDto.Type.
type CreationByRuleRunIncidentEventDtoType string

// CreationByUserIncidentEventDto defines model for CreationByUserIncidentEventDto.
type CreationByUserIncidentEventDto struct {
	CreatedByUser *UserDto                            `json:"createdByUser,omitempty"`
	Date          int64                               `json:"date"`
	Type          *CreationByUserIncidentEventDtoType `json:"type,omitempty"`
}

// CreationByUserIncidentEventDtoType defines model for CreationByUserIncidentEventDto.Type.
type CreationByUserIncidentEventDtoType string

// CriticalitySearchFilterElementDto defines model for CriticalitySearchFilterElementDto.
type CriticalitySearchFilterElementDto struct {
	Id      *CriticalitySearchFilterElementDtoId `json:"id,omitempty"`
	Results *int32                               `json:"results,omitempty"`
}

// CriticalitySearchFilterElementDtoId defines model for CriticalitySearchFilterElementDto.Id.
type CriticalitySearchFilterElementDtoId string

// CsvContentDto defines model for CsvContentDto.
type CsvContentDto struct {
	Content *string `json:"content,omitempty"`
}

// DBTCloudParams defines model for DBTCloudParams.
type DBTCloudParams struct {
	AccountId            *string     `json:"accountId,omitempty"`
	BaseUrl              *string     `json:"baseUrl,omitempty"`
	CreateIncidentOnFail *bool       `json:"createIncidentOnFail,omitempty"`
	JobDefinitionId      *string     `json:"jobDefinitionId,omitempty"`
	ProjectId            *string     `json:"projectId,omitempty"`
	TimezoneData         TimeZoneDto `json:"timezoneData"`
	Type                 string      `json:"type"`
}

// DBTParams defines model for DBTParams.
type DBTParams struct {
	CreateIncidentOnFail *bool       `json:"createIncidentOnFail,omitempty"`
	ProjectName          *string     `json:"projectName,omitempty"`
	Target               *string     `json:"target,omitempty"`
	TimezoneData         TimeZoneDto `json:"timezoneData"`
	Type                 string      `json:"type"`
}

// DagAssetOverview defines model for DagAssetOverview.
type DagAssetOverview struct {
	Details *DagAssetOverview_Details `json:"details,omitempty"`
	Id      *openapi_types.UUID       `json:"id,omitempty"`
	Type    *DagAssetOverviewType     `json:"type,omitempty"`
	Urn     *string                   `json:"urn,omitempty"`
}

// DagAssetOverview_Details defines model for DagAssetOverview.Details.
type DagAssetOverview_Details struct {
	union json.RawMessage
}

// DagAssetOverviewType defines model for DagAssetOverview.Type.
type DagAssetOverviewType string

// DagDetailsDto defines model for DagDetailsDto.
type DagDetailsDto struct {
	Actionable           bool                            `json:"actionable"`
	DatasourceId         openapi_types.UUID              `json:"datasourceId"`
	DatasourceName       string                          `json:"datasourceName"`
	Description          *string                         `json:"description,omitempty"`
	ExternalDescriptions *[]DescriptionDto               `json:"externalDescriptions,omitempty"`
	HasPreview           bool                            `json:"hasPreview"`
	LastRefresh          *int64                          `json:"lastRefresh,omitempty"`
	LineagePlatform      DagDetailsDtoLineagePlatform    `json:"lineagePlatform"`
	NextRefresh          *int64                          `json:"nextRefresh,omitempty"`
	Owners               *[]UserDto                      `json:"owners,omitempty"`
	Platform             *string                         `json:"platform,omitempty"`
	SourceCreationType   DagDetailsDtoSourceCreationType `json:"sourceCreationType"`
	SourceUri            *string                         `json:"sourceUri,omitempty"`
	Tags                 *[]TagDto                       `json:"tags,omitempty"`
	Tasks                *int32                          `json:"tasks,omitempty"`
	Terms                *[]TagDto                       `json:"terms,omitempty"`
	Usage                *AssetUsageDto                  `json:"usage,omitempty"`
}

// DagDetailsDtoLineagePlatform defines model for DagDetailsDto.LineagePlatform.
type DagDetailsDtoLineagePlatform string

// DagDetailsDtoSourceCreationType defines model for DagDetailsDto.SourceCreationType.
type DagDetailsDtoSourceCreationType string

// DashboardAssetOverview defines model for DashboardAssetOverview.
type DashboardAssetOverview struct {
	Details *DashboardAssetOverview_Details `json:"details,omitempty"`
	Id      *openapi_types.UUID             `json:"id,omitempty"`
	Type    *DashboardAssetOverviewType     `json:"type,omitempty"`
	Urn     *string                         `json:"urn,omitempty"`
}

// DashboardAssetOverview_Details defines model for DashboardAssetOverview.Details.
type DashboardAssetOverview_Details struct {
	union json.RawMessage
}

// DashboardAssetOverviewType defines model for DashboardAssetOverview.Type.
type DashboardAssetOverviewType string

// DashboardWithIncidentsDto defines model for DashboardWithIncidentsDto.
type DashboardWithIncidentsDto struct {
	DatasourceId      openapi_types.UUID            `json:"datasourceId"`
	DatasourceName    string                        `json:"datasourceName"`
	DatasourceType    string                        `json:"datasourceType"`
	Description       *string                       `json:"description,omitempty"`
	FavoriteCount     int64                         `json:"favoriteCount"`
	Incidents         []IncidentExternalDto         `json:"incidents"`
	Owners            []UserDto                     `json:"owners"`
	SourceDashboardId string                        `json:"sourceDashboardId"`
	SourceDescription *string                       `json:"sourceDescription,omitempty"`
	Tags              []TagDto                      `json:"tags"`
	Terms             []TagDto                      `json:"terms"`
	Title             string                        `json:"title"`
	Type              DashboardWithIncidentsDtoType `json:"type"`
	Urn               string                        `json:"urn"`
	ViewCount         int64                         `json:"viewCount"`
}

// DashboardWithIncidentsDtoType defines model for DashboardWithIncidentsDto.Type.
type DashboardWithIncidentsDtoType string

// DataQualityRuleSummaryDto defines model for DataQualityRuleSummaryDto.
type DataQualityRuleSummaryDto struct {
	RuleStatsByCriticality *map[string]RuleGroupSummaryDto `json:"ruleStatsByCriticality,omitempty"`
	TotalElements          *int64                          `json:"totalElements,omitempty"`
}

// DataStackGroupSummaryDto defines model for DataStackGroupSummaryDto.
type DataStackGroupSummaryDto struct {
	LineagePlatform *DataStackGroupSummaryDtoLineagePlatform `json:"lineagePlatform,omitempty"`
	QuantityByType  *map[string]int64                        `json:"quantityByType,omitempty"`
}

// DataStackGroupSummaryDtoLineagePlatform defines model for DataStackGroupSummaryDto.LineagePlatform.
type DataStackGroupSummaryDtoLineagePlatform string

// DataStackSummaryDto defines model for DataStackSummaryDto.
type DataStackSummaryDto struct {
	DataStackGroupByDatasourceType *map[string]DataStackGroupSummaryDto `json:"dataStackGroupByDatasourceType,omitempty"`
}

// DatabricksParams defines model for DatabricksParams.
type DatabricksParams struct {
	Authentication *string     `json:"authentication,omitempty"`
	Catalog        *string     `json:"catalog,omitempty"`
	Host           *string     `json:"host,omitempty"`
	HttpPath       *string     `json:"httpPath,omitempty"`
	Port           *int32      `json:"port,omitempty"`
	Schema         *string     `json:"schema,omitempty"`
	TimezoneData   TimeZoneDto `json:"timezoneData"`
	Type           string      `json:"type"`
}

// DatasetAssetOverview defines model for DatasetAssetOverview.
type DatasetAssetOverview struct {
	DataQuality *AssetDataQualityDto          `json:"dataQuality,omitempty"`
	Details     *DatasetAssetOverview_Details `json:"details,omitempty"`
	Id          *openapi_types.UUID           `json:"id,omitempty"`
	Schema      *AssetSchemaDto               `json:"schema,omitempty"`
	Type        *DatasetAssetOverviewType     `json:"type,omitempty"`
	Urn         *string                       `json:"urn,omitempty"`
}

// DatasetAssetOverview_Details defines model for DatasetAssetOverview.Details.
type DatasetAssetOverview_Details struct {
	union json.RawMessage
}

// DatasetAssetOverviewType defines model for DatasetAssetOverview.Type.
type DatasetAssetOverviewType string

// DatasetBriefDto defines model for DatasetBriefDto.
type DatasetBriefDto struct {
	DatasourceName string             `json:"datasourceName"`
	DatasourceType string             `json:"datasourceType"`
	Id             openapi_types.UUID `json:"id"`
	Name           string             `json:"name"`
	Urn            string             `json:"urn"`
}

// DatasetBriefWithUriDto defines model for DatasetBriefWithUriDto.
type DatasetBriefWithUriDto struct {
	DatasourceName string             `json:"datasourceName"`
	DatasourceType string             `json:"datasourceType"`
	Id             openapi_types.UUID `json:"id"`
	Name           string             `json:"name"`
	QualifiedName  *string            `json:"qualifiedName,omitempty"`
	Uri            *string            `json:"uri,omitempty"`
	Urn            string             `json:"urn"`
}

// DatasetDetailsDto defines model for DatasetDetailsDto.
type DatasetDetailsDto struct {
	Actionable           bool                                `json:"actionable"`
	DatasourceId         openapi_types.UUID                  `json:"datasourceId"`
	DatasourceName       string                              `json:"datasourceName"`
	Description          *string                             `json:"description,omitempty"`
	ExternalDescriptions *[]DescriptionDto                   `json:"externalDescriptions,omitempty"`
	HasPreview           bool                                `json:"hasPreview"`
	LastRefresh          *int64                              `json:"lastRefresh,omitempty"`
	LineagePlatform      DatasetDetailsDtoLineagePlatform    `json:"lineagePlatform"`
	NextRefresh          *int64                              `json:"nextRefresh,omitempty"`
	Owners               *[]UserDto                          `json:"owners,omitempty"`
	Platform             *string                             `json:"platform,omitempty"`
	Size                 *map[string]int64                   `json:"size,omitempty"`
	SourceCreationType   DatasetDetailsDtoSourceCreationType `json:"sourceCreationType"`
	SourceUri            *string                             `json:"sourceUri,omitempty"`
	Tags                 *[]TagDto                           `json:"tags,omitempty"`
	Terms                *[]TagDto                           `json:"terms,omitempty"`
	TimeWindow           *TimeWindow                         `json:"timeWindow,omitempty"`
	Transformation       *string                             `json:"transformation,omitempty"`
	Usage                *AssetUsageDto                      `json:"usage,omitempty"`
}

// DatasetDetailsDtoLineagePlatform defines model for DatasetDetailsDto.LineagePlatform.
type DatasetDetailsDtoLineagePlatform string

// DatasetDetailsDtoSourceCreationType defines model for DatasetDetailsDto.SourceCreationType.
type DatasetDetailsDtoSourceCreationType string

// DatasetFieldPatchDto defines model for DatasetFieldPatchDto.
type DatasetFieldPatchDto struct {
	Description *string               `json:"description,omitempty"`
	TagIds      *[]openapi_types.UUID `json:"tagIds,omitempty"`
	TermIds     *[]openapi_types.UUID `json:"termIds,omitempty"`
}

// DatasetLightDto defines model for DatasetLightDto.
type DatasetLightDto struct {
	DatasourceId        openapi_types.UUID      `json:"datasourceId"`
	DatasourceName      string                  `json:"datasourceName"`
	DatasourceType      string                  `json:"datasourceType"`
	Id                  openapi_types.UUID      `json:"id"`
	IsView              bool                    `json:"isView"`
	Name                string                  `json:"name"`
	Partitioning        *DatasetPartitioningDto `json:"partitioning,omitempty"`
	QualifiedNamePrefix *string                 `json:"qualifiedNamePrefix,omitempty"`
	Urn                 string                  `json:"urn"`
}

// DatasetPartitioningDto defines model for DatasetPartitioningDto.
type DatasetPartitioningDto struct {
	Properties DatasetPartitioningDto_Properties `json:"properties"`
	Required   *bool                             `json:"required,omitempty"`
}

// DatasetPartitioningDto_Properties defines model for DatasetPartitioningDto.Properties.
type DatasetPartitioningDto_Properties struct {
	union json.RawMessage
}

// DatasetSearchFilterElementDto defines model for DatasetSearchFilterElementDto.
type DatasetSearchFilterElementDto struct {
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    *string             `json:"name,omitempty"`
	Results *int32              `json:"results,omitempty"`
}

// DatasourceCatalogAssetDto defines model for DatasourceCatalogAssetDto.
type DatasourceCatalogAssetDto struct {
	CreatedBy        *string                                `json:"createdBy,omitempty"`
	CreatedDate      *int64                                 `json:"createdDate,omitempty"`
	CreationType     *DatasourceCatalogAssetDtoCreationType `json:"creationType,omitempty"`
	CronExpression   *string                                `json:"cronExpression,omitempty"`
	EntityType       DatasourceCatalogAssetDtoEntityType    `json:"entityType"`
	Id               openapi_types.UUID                     `json:"id"`
	LastModifiedDate *int64                                 `json:"lastModifiedDate,omitempty"`
	LastWeekStatuses *[]LastIngestionStatusDto              `json:"lastWeekStatuses,omitempty"`
	ModifiedBy       *string                                `json:"modifiedBy,omitempty"`
	Name             string                                 `json:"name"`
	NextExecution    *int64                                 `json:"nextExecution,omitempty"`
	Params           DatasourceCatalogAssetDto_Params       `json:"params"`
	Platform         DatasourceCatalogAssetDtoPlatform      `json:"platform"`
	PlatformLabel    string                                 `json:"platformLabel"`
	Tags             *[]TagDto                              `json:"tags,omitempty"`
	Type             string                                 `json:"type"`
}

// DatasourceCatalogAssetDtoCreationType defines model for DatasourceCatalogAssetDto.CreationType.
type DatasourceCatalogAssetDtoCreationType string

// DatasourceCatalogAssetDtoEntityType defines model for DatasourceCatalogAssetDto.EntityType.
type DatasourceCatalogAssetDtoEntityType string

// DatasourceCatalogAssetDto_Params defines model for DatasourceCatalogAssetDto.Params.
type DatasourceCatalogAssetDto_Params struct {
	union json.RawMessage
}

// DatasourceCatalogAssetDtoPlatform defines model for DatasourceCatalogAssetDto.Platform.
type DatasourceCatalogAssetDtoPlatform string

// DatasourceDto defines model for DatasourceDto.
type DatasourceDto struct {
	Catalogued                *bool                      `json:"catalogued,omitempty"`
	CreatedBy                 *string                    `json:"createdBy,omitempty"`
	CreatedDate               *int64                     `json:"createdDate,omitempty"`
	CreationType              *DatasourceDtoCreationType `json:"creationType,omitempty"`
	CronExpression            *string                    `json:"cronExpression,omitempty"`
	CronExpressionDescription *string                    `json:"cronExpressionDescription,omitempty"`
	Description               *string                    `json:"description,omitempty"`
	EntityType                DatasourceDtoEntityType    `json:"entityType"`
	Id                        openapi_types.UUID         `json:"id"`
	LastIngestionStatus       *LastIngestionStatusDto    `json:"lastIngestionStatus,omitempty"`
	LastModifiedDate          *int64                     `json:"lastModifiedDate,omitempty"`
	ModifiedBy                *string                    `json:"modifiedBy,omitempty"`
	Name                      string                     `json:"name"`
	NextExecution             *int64                     `json:"nextExecution,omitempty"`
	Params                    DatasourceDto_Params       `json:"params"`
	Platform                  DatasourceDtoPlatform      `json:"platform"`
	PlatformLabel             string                     `json:"platformLabel"`
	SecretId                  *string                    `json:"secretId,omitempty"`
	SourceUri                 *string                    `json:"sourceUri,omitempty"`
	Tags                      *[]TagDto                  `json:"tags,omitempty"`
	Type                      string                     `json:"type"`
}

// DatasourceDtoCreationType defines model for DatasourceDto.CreationType.
type DatasourceDtoCreationType string

// DatasourceDtoEntityType defines model for DatasourceDto.EntityType.
type DatasourceDtoEntityType string

// DatasourceDto_Params defines model for DatasourceDto.Params.
type DatasourceDto_Params struct {
	union json.RawMessage
}

// DatasourceDtoPlatform defines model for DatasourceDto.Platform.
type DatasourceDtoPlatform string

// DatasourceIngestionRunDto defines model for DatasourceIngestionRunDto.
type DatasourceIngestionRunDto struct {
	CreatedBy         *string                              `json:"createdBy,omitempty"`
	CreatedDate       *int64                               `json:"createdDate,omitempty"`
	DurationInSeconds *int64                               `json:"durationInSeconds,omitempty"`
	ExecutionEndDate  *int64                               `json:"executionEndDate,omitempty"`
	Id                openapi_types.UUID                   `json:"id"`
	LastModifiedDate  *int64                               `json:"lastModifiedDate,omitempty"`
	LastStatus        *DatasourceIngestionRunDtoLastStatus `json:"lastStatus,omitempty"`
	ModifiedBy        *string                              `json:"modifiedBy,omitempty"`
	RunSummary        *IngestionRunSummary                 `json:"runSummary,omitempty"`
	Trigger           *string                              `json:"trigger,omitempty"`
}

// DatasourceIngestionRunDtoLastStatus defines model for DatasourceIngestionRunDto.LastStatus.
type DatasourceIngestionRunDtoLastStatus string

// DatasourceParams defines model for DatasourceParams.
type DatasourceParams struct {
	TimezoneData TimeZoneDto `json:"timezoneData"`
	Type         string      `json:"type"`
}

// DatasourceProviderDto defines model for DatasourceProviderDto.
type DatasourceProviderDto struct {
	Id   *openapi_types.UUID        `json:"id,omitempty"`
	Name *string                    `json:"name,omitempty"`
	Type *DatasourceProviderDtoType `json:"type,omitempty"`
}

// DatasourceProviderDtoType defines model for DatasourceProviderDto.Type.
type DatasourceProviderDtoType string

// DatasourceSearchDto defines model for DatasourceSearchDto.
type DatasourceSearchDto struct {
	CatalogFilters    []BaseSearchFilterDto                     `json:"catalogFilters"`
	SearchDatasources SearchCollectionDatasourceCatalogAssetDto `json:"searchDatasources"`
}

// DeclarativeParams defines model for DeclarativeParams.
type DeclarativeParams struct {
	AssetNameSeparator *string     `json:"assetNameSeparator,omitempty"`
	Authority          *string     `json:"authority,omitempty"`
	AuthoritySuffix    *string     `json:"authoritySuffix,omitempty"`
	DeclaredType       *string     `json:"declaredType,omitempty"`
	Scheme             *string     `json:"scheme,omitempty"`
	TimezoneData       TimeZoneDto `json:"timezoneData"`
	Type               string      `json:"type"`
	UniqueName         *string     `json:"uniqueName,omitempty"`
}

// DeclaredAssetDetailsDto defines model for DeclaredAssetDetailsDto.
type DeclaredAssetDetailsDto struct {
	Actionable           bool                                      `json:"actionable"`
	CreatedBy            *DeclaredAssetDetailsDto_CreatedBy        `json:"createdBy,omitempty"`
	CreationDate         *int64                                    `json:"creationDate,omitempty"`
	DatasourceId         openapi_types.UUID                        `json:"datasourceId"`
	DatasourceName       string                                    `json:"datasourceName"`
	Description          *string                                   `json:"description,omitempty"`
	Descriptions         *[]string                                 `json:"descriptions,omitempty"`
	ExternalDescriptions *[]DescriptionDto                         `json:"externalDescriptions,omitempty"`
	HasPreview           bool                                      `json:"hasPreview"`
	LastModifiedBy       *DeclaredAssetDetailsDto_LastModifiedBy   `json:"lastModifiedBy,omitempty"`
	LastModifiedDate     *int64                                    `json:"lastModifiedDate,omitempty"`
	LastRefresh          *int64                                    `json:"lastRefresh,omitempty"`
	LineagePlatform      DeclaredAssetDetailsDtoLineagePlatform    `json:"lineagePlatform"`
	NextRefresh          *int64                                    `json:"nextRefresh,omitempty"`
	Owners               *[]UserDto                                `json:"owners,omitempty"`
	Platform             *string                                   `json:"platform,omitempty"`
	SourceCreationType   DeclaredAssetDetailsDtoSourceCreationType `json:"sourceCreationType"`
	SourceUri            *string                                   `json:"sourceUri,omitempty"`
	Tags                 *[]TagDto                                 `json:"tags,omitempty"`
	Terms                *[]TagDto                                 `json:"terms,omitempty"`
	Usage                *AssetUsageDto                            `json:"usage,omitempty"`
}

// DeclaredAssetDetailsDto_CreatedBy defines model for DeclaredAssetDetailsDto.CreatedBy.
type DeclaredAssetDetailsDto_CreatedBy struct {
	union json.RawMessage
}

// DeclaredAssetDetailsDto_LastModifiedBy defines model for DeclaredAssetDetailsDto.LastModifiedBy.
type DeclaredAssetDetailsDto_LastModifiedBy struct {
	union json.RawMessage
}

// DeclaredAssetDetailsDtoLineagePlatform defines model for DeclaredAssetDetailsDto.LineagePlatform.
type DeclaredAssetDetailsDtoLineagePlatform string

// DeclaredAssetDetailsDtoSourceCreationType defines model for DeclaredAssetDetailsDto.SourceCreationType.
type DeclaredAssetDetailsDtoSourceCreationType string

// DeclaredAssetOverview defines model for DeclaredAssetOverview.
type DeclaredAssetOverview struct {
	Details *DeclaredAssetOverview_Details `json:"details,omitempty"`
	Id      *openapi_types.UUID            `json:"id,omitempty"`
	Type    *string                        `json:"type,omitempty"`
	Urn     *string                        `json:"urn,omitempty"`
}

// DeclaredAssetOverview_Details defines model for DeclaredAssetOverview.Details.
type DeclaredAssetOverview_Details struct {
	union json.RawMessage
}

// DescriptionDto defines model for DescriptionDto.
type DescriptionDto struct {
	Description *string                   `json:"description,omitempty"`
	SourceType  *DescriptionDtoSourceType `json:"sourceType,omitempty"`
}

// DescriptionDtoSourceType defines model for DescriptionDto.SourceType.
type DescriptionDtoSourceType string

// DomainDto defines model for DomainDto.
type DomainDto struct {
	Assets           []string           `json:"assets"`
	CreatedBy        *string            `json:"createdBy,omitempty"`
	CreatedDate      *int64             `json:"createdDate,omitempty"`
	Description      *string            `json:"description,omitempty"`
	Id               openapi_types.UUID `json:"id"`
	IsAllDomain      bool               `json:"isAllDomain"`
	LastModifiedDate *int64             `json:"lastModifiedDate,omitempty"`
	ModifiedBy       *string            `json:"modifiedBy,omitempty"`
	Name             string             `json:"name"`
}

// FieldDto defines model for FieldDto.
type FieldDto struct {
	CreatedBy            *string             `json:"createdBy,omitempty"`
	CreatedDate          *int64              `json:"createdDate,omitempty"`
	DatasetId            *openapi_types.UUID `json:"datasetId,omitempty"`
	DatasetName          *string             `json:"datasetName,omitempty"`
	DatasourceName       *string             `json:"datasourceName,omitempty"`
	DatasourceType       *string             `json:"datasourceType,omitempty"`
	DbtDescription       *string             `json:"dbtDescription,omitempty"`
	DdlComment           *string             `json:"ddlComment,omitempty"`
	DefaultValue         *string             `json:"defaultValue,omitempty"`
	Description          *string             `json:"description,omitempty"`
	DisplayType          *string             `json:"displayType,omitempty"`
	EntityType           FieldDtoEntityType  `json:"entityType"`
	Id                   openapi_types.UUID  `json:"id"`
	LastModifiedDate     *int64              `json:"lastModifiedDate,omitempty"`
	ModifiedBy           *string             `json:"modifiedBy,omitempty"`
	Name                 *string             `json:"name,omitempty"`
	Nullable             *bool               `json:"nullable,omitempty"`
	ParentDatasetFieldId *openapi_types.UUID `json:"parentDatasetFieldId,omitempty"`
	Repeated             *bool               `json:"repeated,omitempty"`
	Size                 *int32              `json:"size,omitempty"`
	Subfields            *[]FieldDto         `json:"subfields,omitempty"`
	TagNames             *[]string           `json:"tagNames,omitempty"`
	Tags                 *[]TagDto           `json:"tags,omitempty"`
	Terms                *[]TagDto           `json:"terms,omitempty"`
	Type                 *string             `json:"type,omitempty"`
	UpstreamField        *UpstreamOfFieldDto `json:"upstreamField,omitempty"`
}

// FieldDtoEntityType defines model for FieldDto.EntityType.
type FieldDtoEntityType string

// FieldLevelSearchDto defines model for FieldLevelSearchDto.
type FieldLevelSearchDto struct {
	CanDoAutoCoverage    *bool                                     `json:"canDoAutoCoverage,omitempty"`
	ConnectorDto         *ConnectorDto                             `json:"connectorDto,omitempty"`
	DatasourceId         *openapi_types.UUID                       `json:"datasourceId,omitempty"`
	DatasourceName       string                                    `json:"datasourceName"`
	DeclaredSource       *bool                                     `json:"declaredSource,omitempty"`
	Description          *string                                   `json:"description,omitempty"`
	DisplayedType        FieldLevelSearchDtoDisplayedType          `json:"displayedType"`
	EntityType           FieldLevelSearchDtoEntityType             `json:"entityType"`
	ExternalDescriptions *[]DescriptionDto                         `json:"externalDescriptions,omitempty"`
	Fields               *SearchCollectionFieldLevelSearchFieldDto `json:"fields,omitempty"`
	Health               *FieldLevelSearchDtoHealth                `json:"health,omitempty"`
	Id                   openapi_types.UUID                        `json:"id"`
	Label                string                                    `json:"label"`
	LineagePlatform      FieldLevelSearchDtoLineagePlatform        `json:"lineagePlatform"`
	MetadataRefresh      *int64                                    `json:"metadataRefresh,omitempty"`
	Name                 string                                    `json:"name"`
	Owners               *[]UserDto                                `json:"owners,omitempty"`
	SearchWeight         *int32                                    `json:"searchWeight,omitempty"`
	Tags                 *[]TagDto                                 `json:"tags,omitempty"`
	Terms                *[]TagDto                                 `json:"terms,omitempty"`
	Uri                  *string                                   `json:"uri,omitempty"`
	Urn                  *string                                   `json:"urn,omitempty"`
	Usage                *FieldLevelSearchDtoUsage                 `json:"usage,omitempty"`
}

// FieldLevelSearchDtoDisplayedType defines model for FieldLevelSearchDto.DisplayedType.
type FieldLevelSearchDtoDisplayedType string

// FieldLevelSearchDtoEntityType defines model for FieldLevelSearchDto.EntityType.
type FieldLevelSearchDtoEntityType string

// FieldLevelSearchDtoHealth defines model for FieldLevelSearchDto.Health.
type FieldLevelSearchDtoHealth string

// FieldLevelSearchDtoLineagePlatform defines model for FieldLevelSearchDto.LineagePlatform.
type FieldLevelSearchDtoLineagePlatform string

// FieldLevelSearchDtoUsage defines model for FieldLevelSearchDto.Usage.
type FieldLevelSearchDtoUsage string

// FieldLevelSearchFieldDto defines model for FieldLevelSearchFieldDto.
type FieldLevelSearchFieldDto struct {
	Description          *string                            `json:"description,omitempty"`
	EntityType           FieldLevelSearchFieldDtoEntityType `json:"entityType"`
	ExternalDescriptions *[]DescriptionDto                  `json:"externalDescriptions,omitempty"`
	Name                 string                             `json:"name"`
}

// FieldLevelSearchFieldDtoEntityType defines model for FieldLevelSearchFieldDto.EntityType.
type FieldLevelSearchFieldDtoEntityType string

// FieldNameTypeDto defines model for FieldNameTypeDto.
type FieldNameTypeDto struct {
	Name string `json:"name"`
	Type string `json:"type"`
}

// FilterElementDto defines model for FilterElementDto.
type FilterElementDto struct {
	Id      *string `json:"id,omitempty"`
	Name    string  `json:"name"`
	Results *int32  `json:"results,omitempty"`
}

// FivetranParams defines model for FivetranParams.
type FivetranParams struct {
	Host         *string     `json:"host,omitempty"`
	TimezoneData TimeZoneDto `json:"timezoneData"`
	Type         string      `json:"type"`
}

// GenericProviderDto defines model for GenericProviderDto.
type GenericProviderDto struct {
	CreatedBy *string                 `json:"createdBy,omitempty"`
	Type      *GenericProviderDtoType `json:"type,omitempty"`
}

// GenericProviderDtoType defines model for GenericProviderDto.Type.
type GenericProviderDtoType string

// GetCollaborationToolItemDto defines model for GetCollaborationToolItemDto.
type GetCollaborationToolItemDto struct {
	Id      openapi_types.UUID              `json:"id"`
	ItemKey string                          `json:"itemKey"`
	ItemUrl *string                         `json:"itemUrl,omitempty"`
	Type    GetCollaborationToolItemDtoType `json:"type"`
}

// GetCollaborationToolItemDtoType defines model for GetCollaborationToolItemDto.Type.
type GetCollaborationToolItemDtoType string

// GetDashboardWithIncidentsRequestDto defines model for GetDashboardWithIncidentsRequestDto.
type GetDashboardWithIncidentsRequestDto struct {
	SourceType GetDashboardWithIncidentsRequestDtoSourceType `json:"sourceType"`
	SourceUrl  string                                        `json:"sourceUrl"`
}

// GetDashboardWithIncidentsRequestDtoSourceType defines model for GetDashboardWithIncidentsRequestDto.SourceType.
type GetDashboardWithIncidentsRequestDtoSourceType string

// GitConnection The LookML configuration. See https://docs.siffletdata.com/docs/looker. If you don't use LookML, use an empty list `[]`
type GitConnection struct {
	AuthType GitConnectionAuthType `json:"authType"`
	Branch   *string               `json:"branch,omitempty"`
	SecretId string                `json:"secretId"`
	Url      string                `json:"url"`
}

// GitConnectionAuthType defines model for GitConnection.AuthType.
type GitConnectionAuthType string

// GroupIdentifierDto defines model for GroupIdentifierDto.
type GroupIdentifierDto struct {
	Hash   string   `json:"hash"`
	Keys   []string `json:"keys"`
	Values []string `json:"values"`
}

// HealthStatusSearchFilterElementDto defines model for HealthStatusSearchFilterElementDto.
type HealthStatusSearchFilterElementDto struct {
	Id      *HealthStatusSearchFilterElementDtoId `json:"id,omitempty"`
	Results *int32                                `json:"results,omitempty"`
}

// HealthStatusSearchFilterElementDtoId defines model for HealthStatusSearchFilterElementDto.Id.
type HealthStatusSearchFilterElementDtoId string

// HiveParams defines model for HiveParams.
type HiveParams struct {
	AtlasBaseUrl   *string     `json:"atlasBaseUrl,omitempty"`
	AtlasPrincipal *string     `json:"atlasPrincipal,omitempty"`
	Database       *string     `json:"database,omitempty"`
	JdbcUrl        *string     `json:"jdbcUrl,omitempty"`
	Krb5Conf       *string     `json:"krb5Conf,omitempty"`
	Principal      *string     `json:"principal,omitempty"`
	TimezoneData   TimeZoneDto `json:"timezoneData"`
	Type           string      `json:"type"`
}

// ImpactedAssetDto defines model for ImpactedAssetDto.
type ImpactedAssetDto struct {
	DatasourceName string                         `json:"datasourceName"`
	DatasourceType ImpactedAssetDtoDatasourceType `json:"datasourceType"`
	Name           string                         `json:"name"`
	Urn            string                         `json:"urn"`
}

// ImpactedAssetDtoDatasourceType defines model for ImpactedAssetDto.DatasourceType.
type ImpactedAssetDtoDatasourceType string

// ImpactedAssetsSearchDto defines model for ImpactedAssetsSearchDto.
type ImpactedAssetsSearchDto struct {
	LastUpdate   int64                            `json:"lastUpdate"`
	SearchAssets SearchCollectionImpactedAssetDto `json:"searchAssets"`
}

// IncidentEventDto defines model for IncidentEventDto.
type IncidentEventDto struct {
	Date int64                 `json:"date"`
	Type *IncidentEventDtoType `json:"type,omitempty"`
}

// IncidentEventDtoType defines model for IncidentEventDto.Type.
type IncidentEventDtoType string

// IncidentExternalDto defines model for IncidentExternalDto.
type IncidentExternalDto struct {
	CompromisedAssets int32                            `json:"compromisedAssets"`
	Criticality       int32                            `json:"criticality"`
	Datasets          []DatasetBriefDto                `json:"datasets"`
	Id                openapi_types.UUID               `json:"id"`
	IssueNo           int32                            `json:"issueNo"`
	LastModifiedDate  *int64                           `json:"lastModifiedDate,omitempty"`
	LastOccurredDate  int64                            `json:"lastOccurredDate"`
	Name              string                           `json:"name"`
	Owners            []UserDto                        `json:"owners"`
	Qualification     IncidentExternalDtoQualification `json:"qualification"`
	Rules             []RuleBriefDto                   `json:"rules"`
	SiffletUrl        string                           `json:"siffletUrl"`
	Status            IncidentExternalDtoStatus        `json:"status"`
	TriggerTime       int64                            `json:"triggerTime"`
}

// IncidentExternalDtoQualification defines model for IncidentExternalDto.Qualification.
type IncidentExternalDtoQualification string

// IncidentExternalDtoStatus defines model for IncidentExternalDto.Status.
type IncidentExternalDtoStatus string

// IncidentGroupSummaryDto defines model for IncidentGroupSummaryDto.
type IncidentGroupSummaryDto struct {
	ComparisonLastWeek *float32 `json:"comparisonLastWeek,omitempty"`
	Percentage         *float32 `json:"percentage,omitempty"`
	TotalIncidents     *int64   `json:"totalIncidents,omitempty"`
}

// IncidentLightDto defines model for IncidentLightDto.
type IncidentLightDto struct {
	CompromisedAssets int32                         `json:"compromisedAssets"`
	Criticality       int32                         `json:"criticality"`
	Datasets          []DatasetBriefDto             `json:"datasets"`
	Id                openapi_types.UUID            `json:"id"`
	IssueNo           int32                         `json:"issueNo"`
	LastModifiedDate  *int64                        `json:"lastModifiedDate,omitempty"`
	LastOccurredDate  int64                         `json:"lastOccurredDate"`
	Name              string                        `json:"name"`
	Owners            []UserDto                     `json:"owners"`
	Qualification     IncidentLightDtoQualification `json:"qualification"`
	Status            IncidentLightDtoStatus        `json:"status"`
	TriggerTime       int64                         `json:"triggerTime"`
}

// IncidentLightDtoQualification defines model for IncidentLightDto.Qualification.
type IncidentLightDtoQualification string

// IncidentLightDtoStatus defines model for IncidentLightDto.Status.
type IncidentLightDtoStatus string

// IncidentScope defines model for IncidentScope.
type IncidentScope struct {
	Datasets []DatasetBriefDto        `json:"datasets"`
	Rules    []RuleInIncidentScopeDto `json:"rules"`
}

// IncidentSearchCriteria defines model for IncidentSearchCriteria.
type IncidentSearchCriteria struct {
	Criticality  *[]int32                        `json:"criticality,omitempty"`
	Dataset      *[]openapi_types.UUID           `json:"dataset,omitempty"`
	Domain       *string                         `json:"domain,omitempty"`
	From         *int64                          `json:"from,omitempty"`
	Incident     *[]openapi_types.UUID           `json:"incident,omitempty"`
	ItemsPerPage *int32                          `json:"itemsPerPage,omitempty"`
	Page         *int32                          `json:"page,omitempty"`
	Rule         *[]openapi_types.UUID           `json:"rule,omitempty"`
	Sort         *[]string                       `json:"sort,omitempty"`
	Status       *[]IncidentSearchCriteriaStatus `json:"status,omitempty"`
	Tag          *[]openapi_types.UUID           `json:"tag,omitempty"`
	TextSearch   *string                         `json:"textSearch,omitempty"`
	To           *int64                          `json:"to,omitempty"`
	User         *[]openapi_types.UUID           `json:"user,omitempty"`
}

// IncidentSearchCriteriaStatus defines model for IncidentSearchCriteria.Status.
type IncidentSearchCriteriaStatus string

// IncidentSearchDto defines model for IncidentSearchDto.
type IncidentSearchDto struct {
	CatalogFilters  []CatalogFilterDto               `json:"catalogFilters"`
	SearchIncidents SearchCollectionIncidentLightDto `json:"searchIncidents"`
}

// IncidentSummaryDto defines model for IncidentSummaryDto.
type IncidentSummaryDto struct {
	AverageResponseRate         *int64                              `json:"averageResponseRate,omitempty"`
	RateComparisonLastWeek      *float32                            `json:"rateComparisonLastWeek,omitempty"`
	TotalElements               *int64                              `json:"totalElements,omitempty"`
	UnresolvedIncidentsByStatus *map[string]IncidentGroupSummaryDto `json:"unresolvedIncidentsByStatus,omitempty"`
}

// IngestionRunSummary defines model for IngestionRunSummary.
type IngestionRunSummary struct {
	Errors *[]string `json:"errors,omitempty"`
}

// IssueDetailsDto defines model for IssueDetailsDto.
type IssueDetailsDto struct {
	CollaborationToolItems *[]GetCollaborationToolItemDto `json:"collaborationToolItems,omitempty"`
	CreatedBy              *string                        `json:"createdBy,omitempty"`
	CreatedDate            *int64                         `json:"createdDate,omitempty"`
	Criticality            *IssueDetailsDtoCriticality    `json:"criticality,omitempty"`
	Id                     openapi_types.UUID             `json:"id"`
	IssueNo                *int32                         `json:"issueNo,omitempty"`
	LastModifiedDate       *int64                         `json:"lastModifiedDate,omitempty"`
	ModifiedBy             *string                        `json:"modifiedBy,omitempty"`
	Name                   *string                        `json:"name,omitempty"`
	Owners                 *[]UserDto                     `json:"owners,omitempty"`
	Qualification          *IssueDetailsDtoQualification  `json:"qualification,omitempty"`
	Status                 *IssueDetailsDtoStatus         `json:"status,omitempty"`
}

// IssueDetailsDtoCriticality defines model for IssueDetailsDto.Criticality.
type IssueDetailsDtoCriticality string

// IssueDetailsDtoQualification defines model for IssueDetailsDto.Qualification.
type IssueDetailsDtoQualification string

// IssueDetailsDtoStatus defines model for IssueDetailsDto.Status.
type IssueDetailsDtoStatus string

// LastIngestionStatusDto defines model for LastIngestionStatusDto.
type LastIngestionStatusDto struct {
	Status    LastIngestionStatusDtoStatus `json:"status"`
	Timestamp int64                        `json:"timestamp"`
}

// LastIngestionStatusDtoStatus defines model for LastIngestionStatusDto.Status.
type LastIngestionStatusDtoStatus string

// LastRunStatusDto defines model for LastRunStatusDto.
type LastRunStatusDto struct {
	Result    string                 `json:"result"`
	Status    LastRunStatusDtoStatus `json:"status"`
	Timestamp int64                  `json:"timestamp"`
}

// LastRunStatusDtoStatus defines model for LastRunStatusDto.Status.
type LastRunStatusDtoStatus string

// LineageAttachedEntity defines model for LineageAttachedEntity.
type LineageAttachedEntity struct {
	DatasourceType LineageAttachedEntityDatasourceType `json:"datasourceType"`
	Name           string                              `json:"name"`
	Type           LineageAttachedEntityType           `json:"type"`
	Urn            string                              `json:"urn"`
}

// LineageAttachedEntityDatasourceType defines model for LineageAttachedEntity.DatasourceType.
type LineageAttachedEntityDatasourceType string

// LineageAttachedEntityType defines model for LineageAttachedEntity.Type.
type LineageAttachedEntityType string

// LineageEntityDto defines model for LineageEntityDto.
type LineageEntityDto struct {
	AccessAuthorized    *bool                        `json:"accessAuthorized,omitempty"`
	AttachedEntity      *LineageAttachedEntity       `json:"attachedEntity,omitempty"`
	Children            []LineageEntityDto           `json:"children"`
	DatasourceName      string                       `json:"datasourceName"`
	Downstreams         []LineageUrnDto              `json:"downstreams"`
	EntityType          LineageEntityDtoEntityType   `json:"entityType"`
	FullName            string                       `json:"fullName"`
	HasInformation      bool                         `json:"hasInformation"`
	Health              LineageEntityDtoHealth       `json:"health"`
	Id                  string                       `json:"id"`
	Platform            string                       `json:"platform"`
	PlatformEnum        LineageEntityDtoPlatformEnum `json:"platformEnum"`
	QualifiedNamePrefix *string                      `json:"qualifiedNamePrefix,omitempty"`
	Title               string                       `json:"title"`
	Type                string                       `json:"type"`
	Upstreams           []LineageUrnDto              `json:"upstreams"`
	Urn                 string                       `json:"urn"`
}

// LineageEntityDtoEntityType defines model for LineageEntityDto.EntityType.
type LineageEntityDtoEntityType string

// LineageEntityDtoHealth defines model for LineageEntityDto.Health.
type LineageEntityDtoHealth string

// LineageEntityDtoPlatformEnum defines model for LineageEntityDto.PlatformEnum.
type LineageEntityDtoPlatformEnum string

// LineageUrnDto defines model for LineageUrnDto.
type LineageUrnDto struct {
	CreationMethod LineageUrnDtoCreationMethod `json:"creationMethod"`
	Urn            string                      `json:"urn"`
}

// LineageUrnDtoCreationMethod defines model for LineageUrnDto.CreationMethod.
type LineageUrnDtoCreationMethod string

// LookerParams defines model for LookerParams.
type LookerParams struct {
	GitConnections *[]GitConnection `json:"gitConnections,omitempty"`
	Host           *string          `json:"host,omitempty"`
	TimezoneData   TimeZoneDto      `json:"timezoneData"`
	Type           string           `json:"type"`
}

// MicrostrategyParams defines model for MicrostrategyParams.
type MicrostrategyParams struct {
	Host         *string     `json:"host,omitempty"`
	TimezoneData TimeZoneDto `json:"timezoneData"`
	Type         string      `json:"type"`
}

// ModelAssetOverview defines model for ModelAssetOverview.
type ModelAssetOverview struct {
	Details      *ModelAssetOverview_Details `json:"details,omitempty"`
	Id           *openapi_types.UUID         `json:"id,omitempty"`
	Orchestrator *AssetOrchestratorDto       `json:"orchestrator,omitempty"`
	Type         *ModelAssetOverviewType     `json:"type,omitempty"`
	Urn          *string                     `json:"urn,omitempty"`
}

// ModelAssetOverview_Details defines model for ModelAssetOverview.Details.
type ModelAssetOverview_Details struct {
	union json.RawMessage
}

// ModelAssetOverviewType defines model for ModelAssetOverview.Type.
type ModelAssetOverviewType string

// MssqlParams defines model for MssqlParams.
type MssqlParams struct {
	Database     *string     `json:"database,omitempty"`
	Host         *string     `json:"host,omitempty"`
	Port         *int32      `json:"port,omitempty"`
	Schema       *string     `json:"schema,omitempty"`
	Ssl          *bool       `json:"ssl,omitempty"`
	TimezoneData TimeZoneDto `json:"timezoneData"`
	Type         string      `json:"type"`
}

// MwaaParams defines model for MwaaParams.
type MwaaParams struct {
	EnvironmentName *string     `json:"environmentName,omitempty"`
	Region          *string     `json:"region,omitempty"`
	RoleArn         *string     `json:"roleArn,omitempty"`
	TimezoneData    TimeZoneDto `json:"timezoneData"`
	Type            string      `json:"type"`
}

// MysqlParams defines model for MysqlParams.
type MysqlParams struct {
	Database        *string                     `json:"database,omitempty"`
	Host            *string                     `json:"host,omitempty"`
	MysqlTlsVersion *MysqlParamsMysqlTlsVersion `json:"mysqlTlsVersion,omitempty"`
	Port            *int32                      `json:"port,omitempty"`
	TimezoneData    TimeZoneDto                 `json:"timezoneData"`
	Type            string                      `json:"type"`
}

// MysqlParamsMysqlTlsVersion defines model for MysqlParams.MysqlTlsVersion.
type MysqlParamsMysqlTlsVersion string

// NameChangeIncidentEventDto defines model for NameChangeIncidentEventDto.
type NameChangeIncidentEventDto struct {
	ChangedByUser *UserDto                        `json:"changedByUser,omitempty"`
	Date          int64                           `json:"date"`
	FirstDate     *int64                          `json:"firstDate,omitempty"`
	LastDate      *int64                          `json:"lastDate,omitempty"`
	NewName       *string                         `json:"newName,omitempty"`
	OldName       *string                         `json:"oldName,omitempty"`
	Type          *NameChangeIncidentEventDtoType `json:"type,omitempty"`
}

// NameChangeIncidentEventDtoType defines model for NameChangeIncidentEventDto.Type.
type NameChangeIncidentEventDtoType string

// NewFailuresIncidentEventDto defines model for NewFailuresIncidentEventDto.
type NewFailuresIncidentEventDto struct {
	Date         int64                                `json:"date"`
	FirstDate    *int64                               `json:"firstDate,omitempty"`
	LastDate     *int64                               `json:"lastDate,omitempty"`
	RuleFailures *[]RuleInNewFailuresIncidentEventDto `json:"ruleFailures,omitempty"`
	Type         *NewFailuresIncidentEventDtoType     `json:"type,omitempty"`
}

// NewFailuresIncidentEventDtoType defines model for NewFailuresIncidentEventDto.Type.
type NewFailuresIncidentEventDtoType string

// OracleParams defines model for OracleParams.
type OracleParams struct {
	Database            *string     `json:"database,omitempty"`
	Host                *string     `json:"host,omitempty"`
	Port                *int32      `json:"port,omitempty"`
	Schema              *string     `json:"schema,omitempty"`
	SiffletAgentEnabled *bool       `json:"siffletAgentEnabled,omitempty"`
	TimezoneData        TimeZoneDto `json:"timezoneData"`
	Type                string      `json:"type"`
}

// OwnerSearchFilterElementDto defines model for OwnerSearchFilterElementDto.
type OwnerSearchFilterElementDto struct {
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Login   *string             `json:"login,omitempty"`
	Name    *string             `json:"name,omitempty"`
	Results *int32              `json:"results,omitempty"`
}

// ParameterizedQueryDto defines model for ParameterizedQueryDto.
type ParameterizedQueryDto struct {
	PositionalParameters []PositionalParameterDto `json:"positionalParameters"`
	Query                string                   `json:"query"`
}

// PlatformSearchFilterElementDto defines model for PlatformSearchFilterElementDto.
type PlatformSearchFilterElementDto struct {
	Children *[]UuidSearchFilterElementDto       `json:"children,omitempty"`
	Icon     *PlatformSearchFilterElementDtoIcon `json:"icon,omitempty"`
	Id       *string                             `json:"id,omitempty"`
	Name     *string                             `json:"name,omitempty"`
	Results  *int32                              `json:"results,omitempty"`
}

// PlatformSearchFilterElementDtoIcon defines model for PlatformSearchFilterElementDto.Icon.
type PlatformSearchFilterElementDtoIcon string

// PlatformTypeSearchFilterElementDto defines model for PlatformTypeSearchFilterElementDto.
type PlatformTypeSearchFilterElementDto struct {
	Icon    *PlatformTypeSearchFilterElementDtoIcon `json:"icon,omitempty"`
	Id      *string                                 `json:"id,omitempty"`
	Name    *string                                 `json:"name,omitempty"`
	Results *int32                                  `json:"results,omitempty"`
}

// PlatformTypeSearchFilterElementDtoIcon defines model for PlatformTypeSearchFilterElementDto.Icon.
type PlatformTypeSearchFilterElementDtoIcon string

// PositionalParameterDto defines model for PositionalParameterDto.
type PositionalParameterDto struct {
	Value *map[string]interface{} `json:"value,omitempty"`
}

// PostgresqlParams defines model for PostgresqlParams.
type PostgresqlParams struct {
	Database     *string     `json:"database,omitempty"`
	Host         *string     `json:"host,omitempty"`
	Port         *int32      `json:"port,omitempty"`
	Schema       *string     `json:"schema,omitempty"`
	TimezoneData TimeZoneDto `json:"timezoneData"`
	Type         string      `json:"type"`
}

// PowerBiParams defines model for PowerBiParams.
type PowerBiParams struct {
	ClientId     *string     `json:"clientId,omitempty"`
	TenantId     *string     `json:"tenantId,omitempty"`
	TimezoneData TimeZoneDto `json:"timezoneData"`
	Type         string      `json:"type"`
	WorkspaceId  *string     `json:"workspaceId,omitempty"`
}

// ProviderDto defines model for ProviderDto.
type ProviderDto struct {
	Type *ProviderDtoType `json:"type,omitempty"`
}

// ProviderDtoType defines model for ProviderDto.Type.
type ProviderDtoType string

// PublicAirflowParametersDto defines model for PublicAirflowParametersDto.
type PublicAirflowParametersDto struct {
	// Host Your Airflow server hostname
	Host *string `json:"host,omitempty"`

	// Port Your Airflow server port
	Port *int32                         `json:"port,omitempty"`
	Type PublicAirflowParametersDtoType `json:"type"`
}

// PublicAirflowParametersDtoType defines model for PublicAirflowParametersDto.Type.
type PublicAirflowParametersDtoType string

// PublicAthenaParametersDto defines model for PublicAthenaParametersDto.
type PublicAthenaParametersDto struct {
	// Database Your Athena database name
	Database *string `json:"database,omitempty"`

	// Datasource Your Athena data source name
	Datasource *string `json:"datasource,omitempty"`

	// Region Your Athena instance AWS region
	Region *string `json:"region,omitempty"`

	// RoleArn ARN of the IAM role to use for Athena queries
	RoleArn *string `json:"roleArn,omitempty"`

	// S3OutputLocation The S3 location where Athena query results are stored
	S3OutputLocation *string                       `json:"s3OutputLocation,omitempty"`
	Type             PublicAthenaParametersDtoType `json:"type"`

	// VpcUrl Your VPC URL for Athena connection
	VpcUrl *string `json:"vpcUrl,omitempty"`

	// Workgroup Your Athena workgroup name
	Workgroup *string `json:"workgroup,omitempty"`
}

// PublicAthenaParametersDtoType defines model for PublicAthenaParametersDto.Type.
type PublicAthenaParametersDtoType string

// PublicBigQueryParametersDto defines model for PublicBigQueryParametersDto.
type PublicBigQueryParametersDto struct {
	// BillingProjectId Your billing project ID
	BillingProjectId *string `json:"billingProjectId,omitempty"`

	// DatasetId Your BigQuery dataset ID
	DatasetId *string `json:"datasetId,omitempty"`

	// ProjectId Your BigQuery project ID
	ProjectId *string                         `json:"projectId,omitempty"`
	Type      PublicBigQueryParametersDtoType `json:"type"`
}

// PublicBigQueryParametersDtoType defines model for PublicBigQueryParametersDto.Type.
type PublicBigQueryParametersDtoType string

// PublicCreateSourceDto defines model for PublicCreateSourceDto.
type PublicCreateSourceDto struct {
	// Credentials Credentials of the source. Required for all sources type except 'ATHENA', 'DBT', 'QUICKSIGHT'.
	Credentials *string `json:"credentials,omitempty"`

	// Description Description of the source
	Description *string `json:"description,omitempty"`

	// Name Name of the source
	Name       string                           `json:"name"`
	Parameters PublicCreateSourceDto_Parameters `json:"parameters"`

	// Schedule Schedule of the source. Supports CRON syntax. If empty, the source won't be scheduled.
	Schedule *string                  `json:"schedule,omitempty"`
	Tags     *[]PublicTagReferenceDto `json:"tags,omitempty"`

	// Timezone A string representing a timezone identifier (e.g. 'UTC' or 'Europe/Paris')
	Timezone *string `json:"timezone,omitempty"`
}

// PublicCreateSourceDto_Parameters defines model for PublicCreateSourceDto.Parameters.
type PublicCreateSourceDto_Parameters struct {
	union json.RawMessage
}

// PublicDatabricksParametersDto defines model for PublicDatabricksParametersDto.
type PublicDatabricksParametersDto struct {
	// Catalog Your Databricks catalog
	Catalog *string `json:"catalog,omitempty"`

	// Host Your Databricks server hostname
	Host *string `json:"host,omitempty"`

	// HttpPath Your Databricks HTTP path
	HttpPath *string `json:"httpPath,omitempty"`

	// Port Your Databricks server port
	Port *int32 `json:"port,omitempty"`

	// Schema Your Databricks schema
	Schema *string                           `json:"schema,omitempty"`
	Type   PublicDatabricksParametersDtoType `json:"type"`
}

// PublicDatabricksParametersDtoType defines model for PublicDatabricksParametersDto.Type.
type PublicDatabricksParametersDtoType string

// PublicDbtCloudParametersDto defines model for PublicDbtCloudParametersDto.
type PublicDbtCloudParametersDto struct {
	// AccountId Your dbt Cloud account ID
	AccountId *string `json:"accountId,omitempty"`

	// BaseUrl Your dbt Cloud base URL
	BaseUrl *string `json:"baseUrl,omitempty"`

	// JobDefinitionId Your dbt Cloud job ID
	JobDefinitionId *string `json:"jobDefinitionId,omitempty"`

	// ProjectId Your dbt Cloud project ID
	ProjectId *string                         `json:"projectId,omitempty"`
	Type      PublicDbtCloudParametersDtoType `json:"type"`
}

// PublicDbtCloudParametersDtoType defines model for PublicDbtCloudParametersDto.Type.
type PublicDbtCloudParametersDtoType string

// PublicDbtParametersDto defines model for PublicDbtParametersDto.
type PublicDbtParametersDto struct {
	// ProjectName Your dbt project name (the 'name' value in your dbt_project.yml file)
	ProjectName *string `json:"projectName,omitempty"`

	// Target Your dbt target name (the 'target' value in your profiles.yml file)
	Target *string                    `json:"target,omitempty"`
	Type   PublicDbtParametersDtoType `json:"type"`
}

// PublicDbtParametersDtoType defines model for PublicDbtParametersDto.Type.
type PublicDbtParametersDtoType string

// PublicDeclarativeParametersDto Parameters of the source
type PublicDeclarativeParametersDto = PublicSourceParametersDto

// PublicFivetranParametersDto defines model for PublicFivetranParametersDto.
type PublicFivetranParametersDto struct {
	// Host Your Fivetran environment URL
	Host *string                         `json:"host,omitempty"`
	Type PublicFivetranParametersDtoType `json:"type"`
}

// PublicFivetranParametersDtoType defines model for PublicFivetranParametersDto.Type.
type PublicFivetranParametersDtoType string

// PublicHiveParametersDto defines model for PublicHiveParametersDto.
type PublicHiveParametersDto struct {
	// AtlasBaseUrl Your Atlas server base URL
	AtlasBaseUrl *string `json:"atlasBaseUrl,omitempty"`

	// AtlasPrincipal Your Atlas server principal
	AtlasPrincipal *string `json:"atlasPrincipal,omitempty"`

	// Database Your Hive database name
	Database *string `json:"database,omitempty"`

	// JdbcUrl Your Hive server JDBC URL
	JdbcUrl *string `json:"jdbcUrl,omitempty"`

	// Krb5Conf Your krb5.conf file content
	Krb5Conf *string `json:"krb5Conf,omitempty"`

	// Principal Your Hive server principal
	Principal *string                     `json:"principal,omitempty"`
	Type      PublicHiveParametersDtoType `json:"type"`
}

// PublicHiveParametersDtoType defines model for PublicHiveParametersDto.Type.
type PublicHiveParametersDtoType string

// PublicLookerParametersDto defines model for PublicLookerParametersDto.
type PublicLookerParametersDto struct {
	// GitConnections The LookML configuration. See https://docs.siffletdata.com/docs/looker. If you don't use LookML, use an empty list `[]`
	GitConnections *[]GitConnection `json:"gitConnections,omitempty"`

	// Host URL of the Looker site and append at the end the following "/api/4.0".
	// For instance if you usually connect to Looker on "https://abcdef.cloud.looker.com/",
	//  then you should add the following on host: "https://abcdef.cloud.looker.com/api/4.0"
	Host *string                       `json:"host,omitempty"`
	Type PublicLookerParametersDtoType `json:"type"`
}

// PublicLookerParametersDtoType defines model for PublicLookerParametersDto.Type.
type PublicLookerParametersDtoType string

// PublicMssqlParametersDto defines model for PublicMssqlParametersDto.
type PublicMssqlParametersDto struct {
	// Database Your database name
	Database *string `json:"database,omitempty"`

	// Host Your MSSQL server hostname
	Host *string `json:"host,omitempty"`

	// Port Your MSSQL server port
	Port *int32 `json:"port,omitempty"`

	// Schema Your schema name
	Schema *string `json:"schema,omitempty"`

	// Ssl Whether to use SSL to connect to your MSSQL server
	Ssl  *bool                        `json:"ssl,omitempty"`
	Type PublicMssqlParametersDtoType `json:"type"`
}

// PublicMssqlParametersDtoType defines model for PublicMssqlParametersDto.Type.
type PublicMssqlParametersDtoType string

// PublicMysqlParametersDto defines model for PublicMysqlParametersDto.
type PublicMysqlParametersDto struct {
	// Database Your database name
	Database *string `json:"database,omitempty"`

	// Host Your MySQL server hostname
	Host *string `json:"host,omitempty"`

	// MysqlTlsVersion The TLS version to use to connect to your MySQL server
	MysqlTlsVersion *PublicMysqlParametersDtoMysqlTlsVersion `json:"mysqlTlsVersion,omitempty"`

	// Port Your MySQL server port
	Port *int32                       `json:"port,omitempty"`
	Type PublicMysqlParametersDtoType `json:"type"`
}

// PublicMysqlParametersDtoMysqlTlsVersion The TLS version to use to connect to your MySQL server
type PublicMysqlParametersDtoMysqlTlsVersion string

// PublicMysqlParametersDtoType defines model for PublicMysqlParametersDto.Type.
type PublicMysqlParametersDtoType string

// PublicOracleParametersDto defines model for PublicOracleParametersDto.
type PublicOracleParametersDto struct {
	// Database Your database name
	Database *string `json:"database,omitempty"`

	// Host Your Oracle server hostname
	Host *string `json:"host,omitempty"`

	// Port Your Oracle server port
	Port *int32 `json:"port,omitempty"`

	// Schema Your schema name
	Schema *string                       `json:"schema,omitempty"`
	Type   PublicOracleParametersDtoType `json:"type"`
}

// PublicOracleParametersDtoType defines model for PublicOracleParametersDto.Type.
type PublicOracleParametersDtoType string

// PublicPostgresqlParametersDto defines model for PublicPostgresqlParametersDto.
type PublicPostgresqlParametersDto struct {
	// Database Your database name
	Database *string `json:"database,omitempty"`

	// Host Your PostgreSQL server host
	Host *string `json:"host,omitempty"`

	// Port Your PostgreSQL server port
	Port *int32 `json:"port,omitempty"`

	// Schema Your schema name
	Schema *string                           `json:"schema,omitempty"`
	Type   PublicPostgresqlParametersDtoType `json:"type"`
}

// PublicPostgresqlParametersDtoType defines model for PublicPostgresqlParametersDto.Type.
type PublicPostgresqlParametersDtoType string

// PublicPowerBiParametersDto defines model for PublicPowerBiParametersDto.
type PublicPowerBiParametersDto struct {
	// ClientId Your Azure AD client ID
	ClientId *string `json:"clientId,omitempty"`

	// TenantId Your Azure AD tenant ID
	TenantId *string                        `json:"tenantId,omitempty"`
	Type     PublicPowerBiParametersDtoType `json:"type"`

	// WorkspaceId Your Power BI workspace ID
	WorkspaceId *string `json:"workspaceId,omitempty"`
}

// PublicPowerBiParametersDtoType defines model for PublicPowerBiParametersDto.Type.
type PublicPowerBiParametersDtoType string

// PublicQuicksightParametersDto defines model for PublicQuicksightParametersDto.
type PublicQuicksightParametersDto struct {
	// AccountId Your AWS account ID
	AccountId *string `json:"accountId,omitempty"`

	// AwsRegion Your AWS region
	AwsRegion *string `json:"awsRegion,omitempty"`

	// RoleArn The ARN for your QuickSight role
	RoleArn *string                           `json:"roleArn,omitempty"`
	Type    PublicQuicksightParametersDtoType `json:"type"`
}

// PublicQuicksightParametersDtoType defines model for PublicQuicksightParametersDto.Type.
type PublicQuicksightParametersDtoType string

// PublicRedshiftParametersDto defines model for PublicRedshiftParametersDto.
type PublicRedshiftParametersDto struct {
	// Database Your database name
	Database *string `json:"database,omitempty"`

	// Host Your Redshift server host
	Host *string `json:"host,omitempty"`

	// Port Your Redshift server port
	Port *int32 `json:"port,omitempty"`

	// Schema Your schema name
	Schema *string `json:"schema,omitempty"`

	// Ssl Whether to use SSL to connect to your Redshift server
	Ssl  *bool                           `json:"ssl,omitempty"`
	Type PublicRedshiftParametersDtoType `json:"type"`
}

// PublicRedshiftParametersDtoType defines model for PublicRedshiftParametersDto.Type.
type PublicRedshiftParametersDtoType string

// PublicSnowflakeParametersDto defines model for PublicSnowflakeParametersDto.
type PublicSnowflakeParametersDto struct {
	// AccountIdentifier Your Snowflake account identifier
	AccountIdentifier *string `json:"accountIdentifier,omitempty"`

	// Database Your database name
	Database *string `json:"database,omitempty"`

	// Schema Your schema name
	Schema *string                          `json:"schema,omitempty"`
	Type   PublicSnowflakeParametersDtoType `json:"type"`

	// Warehouse Your Snowflake warehouse
	Warehouse *string `json:"warehouse,omitempty"`
}

// PublicSnowflakeParametersDtoType defines model for PublicSnowflakeParametersDto.Type.
type PublicSnowflakeParametersDtoType string

// PublicSourceParametersDto Parameters of the source
type PublicSourceParametersDto struct {
	Type PublicSourceParametersDtoType `json:"type"`
}

// PublicSourceParametersDtoType defines model for PublicSourceParametersDto.Type.
type PublicSourceParametersDtoType string

// PublicSynapseParametersDto defines model for PublicSynapseParametersDto.
type PublicSynapseParametersDto struct {
	// Database Your database name
	Database *string `json:"database,omitempty"`

	// Host The host of your Synapse server
	Host *string `json:"host,omitempty"`

	// Port Your Synapse server port
	Port *int32 `json:"port,omitempty"`

	// Schema Your schema name
	Schema *string                        `json:"schema,omitempty"`
	Type   PublicSynapseParametersDtoType `json:"type"`
}

// PublicSynapseParametersDtoType defines model for PublicSynapseParametersDto.Type.
type PublicSynapseParametersDtoType string

// PublicTableauParametersDto defines model for PublicTableauParametersDto.
type PublicTableauParametersDto struct {
	// Host Your Tableau Server hostname
	Host *string `json:"host,omitempty"`

	// Site Your Tableau Server site. Leave empty if your Tableau environment is using the Default Site.
	Site *string                        `json:"site,omitempty"`
	Type PublicTableauParametersDtoType `json:"type"`
}

// PublicTableauParametersDtoType defines model for PublicTableauParametersDto.Type.
type PublicTableauParametersDtoType string

// PublicTagReferenceDto Tags of the source. A tag can either be referenced by its id or its name or its name and kind.
type PublicTagReferenceDto struct {
	// Id Id of the referenced object
	Id *openapi_types.UUID `json:"id,omitempty"`

	// Kind Type of the referenced tag
	Kind *PublicTagReferenceDtoKind `json:"kind,omitempty"`

	// Name Name of the referenced object
	Name *string `json:"name,omitempty"`
}

// PublicTagReferenceDtoKind Type of the referenced tag
type PublicTagReferenceDtoKind string

// QuickSightParams defines model for QuickSightParams.
type QuickSightParams struct {
	AccountId    *string     `json:"accountId,omitempty"`
	AwsRegion    *string     `json:"awsRegion,omitempty"`
	RoleArn      *string     `json:"roleArn,omitempty"`
	TimezoneData TimeZoneDto `json:"timezoneData"`
	Type         string      `json:"type"`
}

// RedshiftParams defines model for RedshiftParams.
type RedshiftParams struct {
	Database     *string     `json:"database,omitempty"`
	Host         *string     `json:"host,omitempty"`
	Port         *int32      `json:"port,omitempty"`
	Schema       *string     `json:"schema,omitempty"`
	Ssl          *bool       `json:"ssl,omitempty"`
	TimezoneData TimeZoneDto `json:"timezoneData"`
	Type         string      `json:"type"`
}

// RuleBriefDto defines model for RuleBriefDto.
type RuleBriefDto struct {
	Id   openapi_types.UUID `json:"id"`
	Name string             `json:"name"`
}

// RuleCatalogAssetDto defines model for RuleCatalogAssetDto.
type RuleCatalogAssetDto struct {
	CanManuallyRun              *bool                             `json:"canManuallyRun,omitempty"`
	CreatedBy                   *UserDto                          `json:"createdBy,omitempty"`
	Criticality                 int32                             `json:"criticality"`
	DatasetFieldNames           []string                          `json:"datasetFieldNames"`
	Datasets                    []DatasetBriefWithUriDto          `json:"datasets"`
	Description                 *string                           `json:"description,omitempty"`
	HasAiRecommendations        bool                              `json:"hasAiRecommendations"`
	Id                          openapi_types.UUID                `json:"id"`
	LastRunId                   *openapi_types.UUID               `json:"lastRunId,omitempty"`
	LastRunStatus               *LastRunStatusDto                 `json:"lastRunStatus,omitempty"`
	LastWeekStatuses            *[]LastRunStatusDto               `json:"lastWeekStatuses,omitempty"`
	Mails                       *[]AlertingHookDto                `json:"mails,omitempty"`
	MsTeams                     *[]AlertingHookDto                `json:"msTeams,omitempty"`
	MultiDimensional            bool                              `json:"multiDimensional"`
	Name                        string                            `json:"name"`
	Provider                    *RuleCatalogAssetDto_Provider     `json:"provider,omitempty"`
	ReadOnly                    *bool                             `json:"readOnly,omitempty"`
	RuleLabel                   *string                           `json:"ruleLabel,omitempty"`
	RuleType                    RuleCatalogAssetDtoRuleType       `json:"ruleType"`
	Schedule                    *string                           `json:"schedule,omitempty"`
	Selectable                  bool                              `json:"selectable"`
	SlackChannels               *[]AlertingHookDto                `json:"slackChannels,omitempty"`
	SourcePlatform              RuleCatalogAssetDtoSourcePlatform `json:"sourcePlatform"`
	SupportAsCodeYAMLConversion bool                              `json:"supportAsCodeYAMLConversion"`
	Tags                        *[]TagDto                         `json:"tags,omitempty"`
	Terms                       *[]TagDto                         `json:"terms,omitempty"`
}

// RuleCatalogAssetDto_Provider defines model for RuleCatalogAssetDto.Provider.
type RuleCatalogAssetDto_Provider struct {
	union json.RawMessage
}

// RuleCatalogAssetDtoRuleType defines model for RuleCatalogAssetDto.RuleType.
type RuleCatalogAssetDtoRuleType string

// RuleCatalogAssetDtoSourcePlatform defines model for RuleCatalogAssetDto.SourcePlatform.
type RuleCatalogAssetDtoSourcePlatform string

// RuleDto defines model for RuleDto.
type RuleDto struct {
	Category             *string                       `json:"category,omitempty"`
	CreateIncidentOnFail bool                          `json:"createIncidentOnFail"`
	Criticality          int32                         `json:"criticality"`
	Datasets             []DatasetLightDto             `json:"datasets"`
	Description          *string                       `json:"description,omitempty"`
	FriendlyId           *string                       `json:"friendlyId,omitempty"`
	Id                   *openapi_types.UUID           `json:"id,omitempty"`
	InputValues          *StronglyTypedRuleInputParams `json:"inputValues,omitempty"`
	Mails                *[]AlertingHookDto            `json:"mails,omitempty"`
	Message              *string                       `json:"message,omitempty"`
	MsTeams              *[]AlertingHookDto            `json:"msTeams,omitempty"`
	Name                 string                        `json:"name"`
	RuleTemplateName     string                        `json:"ruleTemplateName"`
	Schedule             *string                       `json:"schedule,omitempty"`
	ScheduleTimezone     *TimeZoneDto                  `json:"scheduleTimezone,omitempty"`
	SlackChannels        *[]AlertingHookDto            `json:"slackChannels,omitempty"`
	Tags                 *[]TagDto                     `json:"tags,omitempty"`
	Terms                *[]TagDto                     `json:"terms,omitempty"`
}

// RuleGroupRequestDto defines model for RuleGroupRequestDto.
type RuleGroupRequestDto struct {
	Group *GroupIdentifierDto `json:"group,omitempty"`
}

// RuleGroupSummaryDto defines model for RuleGroupSummaryDto.
type RuleGroupSummaryDto struct {
	AverageResponseTime *int64 `json:"averageResponseTime,omitempty"`
	InProgressIncidents *int64 `json:"inProgressIncidents,omitempty"`
	OpenIncidents       *int64 `json:"openIncidents,omitempty"`
	TotalRules          *int64 `json:"totalRules,omitempty"`
}

// RuleInIncidentScopeDto defines model for RuleInIncidentScopeDto.
type RuleInIncidentScopeDto struct {
	FirstFailureDate *int64              `json:"firstFailureDate,omitempty"`
	LastFailureDate  *int64              `json:"lastFailureDate,omitempty"`
	NumberOfFailures int32               `json:"numberOfFailures"`
	Rule             RuleCatalogAssetDto `json:"rule"`
}

// RuleInNewFailuresIncidentEventDto defines model for RuleInNewFailuresIncidentEventDto.
type RuleInNewFailuresIncidentEventDto struct {
	FailureCount int32         `json:"failureCount"`
	Rule         *RuleBriefDto `json:"rule,omitempty"`
}

// RuleRunDebugDto defines model for RuleRunDebugDto.
type RuleRunDebugDto struct {
	RowCount   *int64  `json:"rowCount,omitempty"`
	RowJsonStr *string `json:"rowJsonStr,omitempty"`
}

// RuleRunDetailsByGroupDto defines model for RuleRunDetailsByGroupDto.
type RuleRunDetailsByGroupDto struct {
	CanShowFailingRows bool                            `json:"canShowFailingRows"`
	DebugSql           *ParameterizedQueryDto          `json:"debugSql,omitempty"`
	Dimension          string                          `json:"dimension"`
	Group              GroupIdentifierDto              `json:"group"`
	HasGraph           bool                            `json:"hasGraph"`
	Result             *string                         `json:"result,omitempty"`
	Status             *RuleRunDetailsByGroupDtoStatus `json:"status,omitempty"`
}

// RuleRunDetailsByGroupDtoStatus defines model for RuleRunDetailsByGroupDto.Status.
type RuleRunDetailsByGroupDtoStatus string

// RuleRunDto The rule run which created the incident. Can be null if the rule run has been deleted.
type RuleRunDto struct {
	CanShowFailingRows bool                      `json:"canShowFailingRows"`
	CreatedBy          *string                   `json:"createdBy,omitempty"`
	CreatedDate        *int64                    `json:"createdDate,omitempty"`
	DebugSql           *ParameterizedQueryDto    `json:"debugSql,omitempty"`
	Debuggable         bool                      `json:"debuggable"`
	EndDate            *int64                    `json:"endDate,omitempty"`
	HasGraph           bool                      `json:"hasGraph"`
	HasGroupBy         bool                      `json:"hasGroupBy"`
	Id                 openapi_types.UUID        `json:"id"`
	IncidentIssue      *int32                    `json:"incidentIssue,omitempty"`
	IncidentName       *string                   `json:"incidentName,omitempty"`
	IncidentStatus     *RuleRunDtoIncidentStatus `json:"incidentStatus,omitempty"`
	Result             *string                   `json:"result,omitempty"`
	RuleId             *openapi_types.UUID       `json:"ruleId,omitempty"`
	StartDate          *int64                    `json:"startDate,omitempty"`
	Status             *RuleRunDtoStatus         `json:"status,omitempty"`
	Type               *RuleRunDtoType           `json:"type,omitempty"`
	Values             *RuleRunValuesDto         `json:"values,omitempty"`
}

// RuleRunDtoIncidentStatus defines model for RuleRunDto.IncidentStatus.
type RuleRunDtoIncidentStatus string

// RuleRunDtoStatus defines model for RuleRunDto.Status.
type RuleRunDtoStatus string

// RuleRunDtoType defines model for RuleRunDto.Type.
type RuleRunDtoType string

// RuleRunExpectedValuesDto defines model for RuleRunExpectedValuesDto.
type RuleRunExpectedValuesDto struct {
	Max *float32 `json:"max,omitempty"`
	Min *float32 `json:"min,omitempty"`
}

// RuleRunValuesDto defines model for RuleRunValuesDto.
type RuleRunValuesDto struct {
	Actual   *float32                  `json:"actual,omitempty"`
	Expected *RuleRunExpectedValuesDto `json:"expected,omitempty"`
}

// RuleTemplateNameSearchFilterElementDto defines model for RuleTemplateNameSearchFilterElementDto.
type RuleTemplateNameSearchFilterElementDto struct {
	Id      *string `json:"id,omitempty"`
	Name    *string `json:"name,omitempty"`
	Results *int32  `json:"results,omitempty"`
}

// RulesAddedIncidentEventDto defines model for RulesAddedIncidentEventDto.
type RulesAddedIncidentEventDto struct {
	ChangedByUser *UserDto                        `json:"changedByUser,omitempty"`
	Date          int64                           `json:"date"`
	FirstDate     *int64                          `json:"firstDate,omitempty"`
	LastDate      *int64                          `json:"lastDate,omitempty"`
	Rules         *[]RuleBriefDto                 `json:"rules,omitempty"`
	Type          *RulesAddedIncidentEventDtoType `json:"type,omitempty"`
}

// RulesAddedIncidentEventDtoType defines model for RulesAddedIncidentEventDto.Type.
type RulesAddedIncidentEventDtoType string

// RulesMovedFromIncidentEventDto defines model for RulesMovedFromIncidentEventDto.
type RulesMovedFromIncidentEventDto struct {
	ChangedByUser *UserDto                            `json:"changedByUser,omitempty"`
	Date          int64                               `json:"date"`
	FirstDate     *int64                              `json:"firstDate,omitempty"`
	FromIncident  *IncidentLightDto                   `json:"fromIncident,omitempty"`
	LastDate      *int64                              `json:"lastDate,omitempty"`
	Rules         *[]RuleBriefDto                     `json:"rules,omitempty"`
	Type          *RulesMovedFromIncidentEventDtoType `json:"type,omitempty"`
}

// RulesMovedFromIncidentEventDtoType defines model for RulesMovedFromIncidentEventDto.Type.
type RulesMovedFromIncidentEventDtoType string

// RulesMovedToIncidentEventDto defines model for RulesMovedToIncidentEventDto.
type RulesMovedToIncidentEventDto struct {
	ChangedByUser *UserDto                          `json:"changedByUser,omitempty"`
	Date          int64                             `json:"date"`
	FirstDate     *int64                            `json:"firstDate,omitempty"`
	LastDate      *int64                            `json:"lastDate,omitempty"`
	Rules         *[]RuleBriefDto                   `json:"rules,omitempty"`
	ToIncident    *IncidentLightDto                 `json:"toIncident,omitempty"`
	Type          *RulesMovedToIncidentEventDtoType `json:"type,omitempty"`
}

// RulesMovedToIncidentEventDtoType defines model for RulesMovedToIncidentEventDto.Type.
type RulesMovedToIncidentEventDtoType string

// SearchCollectionDatasetLightDto defines model for SearchCollectionDatasetLightDto.
type SearchCollectionDatasetLightDto struct {
	Data          []DatasetLightDto `json:"data"`
	TotalElements *int64            `json:"totalElements,omitempty"`
}

// SearchCollectionDatasourceCatalogAssetDto defines model for SearchCollectionDatasourceCatalogAssetDto.
type SearchCollectionDatasourceCatalogAssetDto struct {
	Data          []DatasourceCatalogAssetDto `json:"data"`
	TotalElements *int64                      `json:"totalElements,omitempty"`
}

// SearchCollectionDatasourceIngestionRunDto defines model for SearchCollectionDatasourceIngestionRunDto.
type SearchCollectionDatasourceIngestionRunDto struct {
	Data          []DatasourceIngestionRunDto `json:"data"`
	TotalElements *int64                      `json:"totalElements,omitempty"`
}

// SearchCollectionDomainDto defines model for SearchCollectionDomainDto.
type SearchCollectionDomainDto struct {
	Data          []DomainDto `json:"data"`
	TotalElements *int64      `json:"totalElements,omitempty"`
}

// SearchCollectionFieldLevelSearchDto defines model for SearchCollectionFieldLevelSearchDto.
type SearchCollectionFieldLevelSearchDto struct {
	Data          []FieldLevelSearchDto `json:"data"`
	TotalElements *int64                `json:"totalElements,omitempty"`
}

// SearchCollectionFieldLevelSearchFieldDto defines model for SearchCollectionFieldLevelSearchFieldDto.
type SearchCollectionFieldLevelSearchFieldDto struct {
	Data          []FieldLevelSearchFieldDto `json:"data"`
	TotalElements *int64                     `json:"totalElements,omitempty"`
}

// SearchCollectionImpactedAssetDto defines model for SearchCollectionImpactedAssetDto.
type SearchCollectionImpactedAssetDto struct {
	Data          []ImpactedAssetDto `json:"data"`
	TotalElements *int64             `json:"totalElements,omitempty"`
}

// SearchCollectionIncidentEventDto defines model for SearchCollectionIncidentEventDto.
type SearchCollectionIncidentEventDto struct {
	Data          []SearchCollectionIncidentEventDto_Data_Item `json:"data"`
	TotalElements *int64                                       `json:"totalElements,omitempty"`
}

// SearchCollectionIncidentEventDto_Data_Item defines model for SearchCollectionIncidentEventDto.data.Item.
type SearchCollectionIncidentEventDto_Data_Item struct {
	union json.RawMessage
}

// SearchCollectionIncidentLightDto defines model for SearchCollectionIncidentLightDto.
type SearchCollectionIncidentLightDto struct {
	Data          []IncidentLightDto `json:"data"`
	TotalElements *int64             `json:"totalElements,omitempty"`
}

// SearchCollectionRuleRunDetailsByGroupDto defines model for SearchCollectionRuleRunDetailsByGroupDto.
type SearchCollectionRuleRunDetailsByGroupDto struct {
	Data          []RuleRunDetailsByGroupDto `json:"data"`
	TotalElements *int64                     `json:"totalElements,omitempty"`
}

// SearchCollectionTagDto defines model for SearchCollectionTagDto.
type SearchCollectionTagDto struct {
	Data          []TagDto `json:"data"`
	TotalElements *int64   `json:"totalElements,omitempty"`
}

// SecretDto defines model for SecretDto.
type SecretDto struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	Value       *string `json:"value,omitempty"`
}

// SeverityChangeIncidentEventDto defines model for SeverityChangeIncidentEventDto.
type SeverityChangeIncidentEventDto struct {
	ChangedByUser *UserDto                                   `json:"changedByUser,omitempty"`
	Date          int64                                      `json:"date"`
	FirstDate     *int64                                     `json:"firstDate,omitempty"`
	LastDate      *int64                                     `json:"lastDate,omitempty"`
	NewSeverity   *SeverityChangeIncidentEventDtoNewSeverity `json:"newSeverity,omitempty"`
	OldSeverity   *SeverityChangeIncidentEventDtoOldSeverity `json:"oldSeverity,omitempty"`
	Type          *SeverityChangeIncidentEventDtoType        `json:"type,omitempty"`
}

// SeverityChangeIncidentEventDtoNewSeverity defines model for SeverityChangeIncidentEventDto.NewSeverity.
type SeverityChangeIncidentEventDtoNewSeverity string

// SeverityChangeIncidentEventDtoOldSeverity defines model for SeverityChangeIncidentEventDto.OldSeverity.
type SeverityChangeIncidentEventDtoOldSeverity string

// SeverityChangeIncidentEventDtoType defines model for SeverityChangeIncidentEventDto.Type.
type SeverityChangeIncidentEventDtoType string

// SnowflakeParams defines model for SnowflakeParams.
type SnowflakeParams struct {
	AccountIdentifier *string     `json:"accountIdentifier,omitempty"`
	Database          *string     `json:"database,omitempty"`
	Schema            *string     `json:"schema,omitempty"`
	TimezoneData      TimeZoneDto `json:"timezoneData"`
	Type              string      `json:"type"`
	Warehouse         *string     `json:"warehouse,omitempty"`
}

// StatusChangeIncidentEventDto defines model for StatusChangeIncidentEventDto.
type StatusChangeIncidentEventDto struct {
	ChangedByUser    *UserDto                                      `json:"changedByUser,omitempty"`
	Date             int64                                         `json:"date"`
	FirstDate        *int64                                        `json:"firstDate,omitempty"`
	LastDate         *int64                                        `json:"lastDate,omitempty"`
	NewQualification *StatusChangeIncidentEventDtoNewQualification `json:"newQualification"`
	NewStatus        *StatusChangeIncidentEventDtoNewStatus        `json:"newStatus,omitempty"`
	OldQualification *StatusChangeIncidentEventDtoOldQualification `json:"oldQualification"`
	OldStatus        *StatusChangeIncidentEventDtoOldStatus        `json:"oldStatus,omitempty"`
	Type             *StatusChangeIncidentEventDtoType             `json:"type,omitempty"`
}

// StatusChangeIncidentEventDtoNewQualification defines model for StatusChangeIncidentEventDto.NewQualification.
type StatusChangeIncidentEventDtoNewQualification string

// StatusChangeIncidentEventDtoNewStatus defines model for StatusChangeIncidentEventDto.NewStatus.
type StatusChangeIncidentEventDtoNewStatus string

// StatusChangeIncidentEventDtoOldQualification defines model for StatusChangeIncidentEventDto.OldQualification.
type StatusChangeIncidentEventDtoOldQualification string

// StatusChangeIncidentEventDtoOldStatus defines model for StatusChangeIncidentEventDto.OldStatus.
type StatusChangeIncidentEventDtoOldStatus string

// StatusChangeIncidentEventDtoType defines model for StatusChangeIncidentEventDto.Type.
type StatusChangeIncidentEventDtoType string

// StronglyTypedRuleInputParams defines model for StronglyTypedRuleInputParams.
type StronglyTypedRuleInputParams struct {
	DatasetFieldName     *string   `json:"datasetFieldName,omitempty"`
	DatasetFieldNames    *[]string `json:"datasetFieldNames,omitempty"`
	EndValue             *int32    `json:"endValue,omitempty"`
	GroupByFields        *[]string `json:"groupByFields,omitempty"`
	HasGroupBy           *bool     `json:"hasGroupBy,omitempty"`
	HasOffset            *bool     `json:"hasOffset,omitempty"`
	HasTimeWindow        *bool     `json:"hasTimeWindow,omitempty"`
	HasWhereStatement    *bool     `json:"hasWhereStatement,omitempty"`
	IsPartitionQuery     *bool     `json:"isPartitionQuery,omitempty"`
	PartitioningField    *string   `json:"partitioningField,omitempty"`
	PartitioningInterval *int32    `json:"partitioningInterval,omitempty"`
	PartitioningTimeUnit *string   `json:"partitioningTimeUnit,omitempty"`
	StartValue           *int32    `json:"startValue,omitempty"`
	TimeWindowField      *string   `json:"timeWindowField,omitempty"`
	TransformationType   *string   `json:"transformationType,omitempty"`
	WhereStatement       *string   `json:"whereStatement,omitempty"`
}

// SynapseParams defines model for SynapseParams.
type SynapseParams struct {
	Database     *string     `json:"database,omitempty"`
	Host         *string     `json:"host,omitempty"`
	Port         *int32      `json:"port,omitempty"`
	Schema       *string     `json:"schema,omitempty"`
	TimezoneData TimeZoneDto `json:"timezoneData"`
	Type         string      `json:"type"`
}

// TableauParams defines model for TableauParams.
type TableauParams struct {
	Host         *string     `json:"host,omitempty"`
	Site         *string     `json:"site,omitempty"`
	TimezoneData TimeZoneDto `json:"timezoneData"`
	Type         string      `json:"type"`
}

// TagCreateDto defines model for TagCreateDto.
type TagCreateDto struct {
	Description *string          `json:"description,omitempty"`
	Name        string           `json:"name"`
	Type        TagCreateDtoType `json:"type"`
}

// TagCreateDtoType defines model for TagCreateDto.Type.
type TagCreateDtoType string

// TagDto defines model for TagDto.
type TagDto struct {
	CreatedBy        *string            `json:"createdBy,omitempty"`
	CreatedDate      *int64             `json:"createdDate,omitempty"`
	Description      *string            `json:"description,omitempty"`
	Editable         *bool              `json:"editable,omitempty"`
	Id               openapi_types.UUID `json:"id"`
	LastModifiedDate *int64             `json:"lastModifiedDate,omitempty"`
	ModifiedBy       *string            `json:"modifiedBy,omitempty"`
	Name             string             `json:"name"`
	Type             TagDtoType         `json:"type"`
}

// TagDtoType defines model for TagDto.Type.
type TagDtoType string

// TagSearchFilterElementDto defines model for TagSearchFilterElementDto.
type TagSearchFilterElementDto struct {
	Id      *openapi_types.UUID            `json:"id,omitempty"`
	Name    *string                        `json:"name,omitempty"`
	Results *int32                         `json:"results,omitempty"`
	Type    *TagSearchFilterElementDtoType `json:"type,omitempty"`
}

// TagSearchFilterElementDtoType defines model for TagSearchFilterElementDto.Type.
type TagSearchFilterElementDtoType string

// TagUpdateDto defines model for TagUpdateDto.
type TagUpdateDto struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// TimeWindow defines model for TimeWindow.
type TimeWindow struct {
	HasOffset           *bool   `json:"hasOffset,omitempty"`
	HasTimeWindow       *bool   `json:"hasTimeWindow,omitempty"`
	OffsetUnit          *string `json:"offsetUnit,omitempty"`
	OffsetValue         *int32  `json:"offsetValue,omitempty"`
	TimeWindowField     *string `json:"timeWindowField,omitempty"`
	TimeWindowFieldType *string `json:"timeWindowFieldType,omitempty"`
	TimeWindowLast      *int32  `json:"timeWindowLast,omitempty"`
	TimeWindowUnit      *string `json:"timeWindowUnit,omitempty"`
}

// TimeZoneDto defines model for TimeZoneDto.
type TimeZoneDto struct {
	Timezone  string `json:"timezone"`
	UtcOffset string `json:"utcOffset"`
}

// TransformationAssetDto defines model for TransformationAssetDto.
type TransformationAssetDto struct {
	ConnectorStatus          *string                                    `json:"connectorStatus,omitempty"`
	CreatedBy                *string                                    `json:"createdBy,omitempty"`
	CreatedDate              *int64                                     `json:"createdDate,omitempty"`
	DestinationPlatform      *TransformationAssetDtoDestinationPlatform `json:"destinationPlatform,omitempty"`
	DestinationPlatformLabel *string                                    `json:"destinationPlatformLabel,omitempty"`
	LastSuccessfulRunDate    *int64                                     `json:"lastSuccessfulRunDate,omitempty"`
	RunFrequencySeconds      *int32                                     `json:"runFrequencySeconds,omitempty"`
	SourcePlatform           *TransformationAssetDtoSourcePlatform      `json:"sourcePlatform,omitempty"`
	SourcePlatformLabel      *string                                    `json:"sourcePlatformLabel,omitempty"`
}

// TransformationAssetDtoDestinationPlatform defines model for TransformationAssetDto.DestinationPlatform.
type TransformationAssetDtoDestinationPlatform string

// TransformationAssetDtoSourcePlatform defines model for TransformationAssetDto.SourcePlatform.
type TransformationAssetDtoSourcePlatform string

// TransformationAssetOverview defines model for TransformationAssetOverview.
type TransformationAssetOverview struct {
	Details                *TransformationAssetOverview_Details `json:"details,omitempty"`
	Id                     *openapi_types.UUID                  `json:"id,omitempty"`
	TransformationAssetDto *TransformationAssetDto              `json:"transformationAssetDto,omitempty"`
	Type                   *TransformationAssetOverviewType     `json:"type,omitempty"`
	Urn                    *string                              `json:"urn,omitempty"`
}

// TransformationAssetOverview_Details defines model for TransformationAssetOverview.Details.
type TransformationAssetOverview_Details struct {
	union json.RawMessage
}

// TransformationAssetOverviewType defines model for TransformationAssetOverview.Type.
type TransformationAssetOverviewType string

// UnknownDatasourceParams defines model for UnknownDatasourceParams.
type UnknownDatasourceParams = DatasourceParams

// UpdateDomainRequestDto defines model for UpdateDomainRequestDto.
type UpdateDomainRequestDto struct {
	Assets      []string `json:"assets"`
	Description *string  `json:"description,omitempty"`
	Name        string   `json:"name"`
}

// UpstreamOfFieldDto defines model for UpstreamOfFieldDto.
type UpstreamOfFieldDto struct {
	Type *UpstreamOfFieldDtoType `json:"type,omitempty"`
}

// UpstreamOfFieldDtoType defines model for UpstreamOfFieldDto.Type.
type UpstreamOfFieldDtoType string

// UsagePerDatasourceUserDto defines model for UsagePerDatasourceUserDto.
type UsagePerDatasourceUserDto struct {
	CountRead int64  `json:"countRead"`
	UserName  string `json:"userName"`
}

// UsageSearchFilterElementDto defines model for UsageSearchFilterElementDto.
type UsageSearchFilterElementDto struct {
	Id      *UsageSearchFilterElementDtoId `json:"id,omitempty"`
	Results *int32                         `json:"results,omitempty"`
}

// UsageSearchFilterElementDtoId defines model for UsageSearchFilterElementDto.Id.
type UsageSearchFilterElementDtoId string

// UserDto defines model for UserDto.
type UserDto struct {
	Id    *openapi_types.UUID `json:"id,omitempty"`
	Login *string             `json:"login,omitempty"`
	Name  *string             `json:"name,omitempty"`
}

// UserProviderDto defines model for UserProviderDto.
type UserProviderDto struct {
	Name *string              `json:"name,omitempty"`
	Type *UserProviderDtoType `json:"type,omitempty"`
}

// UserProviderDtoType defines model for UserProviderDto.Type.
type UserProviderDtoType string

// UuidSearchFilterElementDto defines model for UuidSearchFilterElementDto.
type UuidSearchFilterElementDto struct {
	Id      *openapi_types.UUID `json:"id,omitempty"`
	Name    *string             `json:"name,omitempty"`
	Results *int32              `json:"results,omitempty"`
}

// ExportAssetDescriptionsParams defines parameters for ExportAssetDescriptions.
type ExportAssetDescriptionsParams struct {
	// Sort The resource fields on which to apply the sort, format : property,ASC|DESC
	Sort *[]string `form:"sort,omitempty" json:"sort,omitempty"`

	// TextSearch Global text search
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// HealthStatus Filter on given health statuses
	HealthStatus *[]ExportAssetDescriptionsParamsHealthStatus `form:"healthStatus,omitempty" json:"healthStatus,omitempty"`

	// AssetFilterType Filter on given asset types
	AssetFilterType *[]string `form:"assetFilterType,omitempty" json:"assetFilterType,omitempty"`

	// Usage Filter on given usage types
	Usage *[]ExportAssetDescriptionsParamsUsage `form:"usage,omitempty" json:"usage,omitempty"`

	// Tag Filter on given tag ids
	Tag *[]openapi_types.UUID `form:"tag,omitempty" json:"tag,omitempty"`

	// Term Filter on given term ids
	Term *[]openapi_types.UUID `form:"term,omitempty" json:"term,omitempty"`

	// Owner Filter on given owner ids
	Owner *[]openapi_types.UUID `form:"owner,omitempty" json:"owner,omitempty"`

	// Ingestion Filter on given asset ingestion
	Ingestion *[]ExportAssetDescriptionsParamsIngestion `form:"ingestion,omitempty" json:"ingestion,omitempty"`

	// Datasource Filter on given datasource ids
	Datasource *[]openapi_types.UUID `form:"datasource,omitempty" json:"datasource,omitempty"`

	// Urn Filter on given assets urn
	Urn *[]string `form:"urn,omitempty" json:"urn,omitempty"`

	// Domain Domain searched
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`

	// SearchInFieldsAndDescriptions Search on fields and field descriptions
	SearchInFieldsAndDescriptions *bool `form:"searchInFieldsAndDescriptions,omitempty" json:"searchInFieldsAndDescriptions,omitempty"`

	// Page The requested page number. Zero-based page index (0..N)
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// ItemsPerPage The number of elements to be returned inside the page. Pass a value of -1, to bypass pagination and fetch all items
	ItemsPerPage *int32 `form:"itemsPerPage,omitempty" json:"itemsPerPage,omitempty"`
}

// ExportAssetDescriptionsParamsHealthStatus defines parameters for ExportAssetDescriptions.
type ExportAssetDescriptionsParamsHealthStatus string

// ExportAssetDescriptionsParamsUsage defines parameters for ExportAssetDescriptions.
type ExportAssetDescriptionsParamsUsage string

// ExportAssetDescriptionsParamsIngestion defines parameters for ExportAssetDescriptions.
type ExportAssetDescriptionsParamsIngestion string

// GetAllDatasetParams defines parameters for GetAllDataset.
type GetAllDatasetParams struct {
	// TextSearch Global text search
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// Urn Filter on given urns
	Urn *[]string `form:"urn,omitempty" json:"urn,omitempty"`

	// Domain Domain searched
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`

	// Page The requested page number. Zero-based page index (0..N)
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// ItemsPerPage The number of elements to be returned inside the page. Pass a value of -1, to bypass pagination and fetch all items
	ItemsPerPage *int32 `form:"itemsPerPage,omitempty" json:"itemsPerPage,omitempty"`

	// Sort The resource fields on which to apply the sort, format : property,ASC|DESC
	Sort *[]string `form:"sort,omitempty" json:"sort,omitempty"`
}

// GetAllDatasourceParams defines parameters for GetAllDatasource.
type GetAllDatasourceParams struct {
	// TextSearch Global text search
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// Tag Filter on given tag ids
	Tag *[]openapi_types.UUID `form:"tag,omitempty" json:"tag,omitempty"`

	// Technology Filter on given datasource types
	Technology *[]string `form:"technology,omitempty" json:"technology,omitempty"`

	// Ingestion Filter on given ingestion
	Ingestion *[]GetAllDatasourceParamsIngestion `form:"ingestion,omitempty" json:"ingestion,omitempty"`

	// Page The requested page number. Zero-based page index (0..N)
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// ItemsPerPage The number of elements to be returned inside the page. Pass a value of -1, to bypass pagination and fetch all items
	ItemsPerPage *int32 `form:"itemsPerPage,omitempty" json:"itemsPerPage,omitempty"`

	// Sort The resource fields on which to apply the sort, format : property,ASC|DESC
	Sort *[]string `form:"sort,omitempty" json:"sort,omitempty"`
}

// GetAllDatasourceParamsIngestion defines parameters for GetAllDatasource.
type GetAllDatasourceParamsIngestion string

// GetDatasourceIngestionRunsParams defines parameters for GetDatasourceIngestionRuns.
type GetDatasourceIngestionRunsParams struct {
	// Page The requested page number. Zero-based page index (0..N)
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// ItemsPerPage The number of elements to be returned inside the page. Pass a value of -1, to bypass pagination and fetch all items
	ItemsPerPage *int32 `form:"itemsPerPage,omitempty" json:"itemsPerPage,omitempty"`

	// Sort The resource fields on which to apply the sort, format : property,ASC|DESC
	Sort *[]string `form:"sort,omitempty" json:"sort,omitempty"`
}

// GetAllDomainsParams defines parameters for GetAllDomains.
type GetAllDomainsParams struct {
	// TextSearch Global text search
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// Page The requested page number. Zero-based page index (0..N)
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// ItemsPerPage The number of elements to be returned inside the page. Pass a value of -1, to bypass pagination and fetch all items
	ItemsPerPage *int32 `form:"itemsPerPage,omitempty" json:"itemsPerPage,omitempty"`

	// Sort The resource fields on which to apply the sort, format : property,ASC|DESC
	Sort *[]string `form:"sort,omitempty" json:"sort,omitempty"`
}

// GetDownstreamImpactedAssetsParams defines parameters for GetDownstreamImpactedAssets.
type GetDownstreamImpactedAssetsParams struct {
	// IssueNo Retrieve impacted assets related to a given incident
	IssueNo *int32 `form:"issueNo,omitempty" json:"issueNo,omitempty"`

	// Page The requested page number. Zero-based page index (0..N)
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// ItemsPerPage The number of elements to be returned inside the page. Pass a value of -1, to bypass pagination and fetch all items
	ItemsPerPage *int32 `form:"itemsPerPage,omitempty" json:"itemsPerPage,omitempty"`

	// Sort The resource fields on which to apply the sort, format : property,ASC|DESC
	Sort *[]string `form:"sort,omitempty" json:"sort,omitempty"`
}

// SiffletRuleRunDownloadByRunParams defines parameters for SiffletRuleRunDownloadByRun.
type SiffletRuleRunDownloadByRunParams struct {
	ExportFormat *SiffletRuleRunDownloadByRunParamsExportFormat `form:"exportFormat,omitempty" json:"exportFormat,omitempty"`
}

// SiffletRuleRunDownloadByRunParamsExportFormat defines parameters for SiffletRuleRunDownloadByRun.
type SiffletRuleRunDownloadByRunParamsExportFormat string

// GetSiffletRuleRunDetailsParams defines parameters for GetSiffletRuleRunDetails.
type GetSiffletRuleRunDetailsParams struct {
	// TextSearch Global text search
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// Page The requested page number. Zero-based page index (0..N)
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// ItemsPerPage The number of elements to be returned inside the page. Pass a value of -1, to bypass pagination and fetch all items
	ItemsPerPage *int32 `form:"itemsPerPage,omitempty" json:"itemsPerPage,omitempty"`

	// Sort The resource fields on which to apply the sort, format : property,ASC|DESC
	Sort *[]string `form:"sort,omitempty" json:"sort,omitempty"`
}

// DeleteSecretParams defines parameters for DeleteSecret.
type DeleteSecretParams struct {
	Name string `form:"name" json:"name"`
}

// GetSecretParams defines parameters for GetSecret.
type GetSecretParams struct {
	Name string `form:"name" json:"name"`
}

// GetDataStackParams defines parameters for GetDataStack.
type GetDataStackParams struct {
	// Domain Domain used for stats
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`

	// Tag UUIDs of Tags used for stats
	Tag *[]openapi_types.UUID `form:"tag,omitempty" json:"tag,omitempty"`
}

// GetIncidentsSummaryParams defines parameters for GetIncidentsSummary.
type GetIncidentsSummaryParams struct {
	// Domain Domain used for stats
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`

	// Tag UUIDs of Tags used for stats
	Tag *[]openapi_types.UUID `form:"tag,omitempty" json:"tag,omitempty"`
}

// GetRulesSummaryParams defines parameters for GetRulesSummary.
type GetRulesSummaryParams struct {
	// Domain Domain used for stats
	Domain *string `form:"domain,omitempty" json:"domain,omitempty"`

	// Tag UUIDs of Tags used for stats
	Tag *[]openapi_types.UUID `form:"tag,omitempty" json:"tag,omitempty"`
}

// GetAllTagParams defines parameters for GetAllTag.
type GetAllTagParams struct {
	// Type Filter on given tag types
	Type *[]GetAllTagParamsType `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch Global text search
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// Page The requested page number. Zero-based page index (0..N)
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// ItemsPerPage The number of elements to be returned inside the page. Pass a value of -1, to bypass pagination and fetch all items
	ItemsPerPage *int32 `form:"itemsPerPage,omitempty" json:"itemsPerPage,omitempty"`

	// Sort The resource fields on which to apply the sort, format : property,ASC|DESC
	Sort *[]string `form:"sort,omitempty" json:"sort,omitempty"`
}

// GetAllTagParamsType defines parameters for GetAllTag.
type GetAllTagParamsType string

// GetAllTermParams defines parameters for GetAllTerm.
type GetAllTermParams struct {
	// TextSearch Global text search
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// Page The requested page number. Zero-based page index (0..N)
	Page *int32 `form:"page,omitempty" json:"page,omitempty"`

	// ItemsPerPage The number of elements to be returned inside the page. Pass a value of -1, to bypass pagination and fetch all items
	ItemsPerPage *int32 `form:"itemsPerPage,omitempty" json:"itemsPerPage,omitempty"`

	// Sort The resource fields on which to apply the sort, format : property,ASC|DESC
	Sort *[]string `form:"sort,omitempty" json:"sort,omitempty"`
}

// GetAllAssetsJSONRequestBody defines body for GetAllAssets for application/json ContentType.
type GetAllAssetsJSONRequestBody = AssetSearchCriteria

// GetDashboardByTypeAndSourceUrlJSONRequestBody defines body for GetDashboardByTypeAndSourceUrl for application/json ContentType.
type GetDashboardByTypeAndSourceUrlJSONRequestBody = GetDashboardWithIncidentsRequestDto

// UpdateDatasetFieldJSONRequestBody defines body for UpdateDatasetField for application/json ContentType.
type UpdateDatasetFieldJSONRequestBody = DatasetFieldPatchDto

// CreateDatasourceJSONRequestBody defines body for CreateDatasource for application/json ContentType.
type CreateDatasourceJSONRequestBody = CreateDatasourceDto

// TestDatasourceConnectionJSONRequestBody defines body for TestDatasourceConnection for application/json ContentType.
type TestDatasourceConnectionJSONRequestBody = DatasourceDto

// CreateDomainUiJSONRequestBody defines body for CreateDomainUi for application/json ContentType.
type CreateDomainUiJSONRequestBody = CreateDomainRequestDto

// UpdateDomainUiJSONRequestBody defines body for UpdateDomainUi for application/json ContentType.
type UpdateDomainUiJSONRequestBody = UpdateDomainRequestDto

// GetAllIncidentJSONRequestBody defines body for GetAllIncident for application/json ContentType.
type GetAllIncidentJSONRequestBody = IncidentSearchCriteria

// SiffletRuleRunDebugJSONRequestBody defines body for SiffletRuleRunDebug for application/json ContentType.
type SiffletRuleRunDebugJSONRequestBody = RuleGroupRequestDto

// SiffletRuleRunDownloadByRunJSONRequestBody defines body for SiffletRuleRunDownloadByRun for application/json ContentType.
type SiffletRuleRunDownloadByRunJSONRequestBody = RuleGroupRequestDto

// CreateTagJSONRequestBody defines body for CreateTag for application/json ContentType.
type CreateTagJSONRequestBody = TagCreateDto

// UpdateTagJSONRequestBody defines body for UpdateTag for application/json ContentType.
type UpdateTagJSONRequestBody = TagUpdateDto

// CreateTermJSONRequestBody defines body for CreateTerm for application/json ContentType.
type CreateTermJSONRequestBody = TagCreateDto

// UpdateTermJSONRequestBody defines body for UpdateTerm for application/json ContentType.
type UpdateTermJSONRequestBody = TagUpdateDto

// TestSourceConnectionJSONRequestBody defines body for TestSourceConnection for application/json ContentType.
type TestSourceConnectionJSONRequestBody = PublicCreateSourceDto

// AsAssetDetailsDto returns the union data inside the AssetOverview_Details as a AssetDetailsDto
func (t AssetOverview_Details) AsAssetDetailsDto() (AssetDetailsDto, error) {
	var body AssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetDetailsDto overwrites any union data inside the AssetOverview_Details as the provided AssetDetailsDto
func (t *AssetOverview_Details) FromAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetDetailsDto performs a merge with any union data inside the AssetOverview_Details, using the provided AssetDetailsDto
func (t *AssetOverview_Details) MergeAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDagDetailsDto returns the union data inside the AssetOverview_Details as a DagDetailsDto
func (t AssetOverview_Details) AsDagDetailsDto() (DagDetailsDto, error) {
	var body DagDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDagDetailsDto overwrites any union data inside the AssetOverview_Details as the provided DagDetailsDto
func (t *AssetOverview_Details) FromDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDagDetailsDto performs a merge with any union data inside the AssetOverview_Details, using the provided DagDetailsDto
func (t *AssetOverview_Details) MergeDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatasetDetailsDto returns the union data inside the AssetOverview_Details as a DatasetDetailsDto
func (t AssetOverview_Details) AsDatasetDetailsDto() (DatasetDetailsDto, error) {
	var body DatasetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatasetDetailsDto overwrites any union data inside the AssetOverview_Details as the provided DatasetDetailsDto
func (t *AssetOverview_Details) FromDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatasetDetailsDto performs a merge with any union data inside the AssetOverview_Details, using the provided DatasetDetailsDto
func (t *AssetOverview_Details) MergeDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeclaredAssetDetailsDto returns the union data inside the AssetOverview_Details as a DeclaredAssetDetailsDto
func (t AssetOverview_Details) AsDeclaredAssetDetailsDto() (DeclaredAssetDetailsDto, error) {
	var body DeclaredAssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeclaredAssetDetailsDto overwrites any union data inside the AssetOverview_Details as the provided DeclaredAssetDetailsDto
func (t *AssetOverview_Details) FromDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeclaredAssetDetailsDto performs a merge with any union data inside the AssetOverview_Details, using the provided DeclaredAssetDetailsDto
func (t *AssetOverview_Details) MergeDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t AssetOverview_Details) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *AssetOverview_Details) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsBaseSearchFilterElementDto returns the union data inside the BaseSearchFilterDto_Children_Item as a BaseSearchFilterElementDto
func (t BaseSearchFilterDto_Children_Item) AsBaseSearchFilterElementDto() (BaseSearchFilterElementDto, error) {
	var body BaseSearchFilterElementDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBaseSearchFilterElementDto overwrites any union data inside the BaseSearchFilterDto_Children_Item as the provided BaseSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) FromBaseSearchFilterElementDto(v BaseSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBaseSearchFilterElementDto performs a merge with any union data inside the BaseSearchFilterDto_Children_Item, using the provided BaseSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) MergeBaseSearchFilterElementDto(v BaseSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAssetIngestionSearchFilterElementDto returns the union data inside the BaseSearchFilterDto_Children_Item as a AssetIngestionSearchFilterElementDto
func (t BaseSearchFilterDto_Children_Item) AsAssetIngestionSearchFilterElementDto() (AssetIngestionSearchFilterElementDto, error) {
	var body AssetIngestionSearchFilterElementDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetIngestionSearchFilterElementDto overwrites any union data inside the BaseSearchFilterDto_Children_Item as the provided AssetIngestionSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) FromAssetIngestionSearchFilterElementDto(v AssetIngestionSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetIngestionSearchFilterElementDto performs a merge with any union data inside the BaseSearchFilterDto_Children_Item, using the provided AssetIngestionSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) MergeAssetIngestionSearchFilterElementDto(v AssetIngestionSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAssetSearchFilterElementDto returns the union data inside the BaseSearchFilterDto_Children_Item as a AssetSearchFilterElementDto
func (t BaseSearchFilterDto_Children_Item) AsAssetSearchFilterElementDto() (AssetSearchFilterElementDto, error) {
	var body AssetSearchFilterElementDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetSearchFilterElementDto overwrites any union data inside the BaseSearchFilterDto_Children_Item as the provided AssetSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) FromAssetSearchFilterElementDto(v AssetSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetSearchFilterElementDto performs a merge with any union data inside the BaseSearchFilterDto_Children_Item, using the provided AssetSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) MergeAssetSearchFilterElementDto(v AssetSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCriticalitySearchFilterElementDto returns the union data inside the BaseSearchFilterDto_Children_Item as a CriticalitySearchFilterElementDto
func (t BaseSearchFilterDto_Children_Item) AsCriticalitySearchFilterElementDto() (CriticalitySearchFilterElementDto, error) {
	var body CriticalitySearchFilterElementDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCriticalitySearchFilterElementDto overwrites any union data inside the BaseSearchFilterDto_Children_Item as the provided CriticalitySearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) FromCriticalitySearchFilterElementDto(v CriticalitySearchFilterElementDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCriticalitySearchFilterElementDto performs a merge with any union data inside the BaseSearchFilterDto_Children_Item, using the provided CriticalitySearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) MergeCriticalitySearchFilterElementDto(v CriticalitySearchFilterElementDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatasetSearchFilterElementDto returns the union data inside the BaseSearchFilterDto_Children_Item as a DatasetSearchFilterElementDto
func (t BaseSearchFilterDto_Children_Item) AsDatasetSearchFilterElementDto() (DatasetSearchFilterElementDto, error) {
	var body DatasetSearchFilterElementDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatasetSearchFilterElementDto overwrites any union data inside the BaseSearchFilterDto_Children_Item as the provided DatasetSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) FromDatasetSearchFilterElementDto(v DatasetSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatasetSearchFilterElementDto performs a merge with any union data inside the BaseSearchFilterDto_Children_Item, using the provided DatasetSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) MergeDatasetSearchFilterElementDto(v DatasetSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsHealthStatusSearchFilterElementDto returns the union data inside the BaseSearchFilterDto_Children_Item as a HealthStatusSearchFilterElementDto
func (t BaseSearchFilterDto_Children_Item) AsHealthStatusSearchFilterElementDto() (HealthStatusSearchFilterElementDto, error) {
	var body HealthStatusSearchFilterElementDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHealthStatusSearchFilterElementDto overwrites any union data inside the BaseSearchFilterDto_Children_Item as the provided HealthStatusSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) FromHealthStatusSearchFilterElementDto(v HealthStatusSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHealthStatusSearchFilterElementDto performs a merge with any union data inside the BaseSearchFilterDto_Children_Item, using the provided HealthStatusSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) MergeHealthStatusSearchFilterElementDto(v HealthStatusSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsOwnerSearchFilterElementDto returns the union data inside the BaseSearchFilterDto_Children_Item as a OwnerSearchFilterElementDto
func (t BaseSearchFilterDto_Children_Item) AsOwnerSearchFilterElementDto() (OwnerSearchFilterElementDto, error) {
	var body OwnerSearchFilterElementDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromOwnerSearchFilterElementDto overwrites any union data inside the BaseSearchFilterDto_Children_Item as the provided OwnerSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) FromOwnerSearchFilterElementDto(v OwnerSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeOwnerSearchFilterElementDto performs a merge with any union data inside the BaseSearchFilterDto_Children_Item, using the provided OwnerSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) MergeOwnerSearchFilterElementDto(v OwnerSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPlatformSearchFilterElementDto returns the union data inside the BaseSearchFilterDto_Children_Item as a PlatformSearchFilterElementDto
func (t BaseSearchFilterDto_Children_Item) AsPlatformSearchFilterElementDto() (PlatformSearchFilterElementDto, error) {
	var body PlatformSearchFilterElementDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPlatformSearchFilterElementDto overwrites any union data inside the BaseSearchFilterDto_Children_Item as the provided PlatformSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) FromPlatformSearchFilterElementDto(v PlatformSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePlatformSearchFilterElementDto performs a merge with any union data inside the BaseSearchFilterDto_Children_Item, using the provided PlatformSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) MergePlatformSearchFilterElementDto(v PlatformSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPlatformTypeSearchFilterElementDto returns the union data inside the BaseSearchFilterDto_Children_Item as a PlatformTypeSearchFilterElementDto
func (t BaseSearchFilterDto_Children_Item) AsPlatformTypeSearchFilterElementDto() (PlatformTypeSearchFilterElementDto, error) {
	var body PlatformTypeSearchFilterElementDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPlatformTypeSearchFilterElementDto overwrites any union data inside the BaseSearchFilterDto_Children_Item as the provided PlatformTypeSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) FromPlatformTypeSearchFilterElementDto(v PlatformTypeSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePlatformTypeSearchFilterElementDto performs a merge with any union data inside the BaseSearchFilterDto_Children_Item, using the provided PlatformTypeSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) MergePlatformTypeSearchFilterElementDto(v PlatformTypeSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRuleTemplateNameSearchFilterElementDto returns the union data inside the BaseSearchFilterDto_Children_Item as a RuleTemplateNameSearchFilterElementDto
func (t BaseSearchFilterDto_Children_Item) AsRuleTemplateNameSearchFilterElementDto() (RuleTemplateNameSearchFilterElementDto, error) {
	var body RuleTemplateNameSearchFilterElementDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRuleTemplateNameSearchFilterElementDto overwrites any union data inside the BaseSearchFilterDto_Children_Item as the provided RuleTemplateNameSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) FromRuleTemplateNameSearchFilterElementDto(v RuleTemplateNameSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRuleTemplateNameSearchFilterElementDto performs a merge with any union data inside the BaseSearchFilterDto_Children_Item, using the provided RuleTemplateNameSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) MergeRuleTemplateNameSearchFilterElementDto(v RuleTemplateNameSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsTagSearchFilterElementDto returns the union data inside the BaseSearchFilterDto_Children_Item as a TagSearchFilterElementDto
func (t BaseSearchFilterDto_Children_Item) AsTagSearchFilterElementDto() (TagSearchFilterElementDto, error) {
	var body TagSearchFilterElementDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromTagSearchFilterElementDto overwrites any union data inside the BaseSearchFilterDto_Children_Item as the provided TagSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) FromTagSearchFilterElementDto(v TagSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeTagSearchFilterElementDto performs a merge with any union data inside the BaseSearchFilterDto_Children_Item, using the provided TagSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) MergeTagSearchFilterElementDto(v TagSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsUsageSearchFilterElementDto returns the union data inside the BaseSearchFilterDto_Children_Item as a UsageSearchFilterElementDto
func (t BaseSearchFilterDto_Children_Item) AsUsageSearchFilterElementDto() (UsageSearchFilterElementDto, error) {
	var body UsageSearchFilterElementDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromUsageSearchFilterElementDto overwrites any union data inside the BaseSearchFilterDto_Children_Item as the provided UsageSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) FromUsageSearchFilterElementDto(v UsageSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeUsageSearchFilterElementDto performs a merge with any union data inside the BaseSearchFilterDto_Children_Item, using the provided UsageSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) MergeUsageSearchFilterElementDto(v UsageSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsUuidSearchFilterElementDto returns the union data inside the BaseSearchFilterDto_Children_Item as a UuidSearchFilterElementDto
func (t BaseSearchFilterDto_Children_Item) AsUuidSearchFilterElementDto() (UuidSearchFilterElementDto, error) {
	var body UuidSearchFilterElementDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromUuidSearchFilterElementDto overwrites any union data inside the BaseSearchFilterDto_Children_Item as the provided UuidSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) FromUuidSearchFilterElementDto(v UuidSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeUuidSearchFilterElementDto performs a merge with any union data inside the BaseSearchFilterDto_Children_Item, using the provided UuidSearchFilterElementDto
func (t *BaseSearchFilterDto_Children_Item) MergeUuidSearchFilterElementDto(v UuidSearchFilterElementDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t BaseSearchFilterDto_Children_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *BaseSearchFilterDto_Children_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAirflowParams returns the union data inside the CreateDatasourceDto_Params as a AirflowParams
func (t CreateDatasourceDto_Params) AsAirflowParams() (AirflowParams, error) {
	var body AirflowParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAirflowParams overwrites any union data inside the CreateDatasourceDto_Params as the provided AirflowParams
func (t *CreateDatasourceDto_Params) FromAirflowParams(v AirflowParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAirflowParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided AirflowParams
func (t *CreateDatasourceDto_Params) MergeAirflowParams(v AirflowParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAthenaParams returns the union data inside the CreateDatasourceDto_Params as a AthenaParams
func (t CreateDatasourceDto_Params) AsAthenaParams() (AthenaParams, error) {
	var body AthenaParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAthenaParams overwrites any union data inside the CreateDatasourceDto_Params as the provided AthenaParams
func (t *CreateDatasourceDto_Params) FromAthenaParams(v AthenaParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAthenaParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided AthenaParams
func (t *CreateDatasourceDto_Params) MergeAthenaParams(v AthenaParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsBigQueryParams returns the union data inside the CreateDatasourceDto_Params as a BigQueryParams
func (t CreateDatasourceDto_Params) AsBigQueryParams() (BigQueryParams, error) {
	var body BigQueryParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBigQueryParams overwrites any union data inside the CreateDatasourceDto_Params as the provided BigQueryParams
func (t *CreateDatasourceDto_Params) FromBigQueryParams(v BigQueryParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBigQueryParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided BigQueryParams
func (t *CreateDatasourceDto_Params) MergeBigQueryParams(v BigQueryParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsComposerParams returns the union data inside the CreateDatasourceDto_Params as a ComposerParams
func (t CreateDatasourceDto_Params) AsComposerParams() (ComposerParams, error) {
	var body ComposerParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromComposerParams overwrites any union data inside the CreateDatasourceDto_Params as the provided ComposerParams
func (t *CreateDatasourceDto_Params) FromComposerParams(v ComposerParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeComposerParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided ComposerParams
func (t *CreateDatasourceDto_Params) MergeComposerParams(v ComposerParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDBTCloudParams returns the union data inside the CreateDatasourceDto_Params as a DBTCloudParams
func (t CreateDatasourceDto_Params) AsDBTCloudParams() (DBTCloudParams, error) {
	var body DBTCloudParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDBTCloudParams overwrites any union data inside the CreateDatasourceDto_Params as the provided DBTCloudParams
func (t *CreateDatasourceDto_Params) FromDBTCloudParams(v DBTCloudParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDBTCloudParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided DBTCloudParams
func (t *CreateDatasourceDto_Params) MergeDBTCloudParams(v DBTCloudParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDBTParams returns the union data inside the CreateDatasourceDto_Params as a DBTParams
func (t CreateDatasourceDto_Params) AsDBTParams() (DBTParams, error) {
	var body DBTParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDBTParams overwrites any union data inside the CreateDatasourceDto_Params as the provided DBTParams
func (t *CreateDatasourceDto_Params) FromDBTParams(v DBTParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDBTParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided DBTParams
func (t *CreateDatasourceDto_Params) MergeDBTParams(v DBTParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatabricksParams returns the union data inside the CreateDatasourceDto_Params as a DatabricksParams
func (t CreateDatasourceDto_Params) AsDatabricksParams() (DatabricksParams, error) {
	var body DatabricksParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatabricksParams overwrites any union data inside the CreateDatasourceDto_Params as the provided DatabricksParams
func (t *CreateDatasourceDto_Params) FromDatabricksParams(v DatabricksParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatabricksParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided DatabricksParams
func (t *CreateDatasourceDto_Params) MergeDatabricksParams(v DatabricksParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeclarativeParams returns the union data inside the CreateDatasourceDto_Params as a DeclarativeParams
func (t CreateDatasourceDto_Params) AsDeclarativeParams() (DeclarativeParams, error) {
	var body DeclarativeParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeclarativeParams overwrites any union data inside the CreateDatasourceDto_Params as the provided DeclarativeParams
func (t *CreateDatasourceDto_Params) FromDeclarativeParams(v DeclarativeParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeclarativeParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided DeclarativeParams
func (t *CreateDatasourceDto_Params) MergeDeclarativeParams(v DeclarativeParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsFivetranParams returns the union data inside the CreateDatasourceDto_Params as a FivetranParams
func (t CreateDatasourceDto_Params) AsFivetranParams() (FivetranParams, error) {
	var body FivetranParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromFivetranParams overwrites any union data inside the CreateDatasourceDto_Params as the provided FivetranParams
func (t *CreateDatasourceDto_Params) FromFivetranParams(v FivetranParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeFivetranParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided FivetranParams
func (t *CreateDatasourceDto_Params) MergeFivetranParams(v FivetranParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsHiveParams returns the union data inside the CreateDatasourceDto_Params as a HiveParams
func (t CreateDatasourceDto_Params) AsHiveParams() (HiveParams, error) {
	var body HiveParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHiveParams overwrites any union data inside the CreateDatasourceDto_Params as the provided HiveParams
func (t *CreateDatasourceDto_Params) FromHiveParams(v HiveParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHiveParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided HiveParams
func (t *CreateDatasourceDto_Params) MergeHiveParams(v HiveParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsLookerParams returns the union data inside the CreateDatasourceDto_Params as a LookerParams
func (t CreateDatasourceDto_Params) AsLookerParams() (LookerParams, error) {
	var body LookerParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromLookerParams overwrites any union data inside the CreateDatasourceDto_Params as the provided LookerParams
func (t *CreateDatasourceDto_Params) FromLookerParams(v LookerParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeLookerParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided LookerParams
func (t *CreateDatasourceDto_Params) MergeLookerParams(v LookerParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMicrostrategyParams returns the union data inside the CreateDatasourceDto_Params as a MicrostrategyParams
func (t CreateDatasourceDto_Params) AsMicrostrategyParams() (MicrostrategyParams, error) {
	var body MicrostrategyParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMicrostrategyParams overwrites any union data inside the CreateDatasourceDto_Params as the provided MicrostrategyParams
func (t *CreateDatasourceDto_Params) FromMicrostrategyParams(v MicrostrategyParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMicrostrategyParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided MicrostrategyParams
func (t *CreateDatasourceDto_Params) MergeMicrostrategyParams(v MicrostrategyParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMssqlParams returns the union data inside the CreateDatasourceDto_Params as a MssqlParams
func (t CreateDatasourceDto_Params) AsMssqlParams() (MssqlParams, error) {
	var body MssqlParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMssqlParams overwrites any union data inside the CreateDatasourceDto_Params as the provided MssqlParams
func (t *CreateDatasourceDto_Params) FromMssqlParams(v MssqlParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMssqlParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided MssqlParams
func (t *CreateDatasourceDto_Params) MergeMssqlParams(v MssqlParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMwaaParams returns the union data inside the CreateDatasourceDto_Params as a MwaaParams
func (t CreateDatasourceDto_Params) AsMwaaParams() (MwaaParams, error) {
	var body MwaaParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMwaaParams overwrites any union data inside the CreateDatasourceDto_Params as the provided MwaaParams
func (t *CreateDatasourceDto_Params) FromMwaaParams(v MwaaParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMwaaParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided MwaaParams
func (t *CreateDatasourceDto_Params) MergeMwaaParams(v MwaaParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMysqlParams returns the union data inside the CreateDatasourceDto_Params as a MysqlParams
func (t CreateDatasourceDto_Params) AsMysqlParams() (MysqlParams, error) {
	var body MysqlParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMysqlParams overwrites any union data inside the CreateDatasourceDto_Params as the provided MysqlParams
func (t *CreateDatasourceDto_Params) FromMysqlParams(v MysqlParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMysqlParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided MysqlParams
func (t *CreateDatasourceDto_Params) MergeMysqlParams(v MysqlParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsOracleParams returns the union data inside the CreateDatasourceDto_Params as a OracleParams
func (t CreateDatasourceDto_Params) AsOracleParams() (OracleParams, error) {
	var body OracleParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromOracleParams overwrites any union data inside the CreateDatasourceDto_Params as the provided OracleParams
func (t *CreateDatasourceDto_Params) FromOracleParams(v OracleParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeOracleParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided OracleParams
func (t *CreateDatasourceDto_Params) MergeOracleParams(v OracleParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPostgresqlParams returns the union data inside the CreateDatasourceDto_Params as a PostgresqlParams
func (t CreateDatasourceDto_Params) AsPostgresqlParams() (PostgresqlParams, error) {
	var body PostgresqlParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPostgresqlParams overwrites any union data inside the CreateDatasourceDto_Params as the provided PostgresqlParams
func (t *CreateDatasourceDto_Params) FromPostgresqlParams(v PostgresqlParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePostgresqlParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided PostgresqlParams
func (t *CreateDatasourceDto_Params) MergePostgresqlParams(v PostgresqlParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPowerBiParams returns the union data inside the CreateDatasourceDto_Params as a PowerBiParams
func (t CreateDatasourceDto_Params) AsPowerBiParams() (PowerBiParams, error) {
	var body PowerBiParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPowerBiParams overwrites any union data inside the CreateDatasourceDto_Params as the provided PowerBiParams
func (t *CreateDatasourceDto_Params) FromPowerBiParams(v PowerBiParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePowerBiParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided PowerBiParams
func (t *CreateDatasourceDto_Params) MergePowerBiParams(v PowerBiParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsQuickSightParams returns the union data inside the CreateDatasourceDto_Params as a QuickSightParams
func (t CreateDatasourceDto_Params) AsQuickSightParams() (QuickSightParams, error) {
	var body QuickSightParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromQuickSightParams overwrites any union data inside the CreateDatasourceDto_Params as the provided QuickSightParams
func (t *CreateDatasourceDto_Params) FromQuickSightParams(v QuickSightParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeQuickSightParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided QuickSightParams
func (t *CreateDatasourceDto_Params) MergeQuickSightParams(v QuickSightParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRedshiftParams returns the union data inside the CreateDatasourceDto_Params as a RedshiftParams
func (t CreateDatasourceDto_Params) AsRedshiftParams() (RedshiftParams, error) {
	var body RedshiftParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRedshiftParams overwrites any union data inside the CreateDatasourceDto_Params as the provided RedshiftParams
func (t *CreateDatasourceDto_Params) FromRedshiftParams(v RedshiftParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRedshiftParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided RedshiftParams
func (t *CreateDatasourceDto_Params) MergeRedshiftParams(v RedshiftParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSnowflakeParams returns the union data inside the CreateDatasourceDto_Params as a SnowflakeParams
func (t CreateDatasourceDto_Params) AsSnowflakeParams() (SnowflakeParams, error) {
	var body SnowflakeParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSnowflakeParams overwrites any union data inside the CreateDatasourceDto_Params as the provided SnowflakeParams
func (t *CreateDatasourceDto_Params) FromSnowflakeParams(v SnowflakeParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSnowflakeParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided SnowflakeParams
func (t *CreateDatasourceDto_Params) MergeSnowflakeParams(v SnowflakeParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSynapseParams returns the union data inside the CreateDatasourceDto_Params as a SynapseParams
func (t CreateDatasourceDto_Params) AsSynapseParams() (SynapseParams, error) {
	var body SynapseParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSynapseParams overwrites any union data inside the CreateDatasourceDto_Params as the provided SynapseParams
func (t *CreateDatasourceDto_Params) FromSynapseParams(v SynapseParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSynapseParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided SynapseParams
func (t *CreateDatasourceDto_Params) MergeSynapseParams(v SynapseParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsTableauParams returns the union data inside the CreateDatasourceDto_Params as a TableauParams
func (t CreateDatasourceDto_Params) AsTableauParams() (TableauParams, error) {
	var body TableauParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromTableauParams overwrites any union data inside the CreateDatasourceDto_Params as the provided TableauParams
func (t *CreateDatasourceDto_Params) FromTableauParams(v TableauParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeTableauParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided TableauParams
func (t *CreateDatasourceDto_Params) MergeTableauParams(v TableauParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsUnknownDatasourceParams returns the union data inside the CreateDatasourceDto_Params as a UnknownDatasourceParams
func (t CreateDatasourceDto_Params) AsUnknownDatasourceParams() (UnknownDatasourceParams, error) {
	var body UnknownDatasourceParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromUnknownDatasourceParams overwrites any union data inside the CreateDatasourceDto_Params as the provided UnknownDatasourceParams
func (t *CreateDatasourceDto_Params) FromUnknownDatasourceParams(v UnknownDatasourceParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeUnknownDatasourceParams performs a merge with any union data inside the CreateDatasourceDto_Params, using the provided UnknownDatasourceParams
func (t *CreateDatasourceDto_Params) MergeUnknownDatasourceParams(v UnknownDatasourceParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t CreateDatasourceDto_Params) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *CreateDatasourceDto_Params) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAssetDetailsDto returns the union data inside the DagAssetOverview_Details as a AssetDetailsDto
func (t DagAssetOverview_Details) AsAssetDetailsDto() (AssetDetailsDto, error) {
	var body AssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetDetailsDto overwrites any union data inside the DagAssetOverview_Details as the provided AssetDetailsDto
func (t *DagAssetOverview_Details) FromAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetDetailsDto performs a merge with any union data inside the DagAssetOverview_Details, using the provided AssetDetailsDto
func (t *DagAssetOverview_Details) MergeAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDagDetailsDto returns the union data inside the DagAssetOverview_Details as a DagDetailsDto
func (t DagAssetOverview_Details) AsDagDetailsDto() (DagDetailsDto, error) {
	var body DagDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDagDetailsDto overwrites any union data inside the DagAssetOverview_Details as the provided DagDetailsDto
func (t *DagAssetOverview_Details) FromDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDagDetailsDto performs a merge with any union data inside the DagAssetOverview_Details, using the provided DagDetailsDto
func (t *DagAssetOverview_Details) MergeDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatasetDetailsDto returns the union data inside the DagAssetOverview_Details as a DatasetDetailsDto
func (t DagAssetOverview_Details) AsDatasetDetailsDto() (DatasetDetailsDto, error) {
	var body DatasetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatasetDetailsDto overwrites any union data inside the DagAssetOverview_Details as the provided DatasetDetailsDto
func (t *DagAssetOverview_Details) FromDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatasetDetailsDto performs a merge with any union data inside the DagAssetOverview_Details, using the provided DatasetDetailsDto
func (t *DagAssetOverview_Details) MergeDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeclaredAssetDetailsDto returns the union data inside the DagAssetOverview_Details as a DeclaredAssetDetailsDto
func (t DagAssetOverview_Details) AsDeclaredAssetDetailsDto() (DeclaredAssetDetailsDto, error) {
	var body DeclaredAssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeclaredAssetDetailsDto overwrites any union data inside the DagAssetOverview_Details as the provided DeclaredAssetDetailsDto
func (t *DagAssetOverview_Details) FromDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeclaredAssetDetailsDto performs a merge with any union data inside the DagAssetOverview_Details, using the provided DeclaredAssetDetailsDto
func (t *DagAssetOverview_Details) MergeDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DagAssetOverview_Details) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DagAssetOverview_Details) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAssetDetailsDto returns the union data inside the DashboardAssetOverview_Details as a AssetDetailsDto
func (t DashboardAssetOverview_Details) AsAssetDetailsDto() (AssetDetailsDto, error) {
	var body AssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetDetailsDto overwrites any union data inside the DashboardAssetOverview_Details as the provided AssetDetailsDto
func (t *DashboardAssetOverview_Details) FromAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetDetailsDto performs a merge with any union data inside the DashboardAssetOverview_Details, using the provided AssetDetailsDto
func (t *DashboardAssetOverview_Details) MergeAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDagDetailsDto returns the union data inside the DashboardAssetOverview_Details as a DagDetailsDto
func (t DashboardAssetOverview_Details) AsDagDetailsDto() (DagDetailsDto, error) {
	var body DagDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDagDetailsDto overwrites any union data inside the DashboardAssetOverview_Details as the provided DagDetailsDto
func (t *DashboardAssetOverview_Details) FromDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDagDetailsDto performs a merge with any union data inside the DashboardAssetOverview_Details, using the provided DagDetailsDto
func (t *DashboardAssetOverview_Details) MergeDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatasetDetailsDto returns the union data inside the DashboardAssetOverview_Details as a DatasetDetailsDto
func (t DashboardAssetOverview_Details) AsDatasetDetailsDto() (DatasetDetailsDto, error) {
	var body DatasetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatasetDetailsDto overwrites any union data inside the DashboardAssetOverview_Details as the provided DatasetDetailsDto
func (t *DashboardAssetOverview_Details) FromDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatasetDetailsDto performs a merge with any union data inside the DashboardAssetOverview_Details, using the provided DatasetDetailsDto
func (t *DashboardAssetOverview_Details) MergeDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeclaredAssetDetailsDto returns the union data inside the DashboardAssetOverview_Details as a DeclaredAssetDetailsDto
func (t DashboardAssetOverview_Details) AsDeclaredAssetDetailsDto() (DeclaredAssetDetailsDto, error) {
	var body DeclaredAssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeclaredAssetDetailsDto overwrites any union data inside the DashboardAssetOverview_Details as the provided DeclaredAssetDetailsDto
func (t *DashboardAssetOverview_Details) FromDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeclaredAssetDetailsDto performs a merge with any union data inside the DashboardAssetOverview_Details, using the provided DeclaredAssetDetailsDto
func (t *DashboardAssetOverview_Details) MergeDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DashboardAssetOverview_Details) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DashboardAssetOverview_Details) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAssetDetailsDto returns the union data inside the DatasetAssetOverview_Details as a AssetDetailsDto
func (t DatasetAssetOverview_Details) AsAssetDetailsDto() (AssetDetailsDto, error) {
	var body AssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetDetailsDto overwrites any union data inside the DatasetAssetOverview_Details as the provided AssetDetailsDto
func (t *DatasetAssetOverview_Details) FromAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetDetailsDto performs a merge with any union data inside the DatasetAssetOverview_Details, using the provided AssetDetailsDto
func (t *DatasetAssetOverview_Details) MergeAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDagDetailsDto returns the union data inside the DatasetAssetOverview_Details as a DagDetailsDto
func (t DatasetAssetOverview_Details) AsDagDetailsDto() (DagDetailsDto, error) {
	var body DagDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDagDetailsDto overwrites any union data inside the DatasetAssetOverview_Details as the provided DagDetailsDto
func (t *DatasetAssetOverview_Details) FromDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDagDetailsDto performs a merge with any union data inside the DatasetAssetOverview_Details, using the provided DagDetailsDto
func (t *DatasetAssetOverview_Details) MergeDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatasetDetailsDto returns the union data inside the DatasetAssetOverview_Details as a DatasetDetailsDto
func (t DatasetAssetOverview_Details) AsDatasetDetailsDto() (DatasetDetailsDto, error) {
	var body DatasetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatasetDetailsDto overwrites any union data inside the DatasetAssetOverview_Details as the provided DatasetDetailsDto
func (t *DatasetAssetOverview_Details) FromDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatasetDetailsDto performs a merge with any union data inside the DatasetAssetOverview_Details, using the provided DatasetDetailsDto
func (t *DatasetAssetOverview_Details) MergeDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeclaredAssetDetailsDto returns the union data inside the DatasetAssetOverview_Details as a DeclaredAssetDetailsDto
func (t DatasetAssetOverview_Details) AsDeclaredAssetDetailsDto() (DeclaredAssetDetailsDto, error) {
	var body DeclaredAssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeclaredAssetDetailsDto overwrites any union data inside the DatasetAssetOverview_Details as the provided DeclaredAssetDetailsDto
func (t *DatasetAssetOverview_Details) FromDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeclaredAssetDetailsDto performs a merge with any union data inside the DatasetAssetOverview_Details, using the provided DeclaredAssetDetailsDto
func (t *DatasetAssetOverview_Details) MergeDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DatasetAssetOverview_Details) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DatasetAssetOverview_Details) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsBigQueryPartitioningProperties returns the union data inside the DatasetPartitioningDto_Properties as a BigQueryPartitioningProperties
func (t DatasetPartitioningDto_Properties) AsBigQueryPartitioningProperties() (BigQueryPartitioningProperties, error) {
	var body BigQueryPartitioningProperties
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBigQueryPartitioningProperties overwrites any union data inside the DatasetPartitioningDto_Properties as the provided BigQueryPartitioningProperties
func (t *DatasetPartitioningDto_Properties) FromBigQueryPartitioningProperties(v BigQueryPartitioningProperties) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBigQueryPartitioningProperties performs a merge with any union data inside the DatasetPartitioningDto_Properties, using the provided BigQueryPartitioningProperties
func (t *DatasetPartitioningDto_Properties) MergeBigQueryPartitioningProperties(v BigQueryPartitioningProperties) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsBigQueryIngestionTimePartitioningProperties returns the union data inside the DatasetPartitioningDto_Properties as a BigQueryIngestionTimePartitioningProperties
func (t DatasetPartitioningDto_Properties) AsBigQueryIngestionTimePartitioningProperties() (BigQueryIngestionTimePartitioningProperties, error) {
	var body BigQueryIngestionTimePartitioningProperties
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBigQueryIngestionTimePartitioningProperties overwrites any union data inside the DatasetPartitioningDto_Properties as the provided BigQueryIngestionTimePartitioningProperties
func (t *DatasetPartitioningDto_Properties) FromBigQueryIngestionTimePartitioningProperties(v BigQueryIngestionTimePartitioningProperties) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBigQueryIngestionTimePartitioningProperties performs a merge with any union data inside the DatasetPartitioningDto_Properties, using the provided BigQueryIngestionTimePartitioningProperties
func (t *DatasetPartitioningDto_Properties) MergeBigQueryIngestionTimePartitioningProperties(v BigQueryIngestionTimePartitioningProperties) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsBigQueryIntegerRangePartitioningProperties returns the union data inside the DatasetPartitioningDto_Properties as a BigQueryIntegerRangePartitioningProperties
func (t DatasetPartitioningDto_Properties) AsBigQueryIntegerRangePartitioningProperties() (BigQueryIntegerRangePartitioningProperties, error) {
	var body BigQueryIntegerRangePartitioningProperties
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBigQueryIntegerRangePartitioningProperties overwrites any union data inside the DatasetPartitioningDto_Properties as the provided BigQueryIntegerRangePartitioningProperties
func (t *DatasetPartitioningDto_Properties) FromBigQueryIntegerRangePartitioningProperties(v BigQueryIntegerRangePartitioningProperties) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBigQueryIntegerRangePartitioningProperties performs a merge with any union data inside the DatasetPartitioningDto_Properties, using the provided BigQueryIntegerRangePartitioningProperties
func (t *DatasetPartitioningDto_Properties) MergeBigQueryIntegerRangePartitioningProperties(v BigQueryIntegerRangePartitioningProperties) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsBigQueryTimeUnitColumnPartitioningProperties returns the union data inside the DatasetPartitioningDto_Properties as a BigQueryTimeUnitColumnPartitioningProperties
func (t DatasetPartitioningDto_Properties) AsBigQueryTimeUnitColumnPartitioningProperties() (BigQueryTimeUnitColumnPartitioningProperties, error) {
	var body BigQueryTimeUnitColumnPartitioningProperties
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBigQueryTimeUnitColumnPartitioningProperties overwrites any union data inside the DatasetPartitioningDto_Properties as the provided BigQueryTimeUnitColumnPartitioningProperties
func (t *DatasetPartitioningDto_Properties) FromBigQueryTimeUnitColumnPartitioningProperties(v BigQueryTimeUnitColumnPartitioningProperties) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBigQueryTimeUnitColumnPartitioningProperties performs a merge with any union data inside the DatasetPartitioningDto_Properties, using the provided BigQueryTimeUnitColumnPartitioningProperties
func (t *DatasetPartitioningDto_Properties) MergeBigQueryTimeUnitColumnPartitioningProperties(v BigQueryTimeUnitColumnPartitioningProperties) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DatasetPartitioningDto_Properties) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DatasetPartitioningDto_Properties) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAirflowParams returns the union data inside the DatasourceCatalogAssetDto_Params as a AirflowParams
func (t DatasourceCatalogAssetDto_Params) AsAirflowParams() (AirflowParams, error) {
	var body AirflowParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAirflowParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided AirflowParams
func (t *DatasourceCatalogAssetDto_Params) FromAirflowParams(v AirflowParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAirflowParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided AirflowParams
func (t *DatasourceCatalogAssetDto_Params) MergeAirflowParams(v AirflowParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAthenaParams returns the union data inside the DatasourceCatalogAssetDto_Params as a AthenaParams
func (t DatasourceCatalogAssetDto_Params) AsAthenaParams() (AthenaParams, error) {
	var body AthenaParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAthenaParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided AthenaParams
func (t *DatasourceCatalogAssetDto_Params) FromAthenaParams(v AthenaParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAthenaParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided AthenaParams
func (t *DatasourceCatalogAssetDto_Params) MergeAthenaParams(v AthenaParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsBigQueryParams returns the union data inside the DatasourceCatalogAssetDto_Params as a BigQueryParams
func (t DatasourceCatalogAssetDto_Params) AsBigQueryParams() (BigQueryParams, error) {
	var body BigQueryParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBigQueryParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided BigQueryParams
func (t *DatasourceCatalogAssetDto_Params) FromBigQueryParams(v BigQueryParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBigQueryParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided BigQueryParams
func (t *DatasourceCatalogAssetDto_Params) MergeBigQueryParams(v BigQueryParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsComposerParams returns the union data inside the DatasourceCatalogAssetDto_Params as a ComposerParams
func (t DatasourceCatalogAssetDto_Params) AsComposerParams() (ComposerParams, error) {
	var body ComposerParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromComposerParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided ComposerParams
func (t *DatasourceCatalogAssetDto_Params) FromComposerParams(v ComposerParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeComposerParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided ComposerParams
func (t *DatasourceCatalogAssetDto_Params) MergeComposerParams(v ComposerParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDBTCloudParams returns the union data inside the DatasourceCatalogAssetDto_Params as a DBTCloudParams
func (t DatasourceCatalogAssetDto_Params) AsDBTCloudParams() (DBTCloudParams, error) {
	var body DBTCloudParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDBTCloudParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided DBTCloudParams
func (t *DatasourceCatalogAssetDto_Params) FromDBTCloudParams(v DBTCloudParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDBTCloudParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided DBTCloudParams
func (t *DatasourceCatalogAssetDto_Params) MergeDBTCloudParams(v DBTCloudParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDBTParams returns the union data inside the DatasourceCatalogAssetDto_Params as a DBTParams
func (t DatasourceCatalogAssetDto_Params) AsDBTParams() (DBTParams, error) {
	var body DBTParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDBTParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided DBTParams
func (t *DatasourceCatalogAssetDto_Params) FromDBTParams(v DBTParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDBTParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided DBTParams
func (t *DatasourceCatalogAssetDto_Params) MergeDBTParams(v DBTParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatabricksParams returns the union data inside the DatasourceCatalogAssetDto_Params as a DatabricksParams
func (t DatasourceCatalogAssetDto_Params) AsDatabricksParams() (DatabricksParams, error) {
	var body DatabricksParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatabricksParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided DatabricksParams
func (t *DatasourceCatalogAssetDto_Params) FromDatabricksParams(v DatabricksParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatabricksParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided DatabricksParams
func (t *DatasourceCatalogAssetDto_Params) MergeDatabricksParams(v DatabricksParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeclarativeParams returns the union data inside the DatasourceCatalogAssetDto_Params as a DeclarativeParams
func (t DatasourceCatalogAssetDto_Params) AsDeclarativeParams() (DeclarativeParams, error) {
	var body DeclarativeParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeclarativeParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided DeclarativeParams
func (t *DatasourceCatalogAssetDto_Params) FromDeclarativeParams(v DeclarativeParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeclarativeParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided DeclarativeParams
func (t *DatasourceCatalogAssetDto_Params) MergeDeclarativeParams(v DeclarativeParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsFivetranParams returns the union data inside the DatasourceCatalogAssetDto_Params as a FivetranParams
func (t DatasourceCatalogAssetDto_Params) AsFivetranParams() (FivetranParams, error) {
	var body FivetranParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromFivetranParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided FivetranParams
func (t *DatasourceCatalogAssetDto_Params) FromFivetranParams(v FivetranParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeFivetranParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided FivetranParams
func (t *DatasourceCatalogAssetDto_Params) MergeFivetranParams(v FivetranParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsHiveParams returns the union data inside the DatasourceCatalogAssetDto_Params as a HiveParams
func (t DatasourceCatalogAssetDto_Params) AsHiveParams() (HiveParams, error) {
	var body HiveParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHiveParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided HiveParams
func (t *DatasourceCatalogAssetDto_Params) FromHiveParams(v HiveParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHiveParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided HiveParams
func (t *DatasourceCatalogAssetDto_Params) MergeHiveParams(v HiveParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsLookerParams returns the union data inside the DatasourceCatalogAssetDto_Params as a LookerParams
func (t DatasourceCatalogAssetDto_Params) AsLookerParams() (LookerParams, error) {
	var body LookerParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromLookerParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided LookerParams
func (t *DatasourceCatalogAssetDto_Params) FromLookerParams(v LookerParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeLookerParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided LookerParams
func (t *DatasourceCatalogAssetDto_Params) MergeLookerParams(v LookerParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMicrostrategyParams returns the union data inside the DatasourceCatalogAssetDto_Params as a MicrostrategyParams
func (t DatasourceCatalogAssetDto_Params) AsMicrostrategyParams() (MicrostrategyParams, error) {
	var body MicrostrategyParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMicrostrategyParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided MicrostrategyParams
func (t *DatasourceCatalogAssetDto_Params) FromMicrostrategyParams(v MicrostrategyParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMicrostrategyParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided MicrostrategyParams
func (t *DatasourceCatalogAssetDto_Params) MergeMicrostrategyParams(v MicrostrategyParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMssqlParams returns the union data inside the DatasourceCatalogAssetDto_Params as a MssqlParams
func (t DatasourceCatalogAssetDto_Params) AsMssqlParams() (MssqlParams, error) {
	var body MssqlParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMssqlParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided MssqlParams
func (t *DatasourceCatalogAssetDto_Params) FromMssqlParams(v MssqlParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMssqlParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided MssqlParams
func (t *DatasourceCatalogAssetDto_Params) MergeMssqlParams(v MssqlParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMwaaParams returns the union data inside the DatasourceCatalogAssetDto_Params as a MwaaParams
func (t DatasourceCatalogAssetDto_Params) AsMwaaParams() (MwaaParams, error) {
	var body MwaaParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMwaaParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided MwaaParams
func (t *DatasourceCatalogAssetDto_Params) FromMwaaParams(v MwaaParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMwaaParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided MwaaParams
func (t *DatasourceCatalogAssetDto_Params) MergeMwaaParams(v MwaaParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMysqlParams returns the union data inside the DatasourceCatalogAssetDto_Params as a MysqlParams
func (t DatasourceCatalogAssetDto_Params) AsMysqlParams() (MysqlParams, error) {
	var body MysqlParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMysqlParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided MysqlParams
func (t *DatasourceCatalogAssetDto_Params) FromMysqlParams(v MysqlParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMysqlParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided MysqlParams
func (t *DatasourceCatalogAssetDto_Params) MergeMysqlParams(v MysqlParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsOracleParams returns the union data inside the DatasourceCatalogAssetDto_Params as a OracleParams
func (t DatasourceCatalogAssetDto_Params) AsOracleParams() (OracleParams, error) {
	var body OracleParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromOracleParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided OracleParams
func (t *DatasourceCatalogAssetDto_Params) FromOracleParams(v OracleParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeOracleParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided OracleParams
func (t *DatasourceCatalogAssetDto_Params) MergeOracleParams(v OracleParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPostgresqlParams returns the union data inside the DatasourceCatalogAssetDto_Params as a PostgresqlParams
func (t DatasourceCatalogAssetDto_Params) AsPostgresqlParams() (PostgresqlParams, error) {
	var body PostgresqlParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPostgresqlParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided PostgresqlParams
func (t *DatasourceCatalogAssetDto_Params) FromPostgresqlParams(v PostgresqlParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePostgresqlParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided PostgresqlParams
func (t *DatasourceCatalogAssetDto_Params) MergePostgresqlParams(v PostgresqlParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPowerBiParams returns the union data inside the DatasourceCatalogAssetDto_Params as a PowerBiParams
func (t DatasourceCatalogAssetDto_Params) AsPowerBiParams() (PowerBiParams, error) {
	var body PowerBiParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPowerBiParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided PowerBiParams
func (t *DatasourceCatalogAssetDto_Params) FromPowerBiParams(v PowerBiParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePowerBiParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided PowerBiParams
func (t *DatasourceCatalogAssetDto_Params) MergePowerBiParams(v PowerBiParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsQuickSightParams returns the union data inside the DatasourceCatalogAssetDto_Params as a QuickSightParams
func (t DatasourceCatalogAssetDto_Params) AsQuickSightParams() (QuickSightParams, error) {
	var body QuickSightParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromQuickSightParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided QuickSightParams
func (t *DatasourceCatalogAssetDto_Params) FromQuickSightParams(v QuickSightParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeQuickSightParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided QuickSightParams
func (t *DatasourceCatalogAssetDto_Params) MergeQuickSightParams(v QuickSightParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRedshiftParams returns the union data inside the DatasourceCatalogAssetDto_Params as a RedshiftParams
func (t DatasourceCatalogAssetDto_Params) AsRedshiftParams() (RedshiftParams, error) {
	var body RedshiftParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRedshiftParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided RedshiftParams
func (t *DatasourceCatalogAssetDto_Params) FromRedshiftParams(v RedshiftParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRedshiftParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided RedshiftParams
func (t *DatasourceCatalogAssetDto_Params) MergeRedshiftParams(v RedshiftParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSnowflakeParams returns the union data inside the DatasourceCatalogAssetDto_Params as a SnowflakeParams
func (t DatasourceCatalogAssetDto_Params) AsSnowflakeParams() (SnowflakeParams, error) {
	var body SnowflakeParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSnowflakeParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided SnowflakeParams
func (t *DatasourceCatalogAssetDto_Params) FromSnowflakeParams(v SnowflakeParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSnowflakeParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided SnowflakeParams
func (t *DatasourceCatalogAssetDto_Params) MergeSnowflakeParams(v SnowflakeParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSynapseParams returns the union data inside the DatasourceCatalogAssetDto_Params as a SynapseParams
func (t DatasourceCatalogAssetDto_Params) AsSynapseParams() (SynapseParams, error) {
	var body SynapseParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSynapseParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided SynapseParams
func (t *DatasourceCatalogAssetDto_Params) FromSynapseParams(v SynapseParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSynapseParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided SynapseParams
func (t *DatasourceCatalogAssetDto_Params) MergeSynapseParams(v SynapseParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsTableauParams returns the union data inside the DatasourceCatalogAssetDto_Params as a TableauParams
func (t DatasourceCatalogAssetDto_Params) AsTableauParams() (TableauParams, error) {
	var body TableauParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromTableauParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided TableauParams
func (t *DatasourceCatalogAssetDto_Params) FromTableauParams(v TableauParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeTableauParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided TableauParams
func (t *DatasourceCatalogAssetDto_Params) MergeTableauParams(v TableauParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsUnknownDatasourceParams returns the union data inside the DatasourceCatalogAssetDto_Params as a UnknownDatasourceParams
func (t DatasourceCatalogAssetDto_Params) AsUnknownDatasourceParams() (UnknownDatasourceParams, error) {
	var body UnknownDatasourceParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromUnknownDatasourceParams overwrites any union data inside the DatasourceCatalogAssetDto_Params as the provided UnknownDatasourceParams
func (t *DatasourceCatalogAssetDto_Params) FromUnknownDatasourceParams(v UnknownDatasourceParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeUnknownDatasourceParams performs a merge with any union data inside the DatasourceCatalogAssetDto_Params, using the provided UnknownDatasourceParams
func (t *DatasourceCatalogAssetDto_Params) MergeUnknownDatasourceParams(v UnknownDatasourceParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DatasourceCatalogAssetDto_Params) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DatasourceCatalogAssetDto_Params) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAirflowParams returns the union data inside the DatasourceDto_Params as a AirflowParams
func (t DatasourceDto_Params) AsAirflowParams() (AirflowParams, error) {
	var body AirflowParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAirflowParams overwrites any union data inside the DatasourceDto_Params as the provided AirflowParams
func (t *DatasourceDto_Params) FromAirflowParams(v AirflowParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAirflowParams performs a merge with any union data inside the DatasourceDto_Params, using the provided AirflowParams
func (t *DatasourceDto_Params) MergeAirflowParams(v AirflowParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAthenaParams returns the union data inside the DatasourceDto_Params as a AthenaParams
func (t DatasourceDto_Params) AsAthenaParams() (AthenaParams, error) {
	var body AthenaParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAthenaParams overwrites any union data inside the DatasourceDto_Params as the provided AthenaParams
func (t *DatasourceDto_Params) FromAthenaParams(v AthenaParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAthenaParams performs a merge with any union data inside the DatasourceDto_Params, using the provided AthenaParams
func (t *DatasourceDto_Params) MergeAthenaParams(v AthenaParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsBigQueryParams returns the union data inside the DatasourceDto_Params as a BigQueryParams
func (t DatasourceDto_Params) AsBigQueryParams() (BigQueryParams, error) {
	var body BigQueryParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBigQueryParams overwrites any union data inside the DatasourceDto_Params as the provided BigQueryParams
func (t *DatasourceDto_Params) FromBigQueryParams(v BigQueryParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBigQueryParams performs a merge with any union data inside the DatasourceDto_Params, using the provided BigQueryParams
func (t *DatasourceDto_Params) MergeBigQueryParams(v BigQueryParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsComposerParams returns the union data inside the DatasourceDto_Params as a ComposerParams
func (t DatasourceDto_Params) AsComposerParams() (ComposerParams, error) {
	var body ComposerParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromComposerParams overwrites any union data inside the DatasourceDto_Params as the provided ComposerParams
func (t *DatasourceDto_Params) FromComposerParams(v ComposerParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeComposerParams performs a merge with any union data inside the DatasourceDto_Params, using the provided ComposerParams
func (t *DatasourceDto_Params) MergeComposerParams(v ComposerParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDBTCloudParams returns the union data inside the DatasourceDto_Params as a DBTCloudParams
func (t DatasourceDto_Params) AsDBTCloudParams() (DBTCloudParams, error) {
	var body DBTCloudParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDBTCloudParams overwrites any union data inside the DatasourceDto_Params as the provided DBTCloudParams
func (t *DatasourceDto_Params) FromDBTCloudParams(v DBTCloudParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDBTCloudParams performs a merge with any union data inside the DatasourceDto_Params, using the provided DBTCloudParams
func (t *DatasourceDto_Params) MergeDBTCloudParams(v DBTCloudParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDBTParams returns the union data inside the DatasourceDto_Params as a DBTParams
func (t DatasourceDto_Params) AsDBTParams() (DBTParams, error) {
	var body DBTParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDBTParams overwrites any union data inside the DatasourceDto_Params as the provided DBTParams
func (t *DatasourceDto_Params) FromDBTParams(v DBTParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDBTParams performs a merge with any union data inside the DatasourceDto_Params, using the provided DBTParams
func (t *DatasourceDto_Params) MergeDBTParams(v DBTParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatabricksParams returns the union data inside the DatasourceDto_Params as a DatabricksParams
func (t DatasourceDto_Params) AsDatabricksParams() (DatabricksParams, error) {
	var body DatabricksParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatabricksParams overwrites any union data inside the DatasourceDto_Params as the provided DatabricksParams
func (t *DatasourceDto_Params) FromDatabricksParams(v DatabricksParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatabricksParams performs a merge with any union data inside the DatasourceDto_Params, using the provided DatabricksParams
func (t *DatasourceDto_Params) MergeDatabricksParams(v DatabricksParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeclarativeParams returns the union data inside the DatasourceDto_Params as a DeclarativeParams
func (t DatasourceDto_Params) AsDeclarativeParams() (DeclarativeParams, error) {
	var body DeclarativeParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeclarativeParams overwrites any union data inside the DatasourceDto_Params as the provided DeclarativeParams
func (t *DatasourceDto_Params) FromDeclarativeParams(v DeclarativeParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeclarativeParams performs a merge with any union data inside the DatasourceDto_Params, using the provided DeclarativeParams
func (t *DatasourceDto_Params) MergeDeclarativeParams(v DeclarativeParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsFivetranParams returns the union data inside the DatasourceDto_Params as a FivetranParams
func (t DatasourceDto_Params) AsFivetranParams() (FivetranParams, error) {
	var body FivetranParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromFivetranParams overwrites any union data inside the DatasourceDto_Params as the provided FivetranParams
func (t *DatasourceDto_Params) FromFivetranParams(v FivetranParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeFivetranParams performs a merge with any union data inside the DatasourceDto_Params, using the provided FivetranParams
func (t *DatasourceDto_Params) MergeFivetranParams(v FivetranParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsHiveParams returns the union data inside the DatasourceDto_Params as a HiveParams
func (t DatasourceDto_Params) AsHiveParams() (HiveParams, error) {
	var body HiveParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromHiveParams overwrites any union data inside the DatasourceDto_Params as the provided HiveParams
func (t *DatasourceDto_Params) FromHiveParams(v HiveParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeHiveParams performs a merge with any union data inside the DatasourceDto_Params, using the provided HiveParams
func (t *DatasourceDto_Params) MergeHiveParams(v HiveParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsLookerParams returns the union data inside the DatasourceDto_Params as a LookerParams
func (t DatasourceDto_Params) AsLookerParams() (LookerParams, error) {
	var body LookerParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromLookerParams overwrites any union data inside the DatasourceDto_Params as the provided LookerParams
func (t *DatasourceDto_Params) FromLookerParams(v LookerParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeLookerParams performs a merge with any union data inside the DatasourceDto_Params, using the provided LookerParams
func (t *DatasourceDto_Params) MergeLookerParams(v LookerParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMicrostrategyParams returns the union data inside the DatasourceDto_Params as a MicrostrategyParams
func (t DatasourceDto_Params) AsMicrostrategyParams() (MicrostrategyParams, error) {
	var body MicrostrategyParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMicrostrategyParams overwrites any union data inside the DatasourceDto_Params as the provided MicrostrategyParams
func (t *DatasourceDto_Params) FromMicrostrategyParams(v MicrostrategyParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMicrostrategyParams performs a merge with any union data inside the DatasourceDto_Params, using the provided MicrostrategyParams
func (t *DatasourceDto_Params) MergeMicrostrategyParams(v MicrostrategyParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMssqlParams returns the union data inside the DatasourceDto_Params as a MssqlParams
func (t DatasourceDto_Params) AsMssqlParams() (MssqlParams, error) {
	var body MssqlParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMssqlParams overwrites any union data inside the DatasourceDto_Params as the provided MssqlParams
func (t *DatasourceDto_Params) FromMssqlParams(v MssqlParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMssqlParams performs a merge with any union data inside the DatasourceDto_Params, using the provided MssqlParams
func (t *DatasourceDto_Params) MergeMssqlParams(v MssqlParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMwaaParams returns the union data inside the DatasourceDto_Params as a MwaaParams
func (t DatasourceDto_Params) AsMwaaParams() (MwaaParams, error) {
	var body MwaaParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMwaaParams overwrites any union data inside the DatasourceDto_Params as the provided MwaaParams
func (t *DatasourceDto_Params) FromMwaaParams(v MwaaParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMwaaParams performs a merge with any union data inside the DatasourceDto_Params, using the provided MwaaParams
func (t *DatasourceDto_Params) MergeMwaaParams(v MwaaParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMysqlParams returns the union data inside the DatasourceDto_Params as a MysqlParams
func (t DatasourceDto_Params) AsMysqlParams() (MysqlParams, error) {
	var body MysqlParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMysqlParams overwrites any union data inside the DatasourceDto_Params as the provided MysqlParams
func (t *DatasourceDto_Params) FromMysqlParams(v MysqlParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMysqlParams performs a merge with any union data inside the DatasourceDto_Params, using the provided MysqlParams
func (t *DatasourceDto_Params) MergeMysqlParams(v MysqlParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsOracleParams returns the union data inside the DatasourceDto_Params as a OracleParams
func (t DatasourceDto_Params) AsOracleParams() (OracleParams, error) {
	var body OracleParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromOracleParams overwrites any union data inside the DatasourceDto_Params as the provided OracleParams
func (t *DatasourceDto_Params) FromOracleParams(v OracleParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeOracleParams performs a merge with any union data inside the DatasourceDto_Params, using the provided OracleParams
func (t *DatasourceDto_Params) MergeOracleParams(v OracleParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPostgresqlParams returns the union data inside the DatasourceDto_Params as a PostgresqlParams
func (t DatasourceDto_Params) AsPostgresqlParams() (PostgresqlParams, error) {
	var body PostgresqlParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPostgresqlParams overwrites any union data inside the DatasourceDto_Params as the provided PostgresqlParams
func (t *DatasourceDto_Params) FromPostgresqlParams(v PostgresqlParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePostgresqlParams performs a merge with any union data inside the DatasourceDto_Params, using the provided PostgresqlParams
func (t *DatasourceDto_Params) MergePostgresqlParams(v PostgresqlParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPowerBiParams returns the union data inside the DatasourceDto_Params as a PowerBiParams
func (t DatasourceDto_Params) AsPowerBiParams() (PowerBiParams, error) {
	var body PowerBiParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPowerBiParams overwrites any union data inside the DatasourceDto_Params as the provided PowerBiParams
func (t *DatasourceDto_Params) FromPowerBiParams(v PowerBiParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePowerBiParams performs a merge with any union data inside the DatasourceDto_Params, using the provided PowerBiParams
func (t *DatasourceDto_Params) MergePowerBiParams(v PowerBiParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsQuickSightParams returns the union data inside the DatasourceDto_Params as a QuickSightParams
func (t DatasourceDto_Params) AsQuickSightParams() (QuickSightParams, error) {
	var body QuickSightParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromQuickSightParams overwrites any union data inside the DatasourceDto_Params as the provided QuickSightParams
func (t *DatasourceDto_Params) FromQuickSightParams(v QuickSightParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeQuickSightParams performs a merge with any union data inside the DatasourceDto_Params, using the provided QuickSightParams
func (t *DatasourceDto_Params) MergeQuickSightParams(v QuickSightParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRedshiftParams returns the union data inside the DatasourceDto_Params as a RedshiftParams
func (t DatasourceDto_Params) AsRedshiftParams() (RedshiftParams, error) {
	var body RedshiftParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRedshiftParams overwrites any union data inside the DatasourceDto_Params as the provided RedshiftParams
func (t *DatasourceDto_Params) FromRedshiftParams(v RedshiftParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRedshiftParams performs a merge with any union data inside the DatasourceDto_Params, using the provided RedshiftParams
func (t *DatasourceDto_Params) MergeRedshiftParams(v RedshiftParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSnowflakeParams returns the union data inside the DatasourceDto_Params as a SnowflakeParams
func (t DatasourceDto_Params) AsSnowflakeParams() (SnowflakeParams, error) {
	var body SnowflakeParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSnowflakeParams overwrites any union data inside the DatasourceDto_Params as the provided SnowflakeParams
func (t *DatasourceDto_Params) FromSnowflakeParams(v SnowflakeParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSnowflakeParams performs a merge with any union data inside the DatasourceDto_Params, using the provided SnowflakeParams
func (t *DatasourceDto_Params) MergeSnowflakeParams(v SnowflakeParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSynapseParams returns the union data inside the DatasourceDto_Params as a SynapseParams
func (t DatasourceDto_Params) AsSynapseParams() (SynapseParams, error) {
	var body SynapseParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSynapseParams overwrites any union data inside the DatasourceDto_Params as the provided SynapseParams
func (t *DatasourceDto_Params) FromSynapseParams(v SynapseParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSynapseParams performs a merge with any union data inside the DatasourceDto_Params, using the provided SynapseParams
func (t *DatasourceDto_Params) MergeSynapseParams(v SynapseParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsTableauParams returns the union data inside the DatasourceDto_Params as a TableauParams
func (t DatasourceDto_Params) AsTableauParams() (TableauParams, error) {
	var body TableauParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromTableauParams overwrites any union data inside the DatasourceDto_Params as the provided TableauParams
func (t *DatasourceDto_Params) FromTableauParams(v TableauParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeTableauParams performs a merge with any union data inside the DatasourceDto_Params, using the provided TableauParams
func (t *DatasourceDto_Params) MergeTableauParams(v TableauParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsUnknownDatasourceParams returns the union data inside the DatasourceDto_Params as a UnknownDatasourceParams
func (t DatasourceDto_Params) AsUnknownDatasourceParams() (UnknownDatasourceParams, error) {
	var body UnknownDatasourceParams
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromUnknownDatasourceParams overwrites any union data inside the DatasourceDto_Params as the provided UnknownDatasourceParams
func (t *DatasourceDto_Params) FromUnknownDatasourceParams(v UnknownDatasourceParams) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeUnknownDatasourceParams performs a merge with any union data inside the DatasourceDto_Params, using the provided UnknownDatasourceParams
func (t *DatasourceDto_Params) MergeUnknownDatasourceParams(v UnknownDatasourceParams) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DatasourceDto_Params) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DatasourceDto_Params) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAccessTokenProviderDto returns the union data inside the DeclaredAssetDetailsDto_CreatedBy as a AccessTokenProviderDto
func (t DeclaredAssetDetailsDto_CreatedBy) AsAccessTokenProviderDto() (AccessTokenProviderDto, error) {
	var body AccessTokenProviderDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAccessTokenProviderDto overwrites any union data inside the DeclaredAssetDetailsDto_CreatedBy as the provided AccessTokenProviderDto
func (t *DeclaredAssetDetailsDto_CreatedBy) FromAccessTokenProviderDto(v AccessTokenProviderDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAccessTokenProviderDto performs a merge with any union data inside the DeclaredAssetDetailsDto_CreatedBy, using the provided AccessTokenProviderDto
func (t *DeclaredAssetDetailsDto_CreatedBy) MergeAccessTokenProviderDto(v AccessTokenProviderDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatasourceProviderDto returns the union data inside the DeclaredAssetDetailsDto_CreatedBy as a DatasourceProviderDto
func (t DeclaredAssetDetailsDto_CreatedBy) AsDatasourceProviderDto() (DatasourceProviderDto, error) {
	var body DatasourceProviderDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatasourceProviderDto overwrites any union data inside the DeclaredAssetDetailsDto_CreatedBy as the provided DatasourceProviderDto
func (t *DeclaredAssetDetailsDto_CreatedBy) FromDatasourceProviderDto(v DatasourceProviderDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatasourceProviderDto performs a merge with any union data inside the DeclaredAssetDetailsDto_CreatedBy, using the provided DatasourceProviderDto
func (t *DeclaredAssetDetailsDto_CreatedBy) MergeDatasourceProviderDto(v DatasourceProviderDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsGenericProviderDto returns the union data inside the DeclaredAssetDetailsDto_CreatedBy as a GenericProviderDto
func (t DeclaredAssetDetailsDto_CreatedBy) AsGenericProviderDto() (GenericProviderDto, error) {
	var body GenericProviderDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromGenericProviderDto overwrites any union data inside the DeclaredAssetDetailsDto_CreatedBy as the provided GenericProviderDto
func (t *DeclaredAssetDetailsDto_CreatedBy) FromGenericProviderDto(v GenericProviderDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeGenericProviderDto performs a merge with any union data inside the DeclaredAssetDetailsDto_CreatedBy, using the provided GenericProviderDto
func (t *DeclaredAssetDetailsDto_CreatedBy) MergeGenericProviderDto(v GenericProviderDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsUserProviderDto returns the union data inside the DeclaredAssetDetailsDto_CreatedBy as a UserProviderDto
func (t DeclaredAssetDetailsDto_CreatedBy) AsUserProviderDto() (UserProviderDto, error) {
	var body UserProviderDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromUserProviderDto overwrites any union data inside the DeclaredAssetDetailsDto_CreatedBy as the provided UserProviderDto
func (t *DeclaredAssetDetailsDto_CreatedBy) FromUserProviderDto(v UserProviderDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeUserProviderDto performs a merge with any union data inside the DeclaredAssetDetailsDto_CreatedBy, using the provided UserProviderDto
func (t *DeclaredAssetDetailsDto_CreatedBy) MergeUserProviderDto(v UserProviderDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DeclaredAssetDetailsDto_CreatedBy) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DeclaredAssetDetailsDto_CreatedBy) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAccessTokenProviderDto returns the union data inside the DeclaredAssetDetailsDto_LastModifiedBy as a AccessTokenProviderDto
func (t DeclaredAssetDetailsDto_LastModifiedBy) AsAccessTokenProviderDto() (AccessTokenProviderDto, error) {
	var body AccessTokenProviderDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAccessTokenProviderDto overwrites any union data inside the DeclaredAssetDetailsDto_LastModifiedBy as the provided AccessTokenProviderDto
func (t *DeclaredAssetDetailsDto_LastModifiedBy) FromAccessTokenProviderDto(v AccessTokenProviderDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAccessTokenProviderDto performs a merge with any union data inside the DeclaredAssetDetailsDto_LastModifiedBy, using the provided AccessTokenProviderDto
func (t *DeclaredAssetDetailsDto_LastModifiedBy) MergeAccessTokenProviderDto(v AccessTokenProviderDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatasourceProviderDto returns the union data inside the DeclaredAssetDetailsDto_LastModifiedBy as a DatasourceProviderDto
func (t DeclaredAssetDetailsDto_LastModifiedBy) AsDatasourceProviderDto() (DatasourceProviderDto, error) {
	var body DatasourceProviderDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatasourceProviderDto overwrites any union data inside the DeclaredAssetDetailsDto_LastModifiedBy as the provided DatasourceProviderDto
func (t *DeclaredAssetDetailsDto_LastModifiedBy) FromDatasourceProviderDto(v DatasourceProviderDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatasourceProviderDto performs a merge with any union data inside the DeclaredAssetDetailsDto_LastModifiedBy, using the provided DatasourceProviderDto
func (t *DeclaredAssetDetailsDto_LastModifiedBy) MergeDatasourceProviderDto(v DatasourceProviderDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsGenericProviderDto returns the union data inside the DeclaredAssetDetailsDto_LastModifiedBy as a GenericProviderDto
func (t DeclaredAssetDetailsDto_LastModifiedBy) AsGenericProviderDto() (GenericProviderDto, error) {
	var body GenericProviderDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromGenericProviderDto overwrites any union data inside the DeclaredAssetDetailsDto_LastModifiedBy as the provided GenericProviderDto
func (t *DeclaredAssetDetailsDto_LastModifiedBy) FromGenericProviderDto(v GenericProviderDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeGenericProviderDto performs a merge with any union data inside the DeclaredAssetDetailsDto_LastModifiedBy, using the provided GenericProviderDto
func (t *DeclaredAssetDetailsDto_LastModifiedBy) MergeGenericProviderDto(v GenericProviderDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsUserProviderDto returns the union data inside the DeclaredAssetDetailsDto_LastModifiedBy as a UserProviderDto
func (t DeclaredAssetDetailsDto_LastModifiedBy) AsUserProviderDto() (UserProviderDto, error) {
	var body UserProviderDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromUserProviderDto overwrites any union data inside the DeclaredAssetDetailsDto_LastModifiedBy as the provided UserProviderDto
func (t *DeclaredAssetDetailsDto_LastModifiedBy) FromUserProviderDto(v UserProviderDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeUserProviderDto performs a merge with any union data inside the DeclaredAssetDetailsDto_LastModifiedBy, using the provided UserProviderDto
func (t *DeclaredAssetDetailsDto_LastModifiedBy) MergeUserProviderDto(v UserProviderDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DeclaredAssetDetailsDto_LastModifiedBy) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DeclaredAssetDetailsDto_LastModifiedBy) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAssetDetailsDto returns the union data inside the DeclaredAssetOverview_Details as a AssetDetailsDto
func (t DeclaredAssetOverview_Details) AsAssetDetailsDto() (AssetDetailsDto, error) {
	var body AssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetDetailsDto overwrites any union data inside the DeclaredAssetOverview_Details as the provided AssetDetailsDto
func (t *DeclaredAssetOverview_Details) FromAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetDetailsDto performs a merge with any union data inside the DeclaredAssetOverview_Details, using the provided AssetDetailsDto
func (t *DeclaredAssetOverview_Details) MergeAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDagDetailsDto returns the union data inside the DeclaredAssetOverview_Details as a DagDetailsDto
func (t DeclaredAssetOverview_Details) AsDagDetailsDto() (DagDetailsDto, error) {
	var body DagDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDagDetailsDto overwrites any union data inside the DeclaredAssetOverview_Details as the provided DagDetailsDto
func (t *DeclaredAssetOverview_Details) FromDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDagDetailsDto performs a merge with any union data inside the DeclaredAssetOverview_Details, using the provided DagDetailsDto
func (t *DeclaredAssetOverview_Details) MergeDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatasetDetailsDto returns the union data inside the DeclaredAssetOverview_Details as a DatasetDetailsDto
func (t DeclaredAssetOverview_Details) AsDatasetDetailsDto() (DatasetDetailsDto, error) {
	var body DatasetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatasetDetailsDto overwrites any union data inside the DeclaredAssetOverview_Details as the provided DatasetDetailsDto
func (t *DeclaredAssetOverview_Details) FromDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatasetDetailsDto performs a merge with any union data inside the DeclaredAssetOverview_Details, using the provided DatasetDetailsDto
func (t *DeclaredAssetOverview_Details) MergeDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeclaredAssetDetailsDto returns the union data inside the DeclaredAssetOverview_Details as a DeclaredAssetDetailsDto
func (t DeclaredAssetOverview_Details) AsDeclaredAssetDetailsDto() (DeclaredAssetDetailsDto, error) {
	var body DeclaredAssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeclaredAssetDetailsDto overwrites any union data inside the DeclaredAssetOverview_Details as the provided DeclaredAssetDetailsDto
func (t *DeclaredAssetOverview_Details) FromDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeclaredAssetDetailsDto performs a merge with any union data inside the DeclaredAssetOverview_Details, using the provided DeclaredAssetDetailsDto
func (t *DeclaredAssetOverview_Details) MergeDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DeclaredAssetOverview_Details) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DeclaredAssetOverview_Details) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAssetDetailsDto returns the union data inside the ModelAssetOverview_Details as a AssetDetailsDto
func (t ModelAssetOverview_Details) AsAssetDetailsDto() (AssetDetailsDto, error) {
	var body AssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetDetailsDto overwrites any union data inside the ModelAssetOverview_Details as the provided AssetDetailsDto
func (t *ModelAssetOverview_Details) FromAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetDetailsDto performs a merge with any union data inside the ModelAssetOverview_Details, using the provided AssetDetailsDto
func (t *ModelAssetOverview_Details) MergeAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDagDetailsDto returns the union data inside the ModelAssetOverview_Details as a DagDetailsDto
func (t ModelAssetOverview_Details) AsDagDetailsDto() (DagDetailsDto, error) {
	var body DagDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDagDetailsDto overwrites any union data inside the ModelAssetOverview_Details as the provided DagDetailsDto
func (t *ModelAssetOverview_Details) FromDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDagDetailsDto performs a merge with any union data inside the ModelAssetOverview_Details, using the provided DagDetailsDto
func (t *ModelAssetOverview_Details) MergeDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatasetDetailsDto returns the union data inside the ModelAssetOverview_Details as a DatasetDetailsDto
func (t ModelAssetOverview_Details) AsDatasetDetailsDto() (DatasetDetailsDto, error) {
	var body DatasetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatasetDetailsDto overwrites any union data inside the ModelAssetOverview_Details as the provided DatasetDetailsDto
func (t *ModelAssetOverview_Details) FromDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatasetDetailsDto performs a merge with any union data inside the ModelAssetOverview_Details, using the provided DatasetDetailsDto
func (t *ModelAssetOverview_Details) MergeDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeclaredAssetDetailsDto returns the union data inside the ModelAssetOverview_Details as a DeclaredAssetDetailsDto
func (t ModelAssetOverview_Details) AsDeclaredAssetDetailsDto() (DeclaredAssetDetailsDto, error) {
	var body DeclaredAssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeclaredAssetDetailsDto overwrites any union data inside the ModelAssetOverview_Details as the provided DeclaredAssetDetailsDto
func (t *ModelAssetOverview_Details) FromDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeclaredAssetDetailsDto performs a merge with any union data inside the ModelAssetOverview_Details, using the provided DeclaredAssetDetailsDto
func (t *ModelAssetOverview_Details) MergeDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ModelAssetOverview_Details) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ModelAssetOverview_Details) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsPublicAirflowParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicAirflowParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicAirflowParametersDto() (PublicAirflowParametersDto, error) {
	var body PublicAirflowParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicAirflowParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicAirflowParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicAirflowParametersDto(v PublicAirflowParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicAirflowParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicAirflowParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicAirflowParametersDto(v PublicAirflowParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicAthenaParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicAthenaParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicAthenaParametersDto() (PublicAthenaParametersDto, error) {
	var body PublicAthenaParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicAthenaParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicAthenaParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicAthenaParametersDto(v PublicAthenaParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicAthenaParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicAthenaParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicAthenaParametersDto(v PublicAthenaParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicBigQueryParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicBigQueryParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicBigQueryParametersDto() (PublicBigQueryParametersDto, error) {
	var body PublicBigQueryParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicBigQueryParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicBigQueryParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicBigQueryParametersDto(v PublicBigQueryParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicBigQueryParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicBigQueryParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicBigQueryParametersDto(v PublicBigQueryParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicDatabricksParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicDatabricksParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicDatabricksParametersDto() (PublicDatabricksParametersDto, error) {
	var body PublicDatabricksParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicDatabricksParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicDatabricksParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicDatabricksParametersDto(v PublicDatabricksParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicDatabricksParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicDatabricksParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicDatabricksParametersDto(v PublicDatabricksParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicDbtCloudParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicDbtCloudParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicDbtCloudParametersDto() (PublicDbtCloudParametersDto, error) {
	var body PublicDbtCloudParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicDbtCloudParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicDbtCloudParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicDbtCloudParametersDto(v PublicDbtCloudParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicDbtCloudParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicDbtCloudParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicDbtCloudParametersDto(v PublicDbtCloudParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicDbtParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicDbtParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicDbtParametersDto() (PublicDbtParametersDto, error) {
	var body PublicDbtParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicDbtParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicDbtParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicDbtParametersDto(v PublicDbtParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicDbtParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicDbtParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicDbtParametersDto(v PublicDbtParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicDeclarativeParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicDeclarativeParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicDeclarativeParametersDto() (PublicDeclarativeParametersDto, error) {
	var body PublicDeclarativeParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicDeclarativeParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicDeclarativeParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicDeclarativeParametersDto(v PublicDeclarativeParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicDeclarativeParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicDeclarativeParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicDeclarativeParametersDto(v PublicDeclarativeParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicFivetranParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicFivetranParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicFivetranParametersDto() (PublicFivetranParametersDto, error) {
	var body PublicFivetranParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicFivetranParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicFivetranParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicFivetranParametersDto(v PublicFivetranParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicFivetranParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicFivetranParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicFivetranParametersDto(v PublicFivetranParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicHiveParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicHiveParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicHiveParametersDto() (PublicHiveParametersDto, error) {
	var body PublicHiveParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicHiveParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicHiveParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicHiveParametersDto(v PublicHiveParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicHiveParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicHiveParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicHiveParametersDto(v PublicHiveParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicLookerParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicLookerParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicLookerParametersDto() (PublicLookerParametersDto, error) {
	var body PublicLookerParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicLookerParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicLookerParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicLookerParametersDto(v PublicLookerParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicLookerParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicLookerParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicLookerParametersDto(v PublicLookerParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicMssqlParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicMssqlParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicMssqlParametersDto() (PublicMssqlParametersDto, error) {
	var body PublicMssqlParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicMssqlParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicMssqlParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicMssqlParametersDto(v PublicMssqlParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicMssqlParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicMssqlParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicMssqlParametersDto(v PublicMssqlParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicMysqlParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicMysqlParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicMysqlParametersDto() (PublicMysqlParametersDto, error) {
	var body PublicMysqlParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicMysqlParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicMysqlParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicMysqlParametersDto(v PublicMysqlParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicMysqlParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicMysqlParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicMysqlParametersDto(v PublicMysqlParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicOracleParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicOracleParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicOracleParametersDto() (PublicOracleParametersDto, error) {
	var body PublicOracleParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicOracleParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicOracleParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicOracleParametersDto(v PublicOracleParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicOracleParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicOracleParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicOracleParametersDto(v PublicOracleParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicPostgresqlParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicPostgresqlParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicPostgresqlParametersDto() (PublicPostgresqlParametersDto, error) {
	var body PublicPostgresqlParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicPostgresqlParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicPostgresqlParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicPostgresqlParametersDto(v PublicPostgresqlParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicPostgresqlParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicPostgresqlParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicPostgresqlParametersDto(v PublicPostgresqlParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicPowerBiParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicPowerBiParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicPowerBiParametersDto() (PublicPowerBiParametersDto, error) {
	var body PublicPowerBiParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicPowerBiParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicPowerBiParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicPowerBiParametersDto(v PublicPowerBiParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicPowerBiParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicPowerBiParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicPowerBiParametersDto(v PublicPowerBiParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicQuicksightParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicQuicksightParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicQuicksightParametersDto() (PublicQuicksightParametersDto, error) {
	var body PublicQuicksightParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicQuicksightParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicQuicksightParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicQuicksightParametersDto(v PublicQuicksightParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicQuicksightParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicQuicksightParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicQuicksightParametersDto(v PublicQuicksightParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicRedshiftParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicRedshiftParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicRedshiftParametersDto() (PublicRedshiftParametersDto, error) {
	var body PublicRedshiftParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicRedshiftParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicRedshiftParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicRedshiftParametersDto(v PublicRedshiftParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicRedshiftParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicRedshiftParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicRedshiftParametersDto(v PublicRedshiftParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicSnowflakeParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicSnowflakeParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicSnowflakeParametersDto() (PublicSnowflakeParametersDto, error) {
	var body PublicSnowflakeParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicSnowflakeParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicSnowflakeParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicSnowflakeParametersDto(v PublicSnowflakeParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicSnowflakeParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicSnowflakeParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicSnowflakeParametersDto(v PublicSnowflakeParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicSynapseParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicSynapseParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicSynapseParametersDto() (PublicSynapseParametersDto, error) {
	var body PublicSynapseParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicSynapseParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicSynapseParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicSynapseParametersDto(v PublicSynapseParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicSynapseParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicSynapseParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicSynapseParametersDto(v PublicSynapseParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPublicTableauParametersDto returns the union data inside the PublicCreateSourceDto_Parameters as a PublicTableauParametersDto
func (t PublicCreateSourceDto_Parameters) AsPublicTableauParametersDto() (PublicTableauParametersDto, error) {
	var body PublicTableauParametersDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPublicTableauParametersDto overwrites any union data inside the PublicCreateSourceDto_Parameters as the provided PublicTableauParametersDto
func (t *PublicCreateSourceDto_Parameters) FromPublicTableauParametersDto(v PublicTableauParametersDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePublicTableauParametersDto performs a merge with any union data inside the PublicCreateSourceDto_Parameters, using the provided PublicTableauParametersDto
func (t *PublicCreateSourceDto_Parameters) MergePublicTableauParametersDto(v PublicTableauParametersDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t PublicCreateSourceDto_Parameters) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *PublicCreateSourceDto_Parameters) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAccessTokenProviderDto returns the union data inside the RuleCatalogAssetDto_Provider as a AccessTokenProviderDto
func (t RuleCatalogAssetDto_Provider) AsAccessTokenProviderDto() (AccessTokenProviderDto, error) {
	var body AccessTokenProviderDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAccessTokenProviderDto overwrites any union data inside the RuleCatalogAssetDto_Provider as the provided AccessTokenProviderDto
func (t *RuleCatalogAssetDto_Provider) FromAccessTokenProviderDto(v AccessTokenProviderDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAccessTokenProviderDto performs a merge with any union data inside the RuleCatalogAssetDto_Provider, using the provided AccessTokenProviderDto
func (t *RuleCatalogAssetDto_Provider) MergeAccessTokenProviderDto(v AccessTokenProviderDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatasourceProviderDto returns the union data inside the RuleCatalogAssetDto_Provider as a DatasourceProviderDto
func (t RuleCatalogAssetDto_Provider) AsDatasourceProviderDto() (DatasourceProviderDto, error) {
	var body DatasourceProviderDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatasourceProviderDto overwrites any union data inside the RuleCatalogAssetDto_Provider as the provided DatasourceProviderDto
func (t *RuleCatalogAssetDto_Provider) FromDatasourceProviderDto(v DatasourceProviderDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatasourceProviderDto performs a merge with any union data inside the RuleCatalogAssetDto_Provider, using the provided DatasourceProviderDto
func (t *RuleCatalogAssetDto_Provider) MergeDatasourceProviderDto(v DatasourceProviderDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsGenericProviderDto returns the union data inside the RuleCatalogAssetDto_Provider as a GenericProviderDto
func (t RuleCatalogAssetDto_Provider) AsGenericProviderDto() (GenericProviderDto, error) {
	var body GenericProviderDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromGenericProviderDto overwrites any union data inside the RuleCatalogAssetDto_Provider as the provided GenericProviderDto
func (t *RuleCatalogAssetDto_Provider) FromGenericProviderDto(v GenericProviderDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeGenericProviderDto performs a merge with any union data inside the RuleCatalogAssetDto_Provider, using the provided GenericProviderDto
func (t *RuleCatalogAssetDto_Provider) MergeGenericProviderDto(v GenericProviderDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsUserProviderDto returns the union data inside the RuleCatalogAssetDto_Provider as a UserProviderDto
func (t RuleCatalogAssetDto_Provider) AsUserProviderDto() (UserProviderDto, error) {
	var body UserProviderDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromUserProviderDto overwrites any union data inside the RuleCatalogAssetDto_Provider as the provided UserProviderDto
func (t *RuleCatalogAssetDto_Provider) FromUserProviderDto(v UserProviderDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeUserProviderDto performs a merge with any union data inside the RuleCatalogAssetDto_Provider, using the provided UserProviderDto
func (t *RuleCatalogAssetDto_Provider) MergeUserProviderDto(v UserProviderDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t RuleCatalogAssetDto_Provider) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *RuleCatalogAssetDto_Provider) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAssigneesChangeIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a AssigneesChangeIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsAssigneesChangeIncidentEventDto() (AssigneesChangeIncidentEventDto, error) {
	var body AssigneesChangeIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssigneesChangeIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided AssigneesChangeIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromAssigneesChangeIncidentEventDto(v AssigneesChangeIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssigneesChangeIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided AssigneesChangeIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeAssigneesChangeIncidentEventDto(v AssigneesChangeIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCollaborationToolDisconnectedIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a CollaborationToolDisconnectedIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsCollaborationToolDisconnectedIncidentEventDto() (CollaborationToolDisconnectedIncidentEventDto, error) {
	var body CollaborationToolDisconnectedIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCollaborationToolDisconnectedIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided CollaborationToolDisconnectedIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromCollaborationToolDisconnectedIncidentEventDto(v CollaborationToolDisconnectedIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCollaborationToolDisconnectedIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided CollaborationToolDisconnectedIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeCollaborationToolDisconnectedIncidentEventDto(v CollaborationToolDisconnectedIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCollaborationToolItemLinkedIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a CollaborationToolItemLinkedIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsCollaborationToolItemLinkedIncidentEventDto() (CollaborationToolItemLinkedIncidentEventDto, error) {
	var body CollaborationToolItemLinkedIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCollaborationToolItemLinkedIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided CollaborationToolItemLinkedIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromCollaborationToolItemLinkedIncidentEventDto(v CollaborationToolItemLinkedIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCollaborationToolItemLinkedIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided CollaborationToolItemLinkedIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeCollaborationToolItemLinkedIncidentEventDto(v CollaborationToolItemLinkedIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCollaborationToolItemUnlinkedIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a CollaborationToolItemUnlinkedIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsCollaborationToolItemUnlinkedIncidentEventDto() (CollaborationToolItemUnlinkedIncidentEventDto, error) {
	var body CollaborationToolItemUnlinkedIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCollaborationToolItemUnlinkedIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided CollaborationToolItemUnlinkedIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromCollaborationToolItemUnlinkedIncidentEventDto(v CollaborationToolItemUnlinkedIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCollaborationToolItemUnlinkedIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided CollaborationToolItemUnlinkedIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeCollaborationToolItemUnlinkedIncidentEventDto(v CollaborationToolItemUnlinkedIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCollaborationToolStatusChangeEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a CollaborationToolStatusChangeEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsCollaborationToolStatusChangeEventDto() (CollaborationToolStatusChangeEventDto, error) {
	var body CollaborationToolStatusChangeEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCollaborationToolStatusChangeEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided CollaborationToolStatusChangeEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromCollaborationToolStatusChangeEventDto(v CollaborationToolStatusChangeEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCollaborationToolStatusChangeEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided CollaborationToolStatusChangeEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeCollaborationToolStatusChangeEventDto(v CollaborationToolStatusChangeEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCommentIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a CommentIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsCommentIncidentEventDto() (CommentIncidentEventDto, error) {
	var body CommentIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCommentIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided CommentIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromCommentIncidentEventDto(v CommentIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCommentIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided CommentIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeCommentIncidentEventDto(v CommentIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreationByRuleRunIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a CreationByRuleRunIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsCreationByRuleRunIncidentEventDto() (CreationByRuleRunIncidentEventDto, error) {
	var body CreationByRuleRunIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreationByRuleRunIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided CreationByRuleRunIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromCreationByRuleRunIncidentEventDto(v CreationByRuleRunIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreationByRuleRunIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided CreationByRuleRunIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeCreationByRuleRunIncidentEventDto(v CreationByRuleRunIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCreationByUserIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a CreationByUserIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsCreationByUserIncidentEventDto() (CreationByUserIncidentEventDto, error) {
	var body CreationByUserIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCreationByUserIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided CreationByUserIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromCreationByUserIncidentEventDto(v CreationByUserIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCreationByUserIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided CreationByUserIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeCreationByUserIncidentEventDto(v CreationByUserIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsNameChangeIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a NameChangeIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsNameChangeIncidentEventDto() (NameChangeIncidentEventDto, error) {
	var body NameChangeIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromNameChangeIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided NameChangeIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromNameChangeIncidentEventDto(v NameChangeIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeNameChangeIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided NameChangeIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeNameChangeIncidentEventDto(v NameChangeIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsNewFailuresIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a NewFailuresIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsNewFailuresIncidentEventDto() (NewFailuresIncidentEventDto, error) {
	var body NewFailuresIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromNewFailuresIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided NewFailuresIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromNewFailuresIncidentEventDto(v NewFailuresIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeNewFailuresIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided NewFailuresIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeNewFailuresIncidentEventDto(v NewFailuresIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRulesAddedIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a RulesAddedIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsRulesAddedIncidentEventDto() (RulesAddedIncidentEventDto, error) {
	var body RulesAddedIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRulesAddedIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided RulesAddedIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromRulesAddedIncidentEventDto(v RulesAddedIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRulesAddedIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided RulesAddedIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeRulesAddedIncidentEventDto(v RulesAddedIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRulesMovedFromIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a RulesMovedFromIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsRulesMovedFromIncidentEventDto() (RulesMovedFromIncidentEventDto, error) {
	var body RulesMovedFromIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRulesMovedFromIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided RulesMovedFromIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromRulesMovedFromIncidentEventDto(v RulesMovedFromIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRulesMovedFromIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided RulesMovedFromIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeRulesMovedFromIncidentEventDto(v RulesMovedFromIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRulesMovedToIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a RulesMovedToIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsRulesMovedToIncidentEventDto() (RulesMovedToIncidentEventDto, error) {
	var body RulesMovedToIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRulesMovedToIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided RulesMovedToIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromRulesMovedToIncidentEventDto(v RulesMovedToIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRulesMovedToIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided RulesMovedToIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeRulesMovedToIncidentEventDto(v RulesMovedToIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSeverityChangeIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a SeverityChangeIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsSeverityChangeIncidentEventDto() (SeverityChangeIncidentEventDto, error) {
	var body SeverityChangeIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSeverityChangeIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided SeverityChangeIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromSeverityChangeIncidentEventDto(v SeverityChangeIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSeverityChangeIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided SeverityChangeIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeSeverityChangeIncidentEventDto(v SeverityChangeIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsStatusChangeIncidentEventDto returns the union data inside the SearchCollectionIncidentEventDto_Data_Item as a StatusChangeIncidentEventDto
func (t SearchCollectionIncidentEventDto_Data_Item) AsStatusChangeIncidentEventDto() (StatusChangeIncidentEventDto, error) {
	var body StatusChangeIncidentEventDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStatusChangeIncidentEventDto overwrites any union data inside the SearchCollectionIncidentEventDto_Data_Item as the provided StatusChangeIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) FromStatusChangeIncidentEventDto(v StatusChangeIncidentEventDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStatusChangeIncidentEventDto performs a merge with any union data inside the SearchCollectionIncidentEventDto_Data_Item, using the provided StatusChangeIncidentEventDto
func (t *SearchCollectionIncidentEventDto_Data_Item) MergeStatusChangeIncidentEventDto(v StatusChangeIncidentEventDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t SearchCollectionIncidentEventDto_Data_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *SearchCollectionIncidentEventDto_Data_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAssetDetailsDto returns the union data inside the TransformationAssetOverview_Details as a AssetDetailsDto
func (t TransformationAssetOverview_Details) AsAssetDetailsDto() (AssetDetailsDto, error) {
	var body AssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetDetailsDto overwrites any union data inside the TransformationAssetOverview_Details as the provided AssetDetailsDto
func (t *TransformationAssetOverview_Details) FromAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetDetailsDto performs a merge with any union data inside the TransformationAssetOverview_Details, using the provided AssetDetailsDto
func (t *TransformationAssetOverview_Details) MergeAssetDetailsDto(v AssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDagDetailsDto returns the union data inside the TransformationAssetOverview_Details as a DagDetailsDto
func (t TransformationAssetOverview_Details) AsDagDetailsDto() (DagDetailsDto, error) {
	var body DagDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDagDetailsDto overwrites any union data inside the TransformationAssetOverview_Details as the provided DagDetailsDto
func (t *TransformationAssetOverview_Details) FromDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDagDetailsDto performs a merge with any union data inside the TransformationAssetOverview_Details, using the provided DagDetailsDto
func (t *TransformationAssetOverview_Details) MergeDagDetailsDto(v DagDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDatasetDetailsDto returns the union data inside the TransformationAssetOverview_Details as a DatasetDetailsDto
func (t TransformationAssetOverview_Details) AsDatasetDetailsDto() (DatasetDetailsDto, error) {
	var body DatasetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDatasetDetailsDto overwrites any union data inside the TransformationAssetOverview_Details as the provided DatasetDetailsDto
func (t *TransformationAssetOverview_Details) FromDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDatasetDetailsDto performs a merge with any union data inside the TransformationAssetOverview_Details, using the provided DatasetDetailsDto
func (t *TransformationAssetOverview_Details) MergeDatasetDetailsDto(v DatasetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeclaredAssetDetailsDto returns the union data inside the TransformationAssetOverview_Details as a DeclaredAssetDetailsDto
func (t TransformationAssetOverview_Details) AsDeclaredAssetDetailsDto() (DeclaredAssetDetailsDto, error) {
	var body DeclaredAssetDetailsDto
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeclaredAssetDetailsDto overwrites any union data inside the TransformationAssetOverview_Details as the provided DeclaredAssetDetailsDto
func (t *TransformationAssetOverview_Details) FromDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeclaredAssetDetailsDto performs a merge with any union data inside the TransformationAssetOverview_Details, using the provided DeclaredAssetDetailsDto
func (t *TransformationAssetOverview_Details) MergeDeclaredAssetDetailsDto(v DeclaredAssetDetailsDto) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t TransformationAssetOverview_Details) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *TransformationAssetOverview_Details) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// RequestEditorFn  is the function signature for the RequestEditor callback function
type RequestEditorFn func(ctx context.Context, req *http.Request) error

// Doer performs HTTP requests.
//
// The standard http.Client implements this interface.
type HttpRequestDoer interface {
	Do(req *http.Request) (*http.Response, error)
}

// Client which conforms to the OpenAPI3 specification for this service.
type Client struct {
	// The endpoint of the server conforming to this interface, with scheme,
	// https://api.deepmap.com for example. This can contain a path relative
	// to the server, such as https://api.deepmap.com/dev-test, and all the
	// paths in the swagger spec will be appended to the server.
	Server string

	// Doer for performing requests, typically a *http.Client with any
	// customized settings, such as certificate chains.
	Client HttpRequestDoer

	// A list of callbacks for modifying requests which are generated before sending over
	// the network.
	RequestEditors []RequestEditorFn
}

// ClientOption allows setting custom parameters during construction
type ClientOption func(*Client) error

// Creates a new Client, with reasonable defaults
func NewClient(server string, opts ...ClientOption) (*Client, error) {
	// create a client with sane default values
	client := Client{
		Server: server,
	}
	// mutate client and add all optional params
	for _, o := range opts {
		if err := o(&client); err != nil {
			return nil, err
		}
	}
	// ensure the server URL always has a trailing slash
	if !strings.HasSuffix(client.Server, "/") {
		client.Server += "/"
	}
	// create httpClient, if not already present
	if client.Client == nil {
		client.Client = &http.Client{}
	}
	return &client, nil
}

// WithHTTPClient allows overriding the default Doer, which is
// automatically created using http.Client. This is useful for tests.
func WithHTTPClient(doer HttpRequestDoer) ClientOption {
	return func(c *Client) error {
		c.Client = doer
		return nil
	}
}

// WithRequestEditorFn allows setting up a callback function, which will be
// called right before sending the request. This can be used to mutate the request.
func WithRequestEditorFn(fn RequestEditorFn) ClientOption {
	return func(c *Client) error {
		c.RequestEditors = append(c.RequestEditors, fn)
		return nil
	}
}

// The interface specification for the client above.
type ClientInterface interface {
	// ExportAssetDescriptions request
	ExportAssetDescriptions(ctx context.Context, params *ExportAssetDescriptionsParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// ExportAssetDescriptionsTemplate request
	ExportAssetDescriptionsTemplate(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetAllAssetsWithBody request with any body
	GetAllAssetsWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	GetAllAssets(ctx context.Context, body GetAllAssetsJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetAssetByUrn request
	GetAssetByUrn(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetAssetOverviewByUrn request
	GetAssetOverviewByUrn(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetAssetSchemaByUrnAndVersion request
	GetAssetSchemaByUrnAndVersion(ctx context.Context, urn string, version string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetDashboardByTypeAndSourceUrlWithBody request with any body
	GetDashboardByTypeAndSourceUrlWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	GetDashboardByTypeAndSourceUrl(ctx context.Context, body GetDashboardByTypeAndSourceUrlJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// UpdateDatasetFieldWithBody request with any body
	UpdateDatasetFieldWithBody(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	UpdateDatasetField(ctx context.Context, id openapi_types.UUID, body UpdateDatasetFieldJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetAllDataset request
	GetAllDataset(ctx context.Context, params *GetAllDatasetParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetAllDatasource request
	GetAllDatasource(ctx context.Context, params *GetAllDatasourceParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// CreateDatasourceWithBody request with any body
	CreateDatasourceWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	CreateDatasource(ctx context.Context, body CreateDatasourceJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// TestDatasourceConnectionWithBody request with any body
	TestDatasourceConnectionWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	TestDatasourceConnection(ctx context.Context, body TestDatasourceConnectionJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// DeleteDatasourceById request
	DeleteDatasourceById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetDatasourceById request
	GetDatasourceById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error)

	// DatasourceIngestionManualRun request
	DatasourceIngestionManualRun(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetDatasourceIngestionRuns request
	GetDatasourceIngestionRuns(ctx context.Context, id openapi_types.UUID, params *GetDatasourceIngestionRunsParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetAllDomains request
	GetAllDomains(ctx context.Context, params *GetAllDomainsParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// CreateDomainUiWithBody request with any body
	CreateDomainUiWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	CreateDomainUi(ctx context.Context, body CreateDomainUiJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// DeleteDomain request
	DeleteDomain(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetDomainById request
	GetDomainById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error)

	// UpdateDomainUiWithBody request with any body
	UpdateDomainUiWithBody(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	UpdateDomainUi(ctx context.Context, id openapi_types.UUID, body UpdateDomainUiJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetDownstreamImpactedAssets request
	GetDownstreamImpactedAssets(ctx context.Context, params *GetDownstreamImpactedAssetsParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetAllIncidentWithBody request with any body
	GetAllIncidentWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	GetAllIncident(ctx context.Context, body GetAllIncidentJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetIncidentByIssueNumber request
	GetIncidentByIssueNumber(ctx context.Context, issueNo int32, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetAggregatedIncidentEventsByIssueNumber request
	GetAggregatedIncidentEventsByIssueNumber(ctx context.Context, issueNo int32, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetIncidentScopeByIssueNumber request
	GetIncidentScopeByIssueNumber(ctx context.Context, issueNo int32, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetLineageByUrn request
	GetLineageByUrn(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetLineageDownstreamsByUrn request
	GetLineageDownstreamsByUrn(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetLineagesByUrn request
	GetLineagesByUrn(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetLineageUpstreamsByUrn request
	GetLineageUpstreamsByUrn(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// DeleteSiffletRuleById request
	DeleteSiffletRuleById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetSiffletRuleById request
	GetSiffletRuleById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error)

	// SiffletRuleRunDebugWithBody request with any body
	SiffletRuleRunDebugWithBody(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	SiffletRuleRunDebug(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, body SiffletRuleRunDebugJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// SiffletRuleRunDownloadByRunWithBody request with any body
	SiffletRuleRunDownloadByRunWithBody(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, params *SiffletRuleRunDownloadByRunParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	SiffletRuleRunDownloadByRun(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, params *SiffletRuleRunDownloadByRunParams, body SiffletRuleRunDownloadByRunJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetSiffletRuleRunDetails request
	GetSiffletRuleRunDetails(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, params *GetSiffletRuleRunDetailsParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// DeleteSecret request
	DeleteSecret(ctx context.Context, params *DeleteSecretParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetSecret request
	GetSecret(ctx context.Context, params *GetSecretParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetAllSecrets request
	GetAllSecrets(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetDataStack request
	GetDataStack(ctx context.Context, params *GetDataStackParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetIncidentsSummary request
	GetIncidentsSummary(ctx context.Context, params *GetIncidentsSummaryParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetRulesSummary request
	GetRulesSummary(ctx context.Context, params *GetRulesSummaryParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetAllTag request
	GetAllTag(ctx context.Context, params *GetAllTagParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// CreateTagWithBody request with any body
	CreateTagWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	CreateTag(ctx context.Context, body CreateTagJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// DeleteTag request
	DeleteTag(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetTagById request
	GetTagById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error)

	// UpdateTagWithBody request with any body
	UpdateTagWithBody(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	UpdateTag(ctx context.Context, id openapi_types.UUID, body UpdateTagJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetAllTerm request
	GetAllTerm(ctx context.Context, params *GetAllTermParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// CreateTermWithBody request with any body
	CreateTermWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	CreateTerm(ctx context.Context, body CreateTermJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// DeleteTerm request
	DeleteTerm(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetTermById request
	GetTermById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error)

	// UpdateTermWithBody request with any body
	UpdateTermWithBody(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	UpdateTerm(ctx context.Context, id openapi_types.UUID, body UpdateTermJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// TestSourceConnectionWithBody request with any body
	TestSourceConnectionWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	TestSourceConnection(ctx context.Context, body TestSourceConnectionJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PublicSourceIngestionManualRun request
	PublicSourceIngestionManualRun(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error)

	// ListWorkspaces request
	ListWorkspaces(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)
}

func (c *Client) ExportAssetDescriptions(ctx context.Context, params *ExportAssetDescriptionsParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewExportAssetDescriptionsRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) ExportAssetDescriptionsTemplate(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewExportAssetDescriptionsTemplateRequest(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAllAssetsWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAllAssetsRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAllAssets(ctx context.Context, body GetAllAssetsJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAllAssetsRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAssetByUrn(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAssetByUrnRequest(c.Server, urn)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAssetOverviewByUrn(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAssetOverviewByUrnRequest(c.Server, urn)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAssetSchemaByUrnAndVersion(ctx context.Context, urn string, version string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAssetSchemaByUrnAndVersionRequest(c.Server, urn, version)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetDashboardByTypeAndSourceUrlWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetDashboardByTypeAndSourceUrlRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetDashboardByTypeAndSourceUrl(ctx context.Context, body GetDashboardByTypeAndSourceUrlJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetDashboardByTypeAndSourceUrlRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) UpdateDatasetFieldWithBody(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewUpdateDatasetFieldRequestWithBody(c.Server, id, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) UpdateDatasetField(ctx context.Context, id openapi_types.UUID, body UpdateDatasetFieldJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewUpdateDatasetFieldRequest(c.Server, id, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAllDataset(ctx context.Context, params *GetAllDatasetParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAllDatasetRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAllDatasource(ctx context.Context, params *GetAllDatasourceParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAllDatasourceRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateDatasourceWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateDatasourceRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateDatasource(ctx context.Context, body CreateDatasourceJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateDatasourceRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) TestDatasourceConnectionWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewTestDatasourceConnectionRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) TestDatasourceConnection(ctx context.Context, body TestDatasourceConnectionJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewTestDatasourceConnectionRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) DeleteDatasourceById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDeleteDatasourceByIdRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetDatasourceById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetDatasourceByIdRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) DatasourceIngestionManualRun(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDatasourceIngestionManualRunRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetDatasourceIngestionRuns(ctx context.Context, id openapi_types.UUID, params *GetDatasourceIngestionRunsParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetDatasourceIngestionRunsRequest(c.Server, id, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAllDomains(ctx context.Context, params *GetAllDomainsParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAllDomainsRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateDomainUiWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateDomainUiRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateDomainUi(ctx context.Context, body CreateDomainUiJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateDomainUiRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) DeleteDomain(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDeleteDomainRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetDomainById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetDomainByIdRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) UpdateDomainUiWithBody(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewUpdateDomainUiRequestWithBody(c.Server, id, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) UpdateDomainUi(ctx context.Context, id openapi_types.UUID, body UpdateDomainUiJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewUpdateDomainUiRequest(c.Server, id, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetDownstreamImpactedAssets(ctx context.Context, params *GetDownstreamImpactedAssetsParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetDownstreamImpactedAssetsRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAllIncidentWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAllIncidentRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAllIncident(ctx context.Context, body GetAllIncidentJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAllIncidentRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetIncidentByIssueNumber(ctx context.Context, issueNo int32, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetIncidentByIssueNumberRequest(c.Server, issueNo)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAggregatedIncidentEventsByIssueNumber(ctx context.Context, issueNo int32, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAggregatedIncidentEventsByIssueNumberRequest(c.Server, issueNo)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetIncidentScopeByIssueNumber(ctx context.Context, issueNo int32, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetIncidentScopeByIssueNumberRequest(c.Server, issueNo)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetLineageByUrn(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetLineageByUrnRequest(c.Server, urn)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetLineageDownstreamsByUrn(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetLineageDownstreamsByUrnRequest(c.Server, urn)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetLineagesByUrn(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetLineagesByUrnRequest(c.Server, urn)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetLineageUpstreamsByUrn(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetLineageUpstreamsByUrnRequest(c.Server, urn)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) DeleteSiffletRuleById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDeleteSiffletRuleByIdRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetSiffletRuleById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetSiffletRuleByIdRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) SiffletRuleRunDebugWithBody(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewSiffletRuleRunDebugRequestWithBody(c.Server, id, runId, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) SiffletRuleRunDebug(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, body SiffletRuleRunDebugJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewSiffletRuleRunDebugRequest(c.Server, id, runId, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) SiffletRuleRunDownloadByRunWithBody(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, params *SiffletRuleRunDownloadByRunParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewSiffletRuleRunDownloadByRunRequestWithBody(c.Server, id, runId, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) SiffletRuleRunDownloadByRun(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, params *SiffletRuleRunDownloadByRunParams, body SiffletRuleRunDownloadByRunJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewSiffletRuleRunDownloadByRunRequest(c.Server, id, runId, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetSiffletRuleRunDetails(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, params *GetSiffletRuleRunDetailsParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetSiffletRuleRunDetailsRequest(c.Server, id, runId, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) DeleteSecret(ctx context.Context, params *DeleteSecretParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDeleteSecretRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetSecret(ctx context.Context, params *GetSecretParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetSecretRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAllSecrets(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAllSecretsRequest(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetDataStack(ctx context.Context, params *GetDataStackParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetDataStackRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetIncidentsSummary(ctx context.Context, params *GetIncidentsSummaryParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetIncidentsSummaryRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetRulesSummary(ctx context.Context, params *GetRulesSummaryParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetRulesSummaryRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAllTag(ctx context.Context, params *GetAllTagParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAllTagRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateTagWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateTagRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateTag(ctx context.Context, body CreateTagJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateTagRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) DeleteTag(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDeleteTagRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetTagById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetTagByIdRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) UpdateTagWithBody(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewUpdateTagRequestWithBody(c.Server, id, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) UpdateTag(ctx context.Context, id openapi_types.UUID, body UpdateTagJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewUpdateTagRequest(c.Server, id, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetAllTerm(ctx context.Context, params *GetAllTermParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAllTermRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateTermWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateTermRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateTerm(ctx context.Context, body CreateTermJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateTermRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) DeleteTerm(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDeleteTermRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetTermById(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetTermByIdRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) UpdateTermWithBody(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewUpdateTermRequestWithBody(c.Server, id, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) UpdateTerm(ctx context.Context, id openapi_types.UUID, body UpdateTermJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewUpdateTermRequest(c.Server, id, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) TestSourceConnectionWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewTestSourceConnectionRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) TestSourceConnection(ctx context.Context, body TestSourceConnectionJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewTestSourceConnectionRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PublicSourceIngestionManualRun(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPublicSourceIngestionManualRunRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) ListWorkspaces(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewListWorkspacesRequest(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

// NewExportAssetDescriptionsRequest generates requests for ExportAssetDescriptions
func NewExportAssetDescriptionsRequest(server string, params *ExportAssetDescriptionsParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/assets/_export-descriptions")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Sort != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sort", runtime.ParamLocationQuery, *params.Sort); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.TextSearch != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "textSearch", runtime.ParamLocationQuery, *params.TextSearch); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.HealthStatus != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "healthStatus", runtime.ParamLocationQuery, *params.HealthStatus); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.AssetFilterType != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "assetFilterType", runtime.ParamLocationQuery, *params.AssetFilterType); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Usage != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "usage", runtime.ParamLocationQuery, *params.Usage); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Tag != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "tag", runtime.ParamLocationQuery, *params.Tag); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Term != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "term", runtime.ParamLocationQuery, *params.Term); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Owner != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "owner", runtime.ParamLocationQuery, *params.Owner); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Ingestion != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "ingestion", runtime.ParamLocationQuery, *params.Ingestion); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Datasource != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "datasource", runtime.ParamLocationQuery, *params.Datasource); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Urn != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "urn", runtime.ParamLocationQuery, *params.Urn); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Domain != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "domain", runtime.ParamLocationQuery, *params.Domain); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.SearchInFieldsAndDescriptions != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "searchInFieldsAndDescriptions", runtime.ParamLocationQuery, *params.SearchInFieldsAndDescriptions); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Page != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "page", runtime.ParamLocationQuery, *params.Page); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.ItemsPerPage != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "itemsPerPage", runtime.ParamLocationQuery, *params.ItemsPerPage); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewExportAssetDescriptionsTemplateRequest generates requests for ExportAssetDescriptionsTemplate
func NewExportAssetDescriptionsTemplateRequest(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/assets/_export-descriptions-template")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetAllAssetsRequest calls the generic GetAllAssets builder with application/json body
func NewGetAllAssetsRequest(server string, body GetAllAssetsJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewGetAllAssetsRequestWithBody(server, "application/json", bodyReader)
}

// NewGetAllAssetsRequestWithBody generates requests for GetAllAssets with any type of body
func NewGetAllAssetsRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/assets/search")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewGetAssetByUrnRequest generates requests for GetAssetByUrn
func NewGetAssetByUrnRequest(server string, urn string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "urn", runtime.ParamLocationPath, urn)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/assets/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetAssetOverviewByUrnRequest generates requests for GetAssetOverviewByUrn
func NewGetAssetOverviewByUrnRequest(server string, urn string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "urn", runtime.ParamLocationPath, urn)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/assets/%s/overview", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetAssetSchemaByUrnAndVersionRequest generates requests for GetAssetSchemaByUrnAndVersion
func NewGetAssetSchemaByUrnAndVersionRequest(server string, urn string, version string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "urn", runtime.ParamLocationPath, urn)
	if err != nil {
		return nil, err
	}

	var pathParam1 string

	pathParam1, err = runtime.StyleParamWithLocation("simple", false, "version", runtime.ParamLocationPath, version)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/assets/%s/schema/%s", pathParam0, pathParam1)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetDashboardByTypeAndSourceUrlRequest calls the generic GetDashboardByTypeAndSourceUrl builder with application/json body
func NewGetDashboardByTypeAndSourceUrlRequest(server string, body GetDashboardByTypeAndSourceUrlJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewGetDashboardByTypeAndSourceUrlRequestWithBody(server, "application/json", bodyReader)
}

// NewGetDashboardByTypeAndSourceUrlRequestWithBody generates requests for GetDashboardByTypeAndSourceUrl with any type of body
func NewGetDashboardByTypeAndSourceUrlRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/dashboards/with-incidents")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewUpdateDatasetFieldRequest calls the generic UpdateDatasetField builder with application/json body
func NewUpdateDatasetFieldRequest(server string, id openapi_types.UUID, body UpdateDatasetFieldJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewUpdateDatasetFieldRequestWithBody(server, id, "application/json", bodyReader)
}

// NewUpdateDatasetFieldRequestWithBody generates requests for UpdateDatasetField with any type of body
func NewUpdateDatasetFieldRequestWithBody(server string, id openapi_types.UUID, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/dataset-fields/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PATCH", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewGetAllDatasetRequest generates requests for GetAllDataset
func NewGetAllDatasetRequest(server string, params *GetAllDatasetParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/datasets")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.TextSearch != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "textSearch", runtime.ParamLocationQuery, *params.TextSearch); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Urn != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "urn", runtime.ParamLocationQuery, *params.Urn); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Domain != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "domain", runtime.ParamLocationQuery, *params.Domain); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Page != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "page", runtime.ParamLocationQuery, *params.Page); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.ItemsPerPage != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "itemsPerPage", runtime.ParamLocationQuery, *params.ItemsPerPage); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Sort != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sort", runtime.ParamLocationQuery, *params.Sort); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetAllDatasourceRequest generates requests for GetAllDatasource
func NewGetAllDatasourceRequest(server string, params *GetAllDatasourceParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/datasources")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.TextSearch != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "textSearch", runtime.ParamLocationQuery, *params.TextSearch); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Tag != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "tag", runtime.ParamLocationQuery, *params.Tag); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Technology != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "technology", runtime.ParamLocationQuery, *params.Technology); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Ingestion != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "ingestion", runtime.ParamLocationQuery, *params.Ingestion); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Page != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "page", runtime.ParamLocationQuery, *params.Page); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.ItemsPerPage != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "itemsPerPage", runtime.ParamLocationQuery, *params.ItemsPerPage); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Sort != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sort", runtime.ParamLocationQuery, *params.Sort); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewCreateDatasourceRequest calls the generic CreateDatasource builder with application/json body
func NewCreateDatasourceRequest(server string, body CreateDatasourceJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewCreateDatasourceRequestWithBody(server, "application/json", bodyReader)
}

// NewCreateDatasourceRequestWithBody generates requests for CreateDatasource with any type of body
func NewCreateDatasourceRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/datasources")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewTestDatasourceConnectionRequest calls the generic TestDatasourceConnection builder with application/json body
func NewTestDatasourceConnectionRequest(server string, body TestDatasourceConnectionJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewTestDatasourceConnectionRequestWithBody(server, "application/json", bodyReader)
}

// NewTestDatasourceConnectionRequestWithBody generates requests for TestDatasourceConnection with any type of body
func NewTestDatasourceConnectionRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/datasources/_test")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewDeleteDatasourceByIdRequest generates requests for DeleteDatasourceById
func NewDeleteDatasourceByIdRequest(server string, id openapi_types.UUID) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/datasources/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetDatasourceByIdRequest generates requests for GetDatasourceById
func NewGetDatasourceByIdRequest(server string, id openapi_types.UUID) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/datasources/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewDatasourceIngestionManualRunRequest generates requests for DatasourceIngestionManualRun
func NewDatasourceIngestionManualRunRequest(server string, id openapi_types.UUID) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/datasources/%s/_run", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetDatasourceIngestionRunsRequest generates requests for GetDatasourceIngestionRuns
func NewGetDatasourceIngestionRunsRequest(server string, id openapi_types.UUID, params *GetDatasourceIngestionRunsParams) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/datasources/%s/runs", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Page != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "page", runtime.ParamLocationQuery, *params.Page); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.ItemsPerPage != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "itemsPerPage", runtime.ParamLocationQuery, *params.ItemsPerPage); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Sort != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sort", runtime.ParamLocationQuery, *params.Sort); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetAllDomainsRequest generates requests for GetAllDomains
func NewGetAllDomainsRequest(server string, params *GetAllDomainsParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/domains")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.TextSearch != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "textSearch", runtime.ParamLocationQuery, *params.TextSearch); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Page != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "page", runtime.ParamLocationQuery, *params.Page); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.ItemsPerPage != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "itemsPerPage", runtime.ParamLocationQuery, *params.ItemsPerPage); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Sort != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sort", runtime.ParamLocationQuery, *params.Sort); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewCreateDomainUiRequest calls the generic CreateDomainUi builder with application/json body
func NewCreateDomainUiRequest(server string, body CreateDomainUiJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewCreateDomainUiRequestWithBody(server, "application/json", bodyReader)
}

// NewCreateDomainUiRequestWithBody generates requests for CreateDomainUi with any type of body
func NewCreateDomainUiRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/domains")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewDeleteDomainRequest generates requests for DeleteDomain
func NewDeleteDomainRequest(server string, id openapi_types.UUID) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/domains/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetDomainByIdRequest generates requests for GetDomainById
func NewGetDomainByIdRequest(server string, id openapi_types.UUID) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/domains/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewUpdateDomainUiRequest calls the generic UpdateDomainUi builder with application/json body
func NewUpdateDomainUiRequest(server string, id openapi_types.UUID, body UpdateDomainUiJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewUpdateDomainUiRequestWithBody(server, id, "application/json", bodyReader)
}

// NewUpdateDomainUiRequestWithBody generates requests for UpdateDomainUi with any type of body
func NewUpdateDomainUiRequestWithBody(server string, id openapi_types.UUID, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/domains/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PUT", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewGetDownstreamImpactedAssetsRequest generates requests for GetDownstreamImpactedAssets
func NewGetDownstreamImpactedAssetsRequest(server string, params *GetDownstreamImpactedAssetsParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/incidents/downstream-impacted-assets")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.IssueNo != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "issueNo", runtime.ParamLocationQuery, *params.IssueNo); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Page != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "page", runtime.ParamLocationQuery, *params.Page); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.ItemsPerPage != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "itemsPerPage", runtime.ParamLocationQuery, *params.ItemsPerPage); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Sort != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sort", runtime.ParamLocationQuery, *params.Sort); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetAllIncidentRequest calls the generic GetAllIncident builder with application/json body
func NewGetAllIncidentRequest(server string, body GetAllIncidentJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewGetAllIncidentRequestWithBody(server, "application/json", bodyReader)
}

// NewGetAllIncidentRequestWithBody generates requests for GetAllIncident with any type of body
func NewGetAllIncidentRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/incidents/search")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewGetIncidentByIssueNumberRequest generates requests for GetIncidentByIssueNumber
func NewGetIncidentByIssueNumberRequest(server string, issueNo int32) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "issueNo", runtime.ParamLocationPath, issueNo)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/incidents/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetAggregatedIncidentEventsByIssueNumberRequest generates requests for GetAggregatedIncidentEventsByIssueNumber
func NewGetAggregatedIncidentEventsByIssueNumberRequest(server string, issueNo int32) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "issueNo", runtime.ParamLocationPath, issueNo)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/incidents/%s/aggregated-events", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetIncidentScopeByIssueNumberRequest generates requests for GetIncidentScopeByIssueNumber
func NewGetIncidentScopeByIssueNumberRequest(server string, issueNo int32) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "issueNo", runtime.ParamLocationPath, issueNo)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/incidents/%s/scope", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetLineageByUrnRequest generates requests for GetLineageByUrn
func NewGetLineageByUrnRequest(server string, urn string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "urn", runtime.ParamLocationPath, urn)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/lineages/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetLineageDownstreamsByUrnRequest generates requests for GetLineageDownstreamsByUrn
func NewGetLineageDownstreamsByUrnRequest(server string, urn string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "urn", runtime.ParamLocationPath, urn)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/lineages/%s/downstreams", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetLineagesByUrnRequest generates requests for GetLineagesByUrn
func NewGetLineagesByUrnRequest(server string, urn string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "urn", runtime.ParamLocationPath, urn)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/lineages/%s/lineages", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetLineageUpstreamsByUrnRequest generates requests for GetLineageUpstreamsByUrn
func NewGetLineageUpstreamsByUrnRequest(server string, urn string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "urn", runtime.ParamLocationPath, urn)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/lineages/%s/upstreams", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewDeleteSiffletRuleByIdRequest generates requests for DeleteSiffletRuleById
func NewDeleteSiffletRuleByIdRequest(server string, id openapi_types.UUID) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/rules/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetSiffletRuleByIdRequest generates requests for GetSiffletRuleById
func NewGetSiffletRuleByIdRequest(server string, id openapi_types.UUID) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/rules/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewSiffletRuleRunDebugRequest calls the generic SiffletRuleRunDebug builder with application/json body
func NewSiffletRuleRunDebugRequest(server string, id openapi_types.UUID, runId openapi_types.UUID, body SiffletRuleRunDebugJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewSiffletRuleRunDebugRequestWithBody(server, id, runId, "application/json", bodyReader)
}

// NewSiffletRuleRunDebugRequestWithBody generates requests for SiffletRuleRunDebug with any type of body
func NewSiffletRuleRunDebugRequestWithBody(server string, id openapi_types.UUID, runId openapi_types.UUID, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	var pathParam1 string

	pathParam1, err = runtime.StyleParamWithLocation("simple", false, "runId", runtime.ParamLocationPath, runId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/rules/%s/runs/%s/_debug", pathParam0, pathParam1)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewSiffletRuleRunDownloadByRunRequest calls the generic SiffletRuleRunDownloadByRun builder with application/json body
func NewSiffletRuleRunDownloadByRunRequest(server string, id openapi_types.UUID, runId openapi_types.UUID, params *SiffletRuleRunDownloadByRunParams, body SiffletRuleRunDownloadByRunJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewSiffletRuleRunDownloadByRunRequestWithBody(server, id, runId, params, "application/json", bodyReader)
}

// NewSiffletRuleRunDownloadByRunRequestWithBody generates requests for SiffletRuleRunDownloadByRun with any type of body
func NewSiffletRuleRunDownloadByRunRequestWithBody(server string, id openapi_types.UUID, runId openapi_types.UUID, params *SiffletRuleRunDownloadByRunParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	var pathParam1 string

	pathParam1, err = runtime.StyleParamWithLocation("simple", false, "runId", runtime.ParamLocationPath, runId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/rules/%s/runs/%s/_download", pathParam0, pathParam1)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.ExportFormat != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "exportFormat", runtime.ParamLocationQuery, *params.ExportFormat); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewGetSiffletRuleRunDetailsRequest generates requests for GetSiffletRuleRunDetails
func NewGetSiffletRuleRunDetailsRequest(server string, id openapi_types.UUID, runId openapi_types.UUID, params *GetSiffletRuleRunDetailsParams) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	var pathParam1 string

	pathParam1, err = runtime.StyleParamWithLocation("simple", false, "runId", runtime.ParamLocationPath, runId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/rules/%s/runs/%s/details", pathParam0, pathParam1)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.TextSearch != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "textSearch", runtime.ParamLocationQuery, *params.TextSearch); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Page != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "page", runtime.ParamLocationQuery, *params.Page); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.ItemsPerPage != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "itemsPerPage", runtime.ParamLocationQuery, *params.ItemsPerPage); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Sort != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sort", runtime.ParamLocationQuery, *params.Sort); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewDeleteSecretRequest generates requests for DeleteSecret
func NewDeleteSecretRequest(server string, params *DeleteSecretParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/secret")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if queryFrag, err := runtime.StyleParamWithLocation("form", true, "name", runtime.ParamLocationQuery, params.Name); err != nil {
			return nil, err
		} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
			return nil, err
		} else {
			for k, v := range parsed {
				for _, v2 := range v {
					queryValues.Add(k, v2)
				}
			}
		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetSecretRequest generates requests for GetSecret
func NewGetSecretRequest(server string, params *GetSecretParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/secret")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if queryFrag, err := runtime.StyleParamWithLocation("form", true, "name", runtime.ParamLocationQuery, params.Name); err != nil {
			return nil, err
		} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
			return nil, err
		} else {
			for k, v := range parsed {
				for _, v2 := range v {
					queryValues.Add(k, v2)
				}
			}
		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetAllSecretsRequest generates requests for GetAllSecrets
func NewGetAllSecretsRequest(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/secrets")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetDataStackRequest generates requests for GetDataStack
func NewGetDataStackRequest(server string, params *GetDataStackParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/statistics/data-stack")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Domain != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "domain", runtime.ParamLocationQuery, *params.Domain); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Tag != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "tag", runtime.ParamLocationQuery, *params.Tag); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetIncidentsSummaryRequest generates requests for GetIncidentsSummary
func NewGetIncidentsSummaryRequest(server string, params *GetIncidentsSummaryParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/statistics/incidents-summary")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Domain != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "domain", runtime.ParamLocationQuery, *params.Domain); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Tag != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "tag", runtime.ParamLocationQuery, *params.Tag); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetRulesSummaryRequest generates requests for GetRulesSummary
func NewGetRulesSummaryRequest(server string, params *GetRulesSummaryParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/statistics/rules-summary")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Domain != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "domain", runtime.ParamLocationQuery, *params.Domain); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Tag != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "tag", runtime.ParamLocationQuery, *params.Tag); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetAllTagRequest generates requests for GetAllTag
func NewGetAllTagRequest(server string, params *GetAllTagParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/tags")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Type != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "type", runtime.ParamLocationQuery, *params.Type); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.TextSearch != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "textSearch", runtime.ParamLocationQuery, *params.TextSearch); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Page != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "page", runtime.ParamLocationQuery, *params.Page); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.ItemsPerPage != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "itemsPerPage", runtime.ParamLocationQuery, *params.ItemsPerPage); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Sort != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sort", runtime.ParamLocationQuery, *params.Sort); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewCreateTagRequest calls the generic CreateTag builder with application/json body
func NewCreateTagRequest(server string, body CreateTagJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewCreateTagRequestWithBody(server, "application/json", bodyReader)
}

// NewCreateTagRequestWithBody generates requests for CreateTag with any type of body
func NewCreateTagRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/tags")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewDeleteTagRequest generates requests for DeleteTag
func NewDeleteTagRequest(server string, id openapi_types.UUID) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/tags/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetTagByIdRequest generates requests for GetTagById
func NewGetTagByIdRequest(server string, id openapi_types.UUID) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/tags/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewUpdateTagRequest calls the generic UpdateTag builder with application/json body
func NewUpdateTagRequest(server string, id openapi_types.UUID, body UpdateTagJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewUpdateTagRequestWithBody(server, id, "application/json", bodyReader)
}

// NewUpdateTagRequestWithBody generates requests for UpdateTag with any type of body
func NewUpdateTagRequestWithBody(server string, id openapi_types.UUID, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/tags/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PUT", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewGetAllTermRequest generates requests for GetAllTerm
func NewGetAllTermRequest(server string, params *GetAllTermParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/terms")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.TextSearch != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "textSearch", runtime.ParamLocationQuery, *params.TextSearch); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Page != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "page", runtime.ParamLocationQuery, *params.Page); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.ItemsPerPage != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "itemsPerPage", runtime.ParamLocationQuery, *params.ItemsPerPage); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Sort != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sort", runtime.ParamLocationQuery, *params.Sort); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewCreateTermRequest calls the generic CreateTerm builder with application/json body
func NewCreateTermRequest(server string, body CreateTermJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewCreateTermRequestWithBody(server, "application/json", bodyReader)
}

// NewCreateTermRequestWithBody generates requests for CreateTerm with any type of body
func NewCreateTermRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/terms")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewDeleteTermRequest generates requests for DeleteTerm
func NewDeleteTermRequest(server string, id openapi_types.UUID) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/terms/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetTermByIdRequest generates requests for GetTermById
func NewGetTermByIdRequest(server string, id openapi_types.UUID) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/terms/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewUpdateTermRequest calls the generic UpdateTerm builder with application/json body
func NewUpdateTermRequest(server string, id openapi_types.UUID, body UpdateTermJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewUpdateTermRequestWithBody(server, id, "application/json", bodyReader)
}

// NewUpdateTermRequestWithBody generates requests for UpdateTerm with any type of body
func NewUpdateTermRequestWithBody(server string, id openapi_types.UUID, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/ui/v1/terms/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PUT", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewTestSourceConnectionRequest calls the generic TestSourceConnection builder with application/json body
func NewTestSourceConnectionRequest(server string, body TestSourceConnectionJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewTestSourceConnectionRequestWithBody(server, "application/json", bodyReader)
}

// NewTestSourceConnectionRequestWithBody generates requests for TestSourceConnection with any type of body
func NewTestSourceConnectionRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/v1/sources/test-connection")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewPublicSourceIngestionManualRunRequest generates requests for PublicSourceIngestionManualRun
func NewPublicSourceIngestionManualRunRequest(server string, id openapi_types.UUID) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/v1/sources/%s/run", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewListWorkspacesRequest generates requests for ListWorkspaces
func NewListWorkspacesRequest(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/v1/workspaces")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

func (c *Client) applyEditors(ctx context.Context, req *http.Request, additionalEditors []RequestEditorFn) error {
	for _, r := range c.RequestEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	for _, r := range additionalEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	return nil
}

// ClientWithResponses builds on ClientInterface to offer response payloads
type ClientWithResponses struct {
	ClientInterface
}

// NewClientWithResponses creates a new ClientWithResponses, which wraps
// Client with return type handling
func NewClientWithResponses(server string, opts ...ClientOption) (*ClientWithResponses, error) {
	client, err := NewClient(server, opts...)
	if err != nil {
		return nil, err
	}
	return &ClientWithResponses{client}, nil
}

// WithBaseURL overrides the baseURL.
func WithBaseURL(baseURL string) ClientOption {
	return func(c *Client) error {
		newBaseURL, err := url.Parse(baseURL)
		if err != nil {
			return err
		}
		c.Server = newBaseURL.String()
		return nil
	}
}

// ClientWithResponsesInterface is the interface specification for the client with responses above.
type ClientWithResponsesInterface interface {
	// ExportAssetDescriptionsWithResponse request
	ExportAssetDescriptionsWithResponse(ctx context.Context, params *ExportAssetDescriptionsParams, reqEditors ...RequestEditorFn) (*ExportAssetDescriptionsResponse, error)

	// ExportAssetDescriptionsTemplateWithResponse request
	ExportAssetDescriptionsTemplateWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*ExportAssetDescriptionsTemplateResponse, error)

	// GetAllAssetsWithBodyWithResponse request with any body
	GetAllAssetsWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*GetAllAssetsResponse, error)

	GetAllAssetsWithResponse(ctx context.Context, body GetAllAssetsJSONRequestBody, reqEditors ...RequestEditorFn) (*GetAllAssetsResponse, error)

	// GetAssetByUrnWithResponse request
	GetAssetByUrnWithResponse(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*GetAssetByUrnResponse, error)

	// GetAssetOverviewByUrnWithResponse request
	GetAssetOverviewByUrnWithResponse(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*GetAssetOverviewByUrnResponse, error)

	// GetAssetSchemaByUrnAndVersionWithResponse request
	GetAssetSchemaByUrnAndVersionWithResponse(ctx context.Context, urn string, version string, reqEditors ...RequestEditorFn) (*GetAssetSchemaByUrnAndVersionResponse, error)

	// GetDashboardByTypeAndSourceUrlWithBodyWithResponse request with any body
	GetDashboardByTypeAndSourceUrlWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*GetDashboardByTypeAndSourceUrlResponse, error)

	GetDashboardByTypeAndSourceUrlWithResponse(ctx context.Context, body GetDashboardByTypeAndSourceUrlJSONRequestBody, reqEditors ...RequestEditorFn) (*GetDashboardByTypeAndSourceUrlResponse, error)

	// UpdateDatasetFieldWithBodyWithResponse request with any body
	UpdateDatasetFieldWithBodyWithResponse(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*UpdateDatasetFieldResponse, error)

	UpdateDatasetFieldWithResponse(ctx context.Context, id openapi_types.UUID, body UpdateDatasetFieldJSONRequestBody, reqEditors ...RequestEditorFn) (*UpdateDatasetFieldResponse, error)

	// GetAllDatasetWithResponse request
	GetAllDatasetWithResponse(ctx context.Context, params *GetAllDatasetParams, reqEditors ...RequestEditorFn) (*GetAllDatasetResponse, error)

	// GetAllDatasourceWithResponse request
	GetAllDatasourceWithResponse(ctx context.Context, params *GetAllDatasourceParams, reqEditors ...RequestEditorFn) (*GetAllDatasourceResponse, error)

	// CreateDatasourceWithBodyWithResponse request with any body
	CreateDatasourceWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateDatasourceResponse, error)

	CreateDatasourceWithResponse(ctx context.Context, body CreateDatasourceJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateDatasourceResponse, error)

	// TestDatasourceConnectionWithBodyWithResponse request with any body
	TestDatasourceConnectionWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*TestDatasourceConnectionResponse, error)

	TestDatasourceConnectionWithResponse(ctx context.Context, body TestDatasourceConnectionJSONRequestBody, reqEditors ...RequestEditorFn) (*TestDatasourceConnectionResponse, error)

	// DeleteDatasourceByIdWithResponse request
	DeleteDatasourceByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*DeleteDatasourceByIdResponse, error)

	// GetDatasourceByIdWithResponse request
	GetDatasourceByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*GetDatasourceByIdResponse, error)

	// DatasourceIngestionManualRunWithResponse request
	DatasourceIngestionManualRunWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*DatasourceIngestionManualRunResponse, error)

	// GetDatasourceIngestionRunsWithResponse request
	GetDatasourceIngestionRunsWithResponse(ctx context.Context, id openapi_types.UUID, params *GetDatasourceIngestionRunsParams, reqEditors ...RequestEditorFn) (*GetDatasourceIngestionRunsResponse, error)

	// GetAllDomainsWithResponse request
	GetAllDomainsWithResponse(ctx context.Context, params *GetAllDomainsParams, reqEditors ...RequestEditorFn) (*GetAllDomainsResponse, error)

	// CreateDomainUiWithBodyWithResponse request with any body
	CreateDomainUiWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateDomainUiResponse, error)

	CreateDomainUiWithResponse(ctx context.Context, body CreateDomainUiJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateDomainUiResponse, error)

	// DeleteDomainWithResponse request
	DeleteDomainWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*DeleteDomainResponse, error)

	// GetDomainByIdWithResponse request
	GetDomainByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*GetDomainByIdResponse, error)

	// UpdateDomainUiWithBodyWithResponse request with any body
	UpdateDomainUiWithBodyWithResponse(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*UpdateDomainUiResponse, error)

	UpdateDomainUiWithResponse(ctx context.Context, id openapi_types.UUID, body UpdateDomainUiJSONRequestBody, reqEditors ...RequestEditorFn) (*UpdateDomainUiResponse, error)

	// GetDownstreamImpactedAssetsWithResponse request
	GetDownstreamImpactedAssetsWithResponse(ctx context.Context, params *GetDownstreamImpactedAssetsParams, reqEditors ...RequestEditorFn) (*GetDownstreamImpactedAssetsResponse, error)

	// GetAllIncidentWithBodyWithResponse request with any body
	GetAllIncidentWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*GetAllIncidentResponse, error)

	GetAllIncidentWithResponse(ctx context.Context, body GetAllIncidentJSONRequestBody, reqEditors ...RequestEditorFn) (*GetAllIncidentResponse, error)

	// GetIncidentByIssueNumberWithResponse request
	GetIncidentByIssueNumberWithResponse(ctx context.Context, issueNo int32, reqEditors ...RequestEditorFn) (*GetIncidentByIssueNumberResponse, error)

	// GetAggregatedIncidentEventsByIssueNumberWithResponse request
	GetAggregatedIncidentEventsByIssueNumberWithResponse(ctx context.Context, issueNo int32, reqEditors ...RequestEditorFn) (*GetAggregatedIncidentEventsByIssueNumberResponse, error)

	// GetIncidentScopeByIssueNumberWithResponse request
	GetIncidentScopeByIssueNumberWithResponse(ctx context.Context, issueNo int32, reqEditors ...RequestEditorFn) (*GetIncidentScopeByIssueNumberResponse, error)

	// GetLineageByUrnWithResponse request
	GetLineageByUrnWithResponse(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*GetLineageByUrnResponse, error)

	// GetLineageDownstreamsByUrnWithResponse request
	GetLineageDownstreamsByUrnWithResponse(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*GetLineageDownstreamsByUrnResponse, error)

	// GetLineagesByUrnWithResponse request
	GetLineagesByUrnWithResponse(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*GetLineagesByUrnResponse, error)

	// GetLineageUpstreamsByUrnWithResponse request
	GetLineageUpstreamsByUrnWithResponse(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*GetLineageUpstreamsByUrnResponse, error)

	// DeleteSiffletRuleByIdWithResponse request
	DeleteSiffletRuleByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*DeleteSiffletRuleByIdResponse, error)

	// GetSiffletRuleByIdWithResponse request
	GetSiffletRuleByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*GetSiffletRuleByIdResponse, error)

	// SiffletRuleRunDebugWithBodyWithResponse request with any body
	SiffletRuleRunDebugWithBodyWithResponse(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*SiffletRuleRunDebugResponse, error)

	SiffletRuleRunDebugWithResponse(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, body SiffletRuleRunDebugJSONRequestBody, reqEditors ...RequestEditorFn) (*SiffletRuleRunDebugResponse, error)

	// SiffletRuleRunDownloadByRunWithBodyWithResponse request with any body
	SiffletRuleRunDownloadByRunWithBodyWithResponse(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, params *SiffletRuleRunDownloadByRunParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*SiffletRuleRunDownloadByRunResponse, error)

	SiffletRuleRunDownloadByRunWithResponse(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, params *SiffletRuleRunDownloadByRunParams, body SiffletRuleRunDownloadByRunJSONRequestBody, reqEditors ...RequestEditorFn) (*SiffletRuleRunDownloadByRunResponse, error)

	// GetSiffletRuleRunDetailsWithResponse request
	GetSiffletRuleRunDetailsWithResponse(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, params *GetSiffletRuleRunDetailsParams, reqEditors ...RequestEditorFn) (*GetSiffletRuleRunDetailsResponse, error)

	// DeleteSecretWithResponse request
	DeleteSecretWithResponse(ctx context.Context, params *DeleteSecretParams, reqEditors ...RequestEditorFn) (*DeleteSecretResponse, error)

	// GetSecretWithResponse request
	GetSecretWithResponse(ctx context.Context, params *GetSecretParams, reqEditors ...RequestEditorFn) (*GetSecretResponse, error)

	// GetAllSecretsWithResponse request
	GetAllSecretsWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*GetAllSecretsResponse, error)

	// GetDataStackWithResponse request
	GetDataStackWithResponse(ctx context.Context, params *GetDataStackParams, reqEditors ...RequestEditorFn) (*GetDataStackResponse, error)

	// GetIncidentsSummaryWithResponse request
	GetIncidentsSummaryWithResponse(ctx context.Context, params *GetIncidentsSummaryParams, reqEditors ...RequestEditorFn) (*GetIncidentsSummaryResponse, error)

	// GetRulesSummaryWithResponse request
	GetRulesSummaryWithResponse(ctx context.Context, params *GetRulesSummaryParams, reqEditors ...RequestEditorFn) (*GetRulesSummaryResponse, error)

	// GetAllTagWithResponse request
	GetAllTagWithResponse(ctx context.Context, params *GetAllTagParams, reqEditors ...RequestEditorFn) (*GetAllTagResponse, error)

	// CreateTagWithBodyWithResponse request with any body
	CreateTagWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateTagResponse, error)

	CreateTagWithResponse(ctx context.Context, body CreateTagJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateTagResponse, error)

	// DeleteTagWithResponse request
	DeleteTagWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*DeleteTagResponse, error)

	// GetTagByIdWithResponse request
	GetTagByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*GetTagByIdResponse, error)

	// UpdateTagWithBodyWithResponse request with any body
	UpdateTagWithBodyWithResponse(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*UpdateTagResponse, error)

	UpdateTagWithResponse(ctx context.Context, id openapi_types.UUID, body UpdateTagJSONRequestBody, reqEditors ...RequestEditorFn) (*UpdateTagResponse, error)

	// GetAllTermWithResponse request
	GetAllTermWithResponse(ctx context.Context, params *GetAllTermParams, reqEditors ...RequestEditorFn) (*GetAllTermResponse, error)

	// CreateTermWithBodyWithResponse request with any body
	CreateTermWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateTermResponse, error)

	CreateTermWithResponse(ctx context.Context, body CreateTermJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateTermResponse, error)

	// DeleteTermWithResponse request
	DeleteTermWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*DeleteTermResponse, error)

	// GetTermByIdWithResponse request
	GetTermByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*GetTermByIdResponse, error)

	// UpdateTermWithBodyWithResponse request with any body
	UpdateTermWithBodyWithResponse(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*UpdateTermResponse, error)

	UpdateTermWithResponse(ctx context.Context, id openapi_types.UUID, body UpdateTermJSONRequestBody, reqEditors ...RequestEditorFn) (*UpdateTermResponse, error)

	// TestSourceConnectionWithBodyWithResponse request with any body
	TestSourceConnectionWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*TestSourceConnectionResponse, error)

	TestSourceConnectionWithResponse(ctx context.Context, body TestSourceConnectionJSONRequestBody, reqEditors ...RequestEditorFn) (*TestSourceConnectionResponse, error)

	// PublicSourceIngestionManualRunWithResponse request
	PublicSourceIngestionManualRunWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*PublicSourceIngestionManualRunResponse, error)

	// ListWorkspacesWithResponse request
	ListWorkspacesWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*ListWorkspacesResponse, error)
}

type ExportAssetDescriptionsResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *CsvContentDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r ExportAssetDescriptionsResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r ExportAssetDescriptionsResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type ExportAssetDescriptionsTemplateResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *CsvContentDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r ExportAssetDescriptionsTemplateResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r ExportAssetDescriptionsTemplateResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetAllAssetsResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *AssetsCatalogDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetAllAssetsResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetAllAssetsResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetAssetByUrnResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *AssetDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetAssetByUrnResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetAssetByUrnResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetAssetOverviewByUrnResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		union json.RawMessage
	}
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetAssetOverviewByUrnResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetAssetOverviewByUrnResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetAssetSchemaByUrnAndVersionResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *[]FieldDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetAssetSchemaByUrnAndVersionResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetAssetSchemaByUrnAndVersionResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetDashboardByTypeAndSourceUrlResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *DashboardWithIncidentsDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetDashboardByTypeAndSourceUrlResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetDashboardByTypeAndSourceUrlResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type UpdateDatasetFieldResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *FieldDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r UpdateDatasetFieldResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r UpdateDatasetFieldResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetAllDatasetResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *SearchCollectionDatasetLightDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetAllDatasetResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetAllDatasetResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetAllDatasourceResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *DatasourceSearchDto
	JSON206                   *DatasourceSearchDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetAllDatasourceResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetAllDatasourceResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type CreateDatasourceResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON201                   *DatasourceDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON426 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r CreateDatasourceResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r CreateDatasourceResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type TestDatasourceConnectionResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *ConnectionTestDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r TestDatasourceConnectionResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r TestDatasourceConnectionResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type DeleteDatasourceByIdResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON204                   *DatasourceDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r DeleteDatasourceByIdResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r DeleteDatasourceByIdResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetDatasourceByIdResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *DatasourceDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetDatasourceByIdResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetDatasourceByIdResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type DatasourceIngestionManualRunResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r DatasourceIngestionManualRunResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r DatasourceIngestionManualRunResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetDatasourceIngestionRunsResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *SearchCollectionDatasourceIngestionRunDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetDatasourceIngestionRunsResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetDatasourceIngestionRunsResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetAllDomainsResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *SearchCollectionDomainDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetAllDomainsResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetAllDomainsResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type CreateDomainUiResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r CreateDomainUiResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r CreateDomainUiResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type DeleteDomainResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r DeleteDomainResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r DeleteDomainResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetDomainByIdResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *DomainDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetDomainByIdResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetDomainByIdResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type UpdateDomainUiResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r UpdateDomainUiResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r UpdateDomainUiResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetDownstreamImpactedAssetsResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *ImpactedAssetsSearchDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetDownstreamImpactedAssetsResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetDownstreamImpactedAssetsResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetAllIncidentResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *IncidentSearchDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetAllIncidentResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetAllIncidentResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetIncidentByIssueNumberResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *IssueDetailsDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetIncidentByIssueNumberResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetIncidentByIssueNumberResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetAggregatedIncidentEventsByIssueNumberResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *SearchCollectionIncidentEventDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetAggregatedIncidentEventsByIssueNumberResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetAggregatedIncidentEventsByIssueNumberResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetIncidentScopeByIssueNumberResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *IncidentScope
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetIncidentScopeByIssueNumberResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetIncidentScopeByIssueNumberResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetLineageByUrnResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *LineageEntityDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetLineageByUrnResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetLineageByUrnResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetLineageDownstreamsByUrnResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *[]LineageEntityDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetLineageDownstreamsByUrnResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetLineageDownstreamsByUrnResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetLineagesByUrnResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *[]LineageEntityDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetLineagesByUrnResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetLineagesByUrnResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetLineageUpstreamsByUrnResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *[]LineageEntityDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetLineageUpstreamsByUrnResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetLineageUpstreamsByUrnResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type DeleteSiffletRuleByIdResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON204                   *RuleDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r DeleteSiffletRuleByIdResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r DeleteSiffletRuleByIdResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetSiffletRuleByIdResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *RuleDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetSiffletRuleByIdResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetSiffletRuleByIdResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type SiffletRuleRunDebugResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *RuleRunDebugDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r SiffletRuleRunDebugResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r SiffletRuleRunDebugResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type SiffletRuleRunDownloadByRunResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *openapi_types.File
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r SiffletRuleRunDownloadByRunResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r SiffletRuleRunDownloadByRunResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetSiffletRuleRunDetailsResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *SearchCollectionRuleRunDetailsByGroupDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetSiffletRuleRunDetailsResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetSiffletRuleRunDetailsResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type DeleteSecretResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r DeleteSecretResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r DeleteSecretResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetSecretResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *SecretDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetSecretResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetSecretResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetAllSecretsResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *[]SecretDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetAllSecretsResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetAllSecretsResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetDataStackResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *DataStackSummaryDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetDataStackResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetDataStackResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetIncidentsSummaryResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *IncidentSummaryDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetIncidentsSummaryResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetIncidentsSummaryResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetRulesSummaryResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *DataQualityRuleSummaryDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetRulesSummaryResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetRulesSummaryResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetAllTagResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *SearchCollectionTagDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetAllTagResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetAllTagResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type CreateTagResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON201                   *TagDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r CreateTagResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r CreateTagResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type DeleteTagResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r DeleteTagResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r DeleteTagResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetTagByIdResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *TagDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetTagByIdResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetTagByIdResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type UpdateTagResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *TagDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r UpdateTagResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r UpdateTagResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetAllTermResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *SearchCollectionTagDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetAllTermResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetAllTermResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type CreateTermResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON201                   *TagDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r CreateTermResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r CreateTermResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type DeleteTermResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r DeleteTermResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r DeleteTermResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetTermByIdResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *TagDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r GetTermByIdResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetTermByIdResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type UpdateTermResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *TagDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r UpdateTermResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r UpdateTermResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type TestSourceConnectionResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r TestSourceConnectionResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r TestSourceConnectionResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PublicSourceIngestionManualRunResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON404 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r PublicSourceIngestionManualRunResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PublicSourceIngestionManualRunResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type ListWorkspacesResponse struct {
	Body                      []byte
	HTTPResponse              *http.Response
	JSON200                   *[]AsCodeWorkspaceDto
	ApplicationproblemJSON400 *ApiProblemSchema
	ApplicationproblemJSON401 *ApiProblemSchema
	ApplicationproblemJSON403 *ApiProblemSchema
	ApplicationproblemJSON409 *ApiProblemSchema
	ApplicationproblemJSON500 *ApiProblemSchema
}

// Status returns HTTPResponse.Status
func (r ListWorkspacesResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r ListWorkspacesResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

// ExportAssetDescriptionsWithResponse request returning *ExportAssetDescriptionsResponse
func (c *ClientWithResponses) ExportAssetDescriptionsWithResponse(ctx context.Context, params *ExportAssetDescriptionsParams, reqEditors ...RequestEditorFn) (*ExportAssetDescriptionsResponse, error) {
	rsp, err := c.ExportAssetDescriptions(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseExportAssetDescriptionsResponse(rsp)
}

// ExportAssetDescriptionsTemplateWithResponse request returning *ExportAssetDescriptionsTemplateResponse
func (c *ClientWithResponses) ExportAssetDescriptionsTemplateWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*ExportAssetDescriptionsTemplateResponse, error) {
	rsp, err := c.ExportAssetDescriptionsTemplate(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseExportAssetDescriptionsTemplateResponse(rsp)
}

// GetAllAssetsWithBodyWithResponse request with arbitrary body returning *GetAllAssetsResponse
func (c *ClientWithResponses) GetAllAssetsWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*GetAllAssetsResponse, error) {
	rsp, err := c.GetAllAssetsWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAllAssetsResponse(rsp)
}

func (c *ClientWithResponses) GetAllAssetsWithResponse(ctx context.Context, body GetAllAssetsJSONRequestBody, reqEditors ...RequestEditorFn) (*GetAllAssetsResponse, error) {
	rsp, err := c.GetAllAssets(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAllAssetsResponse(rsp)
}

// GetAssetByUrnWithResponse request returning *GetAssetByUrnResponse
func (c *ClientWithResponses) GetAssetByUrnWithResponse(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*GetAssetByUrnResponse, error) {
	rsp, err := c.GetAssetByUrn(ctx, urn, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAssetByUrnResponse(rsp)
}

// GetAssetOverviewByUrnWithResponse request returning *GetAssetOverviewByUrnResponse
func (c *ClientWithResponses) GetAssetOverviewByUrnWithResponse(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*GetAssetOverviewByUrnResponse, error) {
	rsp, err := c.GetAssetOverviewByUrn(ctx, urn, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAssetOverviewByUrnResponse(rsp)
}

// GetAssetSchemaByUrnAndVersionWithResponse request returning *GetAssetSchemaByUrnAndVersionResponse
func (c *ClientWithResponses) GetAssetSchemaByUrnAndVersionWithResponse(ctx context.Context, urn string, version string, reqEditors ...RequestEditorFn) (*GetAssetSchemaByUrnAndVersionResponse, error) {
	rsp, err := c.GetAssetSchemaByUrnAndVersion(ctx, urn, version, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAssetSchemaByUrnAndVersionResponse(rsp)
}

// GetDashboardByTypeAndSourceUrlWithBodyWithResponse request with arbitrary body returning *GetDashboardByTypeAndSourceUrlResponse
func (c *ClientWithResponses) GetDashboardByTypeAndSourceUrlWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*GetDashboardByTypeAndSourceUrlResponse, error) {
	rsp, err := c.GetDashboardByTypeAndSourceUrlWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetDashboardByTypeAndSourceUrlResponse(rsp)
}

func (c *ClientWithResponses) GetDashboardByTypeAndSourceUrlWithResponse(ctx context.Context, body GetDashboardByTypeAndSourceUrlJSONRequestBody, reqEditors ...RequestEditorFn) (*GetDashboardByTypeAndSourceUrlResponse, error) {
	rsp, err := c.GetDashboardByTypeAndSourceUrl(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetDashboardByTypeAndSourceUrlResponse(rsp)
}

// UpdateDatasetFieldWithBodyWithResponse request with arbitrary body returning *UpdateDatasetFieldResponse
func (c *ClientWithResponses) UpdateDatasetFieldWithBodyWithResponse(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*UpdateDatasetFieldResponse, error) {
	rsp, err := c.UpdateDatasetFieldWithBody(ctx, id, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseUpdateDatasetFieldResponse(rsp)
}

func (c *ClientWithResponses) UpdateDatasetFieldWithResponse(ctx context.Context, id openapi_types.UUID, body UpdateDatasetFieldJSONRequestBody, reqEditors ...RequestEditorFn) (*UpdateDatasetFieldResponse, error) {
	rsp, err := c.UpdateDatasetField(ctx, id, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseUpdateDatasetFieldResponse(rsp)
}

// GetAllDatasetWithResponse request returning *GetAllDatasetResponse
func (c *ClientWithResponses) GetAllDatasetWithResponse(ctx context.Context, params *GetAllDatasetParams, reqEditors ...RequestEditorFn) (*GetAllDatasetResponse, error) {
	rsp, err := c.GetAllDataset(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAllDatasetResponse(rsp)
}

// GetAllDatasourceWithResponse request returning *GetAllDatasourceResponse
func (c *ClientWithResponses) GetAllDatasourceWithResponse(ctx context.Context, params *GetAllDatasourceParams, reqEditors ...RequestEditorFn) (*GetAllDatasourceResponse, error) {
	rsp, err := c.GetAllDatasource(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAllDatasourceResponse(rsp)
}

// CreateDatasourceWithBodyWithResponse request with arbitrary body returning *CreateDatasourceResponse
func (c *ClientWithResponses) CreateDatasourceWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateDatasourceResponse, error) {
	rsp, err := c.CreateDatasourceWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateDatasourceResponse(rsp)
}

func (c *ClientWithResponses) CreateDatasourceWithResponse(ctx context.Context, body CreateDatasourceJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateDatasourceResponse, error) {
	rsp, err := c.CreateDatasource(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateDatasourceResponse(rsp)
}

// TestDatasourceConnectionWithBodyWithResponse request with arbitrary body returning *TestDatasourceConnectionResponse
func (c *ClientWithResponses) TestDatasourceConnectionWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*TestDatasourceConnectionResponse, error) {
	rsp, err := c.TestDatasourceConnectionWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseTestDatasourceConnectionResponse(rsp)
}

func (c *ClientWithResponses) TestDatasourceConnectionWithResponse(ctx context.Context, body TestDatasourceConnectionJSONRequestBody, reqEditors ...RequestEditorFn) (*TestDatasourceConnectionResponse, error) {
	rsp, err := c.TestDatasourceConnection(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseTestDatasourceConnectionResponse(rsp)
}

// DeleteDatasourceByIdWithResponse request returning *DeleteDatasourceByIdResponse
func (c *ClientWithResponses) DeleteDatasourceByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*DeleteDatasourceByIdResponse, error) {
	rsp, err := c.DeleteDatasourceById(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDeleteDatasourceByIdResponse(rsp)
}

// GetDatasourceByIdWithResponse request returning *GetDatasourceByIdResponse
func (c *ClientWithResponses) GetDatasourceByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*GetDatasourceByIdResponse, error) {
	rsp, err := c.GetDatasourceById(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetDatasourceByIdResponse(rsp)
}

// DatasourceIngestionManualRunWithResponse request returning *DatasourceIngestionManualRunResponse
func (c *ClientWithResponses) DatasourceIngestionManualRunWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*DatasourceIngestionManualRunResponse, error) {
	rsp, err := c.DatasourceIngestionManualRun(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDatasourceIngestionManualRunResponse(rsp)
}

// GetDatasourceIngestionRunsWithResponse request returning *GetDatasourceIngestionRunsResponse
func (c *ClientWithResponses) GetDatasourceIngestionRunsWithResponse(ctx context.Context, id openapi_types.UUID, params *GetDatasourceIngestionRunsParams, reqEditors ...RequestEditorFn) (*GetDatasourceIngestionRunsResponse, error) {
	rsp, err := c.GetDatasourceIngestionRuns(ctx, id, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetDatasourceIngestionRunsResponse(rsp)
}

// GetAllDomainsWithResponse request returning *GetAllDomainsResponse
func (c *ClientWithResponses) GetAllDomainsWithResponse(ctx context.Context, params *GetAllDomainsParams, reqEditors ...RequestEditorFn) (*GetAllDomainsResponse, error) {
	rsp, err := c.GetAllDomains(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAllDomainsResponse(rsp)
}

// CreateDomainUiWithBodyWithResponse request with arbitrary body returning *CreateDomainUiResponse
func (c *ClientWithResponses) CreateDomainUiWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateDomainUiResponse, error) {
	rsp, err := c.CreateDomainUiWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateDomainUiResponse(rsp)
}

func (c *ClientWithResponses) CreateDomainUiWithResponse(ctx context.Context, body CreateDomainUiJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateDomainUiResponse, error) {
	rsp, err := c.CreateDomainUi(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateDomainUiResponse(rsp)
}

// DeleteDomainWithResponse request returning *DeleteDomainResponse
func (c *ClientWithResponses) DeleteDomainWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*DeleteDomainResponse, error) {
	rsp, err := c.DeleteDomain(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDeleteDomainResponse(rsp)
}

// GetDomainByIdWithResponse request returning *GetDomainByIdResponse
func (c *ClientWithResponses) GetDomainByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*GetDomainByIdResponse, error) {
	rsp, err := c.GetDomainById(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetDomainByIdResponse(rsp)
}

// UpdateDomainUiWithBodyWithResponse request with arbitrary body returning *UpdateDomainUiResponse
func (c *ClientWithResponses) UpdateDomainUiWithBodyWithResponse(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*UpdateDomainUiResponse, error) {
	rsp, err := c.UpdateDomainUiWithBody(ctx, id, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseUpdateDomainUiResponse(rsp)
}

func (c *ClientWithResponses) UpdateDomainUiWithResponse(ctx context.Context, id openapi_types.UUID, body UpdateDomainUiJSONRequestBody, reqEditors ...RequestEditorFn) (*UpdateDomainUiResponse, error) {
	rsp, err := c.UpdateDomainUi(ctx, id, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseUpdateDomainUiResponse(rsp)
}

// GetDownstreamImpactedAssetsWithResponse request returning *GetDownstreamImpactedAssetsResponse
func (c *ClientWithResponses) GetDownstreamImpactedAssetsWithResponse(ctx context.Context, params *GetDownstreamImpactedAssetsParams, reqEditors ...RequestEditorFn) (*GetDownstreamImpactedAssetsResponse, error) {
	rsp, err := c.GetDownstreamImpactedAssets(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetDownstreamImpactedAssetsResponse(rsp)
}

// GetAllIncidentWithBodyWithResponse request with arbitrary body returning *GetAllIncidentResponse
func (c *ClientWithResponses) GetAllIncidentWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*GetAllIncidentResponse, error) {
	rsp, err := c.GetAllIncidentWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAllIncidentResponse(rsp)
}

func (c *ClientWithResponses) GetAllIncidentWithResponse(ctx context.Context, body GetAllIncidentJSONRequestBody, reqEditors ...RequestEditorFn) (*GetAllIncidentResponse, error) {
	rsp, err := c.GetAllIncident(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAllIncidentResponse(rsp)
}

// GetIncidentByIssueNumberWithResponse request returning *GetIncidentByIssueNumberResponse
func (c *ClientWithResponses) GetIncidentByIssueNumberWithResponse(ctx context.Context, issueNo int32, reqEditors ...RequestEditorFn) (*GetIncidentByIssueNumberResponse, error) {
	rsp, err := c.GetIncidentByIssueNumber(ctx, issueNo, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetIncidentByIssueNumberResponse(rsp)
}

// GetAggregatedIncidentEventsByIssueNumberWithResponse request returning *GetAggregatedIncidentEventsByIssueNumberResponse
func (c *ClientWithResponses) GetAggregatedIncidentEventsByIssueNumberWithResponse(ctx context.Context, issueNo int32, reqEditors ...RequestEditorFn) (*GetAggregatedIncidentEventsByIssueNumberResponse, error) {
	rsp, err := c.GetAggregatedIncidentEventsByIssueNumber(ctx, issueNo, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAggregatedIncidentEventsByIssueNumberResponse(rsp)
}

// GetIncidentScopeByIssueNumberWithResponse request returning *GetIncidentScopeByIssueNumberResponse
func (c *ClientWithResponses) GetIncidentScopeByIssueNumberWithResponse(ctx context.Context, issueNo int32, reqEditors ...RequestEditorFn) (*GetIncidentScopeByIssueNumberResponse, error) {
	rsp, err := c.GetIncidentScopeByIssueNumber(ctx, issueNo, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetIncidentScopeByIssueNumberResponse(rsp)
}

// GetLineageByUrnWithResponse request returning *GetLineageByUrnResponse
func (c *ClientWithResponses) GetLineageByUrnWithResponse(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*GetLineageByUrnResponse, error) {
	rsp, err := c.GetLineageByUrn(ctx, urn, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetLineageByUrnResponse(rsp)
}

// GetLineageDownstreamsByUrnWithResponse request returning *GetLineageDownstreamsByUrnResponse
func (c *ClientWithResponses) GetLineageDownstreamsByUrnWithResponse(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*GetLineageDownstreamsByUrnResponse, error) {
	rsp, err := c.GetLineageDownstreamsByUrn(ctx, urn, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetLineageDownstreamsByUrnResponse(rsp)
}

// GetLineagesByUrnWithResponse request returning *GetLineagesByUrnResponse
func (c *ClientWithResponses) GetLineagesByUrnWithResponse(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*GetLineagesByUrnResponse, error) {
	rsp, err := c.GetLineagesByUrn(ctx, urn, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetLineagesByUrnResponse(rsp)
}

// GetLineageUpstreamsByUrnWithResponse request returning *GetLineageUpstreamsByUrnResponse
func (c *ClientWithResponses) GetLineageUpstreamsByUrnWithResponse(ctx context.Context, urn string, reqEditors ...RequestEditorFn) (*GetLineageUpstreamsByUrnResponse, error) {
	rsp, err := c.GetLineageUpstreamsByUrn(ctx, urn, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetLineageUpstreamsByUrnResponse(rsp)
}

// DeleteSiffletRuleByIdWithResponse request returning *DeleteSiffletRuleByIdResponse
func (c *ClientWithResponses) DeleteSiffletRuleByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*DeleteSiffletRuleByIdResponse, error) {
	rsp, err := c.DeleteSiffletRuleById(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDeleteSiffletRuleByIdResponse(rsp)
}

// GetSiffletRuleByIdWithResponse request returning *GetSiffletRuleByIdResponse
func (c *ClientWithResponses) GetSiffletRuleByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*GetSiffletRuleByIdResponse, error) {
	rsp, err := c.GetSiffletRuleById(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetSiffletRuleByIdResponse(rsp)
}

// SiffletRuleRunDebugWithBodyWithResponse request with arbitrary body returning *SiffletRuleRunDebugResponse
func (c *ClientWithResponses) SiffletRuleRunDebugWithBodyWithResponse(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*SiffletRuleRunDebugResponse, error) {
	rsp, err := c.SiffletRuleRunDebugWithBody(ctx, id, runId, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseSiffletRuleRunDebugResponse(rsp)
}

func (c *ClientWithResponses) SiffletRuleRunDebugWithResponse(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, body SiffletRuleRunDebugJSONRequestBody, reqEditors ...RequestEditorFn) (*SiffletRuleRunDebugResponse, error) {
	rsp, err := c.SiffletRuleRunDebug(ctx, id, runId, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseSiffletRuleRunDebugResponse(rsp)
}

// SiffletRuleRunDownloadByRunWithBodyWithResponse request with arbitrary body returning *SiffletRuleRunDownloadByRunResponse
func (c *ClientWithResponses) SiffletRuleRunDownloadByRunWithBodyWithResponse(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, params *SiffletRuleRunDownloadByRunParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*SiffletRuleRunDownloadByRunResponse, error) {
	rsp, err := c.SiffletRuleRunDownloadByRunWithBody(ctx, id, runId, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseSiffletRuleRunDownloadByRunResponse(rsp)
}

func (c *ClientWithResponses) SiffletRuleRunDownloadByRunWithResponse(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, params *SiffletRuleRunDownloadByRunParams, body SiffletRuleRunDownloadByRunJSONRequestBody, reqEditors ...RequestEditorFn) (*SiffletRuleRunDownloadByRunResponse, error) {
	rsp, err := c.SiffletRuleRunDownloadByRun(ctx, id, runId, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseSiffletRuleRunDownloadByRunResponse(rsp)
}

// GetSiffletRuleRunDetailsWithResponse request returning *GetSiffletRuleRunDetailsResponse
func (c *ClientWithResponses) GetSiffletRuleRunDetailsWithResponse(ctx context.Context, id openapi_types.UUID, runId openapi_types.UUID, params *GetSiffletRuleRunDetailsParams, reqEditors ...RequestEditorFn) (*GetSiffletRuleRunDetailsResponse, error) {
	rsp, err := c.GetSiffletRuleRunDetails(ctx, id, runId, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetSiffletRuleRunDetailsResponse(rsp)
}

// DeleteSecretWithResponse request returning *DeleteSecretResponse
func (c *ClientWithResponses) DeleteSecretWithResponse(ctx context.Context, params *DeleteSecretParams, reqEditors ...RequestEditorFn) (*DeleteSecretResponse, error) {
	rsp, err := c.DeleteSecret(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDeleteSecretResponse(rsp)
}

// GetSecretWithResponse request returning *GetSecretResponse
func (c *ClientWithResponses) GetSecretWithResponse(ctx context.Context, params *GetSecretParams, reqEditors ...RequestEditorFn) (*GetSecretResponse, error) {
	rsp, err := c.GetSecret(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetSecretResponse(rsp)
}

// GetAllSecretsWithResponse request returning *GetAllSecretsResponse
func (c *ClientWithResponses) GetAllSecretsWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*GetAllSecretsResponse, error) {
	rsp, err := c.GetAllSecrets(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAllSecretsResponse(rsp)
}

// GetDataStackWithResponse request returning *GetDataStackResponse
func (c *ClientWithResponses) GetDataStackWithResponse(ctx context.Context, params *GetDataStackParams, reqEditors ...RequestEditorFn) (*GetDataStackResponse, error) {
	rsp, err := c.GetDataStack(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetDataStackResponse(rsp)
}

// GetIncidentsSummaryWithResponse request returning *GetIncidentsSummaryResponse
func (c *ClientWithResponses) GetIncidentsSummaryWithResponse(ctx context.Context, params *GetIncidentsSummaryParams, reqEditors ...RequestEditorFn) (*GetIncidentsSummaryResponse, error) {
	rsp, err := c.GetIncidentsSummary(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetIncidentsSummaryResponse(rsp)
}

// GetRulesSummaryWithResponse request returning *GetRulesSummaryResponse
func (c *ClientWithResponses) GetRulesSummaryWithResponse(ctx context.Context, params *GetRulesSummaryParams, reqEditors ...RequestEditorFn) (*GetRulesSummaryResponse, error) {
	rsp, err := c.GetRulesSummary(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetRulesSummaryResponse(rsp)
}

// GetAllTagWithResponse request returning *GetAllTagResponse
func (c *ClientWithResponses) GetAllTagWithResponse(ctx context.Context, params *GetAllTagParams, reqEditors ...RequestEditorFn) (*GetAllTagResponse, error) {
	rsp, err := c.GetAllTag(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAllTagResponse(rsp)
}

// CreateTagWithBodyWithResponse request with arbitrary body returning *CreateTagResponse
func (c *ClientWithResponses) CreateTagWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateTagResponse, error) {
	rsp, err := c.CreateTagWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateTagResponse(rsp)
}

func (c *ClientWithResponses) CreateTagWithResponse(ctx context.Context, body CreateTagJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateTagResponse, error) {
	rsp, err := c.CreateTag(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateTagResponse(rsp)
}

// DeleteTagWithResponse request returning *DeleteTagResponse
func (c *ClientWithResponses) DeleteTagWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*DeleteTagResponse, error) {
	rsp, err := c.DeleteTag(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDeleteTagResponse(rsp)
}

// GetTagByIdWithResponse request returning *GetTagByIdResponse
func (c *ClientWithResponses) GetTagByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*GetTagByIdResponse, error) {
	rsp, err := c.GetTagById(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetTagByIdResponse(rsp)
}

// UpdateTagWithBodyWithResponse request with arbitrary body returning *UpdateTagResponse
func (c *ClientWithResponses) UpdateTagWithBodyWithResponse(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*UpdateTagResponse, error) {
	rsp, err := c.UpdateTagWithBody(ctx, id, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseUpdateTagResponse(rsp)
}

func (c *ClientWithResponses) UpdateTagWithResponse(ctx context.Context, id openapi_types.UUID, body UpdateTagJSONRequestBody, reqEditors ...RequestEditorFn) (*UpdateTagResponse, error) {
	rsp, err := c.UpdateTag(ctx, id, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseUpdateTagResponse(rsp)
}

// GetAllTermWithResponse request returning *GetAllTermResponse
func (c *ClientWithResponses) GetAllTermWithResponse(ctx context.Context, params *GetAllTermParams, reqEditors ...RequestEditorFn) (*GetAllTermResponse, error) {
	rsp, err := c.GetAllTerm(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAllTermResponse(rsp)
}

// CreateTermWithBodyWithResponse request with arbitrary body returning *CreateTermResponse
func (c *ClientWithResponses) CreateTermWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateTermResponse, error) {
	rsp, err := c.CreateTermWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateTermResponse(rsp)
}

func (c *ClientWithResponses) CreateTermWithResponse(ctx context.Context, body CreateTermJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateTermResponse, error) {
	rsp, err := c.CreateTerm(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateTermResponse(rsp)
}

// DeleteTermWithResponse request returning *DeleteTermResponse
func (c *ClientWithResponses) DeleteTermWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*DeleteTermResponse, error) {
	rsp, err := c.DeleteTerm(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDeleteTermResponse(rsp)
}

// GetTermByIdWithResponse request returning *GetTermByIdResponse
func (c *ClientWithResponses) GetTermByIdWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*GetTermByIdResponse, error) {
	rsp, err := c.GetTermById(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetTermByIdResponse(rsp)
}

// UpdateTermWithBodyWithResponse request with arbitrary body returning *UpdateTermResponse
func (c *ClientWithResponses) UpdateTermWithBodyWithResponse(ctx context.Context, id openapi_types.UUID, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*UpdateTermResponse, error) {
	rsp, err := c.UpdateTermWithBody(ctx, id, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseUpdateTermResponse(rsp)
}

func (c *ClientWithResponses) UpdateTermWithResponse(ctx context.Context, id openapi_types.UUID, body UpdateTermJSONRequestBody, reqEditors ...RequestEditorFn) (*UpdateTermResponse, error) {
	rsp, err := c.UpdateTerm(ctx, id, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseUpdateTermResponse(rsp)
}

// TestSourceConnectionWithBodyWithResponse request with arbitrary body returning *TestSourceConnectionResponse
func (c *ClientWithResponses) TestSourceConnectionWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*TestSourceConnectionResponse, error) {
	rsp, err := c.TestSourceConnectionWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseTestSourceConnectionResponse(rsp)
}

func (c *ClientWithResponses) TestSourceConnectionWithResponse(ctx context.Context, body TestSourceConnectionJSONRequestBody, reqEditors ...RequestEditorFn) (*TestSourceConnectionResponse, error) {
	rsp, err := c.TestSourceConnection(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseTestSourceConnectionResponse(rsp)
}

// PublicSourceIngestionManualRunWithResponse request returning *PublicSourceIngestionManualRunResponse
func (c *ClientWithResponses) PublicSourceIngestionManualRunWithResponse(ctx context.Context, id openapi_types.UUID, reqEditors ...RequestEditorFn) (*PublicSourceIngestionManualRunResponse, error) {
	rsp, err := c.PublicSourceIngestionManualRun(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePublicSourceIngestionManualRunResponse(rsp)
}

// ListWorkspacesWithResponse request returning *ListWorkspacesResponse
func (c *ClientWithResponses) ListWorkspacesWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*ListWorkspacesResponse, error) {
	rsp, err := c.ListWorkspaces(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseListWorkspacesResponse(rsp)
}

// ParseExportAssetDescriptionsResponse parses an HTTP response from a ExportAssetDescriptionsWithResponse call
func ParseExportAssetDescriptionsResponse(rsp *http.Response) (*ExportAssetDescriptionsResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &ExportAssetDescriptionsResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest CsvContentDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseExportAssetDescriptionsTemplateResponse parses an HTTP response from a ExportAssetDescriptionsTemplateWithResponse call
func ParseExportAssetDescriptionsTemplateResponse(rsp *http.Response) (*ExportAssetDescriptionsTemplateResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &ExportAssetDescriptionsTemplateResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest CsvContentDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetAllAssetsResponse parses an HTTP response from a GetAllAssetsWithResponse call
func ParseGetAllAssetsResponse(rsp *http.Response) (*GetAllAssetsResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetAllAssetsResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest AssetsCatalogDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetAssetByUrnResponse parses an HTTP response from a GetAssetByUrnWithResponse call
func ParseGetAssetByUrnResponse(rsp *http.Response) (*GetAssetByUrnResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetAssetByUrnResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest AssetDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetAssetOverviewByUrnResponse parses an HTTP response from a GetAssetOverviewByUrnWithResponse call
func ParseGetAssetOverviewByUrnResponse(rsp *http.Response) (*GetAssetOverviewByUrnResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetAssetOverviewByUrnResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			union json.RawMessage
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetAssetSchemaByUrnAndVersionResponse parses an HTTP response from a GetAssetSchemaByUrnAndVersionWithResponse call
func ParseGetAssetSchemaByUrnAndVersionResponse(rsp *http.Response) (*GetAssetSchemaByUrnAndVersionResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetAssetSchemaByUrnAndVersionResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []FieldDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetDashboardByTypeAndSourceUrlResponse parses an HTTP response from a GetDashboardByTypeAndSourceUrlWithResponse call
func ParseGetDashboardByTypeAndSourceUrlResponse(rsp *http.Response) (*GetDashboardByTypeAndSourceUrlResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetDashboardByTypeAndSourceUrlResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest DashboardWithIncidentsDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseUpdateDatasetFieldResponse parses an HTTP response from a UpdateDatasetFieldWithResponse call
func ParseUpdateDatasetFieldResponse(rsp *http.Response) (*UpdateDatasetFieldResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &UpdateDatasetFieldResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest FieldDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetAllDatasetResponse parses an HTTP response from a GetAllDatasetWithResponse call
func ParseGetAllDatasetResponse(rsp *http.Response) (*GetAllDatasetResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetAllDatasetResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SearchCollectionDatasetLightDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetAllDatasourceResponse parses an HTTP response from a GetAllDatasourceWithResponse call
func ParseGetAllDatasourceResponse(rsp *http.Response) (*GetAllDatasourceResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetAllDatasourceResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest DatasourceSearchDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 206:
		var dest DatasourceSearchDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON206 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseCreateDatasourceResponse parses an HTTP response from a CreateDatasourceWithResponse call
func ParseCreateDatasourceResponse(rsp *http.Response) (*CreateDatasourceResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &CreateDatasourceResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest DatasourceDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 426:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON426 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseTestDatasourceConnectionResponse parses an HTTP response from a TestDatasourceConnectionWithResponse call
func ParseTestDatasourceConnectionResponse(rsp *http.Response) (*TestDatasourceConnectionResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &TestDatasourceConnectionResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest ConnectionTestDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseDeleteDatasourceByIdResponse parses an HTTP response from a DeleteDatasourceByIdWithResponse call
func ParseDeleteDatasourceByIdResponse(rsp *http.Response) (*DeleteDatasourceByIdResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &DeleteDatasourceByIdResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 204:
		var dest DatasourceDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON204 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetDatasourceByIdResponse parses an HTTP response from a GetDatasourceByIdWithResponse call
func ParseGetDatasourceByIdResponse(rsp *http.Response) (*GetDatasourceByIdResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetDatasourceByIdResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest DatasourceDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseDatasourceIngestionManualRunResponse parses an HTTP response from a DatasourceIngestionManualRunWithResponse call
func ParseDatasourceIngestionManualRunResponse(rsp *http.Response) (*DatasourceIngestionManualRunResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &DatasourceIngestionManualRunResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetDatasourceIngestionRunsResponse parses an HTTP response from a GetDatasourceIngestionRunsWithResponse call
func ParseGetDatasourceIngestionRunsResponse(rsp *http.Response) (*GetDatasourceIngestionRunsResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetDatasourceIngestionRunsResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SearchCollectionDatasourceIngestionRunDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetAllDomainsResponse parses an HTTP response from a GetAllDomainsWithResponse call
func ParseGetAllDomainsResponse(rsp *http.Response) (*GetAllDomainsResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetAllDomainsResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SearchCollectionDomainDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseCreateDomainUiResponse parses an HTTP response from a CreateDomainUiWithResponse call
func ParseCreateDomainUiResponse(rsp *http.Response) (*CreateDomainUiResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &CreateDomainUiResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseDeleteDomainResponse parses an HTTP response from a DeleteDomainWithResponse call
func ParseDeleteDomainResponse(rsp *http.Response) (*DeleteDomainResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &DeleteDomainResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetDomainByIdResponse parses an HTTP response from a GetDomainByIdWithResponse call
func ParseGetDomainByIdResponse(rsp *http.Response) (*GetDomainByIdResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetDomainByIdResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest DomainDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseUpdateDomainUiResponse parses an HTTP response from a UpdateDomainUiWithResponse call
func ParseUpdateDomainUiResponse(rsp *http.Response) (*UpdateDomainUiResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &UpdateDomainUiResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetDownstreamImpactedAssetsResponse parses an HTTP response from a GetDownstreamImpactedAssetsWithResponse call
func ParseGetDownstreamImpactedAssetsResponse(rsp *http.Response) (*GetDownstreamImpactedAssetsResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetDownstreamImpactedAssetsResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest ImpactedAssetsSearchDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetAllIncidentResponse parses an HTTP response from a GetAllIncidentWithResponse call
func ParseGetAllIncidentResponse(rsp *http.Response) (*GetAllIncidentResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetAllIncidentResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest IncidentSearchDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetIncidentByIssueNumberResponse parses an HTTP response from a GetIncidentByIssueNumberWithResponse call
func ParseGetIncidentByIssueNumberResponse(rsp *http.Response) (*GetIncidentByIssueNumberResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetIncidentByIssueNumberResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest IssueDetailsDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetAggregatedIncidentEventsByIssueNumberResponse parses an HTTP response from a GetAggregatedIncidentEventsByIssueNumberWithResponse call
func ParseGetAggregatedIncidentEventsByIssueNumberResponse(rsp *http.Response) (*GetAggregatedIncidentEventsByIssueNumberResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetAggregatedIncidentEventsByIssueNumberResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SearchCollectionIncidentEventDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetIncidentScopeByIssueNumberResponse parses an HTTP response from a GetIncidentScopeByIssueNumberWithResponse call
func ParseGetIncidentScopeByIssueNumberResponse(rsp *http.Response) (*GetIncidentScopeByIssueNumberResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetIncidentScopeByIssueNumberResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest IncidentScope
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetLineageByUrnResponse parses an HTTP response from a GetLineageByUrnWithResponse call
func ParseGetLineageByUrnResponse(rsp *http.Response) (*GetLineageByUrnResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetLineageByUrnResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest LineageEntityDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetLineageDownstreamsByUrnResponse parses an HTTP response from a GetLineageDownstreamsByUrnWithResponse call
func ParseGetLineageDownstreamsByUrnResponse(rsp *http.Response) (*GetLineageDownstreamsByUrnResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetLineageDownstreamsByUrnResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []LineageEntityDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetLineagesByUrnResponse parses an HTTP response from a GetLineagesByUrnWithResponse call
func ParseGetLineagesByUrnResponse(rsp *http.Response) (*GetLineagesByUrnResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetLineagesByUrnResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []LineageEntityDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetLineageUpstreamsByUrnResponse parses an HTTP response from a GetLineageUpstreamsByUrnWithResponse call
func ParseGetLineageUpstreamsByUrnResponse(rsp *http.Response) (*GetLineageUpstreamsByUrnResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetLineageUpstreamsByUrnResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []LineageEntityDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseDeleteSiffletRuleByIdResponse parses an HTTP response from a DeleteSiffletRuleByIdWithResponse call
func ParseDeleteSiffletRuleByIdResponse(rsp *http.Response) (*DeleteSiffletRuleByIdResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &DeleteSiffletRuleByIdResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 204:
		var dest RuleDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON204 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetSiffletRuleByIdResponse parses an HTTP response from a GetSiffletRuleByIdWithResponse call
func ParseGetSiffletRuleByIdResponse(rsp *http.Response) (*GetSiffletRuleByIdResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetSiffletRuleByIdResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest RuleDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseSiffletRuleRunDebugResponse parses an HTTP response from a SiffletRuleRunDebugWithResponse call
func ParseSiffletRuleRunDebugResponse(rsp *http.Response) (*SiffletRuleRunDebugResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &SiffletRuleRunDebugResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest RuleRunDebugDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseSiffletRuleRunDownloadByRunResponse parses an HTTP response from a SiffletRuleRunDownloadByRunWithResponse call
func ParseSiffletRuleRunDownloadByRunResponse(rsp *http.Response) (*SiffletRuleRunDownloadByRunResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &SiffletRuleRunDownloadByRunResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest openapi_types.File
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	case rsp.StatusCode == 200:
		// Content-type (text/csv) unsupported

	}

	return response, nil
}

// ParseGetSiffletRuleRunDetailsResponse parses an HTTP response from a GetSiffletRuleRunDetailsWithResponse call
func ParseGetSiffletRuleRunDetailsResponse(rsp *http.Response) (*GetSiffletRuleRunDetailsResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetSiffletRuleRunDetailsResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SearchCollectionRuleRunDetailsByGroupDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseDeleteSecretResponse parses an HTTP response from a DeleteSecretWithResponse call
func ParseDeleteSecretResponse(rsp *http.Response) (*DeleteSecretResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &DeleteSecretResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetSecretResponse parses an HTTP response from a GetSecretWithResponse call
func ParseGetSecretResponse(rsp *http.Response) (*GetSecretResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetSecretResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SecretDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetAllSecretsResponse parses an HTTP response from a GetAllSecretsWithResponse call
func ParseGetAllSecretsResponse(rsp *http.Response) (*GetAllSecretsResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetAllSecretsResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []SecretDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetDataStackResponse parses an HTTP response from a GetDataStackWithResponse call
func ParseGetDataStackResponse(rsp *http.Response) (*GetDataStackResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetDataStackResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest DataStackSummaryDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetIncidentsSummaryResponse parses an HTTP response from a GetIncidentsSummaryWithResponse call
func ParseGetIncidentsSummaryResponse(rsp *http.Response) (*GetIncidentsSummaryResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetIncidentsSummaryResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest IncidentSummaryDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetRulesSummaryResponse parses an HTTP response from a GetRulesSummaryWithResponse call
func ParseGetRulesSummaryResponse(rsp *http.Response) (*GetRulesSummaryResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetRulesSummaryResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest DataQualityRuleSummaryDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetAllTagResponse parses an HTTP response from a GetAllTagWithResponse call
func ParseGetAllTagResponse(rsp *http.Response) (*GetAllTagResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetAllTagResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SearchCollectionTagDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseCreateTagResponse parses an HTTP response from a CreateTagWithResponse call
func ParseCreateTagResponse(rsp *http.Response) (*CreateTagResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &CreateTagResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest TagDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseDeleteTagResponse parses an HTTP response from a DeleteTagWithResponse call
func ParseDeleteTagResponse(rsp *http.Response) (*DeleteTagResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &DeleteTagResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetTagByIdResponse parses an HTTP response from a GetTagByIdWithResponse call
func ParseGetTagByIdResponse(rsp *http.Response) (*GetTagByIdResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetTagByIdResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest TagDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseUpdateTagResponse parses an HTTP response from a UpdateTagWithResponse call
func ParseUpdateTagResponse(rsp *http.Response) (*UpdateTagResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &UpdateTagResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest TagDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetAllTermResponse parses an HTTP response from a GetAllTermWithResponse call
func ParseGetAllTermResponse(rsp *http.Response) (*GetAllTermResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetAllTermResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SearchCollectionTagDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseCreateTermResponse parses an HTTP response from a CreateTermWithResponse call
func ParseCreateTermResponse(rsp *http.Response) (*CreateTermResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &CreateTermResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 201:
		var dest TagDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON201 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseDeleteTermResponse parses an HTTP response from a DeleteTermWithResponse call
func ParseDeleteTermResponse(rsp *http.Response) (*DeleteTermResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &DeleteTermResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseGetTermByIdResponse parses an HTTP response from a GetTermByIdWithResponse call
func ParseGetTermByIdResponse(rsp *http.Response) (*GetTermByIdResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetTermByIdResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest TagDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseUpdateTermResponse parses an HTTP response from a UpdateTermWithResponse call
func ParseUpdateTermResponse(rsp *http.Response) (*UpdateTermResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &UpdateTermResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest TagDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseTestSourceConnectionResponse parses an HTTP response from a TestSourceConnectionWithResponse call
func ParseTestSourceConnectionResponse(rsp *http.Response) (*TestSourceConnectionResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &TestSourceConnectionResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParsePublicSourceIngestionManualRunResponse parses an HTTP response from a PublicSourceIngestionManualRunWithResponse call
func ParsePublicSourceIngestionManualRunResponse(rsp *http.Response) (*PublicSourceIngestionManualRunResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PublicSourceIngestionManualRunResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON404 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}

// ParseListWorkspacesResponse parses an HTTP response from a ListWorkspacesWithResponse call
func ParseListWorkspacesResponse(rsp *http.Response) (*ListWorkspacesResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &ListWorkspacesResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest []AsCodeWorkspaceDto
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 401:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON401 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON403 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON409 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 500:
		var dest ApiProblemSchema
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.ApplicationproblemJSON500 = &dest

	}

	return response, nil
}
